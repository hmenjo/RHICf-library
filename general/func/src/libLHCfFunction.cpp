//
// File generated by rootcint at Wed Aug 21 14:51:13 2019

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME libLHCfFunction
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "libLHCfFunction.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Arm2Hit Arm2Hit;
      #else
      class Arm2Hit  {
         public:
         //friend XX;
         double ManipPosition; //
         double Strips[2]; //
         int Module; //
         double LeftbarCoord[3]; //Final coords expressed in the "leftbar" reference frame
         double GeneralCoord[3]; //Final coords expressed in the "general" reference frame
         double CalorimCoord[6]; //Final coords expressed in the "calorim" reference frame
         double LHC_Coord[3]; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::MyFilePath MyFilePath;
      #else
      class MyFilePath  {
         public:
         //friend XX;
         char base[256]; //
         char tmp[512]; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::SimpleList SimpleList;
      #else
      class SimpleList  {
         public:
         //friend XX;
         int nlist; //
         char list[200][256]; //
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void ADCRange_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ADCRange(void *p = 0);
   static void *newArray_ADCRange(Long_t size, void *p);
   static void delete_ADCRange(void *p);
   static void deleteArray_ADCRange(void *p);
   static void destruct_ADCRange(void *p);
   static void streamer_ADCRange(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ADCRange*)
   {
      ::ADCRange *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ADCRange >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ADCRange", ::ADCRange::Class_Version(), "./include/ADCRange.h", 10,
                  typeid(::ADCRange), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ADCRange::Dictionary, isa_proxy, 0,
                  sizeof(::ADCRange) );
      instance.SetNew(&new_ADCRange);
      instance.SetNewArray(&newArray_ADCRange);
      instance.SetDelete(&delete_ADCRange);
      instance.SetDeleteArray(&deleteArray_ADCRange);
      instance.SetDestructor(&destruct_ADCRange);
      instance.SetStreamerFunc(&streamer_ADCRange);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ADCRange*)
   {
      return GenerateInitInstanceLocal((::ADCRange*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ADCRange*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void A1Cal1ToCal2_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_A1Cal1ToCal2(void *p = 0);
   static void *newArray_A1Cal1ToCal2(Long_t size, void *p);
   static void delete_A1Cal1ToCal2(void *p);
   static void deleteArray_A1Cal1ToCal2(void *p);
   static void destruct_A1Cal1ToCal2(void *p);
   static void streamer_A1Cal1ToCal2(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::A1Cal1ToCal2*)
   {
      ::A1Cal1ToCal2 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::A1Cal1ToCal2 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("A1Cal1ToCal2", ::A1Cal1ToCal2::Class_Version(), "./include/A1Cal1ToCal2.h", 15,
                  typeid(::A1Cal1ToCal2), ::ROOT::DefineBehavior(ptr, ptr),
                  &::A1Cal1ToCal2::Dictionary, isa_proxy, 0,
                  sizeof(::A1Cal1ToCal2) );
      instance.SetNew(&new_A1Cal1ToCal2);
      instance.SetNewArray(&newArray_A1Cal1ToCal2);
      instance.SetDelete(&delete_A1Cal1ToCal2);
      instance.SetDeleteArray(&deleteArray_A1Cal1ToCal2);
      instance.SetDestructor(&destruct_A1Cal1ToCal2);
      instance.SetStreamerFunc(&streamer_A1Cal1ToCal2);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::A1Cal1ToCal2*)
   {
      return GenerateInitInstanceLocal((::A1Cal1ToCal2*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::A1Cal1ToCal2*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void ConParticleDefine_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ConParticleDefine(void *p = 0);
   static void *newArray_ConParticleDefine(Long_t size, void *p);
   static void delete_ConParticleDefine(void *p);
   static void deleteArray_ConParticleDefine(void *p);
   static void destruct_ConParticleDefine(void *p);
   static void streamer_ConParticleDefine(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ConParticleDefine*)
   {
      ::ConParticleDefine *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ConParticleDefine >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ConParticleDefine", ::ConParticleDefine::Class_Version(), "./include/ConParticleDefine.h", 10,
                  typeid(::ConParticleDefine), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ConParticleDefine::Dictionary, isa_proxy, 0,
                  sizeof(::ConParticleDefine) );
      instance.SetNew(&new_ConParticleDefine);
      instance.SetNewArray(&newArray_ConParticleDefine);
      instance.SetDelete(&delete_ConParticleDefine);
      instance.SetDeleteArray(&deleteArray_ConParticleDefine);
      instance.SetDestructor(&destruct_ConParticleDefine);
      instance.SetStreamerFunc(&streamer_ConParticleDefine);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ConParticleDefine*)
   {
      return GenerateInitInstanceLocal((::ConParticleDefine*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ConParticleDefine*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void PMTGain_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_PMTGain(void *p = 0);
   static void *newArray_PMTGain(Long_t size, void *p);
   static void delete_PMTGain(void *p);
   static void deleteArray_PMTGain(void *p);
   static void destruct_PMTGain(void *p);
   static void streamer_PMTGain(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::PMTGain*)
   {
      ::PMTGain *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::PMTGain >(0);
      static ::ROOT::TGenericClassInfo 
         instance("PMTGain", ::PMTGain::Class_Version(), "./include/PMTGain.h", 11,
                  typeid(::PMTGain), ::ROOT::DefineBehavior(ptr, ptr),
                  &::PMTGain::Dictionary, isa_proxy, 0,
                  sizeof(::PMTGain) );
      instance.SetNew(&new_PMTGain);
      instance.SetNewArray(&newArray_PMTGain);
      instance.SetDelete(&delete_PMTGain);
      instance.SetDeleteArray(&deleteArray_PMTGain);
      instance.SetDestructor(&destruct_PMTGain);
      instance.SetStreamerFunc(&streamer_PMTGain);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::PMTGain*)
   {
      return GenerateInitInstanceLocal((::PMTGain*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::PMTGain*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void ScifiGain_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ScifiGain(void *p = 0);
   static void *newArray_ScifiGain(Long_t size, void *p);
   static void delete_ScifiGain(void *p);
   static void deleteArray_ScifiGain(void *p);
   static void destruct_ScifiGain(void *p);
   static void streamer_ScifiGain(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ScifiGain*)
   {
      ::ScifiGain *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ScifiGain >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ScifiGain", ::ScifiGain::Class_Version(), "./include/ScifiGain.h", 6,
                  typeid(::ScifiGain), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ScifiGain::Dictionary, isa_proxy, 0,
                  sizeof(::ScifiGain) );
      instance.SetNew(&new_ScifiGain);
      instance.SetNewArray(&newArray_ScifiGain);
      instance.SetDelete(&delete_ScifiGain);
      instance.SetDeleteArray(&deleteArray_ScifiGain);
      instance.SetDestructor(&destruct_ScifiGain);
      instance.SetStreamerFunc(&streamer_ScifiGain);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ScifiGain*)
   {
      return GenerateInitInstanceLocal((::ScifiGain*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ScifiGain*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void FCGain_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_FCGain(void *p = 0);
   static void *newArray_FCGain(Long_t size, void *p);
   static void delete_FCGain(void *p);
   static void deleteArray_FCGain(void *p);
   static void destruct_FCGain(void *p);
   static void streamer_FCGain(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::FCGain*)
   {
      ::FCGain *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::FCGain >(0);
      static ::ROOT::TGenericClassInfo 
         instance("FCGain", ::FCGain::Class_Version(), "./include/FCGain.h", 15,
                  typeid(::FCGain), ::ROOT::DefineBehavior(ptr, ptr),
                  &::FCGain::Dictionary, isa_proxy, 0,
                  sizeof(::FCGain) );
      instance.SetNew(&new_FCGain);
      instance.SetNewArray(&newArray_FCGain);
      instance.SetDelete(&delete_FCGain);
      instance.SetDeleteArray(&deleteArray_FCGain);
      instance.SetDestructor(&destruct_FCGain);
      instance.SetStreamerFunc(&streamer_FCGain);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::FCGain*)
   {
      return GenerateInitInstanceLocal((::FCGain*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::FCGain*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void A1GainCalibration_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_A1GainCalibration(void *p = 0);
   static void *newArray_A1GainCalibration(Long_t size, void *p);
   static void delete_A1GainCalibration(void *p);
   static void deleteArray_A1GainCalibration(void *p);
   static void destruct_A1GainCalibration(void *p);
   static void streamer_A1GainCalibration(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::A1GainCalibration*)
   {
      ::A1GainCalibration *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::A1GainCalibration >(0);
      static ::ROOT::TGenericClassInfo 
         instance("A1GainCalibration", ::A1GainCalibration::Class_Version(), "./include/A1GainCalibration.h", 21,
                  typeid(::A1GainCalibration), ::ROOT::DefineBehavior(ptr, ptr),
                  &::A1GainCalibration::Dictionary, isa_proxy, 0,
                  sizeof(::A1GainCalibration) );
      instance.SetNew(&new_A1GainCalibration);
      instance.SetNewArray(&newArray_A1GainCalibration);
      instance.SetDelete(&delete_A1GainCalibration);
      instance.SetDeleteArray(&deleteArray_A1GainCalibration);
      instance.SetDestructor(&destruct_A1GainCalibration);
      instance.SetStreamerFunc(&streamer_A1GainCalibration);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::A1GainCalibration*)
   {
      return GenerateInitInstanceLocal((::A1GainCalibration*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::A1GainCalibration*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void A1PedeSubtract_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_A1PedeSubtract(void *p = 0);
   static void *newArray_A1PedeSubtract(Long_t size, void *p);
   static void delete_A1PedeSubtract(void *p);
   static void deleteArray_A1PedeSubtract(void *p);
   static void destruct_A1PedeSubtract(void *p);
   static void streamer_A1PedeSubtract(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::A1PedeSubtract*)
   {
      ::A1PedeSubtract *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::A1PedeSubtract >(0);
      static ::ROOT::TGenericClassInfo 
         instance("A1PedeSubtract", ::A1PedeSubtract::Class_Version(), "./include/A1PedeSubtract.h", 15,
                  typeid(::A1PedeSubtract), ::ROOT::DefineBehavior(ptr, ptr),
                  &::A1PedeSubtract::Dictionary, isa_proxy, 0,
                  sizeof(::A1PedeSubtract) );
      instance.SetNew(&new_A1PedeSubtract);
      instance.SetNewArray(&newArray_A1PedeSubtract);
      instance.SetDelete(&delete_A1PedeSubtract);
      instance.SetDeleteArray(&deleteArray_A1PedeSubtract);
      instance.SetDestructor(&destruct_A1PedeSubtract);
      instance.SetStreamerFunc(&streamer_A1PedeSubtract);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::A1PedeSubtract*)
   {
      return GenerateInitInstanceLocal((::A1PedeSubtract*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::A1PedeSubtract*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void ScifiPosTable_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ScifiPosTable(void *p = 0);
   static void *newArray_ScifiPosTable(Long_t size, void *p);
   static void delete_ScifiPosTable(void *p);
   static void deleteArray_ScifiPosTable(void *p);
   static void destruct_ScifiPosTable(void *p);
   static void streamer_ScifiPosTable(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ScifiPosTable*)
   {
      ::ScifiPosTable *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ScifiPosTable >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ScifiPosTable", ::ScifiPosTable::Class_Version(), "./include/ScifiPosTable.h", 10,
                  typeid(::ScifiPosTable), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ScifiPosTable::Dictionary, isa_proxy, 0,
                  sizeof(::ScifiPosTable) );
      instance.SetNew(&new_ScifiPosTable);
      instance.SetNewArray(&newArray_ScifiPosTable);
      instance.SetDelete(&delete_ScifiPosTable);
      instance.SetDeleteArray(&deleteArray_ScifiPosTable);
      instance.SetDestructor(&destruct_ScifiPosTable);
      instance.SetStreamerFunc(&streamer_ScifiPosTable);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ScifiPosTable*)
   {
      return GenerateInitInstanceLocal((::ScifiPosTable*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ScifiPosTable*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void A1RawToCal1_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_A1RawToCal1(void *p = 0);
   static void *newArray_A1RawToCal1(Long_t size, void *p);
   static void delete_A1RawToCal1(void *p);
   static void deleteArray_A1RawToCal1(void *p);
   static void destruct_A1RawToCal1(void *p);
   static void streamer_A1RawToCal1(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::A1RawToCal1*)
   {
      ::A1RawToCal1 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::A1RawToCal1 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("A1RawToCal1", ::A1RawToCal1::Class_Version(), "./include/A1RawToCal1.h", 17,
                  typeid(::A1RawToCal1), ::ROOT::DefineBehavior(ptr, ptr),
                  &::A1RawToCal1::Dictionary, isa_proxy, 0,
                  sizeof(::A1RawToCal1) );
      instance.SetNew(&new_A1RawToCal1);
      instance.SetNewArray(&newArray_A1RawToCal1);
      instance.SetDelete(&delete_A1RawToCal1);
      instance.SetDeleteArray(&deleteArray_A1RawToCal1);
      instance.SetDestructor(&destruct_A1RawToCal1);
      instance.SetStreamerFunc(&streamer_A1RawToCal1);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::A1RawToCal1*)
   {
      return GenerateInitInstanceLocal((::A1RawToCal1*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::A1RawToCal1*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void A1CrossTalk_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_A1CrossTalk(void *p = 0);
   static void *newArray_A1CrossTalk(Long_t size, void *p);
   static void delete_A1CrossTalk(void *p);
   static void deleteArray_A1CrossTalk(void *p);
   static void destruct_A1CrossTalk(void *p);
   static void streamer_A1CrossTalk(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::A1CrossTalk*)
   {
      ::A1CrossTalk *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::A1CrossTalk >(0);
      static ::ROOT::TGenericClassInfo 
         instance("A1CrossTalk", ::A1CrossTalk::Class_Version(), "./include/A1CrossTalk.h", 25,
                  typeid(::A1CrossTalk), ::ROOT::DefineBehavior(ptr, ptr),
                  &::A1CrossTalk::Dictionary, isa_proxy, 0,
                  sizeof(::A1CrossTalk) );
      instance.SetNew(&new_A1CrossTalk);
      instance.SetNewArray(&newArray_A1CrossTalk);
      instance.SetDelete(&delete_A1CrossTalk);
      instance.SetDeleteArray(&deleteArray_A1CrossTalk);
      instance.SetDestructor(&destruct_A1CrossTalk);
      instance.SetStreamerFunc(&streamer_A1CrossTalk);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::A1CrossTalk*)
   {
      return GenerateInitInstanceLocal((::A1CrossTalk*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::A1CrossTalk*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void A1LHCCrossTalk_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_A1LHCCrossTalk(void *p = 0);
   static void *newArray_A1LHCCrossTalk(Long_t size, void *p);
   static void delete_A1LHCCrossTalk(void *p);
   static void deleteArray_A1LHCCrossTalk(void *p);
   static void destruct_A1LHCCrossTalk(void *p);
   static void streamer_A1LHCCrossTalk(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::A1LHCCrossTalk*)
   {
      ::A1LHCCrossTalk *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::A1LHCCrossTalk >(0);
      static ::ROOT::TGenericClassInfo 
         instance("A1LHCCrossTalk", ::A1LHCCrossTalk::Class_Version(), "./include/A1LHCCrossTalk.h", 31,
                  typeid(::A1LHCCrossTalk), ::ROOT::DefineBehavior(ptr, ptr),
                  &::A1LHCCrossTalk::Dictionary, isa_proxy, 0,
                  sizeof(::A1LHCCrossTalk) );
      instance.SetNew(&new_A1LHCCrossTalk);
      instance.SetNewArray(&newArray_A1LHCCrossTalk);
      instance.SetDelete(&delete_A1LHCCrossTalk);
      instance.SetDeleteArray(&deleteArray_A1LHCCrossTalk);
      instance.SetDestructor(&destruct_A1LHCCrossTalk);
      instance.SetStreamerFunc(&streamer_A1LHCCrossTalk);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::A1LHCCrossTalk*)
   {
      return GenerateInitInstanceLocal((::A1LHCCrossTalk*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::A1LHCCrossTalk*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void A2Cal1ToCal2_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_A2Cal1ToCal2(void *p = 0);
   static void *newArray_A2Cal1ToCal2(Long_t size, void *p);
   static void delete_A2Cal1ToCal2(void *p);
   static void deleteArray_A2Cal1ToCal2(void *p);
   static void destruct_A2Cal1ToCal2(void *p);
   static void streamer_A2Cal1ToCal2(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::A2Cal1ToCal2*)
   {
      ::A2Cal1ToCal2 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::A2Cal1ToCal2 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("A2Cal1ToCal2", ::A2Cal1ToCal2::Class_Version(), "./include/A2Cal1ToCal2.h", 15,
                  typeid(::A2Cal1ToCal2), ::ROOT::DefineBehavior(ptr, ptr),
                  &::A2Cal1ToCal2::Dictionary, isa_proxy, 0,
                  sizeof(::A2Cal1ToCal2) );
      instance.SetNew(&new_A2Cal1ToCal2);
      instance.SetNewArray(&newArray_A2Cal1ToCal2);
      instance.SetDelete(&delete_A2Cal1ToCal2);
      instance.SetDeleteArray(&deleteArray_A2Cal1ToCal2);
      instance.SetDestructor(&destruct_A2Cal1ToCal2);
      instance.SetStreamerFunc(&streamer_A2Cal1ToCal2);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::A2Cal1ToCal2*)
   {
      return GenerateInitInstanceLocal((::A2Cal1ToCal2*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::A2Cal1ToCal2*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void SiliconGain_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_SiliconGain(void *p = 0);
   static void *newArray_SiliconGain(Long_t size, void *p);
   static void delete_SiliconGain(void *p);
   static void deleteArray_SiliconGain(void *p);
   static void destruct_SiliconGain(void *p);
   static void streamer_SiliconGain(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SiliconGain*)
   {
      ::SiliconGain *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SiliconGain >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SiliconGain", ::SiliconGain::Class_Version(), "./include/SiliconGain.h", 14,
                  typeid(::SiliconGain), ::ROOT::DefineBehavior(ptr, ptr),
                  &::SiliconGain::Dictionary, isa_proxy, 0,
                  sizeof(::SiliconGain) );
      instance.SetNew(&new_SiliconGain);
      instance.SetNewArray(&newArray_SiliconGain);
      instance.SetDelete(&delete_SiliconGain);
      instance.SetDeleteArray(&deleteArray_SiliconGain);
      instance.SetDestructor(&destruct_SiliconGain);
      instance.SetStreamerFunc(&streamer_SiliconGain);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SiliconGain*)
   {
      return GenerateInitInstanceLocal((::SiliconGain*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SiliconGain*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void A2GainCalibration_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_A2GainCalibration(void *p = 0);
   static void *newArray_A2GainCalibration(Long_t size, void *p);
   static void delete_A2GainCalibration(void *p);
   static void deleteArray_A2GainCalibration(void *p);
   static void destruct_A2GainCalibration(void *p);
   static void streamer_A2GainCalibration(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::A2GainCalibration*)
   {
      ::A2GainCalibration *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::A2GainCalibration >(0);
      static ::ROOT::TGenericClassInfo 
         instance("A2GainCalibration", ::A2GainCalibration::Class_Version(), "./include/A2GainCalibration.h", 19,
                  typeid(::A2GainCalibration), ::ROOT::DefineBehavior(ptr, ptr),
                  &::A2GainCalibration::Dictionary, isa_proxy, 0,
                  sizeof(::A2GainCalibration) );
      instance.SetNew(&new_A2GainCalibration);
      instance.SetNewArray(&newArray_A2GainCalibration);
      instance.SetDelete(&delete_A2GainCalibration);
      instance.SetDeleteArray(&deleteArray_A2GainCalibration);
      instance.SetDestructor(&destruct_A2GainCalibration);
      instance.SetStreamerFunc(&streamer_A2GainCalibration);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::A2GainCalibration*)
   {
      return GenerateInitInstanceLocal((::A2GainCalibration*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::A2GainCalibration*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void A2PedeSubtract_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_A2PedeSubtract(void *p = 0);
   static void *newArray_A2PedeSubtract(Long_t size, void *p);
   static void delete_A2PedeSubtract(void *p);
   static void deleteArray_A2PedeSubtract(void *p);
   static void destruct_A2PedeSubtract(void *p);
   static void streamer_A2PedeSubtract(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::A2PedeSubtract*)
   {
      ::A2PedeSubtract *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::A2PedeSubtract >(0);
      static ::ROOT::TGenericClassInfo 
         instance("A2PedeSubtract", ::A2PedeSubtract::Class_Version(), "./include/A2PedeSubtract.h", 13,
                  typeid(::A2PedeSubtract), ::ROOT::DefineBehavior(ptr, ptr),
                  &::A2PedeSubtract::Dictionary, isa_proxy, 0,
                  sizeof(::A2PedeSubtract) );
      instance.SetNew(&new_A2PedeSubtract);
      instance.SetNewArray(&newArray_A2PedeSubtract);
      instance.SetDelete(&delete_A2PedeSubtract);
      instance.SetDeleteArray(&deleteArray_A2PedeSubtract);
      instance.SetDestructor(&destruct_A2PedeSubtract);
      instance.SetStreamerFunc(&streamer_A2PedeSubtract);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::A2PedeSubtract*)
   {
      return GenerateInitInstanceLocal((::A2PedeSubtract*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::A2PedeSubtract*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void A2RawToCal1_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_A2RawToCal1(void *p = 0);
   static void *newArray_A2RawToCal1(Long_t size, void *p);
   static void delete_A2RawToCal1(void *p);
   static void deleteArray_A2RawToCal1(void *p);
   static void destruct_A2RawToCal1(void *p);
   static void streamer_A2RawToCal1(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::A2RawToCal1*)
   {
      ::A2RawToCal1 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::A2RawToCal1 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("A2RawToCal1", ::A2RawToCal1::Class_Version(), "./include/A2RawToCal1.h", 17,
                  typeid(::A2RawToCal1), ::ROOT::DefineBehavior(ptr, ptr),
                  &::A2RawToCal1::Dictionary, isa_proxy, 0,
                  sizeof(::A2RawToCal1) );
      instance.SetNew(&new_A2RawToCal1);
      instance.SetNewArray(&newArray_A2RawToCal1);
      instance.SetDelete(&delete_A2RawToCal1);
      instance.SetDeleteArray(&deleteArray_A2RawToCal1);
      instance.SetDestructor(&destruct_A2RawToCal1);
      instance.SetStreamerFunc(&streamer_A2RawToCal1);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::A2RawToCal1*)
   {
      return GenerateInitInstanceLocal((::A2RawToCal1*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::A2RawToCal1*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void A2RawToCal1Silicon_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_A2RawToCal1Silicon(void *p = 0);
   static void *newArray_A2RawToCal1Silicon(Long_t size, void *p);
   static void delete_A2RawToCal1Silicon(void *p);
   static void deleteArray_A2RawToCal1Silicon(void *p);
   static void destruct_A2RawToCal1Silicon(void *p);
   static void streamer_A2RawToCal1Silicon(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::A2RawToCal1Silicon*)
   {
      ::A2RawToCal1Silicon *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::A2RawToCal1Silicon >(0);
      static ::ROOT::TGenericClassInfo 
         instance("A2RawToCal1Silicon", ::A2RawToCal1Silicon::Class_Version(), "./include/A2RawToCal1Silicon.h", 20,
                  typeid(::A2RawToCal1Silicon), ::ROOT::DefineBehavior(ptr, ptr),
                  &::A2RawToCal1Silicon::Dictionary, isa_proxy, 0,
                  sizeof(::A2RawToCal1Silicon) );
      instance.SetNew(&new_A2RawToCal1Silicon);
      instance.SetNewArray(&newArray_A2RawToCal1Silicon);
      instance.SetDelete(&delete_A2RawToCal1Silicon);
      instance.SetDeleteArray(&deleteArray_A2RawToCal1Silicon);
      instance.SetDestructor(&destruct_A2RawToCal1Silicon);
      instance.SetStreamerFunc(&streamer_A2RawToCal1Silicon);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::A2RawToCal1Silicon*)
   {
      return GenerateInitInstanceLocal((::A2RawToCal1Silicon*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::A2RawToCal1Silicon*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void Arm2Hit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Arm2Hit_Dictionary();
   static void *new_Arm2Hit(void *p = 0);
   static void *newArray_Arm2Hit(Long_t size, void *p);
   static void delete_Arm2Hit(void *p);
   static void deleteArray_Arm2Hit(void *p);
   static void destruct_Arm2Hit(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Arm2Hit*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Arm2Hit) == sizeof( ::ROOTShadow::Shadow::Arm2Hit));
      ::Arm2Hit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Arm2Hit),0);
      static ::ROOT::TGenericClassInfo 
         instance("Arm2Hit", "./include/Arm2Alignment.h", 10,
                  typeid(::Arm2Hit), ::ROOT::DefineBehavior(ptr, ptr),
                  &Arm2Hit_ShowMembers, &Arm2Hit_Dictionary, isa_proxy, 4,
                  sizeof(::Arm2Hit) );
      instance.SetNew(&new_Arm2Hit);
      instance.SetNewArray(&newArray_Arm2Hit);
      instance.SetDelete(&delete_Arm2Hit);
      instance.SetDeleteArray(&deleteArray_Arm2Hit);
      instance.SetDestructor(&destruct_Arm2Hit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Arm2Hit*)
   {
      return GenerateInitInstanceLocal((::Arm2Hit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Arm2Hit*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Arm2Hit_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::Arm2Hit*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void Arm2Alignment_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Arm2Alignment(void *p = 0);
   static void *newArray_Arm2Alignment(Long_t size, void *p);
   static void delete_Arm2Alignment(void *p);
   static void deleteArray_Arm2Alignment(void *p);
   static void destruct_Arm2Alignment(void *p);
   static void streamer_Arm2Alignment(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Arm2Alignment*)
   {
      ::Arm2Alignment *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Arm2Alignment >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Arm2Alignment", ::Arm2Alignment::Class_Version(), "./include/Arm2Alignment.h", 30,
                  typeid(::Arm2Alignment), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Arm2Alignment::Dictionary, isa_proxy, 0,
                  sizeof(::Arm2Alignment) );
      instance.SetNew(&new_Arm2Alignment);
      instance.SetNewArray(&newArray_Arm2Alignment);
      instance.SetDelete(&delete_Arm2Alignment);
      instance.SetDeleteArray(&deleteArray_Arm2Alignment);
      instance.SetDestructor(&destruct_Arm2Alignment);
      instance.SetStreamerFunc(&streamer_Arm2Alignment);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Arm2Alignment*)
   {
      return GenerateInitInstanceLocal((::Arm2Alignment*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Arm2Alignment*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MyFilePath_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void MyFilePath_Dictionary();
   static void *new_MyFilePath(void *p = 0);
   static void *newArray_MyFilePath(Long_t size, void *p);
   static void delete_MyFilePath(void *p);
   static void deleteArray_MyFilePath(void *p);
   static void destruct_MyFilePath(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MyFilePath*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::MyFilePath) == sizeof( ::ROOTShadow::Shadow::MyFilePath));
      ::MyFilePath *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::MyFilePath),0);
      static ::ROOT::TGenericClassInfo 
         instance("MyFilePath", "./include/MyFunction.h", 19,
                  typeid(::MyFilePath), ::ROOT::DefineBehavior(ptr, ptr),
                  &MyFilePath_ShowMembers, &MyFilePath_Dictionary, isa_proxy, 4,
                  sizeof(::MyFilePath) );
      instance.SetNew(&new_MyFilePath);
      instance.SetNewArray(&newArray_MyFilePath);
      instance.SetDelete(&delete_MyFilePath);
      instance.SetDeleteArray(&deleteArray_MyFilePath);
      instance.SetDestructor(&destruct_MyFilePath);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MyFilePath*)
   {
      return GenerateInitInstanceLocal((::MyFilePath*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MyFilePath*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void MyFilePath_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::MyFilePath*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void SimpleList_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void SimpleList_Dictionary();
   static void *new_SimpleList(void *p = 0);
   static void *newArray_SimpleList(Long_t size, void *p);
   static void delete_SimpleList(void *p);
   static void deleteArray_SimpleList(void *p);
   static void destruct_SimpleList(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SimpleList*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::SimpleList) == sizeof( ::ROOTShadow::Shadow::SimpleList));
      ::SimpleList *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::SimpleList),0);
      static ::ROOT::TGenericClassInfo 
         instance("SimpleList", "./include/MyFunction.h", 32,
                  typeid(::SimpleList), ::ROOT::DefineBehavior(ptr, ptr),
                  &SimpleList_ShowMembers, &SimpleList_Dictionary, isa_proxy, 4,
                  sizeof(::SimpleList) );
      instance.SetNew(&new_SimpleList);
      instance.SetNewArray(&newArray_SimpleList);
      instance.SetDelete(&delete_SimpleList);
      instance.SetDeleteArray(&deleteArray_SimpleList);
      instance.SetDestructor(&destruct_SimpleList);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SimpleList*)
   {
      return GenerateInitInstanceLocal((::SimpleList*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SimpleList*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void SimpleList_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::SimpleList*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void StructFiberPos_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_StructFiberPos(void *p = 0);
   static void *newArray_StructFiberPos(Long_t size, void *p);
   static void delete_StructFiberPos(void *p);
   static void deleteArray_StructFiberPos(void *p);
   static void destruct_StructFiberPos(void *p);
   static void streamer_StructFiberPos(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::StructFiberPos*)
   {
      ::StructFiberPos *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StructFiberPos >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StructFiberPos", ::StructFiberPos::Class_Version(), "./include/ConScifiPosition.h", 11,
                  typeid(::StructFiberPos), ::ROOT::DefineBehavior(ptr, ptr),
                  &::StructFiberPos::Dictionary, isa_proxy, 0,
                  sizeof(::StructFiberPos) );
      instance.SetNew(&new_StructFiberPos);
      instance.SetNewArray(&newArray_StructFiberPos);
      instance.SetDelete(&delete_StructFiberPos);
      instance.SetDeleteArray(&deleteArray_StructFiberPos);
      instance.SetDestructor(&destruct_StructFiberPos);
      instance.SetStreamerFunc(&streamer_StructFiberPos);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::StructFiberPos*)
   {
      return GenerateInitInstanceLocal((::StructFiberPos*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StructFiberPos*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void ConScifiPosition_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ConScifiPosition(void *p = 0);
   static void *newArray_ConScifiPosition(Long_t size, void *p);
   static void delete_ConScifiPosition(void *p);
   static void deleteArray_ConScifiPosition(void *p);
   static void destruct_ConScifiPosition(void *p);
   static void streamer_ConScifiPosition(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ConScifiPosition*)
   {
      ::ConScifiPosition *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ConScifiPosition >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ConScifiPosition", ::ConScifiPosition::Class_Version(), "./include/ConScifiPosition.h", 23,
                  typeid(::ConScifiPosition), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ConScifiPosition::Dictionary, isa_proxy, 0,
                  sizeof(::ConScifiPosition) );
      instance.SetNew(&new_ConScifiPosition);
      instance.SetNewArray(&newArray_ConScifiPosition);
      instance.SetDelete(&delete_ConScifiPosition);
      instance.SetDeleteArray(&deleteArray_ConScifiPosition);
      instance.SetDestructor(&destruct_ConScifiPosition);
      instance.SetStreamerFunc(&streamer_ConScifiPosition);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ConScifiPosition*)
   {
      return GenerateInitInstanceLocal((::ConScifiPosition*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ConScifiPosition*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void ConShowerLeakage_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ConShowerLeakage(void *p = 0);
   static void *newArray_ConShowerLeakage(Long_t size, void *p);
   static void delete_ConShowerLeakage(void *p);
   static void deleteArray_ConShowerLeakage(void *p);
   static void destruct_ConShowerLeakage(void *p);
   static void streamer_ConShowerLeakage(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ConShowerLeakage*)
   {
      ::ConShowerLeakage *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ConShowerLeakage >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ConShowerLeakage", ::ConShowerLeakage::Class_Version(), "./include/ConShowerLeakage.h", 12,
                  typeid(::ConShowerLeakage), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ConShowerLeakage::Dictionary, isa_proxy, 0,
                  sizeof(::ConShowerLeakage) );
      instance.SetNew(&new_ConShowerLeakage);
      instance.SetNewArray(&newArray_ConShowerLeakage);
      instance.SetDelete(&delete_ConShowerLeakage);
      instance.SetDeleteArray(&deleteArray_ConShowerLeakage);
      instance.SetDestructor(&destruct_ConShowerLeakage);
      instance.SetStreamerFunc(&streamer_ConShowerLeakage);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ConShowerLeakage*)
   {
      return GenerateInitInstanceLocal((::ConShowerLeakage*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ConShowerLeakage*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void LHCfRunInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_LHCfRunInfo(void *p = 0);
   static void *newArray_LHCfRunInfo(Long_t size, void *p);
   static void delete_LHCfRunInfo(void *p);
   static void deleteArray_LHCfRunInfo(void *p);
   static void destruct_LHCfRunInfo(void *p);
   static void streamer_LHCfRunInfo(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::LHCfRunInfo*)
   {
      ::LHCfRunInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::LHCfRunInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("LHCfRunInfo", ::LHCfRunInfo::Class_Version(), "./include/LHCfRunInfoTable.h", 20,
                  typeid(::LHCfRunInfo), ::ROOT::DefineBehavior(ptr, ptr),
                  &::LHCfRunInfo::Dictionary, isa_proxy, 0,
                  sizeof(::LHCfRunInfo) );
      instance.SetNew(&new_LHCfRunInfo);
      instance.SetNewArray(&newArray_LHCfRunInfo);
      instance.SetDelete(&delete_LHCfRunInfo);
      instance.SetDeleteArray(&deleteArray_LHCfRunInfo);
      instance.SetDestructor(&destruct_LHCfRunInfo);
      instance.SetStreamerFunc(&streamer_LHCfRunInfo);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::LHCfRunInfo*)
   {
      return GenerateInitInstanceLocal((::LHCfRunInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::LHCfRunInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void LHCfRunInfoTable_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_LHCfRunInfoTable(void *p = 0);
   static void *newArray_LHCfRunInfoTable(Long_t size, void *p);
   static void delete_LHCfRunInfoTable(void *p);
   static void deleteArray_LHCfRunInfoTable(void *p);
   static void destruct_LHCfRunInfoTable(void *p);
   static void streamer_LHCfRunInfoTable(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::LHCfRunInfoTable*)
   {
      ::LHCfRunInfoTable *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::LHCfRunInfoTable >(0);
      static ::ROOT::TGenericClassInfo 
         instance("LHCfRunInfoTable", ::LHCfRunInfoTable::Class_Version(), "./include/LHCfRunInfoTable.h", 199,
                  typeid(::LHCfRunInfoTable), ::ROOT::DefineBehavior(ptr, ptr),
                  &::LHCfRunInfoTable::Dictionary, isa_proxy, 0,
                  sizeof(::LHCfRunInfoTable) );
      instance.SetNew(&new_LHCfRunInfoTable);
      instance.SetNewArray(&newArray_LHCfRunInfoTable);
      instance.SetDelete(&delete_LHCfRunInfoTable);
      instance.SetDeleteArray(&deleteArray_LHCfRunInfoTable);
      instance.SetDestructor(&destruct_LHCfRunInfoTable);
      instance.SetStreamerFunc(&streamer_LHCfRunInfoTable);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::LHCfRunInfoTable*)
   {
      return GenerateInitInstanceLocal((::LHCfRunInfoTable*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::LHCfRunInfoTable*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void PMTSatu_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_PMTSatu(void *p = 0);
   static void *newArray_PMTSatu(Long_t size, void *p);
   static void delete_PMTSatu(void *p);
   static void deleteArray_PMTSatu(void *p);
   static void destruct_PMTSatu(void *p);
   static void streamer_PMTSatu(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::PMTSatu*)
   {
      ::PMTSatu *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::PMTSatu >(0);
      static ::ROOT::TGenericClassInfo 
         instance("PMTSatu", ::PMTSatu::Class_Version(), "./include/PMTSatu.h", 11,
                  typeid(::PMTSatu), ::ROOT::DefineBehavior(ptr, ptr),
                  &::PMTSatu::Dictionary, isa_proxy, 0,
                  sizeof(::PMTSatu) );
      instance.SetNew(&new_PMTSatu);
      instance.SetNewArray(&newArray_PMTSatu);
      instance.SetDelete(&delete_PMTSatu);
      instance.SetDeleteArray(&deleteArray_PMTSatu);
      instance.SetDestructor(&destruct_PMTSatu);
      instance.SetStreamerFunc(&streamer_PMTSatu);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::PMTSatu*)
   {
      return GenerateInitInstanceLocal((::PMTSatu*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::PMTSatu*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void PMTSatuCorrection_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_PMTSatuCorrection(void *p = 0);
   static void *newArray_PMTSatuCorrection(Long_t size, void *p);
   static void delete_PMTSatuCorrection(void *p);
   static void deleteArray_PMTSatuCorrection(void *p);
   static void destruct_PMTSatuCorrection(void *p);
   static void streamer_PMTSatuCorrection(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::PMTSatuCorrection*)
   {
      ::PMTSatuCorrection *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::PMTSatuCorrection >(0);
      static ::ROOT::TGenericClassInfo 
         instance("PMTSatuCorrection", ::PMTSatuCorrection::Class_Version(), "./include/PMTSatuCorrection.h", 20,
                  typeid(::PMTSatuCorrection), ::ROOT::DefineBehavior(ptr, ptr),
                  &::PMTSatuCorrection::Dictionary, isa_proxy, 0,
                  sizeof(::PMTSatuCorrection) );
      instance.SetNew(&new_PMTSatuCorrection);
      instance.SetNewArray(&newArray_PMTSatuCorrection);
      instance.SetDelete(&delete_PMTSatuCorrection);
      instance.SetDeleteArray(&deleteArray_PMTSatuCorrection);
      instance.SetDestructor(&destruct_PMTSatuCorrection);
      instance.SetStreamerFunc(&streamer_PMTSatuCorrection);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::PMTSatuCorrection*)
   {
      return GenerateInitInstanceLocal((::PMTSatuCorrection*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::PMTSatuCorrection*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void ParticleID01_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ParticleID01(void *p = 0);
   static void *newArray_ParticleID01(Long_t size, void *p);
   static void delete_ParticleID01(void *p);
   static void deleteArray_ParticleID01(void *p);
   static void destruct_ParticleID01(void *p);
   static void streamer_ParticleID01(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ParticleID01*)
   {
      ::ParticleID01 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ParticleID01 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ParticleID01", ::ParticleID01::Class_Version(), "./include/ParticleID01.h", 12,
                  typeid(::ParticleID01), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ParticleID01::Dictionary, isa_proxy, 0,
                  sizeof(::ParticleID01) );
      instance.SetNew(&new_ParticleID01);
      instance.SetNewArray(&newArray_ParticleID01);
      instance.SetDelete(&delete_ParticleID01);
      instance.SetDeleteArray(&deleteArray_ParticleID01);
      instance.SetDestructor(&destruct_ParticleID01);
      instance.SetStreamerFunc(&streamer_ParticleID01);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ParticleID01*)
   {
      return GenerateInitInstanceLocal((::ParticleID01*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ParticleID01*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void ParticleID02_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ParticleID02(void *p = 0);
   static void *newArray_ParticleID02(Long_t size, void *p);
   static void delete_ParticleID02(void *p);
   static void deleteArray_ParticleID02(void *p);
   static void destruct_ParticleID02(void *p);
   static void streamer_ParticleID02(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ParticleID02*)
   {
      ::ParticleID02 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ParticleID02 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ParticleID02", ::ParticleID02::Class_Version(), "./include/ParticleID02.h", 11,
                  typeid(::ParticleID02), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ParticleID02::Dictionary, isa_proxy, 0,
                  sizeof(::ParticleID02) );
      instance.SetNew(&new_ParticleID02);
      instance.SetNewArray(&newArray_ParticleID02);
      instance.SetDelete(&delete_ParticleID02);
      instance.SetDeleteArray(&deleteArray_ParticleID02);
      instance.SetDestructor(&destruct_ParticleID02);
      instance.SetStreamerFunc(&streamer_ParticleID02);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ParticleID02*)
   {
      return GenerateInitInstanceLocal((::ParticleID02*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ParticleID02*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void SciFiPosCalculation_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_SciFiPosCalculation(void *p = 0);
   static void *newArray_SciFiPosCalculation(Long_t size, void *p);
   static void delete_SciFiPosCalculation(void *p);
   static void deleteArray_SciFiPosCalculation(void *p);
   static void destruct_SciFiPosCalculation(void *p);
   static void streamer_SciFiPosCalculation(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SciFiPosCalculation*)
   {
      ::SciFiPosCalculation *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SciFiPosCalculation >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SciFiPosCalculation", ::SciFiPosCalculation::Class_Version(), "./include/SciFiPosCalculation.h", 22,
                  typeid(::SciFiPosCalculation), ::ROOT::DefineBehavior(ptr, ptr),
                  &::SciFiPosCalculation::Dictionary, isa_proxy, 0,
                  sizeof(::SciFiPosCalculation) );
      instance.SetNew(&new_SciFiPosCalculation);
      instance.SetNewArray(&newArray_SciFiPosCalculation);
      instance.SetDelete(&delete_SciFiPosCalculation);
      instance.SetDeleteArray(&deleteArray_SciFiPosCalculation);
      instance.SetDestructor(&destruct_SciFiPosCalculation);
      instance.SetStreamerFunc(&streamer_SciFiPosCalculation);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SciFiPosCalculation*)
   {
      return GenerateInitInstanceLocal((::SciFiPosCalculation*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SciFiPosCalculation*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void ScifiIncidentPosition02_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ScifiIncidentPosition02(void *p = 0);
   static void *newArray_ScifiIncidentPosition02(Long_t size, void *p);
   static void delete_ScifiIncidentPosition02(void *p);
   static void deleteArray_ScifiIncidentPosition02(void *p);
   static void destruct_ScifiIncidentPosition02(void *p);
   static void streamer_ScifiIncidentPosition02(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ScifiIncidentPosition02*)
   {
      ::ScifiIncidentPosition02 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ScifiIncidentPosition02 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ScifiIncidentPosition02", ::ScifiIncidentPosition02::Class_Version(), "./include/ScifiIncidentPosition02.h", 17,
                  typeid(::ScifiIncidentPosition02), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ScifiIncidentPosition02::Dictionary, isa_proxy, 0,
                  sizeof(::ScifiIncidentPosition02) );
      instance.SetNew(&new_ScifiIncidentPosition02);
      instance.SetNewArray(&newArray_ScifiIncidentPosition02);
      instance.SetDelete(&delete_ScifiIncidentPosition02);
      instance.SetDeleteArray(&deleteArray_ScifiIncidentPosition02);
      instance.SetDestructor(&destruct_ScifiIncidentPosition02);
      instance.SetStreamerFunc(&streamer_ScifiIncidentPosition02);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ScifiIncidentPosition02*)
   {
      return GenerateInitInstanceLocal((::ScifiIncidentPosition02*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ScifiIncidentPosition02*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void ScintiPosDependence_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ScintiPosDependence(void *p = 0);
   static void *newArray_ScintiPosDependence(Long_t size, void *p);
   static void delete_ScintiPosDependence(void *p);
   static void deleteArray_ScintiPosDependence(void *p);
   static void destruct_ScintiPosDependence(void *p);
   static void streamer_ScintiPosDependence(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::ScintiPosDependence*)
   {
      ::ScintiPosDependence *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ScintiPosDependence >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ScintiPosDependence", ::ScintiPosDependence::Class_Version(), "./include/ScintiPosDependence.h", 13,
                  typeid(::ScintiPosDependence), ::ROOT::DefineBehavior(ptr, ptr),
                  &::ScintiPosDependence::Dictionary, isa_proxy, 0,
                  sizeof(::ScintiPosDependence) );
      instance.SetNew(&new_ScintiPosDependence);
      instance.SetNewArray(&newArray_ScintiPosDependence);
      instance.SetDelete(&delete_ScintiPosDependence);
      instance.SetDeleteArray(&deleteArray_ScintiPosDependence);
      instance.SetDestructor(&destruct_ScintiPosDependence);
      instance.SetStreamerFunc(&streamer_ScintiPosDependence);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::ScintiPosDependence*)
   {
      return GenerateInitInstanceLocal((::ScintiPosDependence*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ScintiPosDependence*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void SPSAdamoPedeSubtract_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_SPSAdamoPedeSubtract(void *p = 0);
   static void *newArray_SPSAdamoPedeSubtract(Long_t size, void *p);
   static void delete_SPSAdamoPedeSubtract(void *p);
   static void deleteArray_SPSAdamoPedeSubtract(void *p);
   static void destruct_SPSAdamoPedeSubtract(void *p);
   static void streamer_SPSAdamoPedeSubtract(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SPSAdamoPedeSubtract*)
   {
      ::SPSAdamoPedeSubtract *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SPSAdamoPedeSubtract >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SPSAdamoPedeSubtract", ::SPSAdamoPedeSubtract::Class_Version(), "./include/SPSAdamoPedeSubtract.h", 13,
                  typeid(::SPSAdamoPedeSubtract), ::ROOT::DefineBehavior(ptr, ptr),
                  &::SPSAdamoPedeSubtract::Dictionary, isa_proxy, 0,
                  sizeof(::SPSAdamoPedeSubtract) );
      instance.SetNew(&new_SPSAdamoPedeSubtract);
      instance.SetNewArray(&newArray_SPSAdamoPedeSubtract);
      instance.SetDelete(&delete_SPSAdamoPedeSubtract);
      instance.SetDeleteArray(&deleteArray_SPSAdamoPedeSubtract);
      instance.SetDestructor(&destruct_SPSAdamoPedeSubtract);
      instance.SetStreamerFunc(&streamer_SPSAdamoPedeSubtract);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SPSAdamoPedeSubtract*)
   {
      return GenerateInitInstanceLocal((::SPSAdamoPedeSubtract*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SPSAdamoPedeSubtract*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void TransitionFit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TransitionFit(void *p = 0);
   static void *newArray_TransitionFit(Long_t size, void *p);
   static void delete_TransitionFit(void *p);
   static void deleteArray_TransitionFit(void *p);
   static void destruct_TransitionFit(void *p);
   static void streamer_TransitionFit(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::TransitionFit*)
   {
      ::TransitionFit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TransitionFit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TransitionFit", ::TransitionFit::Class_Version(), "./include/TransitionFit.h", 16,
                  typeid(::TransitionFit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::TransitionFit::Dictionary, isa_proxy, 0,
                  sizeof(::TransitionFit) );
      instance.SetNew(&new_TransitionFit);
      instance.SetNewArray(&newArray_TransitionFit);
      instance.SetDelete(&delete_TransitionFit);
      instance.SetDeleteArray(&deleteArray_TransitionFit);
      instance.SetDestructor(&destruct_TransitionFit);
      instance.SetStreamerFunc(&streamer_TransitionFit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::TransitionFit*)
   {
      return GenerateInitInstanceLocal((::TransitionFit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TransitionFit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RHICfRunInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RHICfRunInfo(void *p = 0);
   static void *newArray_RHICfRunInfo(Long_t size, void *p);
   static void delete_RHICfRunInfo(void *p);
   static void deleteArray_RHICfRunInfo(void *p);
   static void destruct_RHICfRunInfo(void *p);
   static void streamer_RHICfRunInfo(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RHICfRunInfo*)
   {
      ::RHICfRunInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RHICfRunInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RHICfRunInfo", ::RHICfRunInfo::Class_Version(), "./include/RHICfRunInfoTable.h", 18,
                  typeid(::RHICfRunInfo), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RHICfRunInfo::Dictionary, isa_proxy, 0,
                  sizeof(::RHICfRunInfo) );
      instance.SetNew(&new_RHICfRunInfo);
      instance.SetNewArray(&newArray_RHICfRunInfo);
      instance.SetDelete(&delete_RHICfRunInfo);
      instance.SetDeleteArray(&deleteArray_RHICfRunInfo);
      instance.SetDestructor(&destruct_RHICfRunInfo);
      instance.SetStreamerFunc(&streamer_RHICfRunInfo);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RHICfRunInfo*)
   {
      return GenerateInitInstanceLocal((::RHICfRunInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RHICfRunInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RHICfRunInfoTable_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RHICfRunInfoTable(void *p = 0);
   static void *newArray_RHICfRunInfoTable(Long_t size, void *p);
   static void delete_RHICfRunInfoTable(void *p);
   static void deleteArray_RHICfRunInfoTable(void *p);
   static void destruct_RHICfRunInfoTable(void *p);
   static void streamer_RHICfRunInfoTable(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RHICfRunInfoTable*)
   {
      ::RHICfRunInfoTable *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RHICfRunInfoTable >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RHICfRunInfoTable", ::RHICfRunInfoTable::Class_Version(), "./include/RHICfRunInfoTable.h", 157,
                  typeid(::RHICfRunInfoTable), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RHICfRunInfoTable::Dictionary, isa_proxy, 0,
                  sizeof(::RHICfRunInfoTable) );
      instance.SetNew(&new_RHICfRunInfoTable);
      instance.SetNewArray(&newArray_RHICfRunInfoTable);
      instance.SetDelete(&delete_RHICfRunInfoTable);
      instance.SetDeleteArray(&deleteArray_RHICfRunInfoTable);
      instance.SetDestructor(&destruct_RHICfRunInfoTable);
      instance.SetStreamerFunc(&streamer_RHICfRunInfoTable);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RHICfRunInfoTable*)
   {
      return GenerateInitInstanceLocal((::RHICfRunInfoTable*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RHICfRunInfoTable*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr ADCRange::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *ADCRange::Class_Name()
{
   return "ADCRange";
}

//______________________________________________________________________________
const char *ADCRange::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ADCRange*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ADCRange::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ADCRange*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ADCRange::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ADCRange*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ADCRange::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ADCRange*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr A1Cal1ToCal2::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *A1Cal1ToCal2::Class_Name()
{
   return "A1Cal1ToCal2";
}

//______________________________________________________________________________
const char *A1Cal1ToCal2::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A1Cal1ToCal2*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int A1Cal1ToCal2::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A1Cal1ToCal2*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void A1Cal1ToCal2::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A1Cal1ToCal2*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *A1Cal1ToCal2::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A1Cal1ToCal2*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr ConParticleDefine::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *ConParticleDefine::Class_Name()
{
   return "ConParticleDefine";
}

//______________________________________________________________________________
const char *ConParticleDefine::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ConParticleDefine*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ConParticleDefine::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ConParticleDefine*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ConParticleDefine::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ConParticleDefine*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ConParticleDefine::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ConParticleDefine*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr PMTGain::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *PMTGain::Class_Name()
{
   return "PMTGain";
}

//______________________________________________________________________________
const char *PMTGain::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::PMTGain*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PMTGain::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::PMTGain*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PMTGain::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::PMTGain*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PMTGain::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::PMTGain*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr ScifiGain::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *ScifiGain::Class_Name()
{
   return "ScifiGain";
}

//______________________________________________________________________________
const char *ScifiGain::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ScifiGain*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ScifiGain::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ScifiGain*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ScifiGain::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ScifiGain*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ScifiGain::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ScifiGain*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr FCGain::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *FCGain::Class_Name()
{
   return "FCGain";
}

//______________________________________________________________________________
const char *FCGain::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FCGain*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FCGain::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::FCGain*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FCGain::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FCGain*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FCGain::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::FCGain*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr A1GainCalibration::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *A1GainCalibration::Class_Name()
{
   return "A1GainCalibration";
}

//______________________________________________________________________________
const char *A1GainCalibration::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A1GainCalibration*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int A1GainCalibration::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A1GainCalibration*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void A1GainCalibration::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A1GainCalibration*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *A1GainCalibration::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A1GainCalibration*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr A1PedeSubtract::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *A1PedeSubtract::Class_Name()
{
   return "A1PedeSubtract";
}

//______________________________________________________________________________
const char *A1PedeSubtract::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A1PedeSubtract*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int A1PedeSubtract::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A1PedeSubtract*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void A1PedeSubtract::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A1PedeSubtract*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *A1PedeSubtract::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A1PedeSubtract*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr ScifiPosTable::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *ScifiPosTable::Class_Name()
{
   return "ScifiPosTable";
}

//______________________________________________________________________________
const char *ScifiPosTable::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ScifiPosTable*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ScifiPosTable::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ScifiPosTable*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ScifiPosTable::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ScifiPosTable*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ScifiPosTable::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ScifiPosTable*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr A1RawToCal1::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *A1RawToCal1::Class_Name()
{
   return "A1RawToCal1";
}

//______________________________________________________________________________
const char *A1RawToCal1::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A1RawToCal1*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int A1RawToCal1::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A1RawToCal1*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void A1RawToCal1::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A1RawToCal1*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *A1RawToCal1::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A1RawToCal1*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr A1CrossTalk::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *A1CrossTalk::Class_Name()
{
   return "A1CrossTalk";
}

//______________________________________________________________________________
const char *A1CrossTalk::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A1CrossTalk*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int A1CrossTalk::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A1CrossTalk*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void A1CrossTalk::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A1CrossTalk*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *A1CrossTalk::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A1CrossTalk*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr A1LHCCrossTalk::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *A1LHCCrossTalk::Class_Name()
{
   return "A1LHCCrossTalk";
}

//______________________________________________________________________________
const char *A1LHCCrossTalk::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A1LHCCrossTalk*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int A1LHCCrossTalk::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A1LHCCrossTalk*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void A1LHCCrossTalk::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A1LHCCrossTalk*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *A1LHCCrossTalk::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A1LHCCrossTalk*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr A2Cal1ToCal2::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *A2Cal1ToCal2::Class_Name()
{
   return "A2Cal1ToCal2";
}

//______________________________________________________________________________
const char *A2Cal1ToCal2::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A2Cal1ToCal2*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int A2Cal1ToCal2::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A2Cal1ToCal2*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void A2Cal1ToCal2::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A2Cal1ToCal2*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *A2Cal1ToCal2::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A2Cal1ToCal2*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr SiliconGain::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *SiliconGain::Class_Name()
{
   return "SiliconGain";
}

//______________________________________________________________________________
const char *SiliconGain::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SiliconGain*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SiliconGain::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SiliconGain*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SiliconGain::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SiliconGain*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SiliconGain::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SiliconGain*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr A2GainCalibration::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *A2GainCalibration::Class_Name()
{
   return "A2GainCalibration";
}

//______________________________________________________________________________
const char *A2GainCalibration::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A2GainCalibration*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int A2GainCalibration::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A2GainCalibration*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void A2GainCalibration::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A2GainCalibration*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *A2GainCalibration::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A2GainCalibration*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr A2PedeSubtract::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *A2PedeSubtract::Class_Name()
{
   return "A2PedeSubtract";
}

//______________________________________________________________________________
const char *A2PedeSubtract::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A2PedeSubtract*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int A2PedeSubtract::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A2PedeSubtract*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void A2PedeSubtract::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A2PedeSubtract*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *A2PedeSubtract::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A2PedeSubtract*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr A2RawToCal1::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *A2RawToCal1::Class_Name()
{
   return "A2RawToCal1";
}

//______________________________________________________________________________
const char *A2RawToCal1::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A2RawToCal1*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int A2RawToCal1::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A2RawToCal1*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void A2RawToCal1::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A2RawToCal1*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *A2RawToCal1::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A2RawToCal1*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr A2RawToCal1Silicon::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *A2RawToCal1Silicon::Class_Name()
{
   return "A2RawToCal1Silicon";
}

//______________________________________________________________________________
const char *A2RawToCal1Silicon::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A2RawToCal1Silicon*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int A2RawToCal1Silicon::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A2RawToCal1Silicon*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void A2RawToCal1Silicon::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A2RawToCal1Silicon*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *A2RawToCal1Silicon::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A2RawToCal1Silicon*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Arm2Alignment::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Arm2Alignment::Class_Name()
{
   return "Arm2Alignment";
}

//______________________________________________________________________________
const char *Arm2Alignment::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Arm2Alignment*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Arm2Alignment::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Arm2Alignment*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Arm2Alignment::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Arm2Alignment*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Arm2Alignment::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Arm2Alignment*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr StructFiberPos::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *StructFiberPos::Class_Name()
{
   return "StructFiberPos";
}

//______________________________________________________________________________
const char *StructFiberPos::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StructFiberPos*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StructFiberPos::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::StructFiberPos*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StructFiberPos::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StructFiberPos*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StructFiberPos::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::StructFiberPos*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr ConScifiPosition::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *ConScifiPosition::Class_Name()
{
   return "ConScifiPosition";
}

//______________________________________________________________________________
const char *ConScifiPosition::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ConScifiPosition*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ConScifiPosition::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ConScifiPosition*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ConScifiPosition::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ConScifiPosition*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ConScifiPosition::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ConScifiPosition*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr ConShowerLeakage::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *ConShowerLeakage::Class_Name()
{
   return "ConShowerLeakage";
}

//______________________________________________________________________________
const char *ConShowerLeakage::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ConShowerLeakage*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ConShowerLeakage::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ConShowerLeakage*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ConShowerLeakage::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ConShowerLeakage*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ConShowerLeakage::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ConShowerLeakage*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr LHCfRunInfo::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *LHCfRunInfo::Class_Name()
{
   return "LHCfRunInfo";
}

//______________________________________________________________________________
const char *LHCfRunInfo::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::LHCfRunInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int LHCfRunInfo::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::LHCfRunInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void LHCfRunInfo::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::LHCfRunInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *LHCfRunInfo::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::LHCfRunInfo*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr LHCfRunInfoTable::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *LHCfRunInfoTable::Class_Name()
{
   return "LHCfRunInfoTable";
}

//______________________________________________________________________________
const char *LHCfRunInfoTable::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::LHCfRunInfoTable*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int LHCfRunInfoTable::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::LHCfRunInfoTable*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void LHCfRunInfoTable::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::LHCfRunInfoTable*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *LHCfRunInfoTable::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::LHCfRunInfoTable*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr PMTSatu::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *PMTSatu::Class_Name()
{
   return "PMTSatu";
}

//______________________________________________________________________________
const char *PMTSatu::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::PMTSatu*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PMTSatu::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::PMTSatu*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PMTSatu::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::PMTSatu*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PMTSatu::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::PMTSatu*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr PMTSatuCorrection::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *PMTSatuCorrection::Class_Name()
{
   return "PMTSatuCorrection";
}

//______________________________________________________________________________
const char *PMTSatuCorrection::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::PMTSatuCorrection*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PMTSatuCorrection::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::PMTSatuCorrection*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PMTSatuCorrection::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::PMTSatuCorrection*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PMTSatuCorrection::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::PMTSatuCorrection*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr ParticleID01::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *ParticleID01::Class_Name()
{
   return "ParticleID01";
}

//______________________________________________________________________________
const char *ParticleID01::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ParticleID01*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ParticleID01::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ParticleID01*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ParticleID01::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ParticleID01*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ParticleID01::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ParticleID01*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr ParticleID02::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *ParticleID02::Class_Name()
{
   return "ParticleID02";
}

//______________________________________________________________________________
const char *ParticleID02::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ParticleID02*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ParticleID02::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ParticleID02*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ParticleID02::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ParticleID02*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ParticleID02::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ParticleID02*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr SciFiPosCalculation::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *SciFiPosCalculation::Class_Name()
{
   return "SciFiPosCalculation";
}

//______________________________________________________________________________
const char *SciFiPosCalculation::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SciFiPosCalculation*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SciFiPosCalculation::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SciFiPosCalculation*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SciFiPosCalculation::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SciFiPosCalculation*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SciFiPosCalculation::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SciFiPosCalculation*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr ScifiIncidentPosition02::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *ScifiIncidentPosition02::Class_Name()
{
   return "ScifiIncidentPosition02";
}

//______________________________________________________________________________
const char *ScifiIncidentPosition02::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ScifiIncidentPosition02*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ScifiIncidentPosition02::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ScifiIncidentPosition02*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ScifiIncidentPosition02::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ScifiIncidentPosition02*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ScifiIncidentPosition02::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ScifiIncidentPosition02*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr ScintiPosDependence::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *ScintiPosDependence::Class_Name()
{
   return "ScintiPosDependence";
}

//______________________________________________________________________________
const char *ScintiPosDependence::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ScintiPosDependence*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ScintiPosDependence::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::ScintiPosDependence*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ScintiPosDependence::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ScintiPosDependence*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ScintiPosDependence::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::ScintiPosDependence*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr SPSAdamoPedeSubtract::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *SPSAdamoPedeSubtract::Class_Name()
{
   return "SPSAdamoPedeSubtract";
}

//______________________________________________________________________________
const char *SPSAdamoPedeSubtract::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SPSAdamoPedeSubtract*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SPSAdamoPedeSubtract::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SPSAdamoPedeSubtract*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SPSAdamoPedeSubtract::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SPSAdamoPedeSubtract*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SPSAdamoPedeSubtract::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SPSAdamoPedeSubtract*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr TransitionFit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TransitionFit::Class_Name()
{
   return "TransitionFit";
}

//______________________________________________________________________________
const char *TransitionFit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TransitionFit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TransitionFit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::TransitionFit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TransitionFit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TransitionFit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TransitionFit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::TransitionFit*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr RHICfRunInfo::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RHICfRunInfo::Class_Name()
{
   return "RHICfRunInfo";
}

//______________________________________________________________________________
const char *RHICfRunInfo::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfRunInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RHICfRunInfo::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfRunInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RHICfRunInfo::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfRunInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RHICfRunInfo::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfRunInfo*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr RHICfRunInfoTable::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RHICfRunInfoTable::Class_Name()
{
   return "RHICfRunInfoTable";
}

//______________________________________________________________________________
const char *RHICfRunInfoTable::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfRunInfoTable*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RHICfRunInfoTable::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfRunInfoTable*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RHICfRunInfoTable::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfRunInfoTable*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RHICfRunInfoTable::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfRunInfoTable*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void A1Cal1ToCal2::Streamer(TBuffer &R__b)
{
   // Stream an object of class A1Cal1ToCal2.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> threshold;
      adcrange.Streamer(R__b);
      defult_pede.Streamer(R__b);
      R__b >> use_adcrange;
      R__b.CheckByteCount(R__s, R__c, A1Cal1ToCal2::IsA());
   } else {
      R__c = R__b.WriteVersion(A1Cal1ToCal2::IsA(), kTRUE);
      R__b << threshold;
      adcrange.Streamer(R__b);
      defult_pede.Streamer(R__b);
      R__b << use_adcrange;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void A1Cal1ToCal2::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class A1Cal1ToCal2.
      TClass *R__cl = ::A1Cal1ToCal2::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "threshold", &threshold);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adcrange", &adcrange);
      R__insp.InspectMember(adcrange, "adcrange.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "defult_pede", &defult_pede);
      R__insp.InspectMember(defult_pede, "defult_pede.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "use_adcrange", &use_adcrange);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_A1Cal1ToCal2(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::A1Cal1ToCal2 : new ::A1Cal1ToCal2;
   }
   static void *newArray_A1Cal1ToCal2(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::A1Cal1ToCal2[nElements] : new ::A1Cal1ToCal2[nElements];
   }
   // Wrapper around operator delete
   static void delete_A1Cal1ToCal2(void *p) {
      delete ((::A1Cal1ToCal2*)p);
   }
   static void deleteArray_A1Cal1ToCal2(void *p) {
      delete [] ((::A1Cal1ToCal2*)p);
   }
   static void destruct_A1Cal1ToCal2(void *p) {
      typedef ::A1Cal1ToCal2 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_A1Cal1ToCal2(TBuffer &buf, void *obj) {
      ((::A1Cal1ToCal2*)obj)->::A1Cal1ToCal2::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::A1Cal1ToCal2

//______________________________________________________________________________
void A1CrossTalk::Streamer(TBuffer &R__b)
{
   // Stream an object of class A1CrossTalk.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b.ReadStaticArray((double*)calib_cross_20x);
      R__b.ReadStaticArray((double*)calib_cross_40x);
      R__b.ReadStaticArray((double*)calib_cross_20y);
      R__b.ReadStaticArray((double*)calib_cross_40y);
      R__b.ReadStaticArray((double*)temp_40x);
      R__b.ReadStaticArray((double*)temp_20x);
      R__b.ReadStaticArray((double*)temp_40y);
      R__b.ReadStaticArray((double*)temp_20y);
      { TString R__str; R__str.Streamer(R__b); listname = R__str.Data(); }
      R__b >> value;
      R__b >> layer;
      R__b >> pos;
      R__b >> cross_pos;
      R__b.StreamObject(&(fin_x),typeid(ifstream));
      R__b.StreamObject(&(fin_y),typeid(ifstream));
      int R__i;
      for (R__i = 0; R__i < 8; R__i++)
         R__b >> M[R__i];
      for (R__i = 0; R__i < 8; R__i++)
         R__b >> bM[R__i];
      R__b >> V;
      R__b >> Vx;
      R__b >> Vy;
      R__b.ReadStaticArray((double*)a4Vx);
      R__b.ReadStaticArray((double*)a4Vy);
      R__b.CheckByteCount(R__s, R__c, A1CrossTalk::IsA());
   } else {
      R__c = R__b.WriteVersion(A1CrossTalk::IsA(), kTRUE);
      R__b.WriteArray((double*)calib_cross_20x, 4800);
      R__b.WriteArray((double*)calib_cross_40x, 9600);
      R__b.WriteArray((double*)calib_cross_20y, 4800);
      R__b.WriteArray((double*)calib_cross_40y, 9600);
      R__b.WriteArray((double*)temp_40x, 160);
      R__b.WriteArray((double*)temp_20x, 80);
      R__b.WriteArray((double*)temp_40y, 160);
      R__b.WriteArray((double*)temp_20y, 80);
      { TString R__str = listname.c_str(); R__str.Streamer(R__b);}
      R__b << value;
      R__b << layer;
      R__b << pos;
      R__b << cross_pos;
      R__b.StreamObject(&(fin_x),typeid(ifstream));
      R__b.StreamObject(&(fin_y),typeid(ifstream));
      int R__i;
      for (R__i = 0; R__i < 8; R__i++)
         R__b << M[R__i];
      for (R__i = 0; R__i < 8; R__i++)
         R__b << bM[R__i];
      R__b << V;
      R__b << Vx;
      R__b << Vy;
      R__b.WriteArray((double*)a4Vx, 240);
      R__b.WriteArray((double*)a4Vy, 240);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void A1CrossTalk::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class A1CrossTalk.
      TClass *R__cl = ::A1CrossTalk::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "calib_cross_20x[4][20][60]", calib_cross_20x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "calib_cross_40x[4][40][60]", calib_cross_40x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "calib_cross_20y[4][20][60]", calib_cross_20y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "calib_cross_40y[4][40][60]", calib_cross_40y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "temp_40x[4][40]", temp_40x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "temp_20x[4][20]", temp_20x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "temp_40y[4][40]", temp_40y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "temp_20y[4][20]", temp_20y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "listname", (void*)&listname);
      R__insp.InspectMember("string", (void*)&listname, "listname.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "value", &value);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "layer", &layer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pos", &pos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cross_pos", &cross_pos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fin_x", (void*)&fin_x);
      R__insp.InspectMember("ifstream", (void*)&fin_x, "fin_x.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fin_y", (void*)&fin_y);
      R__insp.InspectMember("ifstream", (void*)&fin_y, "fin_y.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*M[8]", &M);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*bM[8]", &bM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*V", &V);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Vx", &Vx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Vy", &Vy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a4Vx[4][60]", a4Vx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a4Vy[4][60]", a4Vy);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_A1CrossTalk(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::A1CrossTalk : new ::A1CrossTalk;
   }
   static void *newArray_A1CrossTalk(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::A1CrossTalk[nElements] : new ::A1CrossTalk[nElements];
   }
   // Wrapper around operator delete
   static void delete_A1CrossTalk(void *p) {
      delete ((::A1CrossTalk*)p);
   }
   static void deleteArray_A1CrossTalk(void *p) {
      delete [] ((::A1CrossTalk*)p);
   }
   static void destruct_A1CrossTalk(void *p) {
      typedef ::A1CrossTalk current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_A1CrossTalk(TBuffer &buf, void *obj) {
      ((::A1CrossTalk*)obj)->::A1CrossTalk::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::A1CrossTalk

//______________________________________________________________________________
void A1GainCalibration::Streamer(TBuffer &R__b)
{
   // Stream an object of class A1GainCalibration.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> detector;
      R__b.ReadStaticArray((double*)hv);
      R__b >> scifihv;
      R__b.ReadStaticArray((double*)fchv);
      R__b >> pdeffactor_pmt;
      R__b >> pdeffactor_scifi;
      R__b >> pdeffactor_fc;
      pdeftable.Streamer(R__b);
      pmtgaintable.Streamer(R__b);
      scifigaintable.Streamer(R__b);
      fcgaintable.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, A1GainCalibration::IsA());
   } else {
      R__c = R__b.WriteVersion(A1GainCalibration::IsA(), kTRUE);
      R__b << detector;
      R__b.WriteArray((double*)hv, 32);
      R__b << scifihv;
      R__b.WriteArray(fchv, 2);
      R__b << pdeffactor_pmt;
      R__b << pdeffactor_scifi;
      R__b << pdeffactor_fc;
      pdeftable.Streamer(R__b);
      pmtgaintable.Streamer(R__b);
      scifigaintable.Streamer(R__b);
      fcgaintable.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void A1GainCalibration::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class A1GainCalibration.
      TClass *R__cl = ::A1GainCalibration::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "detector", &detector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hv[2][16]", hv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scifihv", &scifihv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fchv[2]", fchv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdeffactor_pmt", &pdeffactor_pmt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdeffactor_scifi", &pdeffactor_scifi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdeffactor_fc", &pdeffactor_fc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdeftable", &pdeftable);
      R__insp.InspectMember(pdeftable, "pdeftable.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pmtgaintable", &pmtgaintable);
      R__insp.InspectMember(pmtgaintable, "pmtgaintable.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scifigaintable", &scifigaintable);
      R__insp.InspectMember(scifigaintable, "scifigaintable.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fcgaintable", &fcgaintable);
      R__insp.InspectMember(fcgaintable, "fcgaintable.");
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_A1GainCalibration(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::A1GainCalibration : new ::A1GainCalibration;
   }
   static void *newArray_A1GainCalibration(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::A1GainCalibration[nElements] : new ::A1GainCalibration[nElements];
   }
   // Wrapper around operator delete
   static void delete_A1GainCalibration(void *p) {
      delete ((::A1GainCalibration*)p);
   }
   static void deleteArray_A1GainCalibration(void *p) {
      delete [] ((::A1GainCalibration*)p);
   }
   static void destruct_A1GainCalibration(void *p) {
      typedef ::A1GainCalibration current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_A1GainCalibration(TBuffer &buf, void *obj) {
      ((::A1GainCalibration*)obj)->::A1GainCalibration::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::A1GainCalibration

//______________________________________________________________________________
void A1LHCCrossTalk::Streamer(TBuffer &R__b)
{
   // Stream an object of class A1LHCCrossTalk.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      A1CrossTalk::Streamer(R__b);
      R__b >> flag_op2015;
      R__b.ReadStaticArray((double*)scifi20x);
      R__b.ReadStaticArray((double*)scifi40x);
      R__b.ReadStaticArray((double*)scifi20y);
      R__b.ReadStaticArray((double*)scifi40y);
      R__b.CheckByteCount(R__s, R__c, A1LHCCrossTalk::IsA());
   } else {
      R__c = R__b.WriteVersion(A1LHCCrossTalk::IsA(), kTRUE);
      A1CrossTalk::Streamer(R__b);
      R__b << flag_op2015;
      R__b.WriteArray((double*)scifi20x, 80);
      R__b.WriteArray((double*)scifi40x, 160);
      R__b.WriteArray((double*)scifi20y, 80);
      R__b.WriteArray((double*)scifi40y, 160);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void A1LHCCrossTalk::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class A1LHCCrossTalk.
      TClass *R__cl = ::A1LHCCrossTalk::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "flag_op2015", &flag_op2015);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scifi20x[4][20]", scifi20x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scifi40x[4][40]", scifi40x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scifi20y[4][20]", scifi20y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scifi40y[4][40]", scifi40y);
      A1CrossTalk::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_A1LHCCrossTalk(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::A1LHCCrossTalk : new ::A1LHCCrossTalk;
   }
   static void *newArray_A1LHCCrossTalk(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::A1LHCCrossTalk[nElements] : new ::A1LHCCrossTalk[nElements];
   }
   // Wrapper around operator delete
   static void delete_A1LHCCrossTalk(void *p) {
      delete ((::A1LHCCrossTalk*)p);
   }
   static void deleteArray_A1LHCCrossTalk(void *p) {
      delete [] ((::A1LHCCrossTalk*)p);
   }
   static void destruct_A1LHCCrossTalk(void *p) {
      typedef ::A1LHCCrossTalk current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_A1LHCCrossTalk(TBuffer &buf, void *obj) {
      ((::A1LHCCrossTalk*)obj)->::A1LHCCrossTalk::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::A1LHCCrossTalk

//______________________________________________________________________________
void A1PedeSubtract::Streamer(TBuffer &R__b)
{
   // Stream an object of class A1PedeSubtract.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> nevent;
      R__b >> pedeaccum;
      R__b >> pedeaccum2;
      R__b >> pedestal;
      R__b >> pedesigma;
      R__b >> opoffsetsubtraction;
      R__b >> pedeaccum2_1;
      R__b >> pedeaccum2_2;
      R__b >> pedestal2;
      R__b >> pedesigma2;
      datatmp.Streamer(R__b);
      R__b.ReadStaticArray((double*)calav);
      R__b >> accum_nevent;
      R__b.CheckByteCount(R__s, R__c, A1PedeSubtract::IsA());
   } else {
      R__c = R__b.WriteVersion(A1PedeSubtract::IsA(), kTRUE);
      R__b << nevent;
      R__b << pedeaccum;
      R__b << pedeaccum2;
      R__b << pedestal;
      R__b << pedesigma;
      R__b << opoffsetsubtraction;
      R__b << pedeaccum2_1;
      R__b << pedeaccum2_2;
      R__b << pedestal2;
      R__b << pedesigma2;
      datatmp.Streamer(R__b);
      R__b.WriteArray((double*)calav, 32);
      R__b << accum_nevent;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void A1PedeSubtract::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class A1PedeSubtract.
      TClass *R__cl = ::A1PedeSubtract::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nevent", &nevent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pedeaccum", &pedeaccum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pedeaccum2", &pedeaccum2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pedestal", &pedestal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pedesigma", &pedesigma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "opoffsetsubtraction", &opoffsetsubtraction);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pedeaccum2_1", &pedeaccum2_1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pedeaccum2_2", &pedeaccum2_2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pedestal2", &pedestal2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pedesigma2", &pedesigma2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "datatmp", &datatmp);
      R__insp.InspectMember(datatmp, "datatmp.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "calav[2][16]", calav);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "accum_nevent", &accum_nevent);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_A1PedeSubtract(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::A1PedeSubtract : new ::A1PedeSubtract;
   }
   static void *newArray_A1PedeSubtract(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::A1PedeSubtract[nElements] : new ::A1PedeSubtract[nElements];
   }
   // Wrapper around operator delete
   static void delete_A1PedeSubtract(void *p) {
      delete ((::A1PedeSubtract*)p);
   }
   static void deleteArray_A1PedeSubtract(void *p) {
      delete [] ((::A1PedeSubtract*)p);
   }
   static void destruct_A1PedeSubtract(void *p) {
      typedef ::A1PedeSubtract current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_A1PedeSubtract(TBuffer &buf, void *obj) {
      ((::A1PedeSubtract*)obj)->::A1PedeSubtract::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::A1PedeSubtract

//______________________________________________________________________________
void A1RawToCal1::Streamer(TBuffer &R__b)
{
   // Stream an object of class A1RawToCal1.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> format;
      posSCIF.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, A1RawToCal1::IsA());
   } else {
      R__c = R__b.WriteVersion(A1RawToCal1::IsA(), kTRUE);
      R__b << format;
      posSCIF.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void A1RawToCal1::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class A1RawToCal1.
      TClass *R__cl = ::A1RawToCal1::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "format", &format);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "posSCIF", &posSCIF);
      R__insp.InspectMember(posSCIF, "posSCIF.");
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_A1RawToCal1(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::A1RawToCal1 : new ::A1RawToCal1;
   }
   static void *newArray_A1RawToCal1(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::A1RawToCal1[nElements] : new ::A1RawToCal1[nElements];
   }
   // Wrapper around operator delete
   static void delete_A1RawToCal1(void *p) {
      delete ((::A1RawToCal1*)p);
   }
   static void deleteArray_A1RawToCal1(void *p) {
      delete [] ((::A1RawToCal1*)p);
   }
   static void destruct_A1RawToCal1(void *p) {
      typedef ::A1RawToCal1 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_A1RawToCal1(TBuffer &buf, void *obj) {
      ((::A1RawToCal1*)obj)->::A1RawToCal1::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::A1RawToCal1

//______________________________________________________________________________
void A2Cal1ToCal2::Streamer(TBuffer &R__b)
{
   // Stream an object of class A2Cal1ToCal2.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> threshold;
      adcrange.Streamer(R__b);
      defult_pede.Streamer(R__b);
      R__b >> use_adcrange;
      R__b.CheckByteCount(R__s, R__c, A2Cal1ToCal2::IsA());
   } else {
      R__c = R__b.WriteVersion(A2Cal1ToCal2::IsA(), kTRUE);
      R__b << threshold;
      adcrange.Streamer(R__b);
      defult_pede.Streamer(R__b);
      R__b << use_adcrange;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void A2Cal1ToCal2::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class A2Cal1ToCal2.
      TClass *R__cl = ::A2Cal1ToCal2::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "threshold", &threshold);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adcrange", &adcrange);
      R__insp.InspectMember(adcrange, "adcrange.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "defult_pede", &defult_pede);
      R__insp.InspectMember(defult_pede, "defult_pede.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "use_adcrange", &use_adcrange);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_A2Cal1ToCal2(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::A2Cal1ToCal2 : new ::A2Cal1ToCal2;
   }
   static void *newArray_A2Cal1ToCal2(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::A2Cal1ToCal2[nElements] : new ::A2Cal1ToCal2[nElements];
   }
   // Wrapper around operator delete
   static void delete_A2Cal1ToCal2(void *p) {
      delete ((::A2Cal1ToCal2*)p);
   }
   static void deleteArray_A2Cal1ToCal2(void *p) {
      delete [] ((::A2Cal1ToCal2*)p);
   }
   static void destruct_A2Cal1ToCal2(void *p) {
      typedef ::A2Cal1ToCal2 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_A2Cal1ToCal2(TBuffer &buf, void *obj) {
      ((::A2Cal1ToCal2*)obj)->::A2Cal1ToCal2::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::A2Cal1ToCal2

//______________________________________________________________________________
void A2GainCalibration::Streamer(TBuffer &R__b)
{
   // Stream an object of class A2GainCalibration.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> detector;
      R__b.ReadStaticArray((double*)hv);
      R__b >> siliconhv;
      R__b.ReadStaticArray((double*)fchv);
      R__b >> pdeffactor_pmt;
      R__b >> pdeffactor_silicon;
      R__b >> pdeffactor_fc;
      pdeftable.Streamer(R__b);
      pmtgaintable.Streamer(R__b);
      fcgaintable.Streamer(R__b);
      sigaintable.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, A2GainCalibration::IsA());
   } else {
      R__c = R__b.WriteVersion(A2GainCalibration::IsA(), kTRUE);
      R__b << detector;
      R__b.WriteArray((double*)hv, 32);
      R__b << siliconhv;
      R__b.WriteArray(fchv, 2);
      R__b << pdeffactor_pmt;
      R__b << pdeffactor_silicon;
      R__b << pdeffactor_fc;
      pdeftable.Streamer(R__b);
      pmtgaintable.Streamer(R__b);
      fcgaintable.Streamer(R__b);
      sigaintable.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void A2GainCalibration::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class A2GainCalibration.
      TClass *R__cl = ::A2GainCalibration::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "detector", &detector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hv[2][16]", hv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "siliconhv", &siliconhv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fchv[2]", fchv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdeffactor_pmt", &pdeffactor_pmt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdeffactor_silicon", &pdeffactor_silicon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdeffactor_fc", &pdeffactor_fc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdeftable", &pdeftable);
      R__insp.InspectMember(pdeftable, "pdeftable.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pmtgaintable", &pmtgaintable);
      R__insp.InspectMember(pmtgaintable, "pmtgaintable.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fcgaintable", &fcgaintable);
      R__insp.InspectMember(fcgaintable, "fcgaintable.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigaintable", &sigaintable);
      R__insp.InspectMember(sigaintable, "sigaintable.");
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_A2GainCalibration(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::A2GainCalibration : new ::A2GainCalibration;
   }
   static void *newArray_A2GainCalibration(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::A2GainCalibration[nElements] : new ::A2GainCalibration[nElements];
   }
   // Wrapper around operator delete
   static void delete_A2GainCalibration(void *p) {
      delete ((::A2GainCalibration*)p);
   }
   static void deleteArray_A2GainCalibration(void *p) {
      delete [] ((::A2GainCalibration*)p);
   }
   static void destruct_A2GainCalibration(void *p) {
      typedef ::A2GainCalibration current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_A2GainCalibration(TBuffer &buf, void *obj) {
      ((::A2GainCalibration*)obj)->::A2GainCalibration::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::A2GainCalibration

//______________________________________________________________________________
void A2PedeSubtract::Streamer(TBuffer &R__b)
{
   // Stream an object of class A2PedeSubtract.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> nevent;
      R__b >> pedeaccum;
      R__b >> pedeaccum2;
      R__b >> pedestal;
      R__b >> pedesigma;
      R__b >> opoffsetsubtraction;
      R__b >> pedeaccum2_1;
      R__b >> pedeaccum2_2;
      R__b >> pedestal2;
      R__b >> pedesigma2;
      datatmp.Streamer(R__b);
      R__b.ReadStaticArray((double*)silicon_accum);
      R__b.ReadStaticArray((double*)silicon_accum2);
      R__b >> accum_nevent;
      R__b.CheckByteCount(R__s, R__c, A2PedeSubtract::IsA());
   } else {
      R__c = R__b.WriteVersion(A2PedeSubtract::IsA(), kTRUE);
      R__b << nevent;
      R__b << pedeaccum;
      R__b << pedeaccum2;
      R__b << pedestal;
      R__b << pedesigma;
      R__b << opoffsetsubtraction;
      R__b << pedeaccum2_1;
      R__b << pedeaccum2_2;
      R__b << pedestal2;
      R__b << pedesigma2;
      datatmp.Streamer(R__b);
      R__b.WriteArray((double*)silicon_accum, 9216);
      R__b.WriteArray((double*)silicon_accum2, 9216);
      R__b << accum_nevent;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void A2PedeSubtract::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class A2PedeSubtract.
      TClass *R__cl = ::A2PedeSubtract::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nevent", &nevent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pedeaccum", &pedeaccum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pedeaccum2", &pedeaccum2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pedestal", &pedestal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pedesigma", &pedesigma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "opoffsetsubtraction", &opoffsetsubtraction);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pedeaccum2_1", &pedeaccum2_1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pedeaccum2_2", &pedeaccum2_2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pedestal2", &pedestal2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pedesigma2", &pedesigma2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "datatmp", &datatmp);
      R__insp.InspectMember(datatmp, "datatmp.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "silicon_accum[4][2][384][3]", silicon_accum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "silicon_accum2[4][2][384][3]", silicon_accum2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "accum_nevent", &accum_nevent);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_A2PedeSubtract(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::A2PedeSubtract : new ::A2PedeSubtract;
   }
   static void *newArray_A2PedeSubtract(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::A2PedeSubtract[nElements] : new ::A2PedeSubtract[nElements];
   }
   // Wrapper around operator delete
   static void delete_A2PedeSubtract(void *p) {
      delete ((::A2PedeSubtract*)p);
   }
   static void deleteArray_A2PedeSubtract(void *p) {
      delete [] ((::A2PedeSubtract*)p);
   }
   static void destruct_A2PedeSubtract(void *p) {
      typedef ::A2PedeSubtract current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_A2PedeSubtract(TBuffer &buf, void *obj) {
      ((::A2PedeSubtract*)obj)->::A2PedeSubtract::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::A2PedeSubtract

//______________________________________________________________________________
void A2RawToCal1::Streamer(TBuffer &R__b)
{
   // Stream an object of class A2RawToCal1.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> format;
      R__b.CheckByteCount(R__s, R__c, A2RawToCal1::IsA());
   } else {
      R__c = R__b.WriteVersion(A2RawToCal1::IsA(), kTRUE);
      R__b << format;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void A2RawToCal1::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class A2RawToCal1.
      TClass *R__cl = ::A2RawToCal1::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "format", &format);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_A2RawToCal1(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::A2RawToCal1 : new ::A2RawToCal1;
   }
   static void *newArray_A2RawToCal1(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::A2RawToCal1[nElements] : new ::A2RawToCal1[nElements];
   }
   // Wrapper around operator delete
   static void delete_A2RawToCal1(void *p) {
      delete ((::A2RawToCal1*)p);
   }
   static void deleteArray_A2RawToCal1(void *p) {
      delete [] ((::A2RawToCal1*)p);
   }
   static void destruct_A2RawToCal1(void *p) {
      typedef ::A2RawToCal1 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_A2RawToCal1(TBuffer &buf, void *obj) {
      ((::A2RawToCal1*)obj)->::A2RawToCal1::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::A2RawToCal1

//______________________________________________________________________________
void A2RawToCal1Silicon::Streamer(TBuffer &R__b)
{
   // Stream an object of class A2RawToCal1Silicon.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b.StreamObject(&(data),typeid(SILICON_RAW));
      R__b >> a2cal1;
      R__b.ReadStaticArray((char*)HybSeqMDAQ);
      R__b.ReadStaticArray((int*)id_board);
      R__b.ReadStaticArray((int*)err);
      R__b.ReadStaticArray((int*)errold);
      R__b.ReadStaticArray((char*)crceval);
      R__b >> herror;
      R__b >> nconv;
      R__b.CheckByteCount(R__s, R__c, A2RawToCal1Silicon::IsA());
   } else {
      R__c = R__b.WriteVersion(A2RawToCal1Silicon::IsA(), kTRUE);
      R__b.StreamObject(&(data),typeid(SILICON_RAW));
      R__b << a2cal1;
      R__b.WriteArray((char*)HybSeqMDAQ, 64);
      R__b.WriteArray(id_board, 4);
      R__b.WriteArray(err, 4);
      R__b.WriteArray(errold, 4);
      R__b.WriteArray(crceval, 4);
      R__b << (TObject*)herror;
      R__b << nconv;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void A2RawToCal1Silicon::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class A2RawToCal1Silicon.
      TClass *R__cl = ::A2RawToCal1Silicon::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "data", (void*)&data);
      R__insp.InspectMember("SILICON_RAW", (void*)&data, "data.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*a2cal1", &a2cal1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HybSeqMDAQ[4][4][4]", HybSeqMDAQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id_board[4]", id_board);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "err[4]", err);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "errold[4]", errold);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "crceval[4]", crceval);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*herror", &herror);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nconv", &nconv);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_A2RawToCal1Silicon(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::A2RawToCal1Silicon : new ::A2RawToCal1Silicon;
   }
   static void *newArray_A2RawToCal1Silicon(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::A2RawToCal1Silicon[nElements] : new ::A2RawToCal1Silicon[nElements];
   }
   // Wrapper around operator delete
   static void delete_A2RawToCal1Silicon(void *p) {
      delete ((::A2RawToCal1Silicon*)p);
   }
   static void deleteArray_A2RawToCal1Silicon(void *p) {
      delete [] ((::A2RawToCal1Silicon*)p);
   }
   static void destruct_A2RawToCal1Silicon(void *p) {
      typedef ::A2RawToCal1Silicon current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_A2RawToCal1Silicon(TBuffer &buf, void *obj) {
      ((::A2RawToCal1Silicon*)obj)->::A2RawToCal1Silicon::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::A2RawToCal1Silicon

//______________________________________________________________________________
void ADCRange::Streamer(TBuffer &R__b)
{
   // Stream an object of class ADCRange.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b.ReadStaticArray((char*)tablefile);
      R__b.ReadStaticArray((char*)format);
      R__b >> type;
      R__b >> version;
      R__b.ReadStaticArray((double*)param);
      R__b >> threshold;
      R__b.CheckByteCount(R__s, R__c, ADCRange::IsA());
   } else {
      R__c = R__b.WriteVersion(ADCRange::IsA(), kTRUE);
      R__b.WriteArray(tablefile, 256);
      R__b.WriteArray(format, 256);
      R__b << type;
      R__b << version;
      R__b.WriteArray((double*)param, 128);
      R__b << threshold;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void ADCRange::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ADCRange.
      TClass *R__cl = ::ADCRange::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tablefile[256]", tablefile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "format[256]", format);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "type", &type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "version", &version);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "param[4][16][2]", param);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "threshold", &threshold);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_ADCRange(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ADCRange : new ::ADCRange;
   }
   static void *newArray_ADCRange(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ADCRange[nElements] : new ::ADCRange[nElements];
   }
   // Wrapper around operator delete
   static void delete_ADCRange(void *p) {
      delete ((::ADCRange*)p);
   }
   static void deleteArray_ADCRange(void *p) {
      delete [] ((::ADCRange*)p);
   }
   static void destruct_ADCRange(void *p) {
      typedef ::ADCRange current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_ADCRange(TBuffer &buf, void *obj) {
      ((::ADCRange*)obj)->::ADCRange::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::ADCRange

//______________________________________________________________________________
void Arm2Alignment::Streamer(TBuffer &R__b)
{
   // Stream an object of class Arm2Alignment.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b.StreamObject(&(Hit),typeid(Arm2Hit));
      R__b.ReadStaticArray((double*)vec_PA_to_beamcenter_on_front_face);
      R__b.ReadStaticArray((double*)vec_P1_to_beamcenter_on_front_face);
      R__b.ReadStaticArray((double*)vec_PA_to_hit_point);
      R__b.ReadStaticArray((double*)vec_P1_to_hit_point);
      R__b.ReadStaticArray((double*)LHC_coord_PA);
      R__b.ReadStaticArray((double*)LHC_coord_P1);
      R__b.CheckByteCount(R__s, R__c, Arm2Alignment::IsA());
   } else {
      R__c = R__b.WriteVersion(Arm2Alignment::IsA(), kTRUE);
      R__b.StreamObject(&(Hit),typeid(Arm2Hit));
      R__b.WriteArray(vec_PA_to_beamcenter_on_front_face, 3);
      R__b.WriteArray(vec_P1_to_beamcenter_on_front_face, 3);
      R__b.WriteArray(vec_PA_to_hit_point, 3);
      R__b.WriteArray(vec_P1_to_hit_point, 3);
      R__b.WriteArray(LHC_coord_PA, 3);
      R__b.WriteArray(LHC_coord_P1, 3);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void Arm2Alignment::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Arm2Alignment.
      TClass *R__cl = ::Arm2Alignment::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Hit", (void*)&Hit);
      R__insp.InspectMember("Arm2Hit", (void*)&Hit, "Hit.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vec_PA_to_beamcenter_on_front_face[3]", vec_PA_to_beamcenter_on_front_face);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vec_P1_to_beamcenter_on_front_face[3]", vec_P1_to_beamcenter_on_front_face);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vec_PA_to_hit_point[3]", vec_PA_to_hit_point);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vec_P1_to_hit_point[3]", vec_P1_to_hit_point);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LHC_coord_PA[3]", LHC_coord_PA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LHC_coord_P1[3]", LHC_coord_P1);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Arm2Alignment(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Arm2Alignment : new ::Arm2Alignment;
   }
   static void *newArray_Arm2Alignment(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Arm2Alignment[nElements] : new ::Arm2Alignment[nElements];
   }
   // Wrapper around operator delete
   static void delete_Arm2Alignment(void *p) {
      delete ((::Arm2Alignment*)p);
   }
   static void deleteArray_Arm2Alignment(void *p) {
      delete [] ((::Arm2Alignment*)p);
   }
   static void destruct_Arm2Alignment(void *p) {
      typedef ::Arm2Alignment current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_Arm2Alignment(TBuffer &buf, void *obj) {
      ((::Arm2Alignment*)obj)->::Arm2Alignment::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::Arm2Alignment

//______________________________________________________________________________
void ConParticleDefine::Streamer(TBuffer &R__b)
{
   // Stream an object of class ConParticleDefine.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b.ReadStaticArray((char*)tablefile);
      R__b.ReadStaticArray((char*)format);
      R__b >> type;
      R__b >> version;
      R__b >> detector;
      R__b >> hv0;
      R__b >> hv1;
      R__b >> scifihv;
      R__b >> fchv1;
      R__b >> fchv2;
      R__b.ReadStaticArray((double*)def_cal);
      R__b.ReadStaticArray((double*)def_scifi0);
      R__b.ReadStaticArray((double*)def_scifi1);
      R__b.ReadStaticArray((double*)def_fc);
      R__b.ReadStaticArray((double*)def_silicon);
      R__b.CheckByteCount(R__s, R__c, ConParticleDefine::IsA());
   } else {
      R__c = R__b.WriteVersion(ConParticleDefine::IsA(), kTRUE);
      R__b.WriteArray(tablefile, 256);
      R__b.WriteArray(format, 256);
      R__b << type;
      R__b << version;
      R__b << detector;
      R__b << hv0;
      R__b << hv1;
      R__b << scifihv;
      R__b << fchv1;
      R__b << fchv2;
      R__b.WriteArray((double*)def_cal, 32);
      R__b.WriteArray((double*)def_scifi0, 160);
      R__b.WriteArray((double*)def_scifi1, 320);
      R__b.WriteArray((double*)def_fc, 8);
      R__b.WriteArray((double*)def_silicon, 3072);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void ConParticleDefine::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ConParticleDefine.
      TClass *R__cl = ::ConParticleDefine::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tablefile[256]", tablefile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "format[256]", format);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "type", &type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "version", &version);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "detector", &detector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hv0", &hv0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hv1", &hv1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scifihv", &scifihv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fchv1", &fchv1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fchv2", &fchv2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "def_cal[2][16]", def_cal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "def_scifi0[4][2][20]", def_scifi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "def_scifi1[4][2][40]", def_scifi1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "def_fc[2][4]", def_fc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "def_silicon[4][2][384]", def_silicon);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_ConParticleDefine(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ConParticleDefine : new ::ConParticleDefine;
   }
   static void *newArray_ConParticleDefine(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ConParticleDefine[nElements] : new ::ConParticleDefine[nElements];
   }
   // Wrapper around operator delete
   static void delete_ConParticleDefine(void *p) {
      delete ((::ConParticleDefine*)p);
   }
   static void deleteArray_ConParticleDefine(void *p) {
      delete [] ((::ConParticleDefine*)p);
   }
   static void destruct_ConParticleDefine(void *p) {
      typedef ::ConParticleDefine current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_ConParticleDefine(TBuffer &buf, void *obj) {
      ((::ConParticleDefine*)obj)->::ConParticleDefine::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::ConParticleDefine

//______________________________________________________________________________
void StructFiberPos::Streamer(TBuffer &R__b)
{
   // Stream an object of class StructFiberPos.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b.ReadStaticArray((double*)origin);
      R__b >> width;
      R__b >> length;
      R__b >> direction;
      R__b.CheckByteCount(R__s, R__c, StructFiberPos::IsA());
   } else {
      R__c = R__b.WriteVersion(StructFiberPos::IsA(), kTRUE);
      R__b.WriteArray(origin, 2);
      R__b << width;
      R__b << length;
      R__b << direction;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void StructFiberPos::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class StructFiberPos.
      TClass *R__cl = ::StructFiberPos::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "origin[2]", origin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "width", &width);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "length", &length);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "direction", &direction);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_StructFiberPos(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::StructFiberPos : new ::StructFiberPos;
   }
   static void *newArray_StructFiberPos(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::StructFiberPos[nElements] : new ::StructFiberPos[nElements];
   }
   // Wrapper around operator delete
   static void delete_StructFiberPos(void *p) {
      delete ((::StructFiberPos*)p);
   }
   static void deleteArray_StructFiberPos(void *p) {
      delete [] ((::StructFiberPos*)p);
   }
   static void destruct_StructFiberPos(void *p) {
      typedef ::StructFiberPos current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_StructFiberPos(TBuffer &buf, void *obj) {
      ((::StructFiberPos*)obj)->::StructFiberPos::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::StructFiberPos

//______________________________________________________________________________
void ConScifiPosition::Streamer(TBuffer &R__b)
{
   // Stream an object of class ConScifiPosition.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b.ReadStaticArray((char*)tablefile);
      R__b.ReadStaticArray((char*)format);
      R__b >> type;
      R__b >> version;
      int R__i;
      for (R__i = 0; R__i < 640; R__i++)
         fiber[0][0][0][R__i].Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, ConScifiPosition::IsA());
   } else {
      R__c = R__b.WriteVersion(ConScifiPosition::IsA(), kTRUE);
      R__b.WriteArray(tablefile, 256);
      R__b.WriteArray(format, 256);
      R__b << type;
      R__b << version;
      int R__i;
      for (R__i = 0; R__i < 640; R__i++)
         fiber[0][0][0][R__i].Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void ConScifiPosition::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ConScifiPosition.
      TClass *R__cl = ::ConScifiPosition::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tablefile[256]", tablefile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "format[256]", format);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "type", &type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "version", &version);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fiber[2][4][2][40]", fiber);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_ConScifiPosition(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ConScifiPosition : new ::ConScifiPosition;
   }
   static void *newArray_ConScifiPosition(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ConScifiPosition[nElements] : new ::ConScifiPosition[nElements];
   }
   // Wrapper around operator delete
   static void delete_ConScifiPosition(void *p) {
      delete ((::ConScifiPosition*)p);
   }
   static void deleteArray_ConScifiPosition(void *p) {
      delete [] ((::ConScifiPosition*)p);
   }
   static void destruct_ConScifiPosition(void *p) {
      typedef ::ConScifiPosition current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_ConScifiPosition(TBuffer &buf, void *obj) {
      ((::ConScifiPosition*)obj)->::ConScifiPosition::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::ConScifiPosition

//______________________________________________________________________________
void ConShowerLeakage::Streamer(TBuffer &R__b)
{
   // Stream an object of class ConShowerLeakage.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b.ReadStaticArray((char*)tablefile);
      R__b.ReadStaticArray((char*)format);
      R__b >> type;
      R__b >> version;
      R__b >> dir;
      R__b >> h2fac20;
      R__b >> h2fac40;
      R__b >> h2fac25;
      R__b >> h2fac32;
      R__b >> h2fac20_leakin;
      R__b >> h2fac40_leakin;
      R__b >> h2fac25_leakin;
      R__b >> h2fac32_leakin;
      R__b >> h2param20_leakin;
      R__b >> h2param40_leakin;
      R__b >> h2param25_leakin;
      R__b >> h2param32_leakin;
      R__b.CheckByteCount(R__s, R__c, ConShowerLeakage::IsA());
   } else {
      R__c = R__b.WriteVersion(ConShowerLeakage::IsA(), kTRUE);
      R__b.WriteArray(tablefile, 256);
      R__b.WriteArray(format, 256);
      R__b << type;
      R__b << version;
      R__b << dir;
      R__b << (TObject*)h2fac20;
      R__b << (TObject*)h2fac40;
      R__b << (TObject*)h2fac25;
      R__b << (TObject*)h2fac32;
      R__b << (TObject*)h2fac20_leakin;
      R__b << (TObject*)h2fac40_leakin;
      R__b << (TObject*)h2fac25_leakin;
      R__b << (TObject*)h2fac32_leakin;
      R__b << (TObject*)h2param20_leakin;
      R__b << (TObject*)h2param40_leakin;
      R__b << (TObject*)h2param25_leakin;
      R__b << (TObject*)h2param32_leakin;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void ConShowerLeakage::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ConShowerLeakage.
      TClass *R__cl = ::ConShowerLeakage::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tablefile[256]", tablefile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "format[256]", format);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "type", &type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "version", &version);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dir", &dir);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h2fac20", &h2fac20);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h2fac40", &h2fac40);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h2fac25", &h2fac25);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h2fac32", &h2fac32);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h2fac20_leakin", &h2fac20_leakin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h2fac40_leakin", &h2fac40_leakin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h2fac25_leakin", &h2fac25_leakin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h2fac32_leakin", &h2fac32_leakin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h2param20_leakin", &h2param20_leakin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h2param40_leakin", &h2param40_leakin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h2param25_leakin", &h2param25_leakin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h2param32_leakin", &h2param32_leakin);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_ConShowerLeakage(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ConShowerLeakage : new ::ConShowerLeakage;
   }
   static void *newArray_ConShowerLeakage(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ConShowerLeakage[nElements] : new ::ConShowerLeakage[nElements];
   }
   // Wrapper around operator delete
   static void delete_ConShowerLeakage(void *p) {
      delete ((::ConShowerLeakage*)p);
   }
   static void deleteArray_ConShowerLeakage(void *p) {
      delete [] ((::ConShowerLeakage*)p);
   }
   static void destruct_ConShowerLeakage(void *p) {
      typedef ::ConShowerLeakage current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_ConShowerLeakage(TBuffer &buf, void *obj) {
      ((::ConShowerLeakage*)obj)->::ConShowerLeakage::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::ConShowerLeakage

//______________________________________________________________________________
void FCGain::Streamer(TBuffer &R__b)
{
   // Stream an object of class FCGain.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b.ReadStaticArray((char*)tablefile);
      R__b.ReadStaticArray((char*)format);
      R__b >> version;
      R__b >> type;
      R__b >> nhv;
      R__b.ReadStaticArray((int*)checkhv);
      R__b.ReadStaticArray((double*)gain);
      R__b.CheckByteCount(R__s, R__c, FCGain::IsA());
   } else {
      R__c = R__b.WriteVersion(FCGain::IsA(), kTRUE);
      R__b.WriteArray(tablefile, 256);
      R__b.WriteArray(format, 100);
      R__b << version;
      R__b << type;
      R__b << nhv;
      R__b.WriteArray(checkhv, 2);
      R__b.WriteArray((double*)gain, 16);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void FCGain::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class FCGain.
      TClass *R__cl = ::FCGain::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tablefile[256]", tablefile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "format[100]", format);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "version", &version);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "type", &type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nhv", &nhv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "checkhv[2]", checkhv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gain[2][4][2]", gain);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_FCGain(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::FCGain : new ::FCGain;
   }
   static void *newArray_FCGain(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::FCGain[nElements] : new ::FCGain[nElements];
   }
   // Wrapper around operator delete
   static void delete_FCGain(void *p) {
      delete ((::FCGain*)p);
   }
   static void deleteArray_FCGain(void *p) {
      delete [] ((::FCGain*)p);
   }
   static void destruct_FCGain(void *p) {
      typedef ::FCGain current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_FCGain(TBuffer &buf, void *obj) {
      ((::FCGain*)obj)->::FCGain::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::FCGain

//______________________________________________________________________________
void LHCfRunInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class LHCfRunInfo.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> ioformat;
      R__b >> run;
      R__b >> start_time;
      R__b >> end_time;
      R__b.ReadStaticArray((char*)general_comments);
      R__b >> a1_runmode;
      R__b >> a2_runmode;
      R__b.ReadStaticArray((char*)LTPmode);
      R__b.ReadStaticArray((char*)a1_LogicMode);
      R__b.ReadStaticArray((char*)a2_LogicMode);
      R__b.ReadStaticArray((char*)a1_V1495Load);
      R__b.ReadStaticArray((char*)a2_V1495Load);
      R__b.ReadStaticArray((char*)a1_V1495Setup);
      R__b.ReadStaticArray((char*)a2_V1495Setup);
      R__b.ReadStaticArray((char*)a1_GPIOLoad);
      R__b.ReadStaticArray((char*)a2_GPIOLoad);
      R__b.ReadStaticArray((char*)a1_GPIOSetup);
      R__b.ReadStaticArray((char*)a2_GPIOSetup);
      R__b.ReadStaticArray((char*)a1_Discriminator);
      R__b.ReadStaticArray((char*)a2_Discriminator);
      R__b >> a1_scifidaq;
      R__b >> a2_silicondaq;
      R__b.ReadStaticArray((char*)a1_PMTgain);
      R__b.ReadStaticArray((char*)a2_PMTgain);
      R__b.ReadStaticArray((char*)a1_scifigain);
      R__b.ReadStaticArray((char*)a2_silicongain);
      R__b.ReadStaticArray((char*)a1_position);
      R__b.ReadStaticArray((char*)a2_position);
      R__b >> daq_beam1_scl_nbunch_offset;
      R__b >> daq_beam2_scl_nbunch_offset;
      R__b.ReadStaticArray((char*)daq_comments);
      R__b >> nevent;
      R__b >> a1_nevent;
      R__b >> a1_nevent_L2TA;
      R__b >> a1_nevent_L2TA_MB;
      R__b >> a1_nevent_L2TA_SP;
      R__b >> a1_nevent_L2TP;
      R__b >> a1_nevent_laser;
      R__b >> a2_nevent;
      R__b >> a2_nevent_L2TA;
      R__b >> a2_nevent_L2TA_MB;
      R__b >> a2_nevent_L2TA_SP;
      R__b >> a2_nevent_L2TP;
      R__b >> a2_nevent_laser;
      R__b >> a1_nevent_L2T_Shower;
      R__b >> a1_nevent_L2T_Special;
      R__b >> a1_nevent_L2T_Pedestal;
      R__b >> a1_nevent_L2T_L1T;
      R__b >> a1_nevent_L2T_FC;
      R__b >> a2_nevent_L2T_Shower;
      R__b >> a2_nevent_L2T_Special;
      R__b >> a2_nevent_L2T_Pedestal;
      R__b >> a2_nevent_L2T_L1T;
      R__b >> a2_nevent_L2T_FC;
      R__b >> a1scl_nevent;
      R__b >> a2scl_nevent;
      R__b >> sc_nevent;
      R__b >> dipl_nevent;
      R__b >> diph_nevent;
      R__b >> dipvh_nevent;
      R__b >> a1_nevent_l1t;
      R__b >> a1_nevent_l1t_enable;
      R__b >> a2_nevent_l1t;
      R__b >> a2_nevent_l1t_enable;
      R__b >> a1_nevent_presetMB;
      R__b >> a1_nevent_presetSP;
      R__b >> a2_nevent_presetMB;
      R__b >> a2_nevent_presetSP;
      R__b >> a2_ncrcerror;
      R__b >> stable_beam;
      R__b >> crossingangle;
      R__b >> beam1_nbunches;
      R__b >> beam2_nbunches;
      R__b.ReadStaticArray((int*)beam1_bunches);
      R__b.ReadStaticArray((int*)beam2_bunches);
      R__b.ReadStaticArray((int*)beam1_tag);
      R__b.ReadStaticArray((int*)beam2_tag);
      R__b >> beam1_avintensity;
      R__b >> beam2_avintensity;
      R__b.ReadStaticArray((double*)beam1_avintensitypb);
      R__b.ReadStaticArray((double*)beam2_avintensitypb);
      R__b.ReadStaticArray((double*)beam_avluminositypb);
      R__b >> done_lumiscan;
      R__b.ReadStaticArray((char*)beam_comments);
      R__b >> analysis_quality;
      R__b >> analysis_cut_stime;
      R__b >> analysis_cut_etime;
      R__b >> analysis_a1_nevent;
      R__b >> analysis_a1_nevent_L2TA;
      R__b >> analysis_a2_nevent;
      R__b >> analysis_a2_nevent_L2TA;
      R__b.ReadStaticArray((char*)analysis_comments);
      R__b.CheckByteCount(R__s, R__c, LHCfRunInfo::IsA());
   } else {
      R__c = R__b.WriteVersion(LHCfRunInfo::IsA(), kTRUE);
      R__b << ioformat;
      R__b << run;
      R__b << start_time;
      R__b << end_time;
      R__b.WriteArray(general_comments, 512);
      R__b << a1_runmode;
      R__b << a2_runmode;
      R__b.WriteArray(LTPmode, 32);
      R__b.WriteArray(a1_LogicMode, 32);
      R__b.WriteArray(a2_LogicMode, 32);
      R__b.WriteArray(a1_V1495Load, 32);
      R__b.WriteArray(a2_V1495Load, 32);
      R__b.WriteArray(a1_V1495Setup, 32);
      R__b.WriteArray(a2_V1495Setup, 32);
      R__b.WriteArray(a1_GPIOLoad, 32);
      R__b.WriteArray(a2_GPIOLoad, 32);
      R__b.WriteArray(a1_GPIOSetup, 32);
      R__b.WriteArray(a2_GPIOSetup, 32);
      R__b.WriteArray(a1_Discriminator, 32);
      R__b.WriteArray(a2_Discriminator, 32);
      R__b << a1_scifidaq;
      R__b << a2_silicondaq;
      R__b.WriteArray(a1_PMTgain, 32);
      R__b.WriteArray(a2_PMTgain, 32);
      R__b.WriteArray(a1_scifigain, 32);
      R__b.WriteArray(a2_silicongain, 32);
      R__b.WriteArray(a1_position, 32);
      R__b.WriteArray(a2_position, 32);
      R__b << daq_beam1_scl_nbunch_offset;
      R__b << daq_beam2_scl_nbunch_offset;
      R__b.WriteArray(daq_comments, 512);
      R__b << nevent;
      R__b << a1_nevent;
      R__b << a1_nevent_L2TA;
      R__b << a1_nevent_L2TA_MB;
      R__b << a1_nevent_L2TA_SP;
      R__b << a1_nevent_L2TP;
      R__b << a1_nevent_laser;
      R__b << a2_nevent;
      R__b << a2_nevent_L2TA;
      R__b << a2_nevent_L2TA_MB;
      R__b << a2_nevent_L2TA_SP;
      R__b << a2_nevent_L2TP;
      R__b << a2_nevent_laser;
      R__b << a1_nevent_L2T_Shower;
      R__b << a1_nevent_L2T_Special;
      R__b << a1_nevent_L2T_Pedestal;
      R__b << a1_nevent_L2T_L1T;
      R__b << a1_nevent_L2T_FC;
      R__b << a2_nevent_L2T_Shower;
      R__b << a2_nevent_L2T_Special;
      R__b << a2_nevent_L2T_Pedestal;
      R__b << a2_nevent_L2T_L1T;
      R__b << a2_nevent_L2T_FC;
      R__b << a1scl_nevent;
      R__b << a2scl_nevent;
      R__b << sc_nevent;
      R__b << dipl_nevent;
      R__b << diph_nevent;
      R__b << dipvh_nevent;
      R__b << a1_nevent_l1t;
      R__b << a1_nevent_l1t_enable;
      R__b << a2_nevent_l1t;
      R__b << a2_nevent_l1t_enable;
      R__b << a1_nevent_presetMB;
      R__b << a1_nevent_presetSP;
      R__b << a2_nevent_presetMB;
      R__b << a2_nevent_presetSP;
      R__b << a2_ncrcerror;
      R__b << stable_beam;
      R__b << crossingangle;
      R__b << beam1_nbunches;
      R__b << beam2_nbunches;
      R__b.WriteArray(beam1_bunches, 200);
      R__b.WriteArray(beam2_bunches, 200);
      R__b.WriteArray(beam1_tag, 200);
      R__b.WriteArray(beam2_tag, 200);
      R__b << beam1_avintensity;
      R__b << beam2_avintensity;
      R__b.WriteArray(beam1_avintensitypb, 200);
      R__b.WriteArray(beam2_avintensitypb, 200);
      R__b.WriteArray(beam_avluminositypb, 200);
      R__b << done_lumiscan;
      R__b.WriteArray(beam_comments, 512);
      R__b << analysis_quality;
      R__b << analysis_cut_stime;
      R__b << analysis_cut_etime;
      R__b << analysis_a1_nevent;
      R__b << analysis_a1_nevent_L2TA;
      R__b << analysis_a2_nevent;
      R__b << analysis_a2_nevent_L2TA;
      R__b.WriteArray(analysis_comments, 512);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void LHCfRunInfo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class LHCfRunInfo.
      TClass *R__cl = ::LHCfRunInfo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ioformat", &ioformat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "start_time", &start_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "end_time", &end_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "general_comments[512]", general_comments);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_runmode", &a1_runmode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a2_runmode", &a2_runmode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LTPmode[32]", LTPmode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_LogicMode[32]", a1_LogicMode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a2_LogicMode[32]", a2_LogicMode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_V1495Load[32]", a1_V1495Load);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a2_V1495Load[32]", a2_V1495Load);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_V1495Setup[32]", a1_V1495Setup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a2_V1495Setup[32]", a2_V1495Setup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_GPIOLoad[32]", a1_GPIOLoad);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a2_GPIOLoad[32]", a2_GPIOLoad);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_GPIOSetup[32]", a1_GPIOSetup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a2_GPIOSetup[32]", a2_GPIOSetup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_Discriminator[32]", a1_Discriminator);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a2_Discriminator[32]", a2_Discriminator);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_scifidaq", &a1_scifidaq);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a2_silicondaq", &a2_silicondaq);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_PMTgain[32]", a1_PMTgain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a2_PMTgain[32]", a2_PMTgain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_scifigain[32]", a1_scifigain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a2_silicongain[32]", a2_silicongain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_position[32]", a1_position);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a2_position[32]", a2_position);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "daq_beam1_scl_nbunch_offset", &daq_beam1_scl_nbunch_offset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "daq_beam2_scl_nbunch_offset", &daq_beam2_scl_nbunch_offset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "daq_comments[512]", daq_comments);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nevent", &nevent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_nevent", &a1_nevent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_nevent_L2TA", &a1_nevent_L2TA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_nevent_L2TA_MB", &a1_nevent_L2TA_MB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_nevent_L2TA_SP", &a1_nevent_L2TA_SP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_nevent_L2TP", &a1_nevent_L2TP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_nevent_laser", &a1_nevent_laser);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a2_nevent", &a2_nevent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a2_nevent_L2TA", &a2_nevent_L2TA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a2_nevent_L2TA_MB", &a2_nevent_L2TA_MB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a2_nevent_L2TA_SP", &a2_nevent_L2TA_SP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a2_nevent_L2TP", &a2_nevent_L2TP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a2_nevent_laser", &a2_nevent_laser);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_nevent_L2T_Shower", &a1_nevent_L2T_Shower);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_nevent_L2T_Special", &a1_nevent_L2T_Special);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_nevent_L2T_Pedestal", &a1_nevent_L2T_Pedestal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_nevent_L2T_L1T", &a1_nevent_L2T_L1T);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_nevent_L2T_FC", &a1_nevent_L2T_FC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a2_nevent_L2T_Shower", &a2_nevent_L2T_Shower);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a2_nevent_L2T_Special", &a2_nevent_L2T_Special);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a2_nevent_L2T_Pedestal", &a2_nevent_L2T_Pedestal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a2_nevent_L2T_L1T", &a2_nevent_L2T_L1T);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a2_nevent_L2T_FC", &a2_nevent_L2T_FC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1scl_nevent", &a1scl_nevent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a2scl_nevent", &a2scl_nevent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sc_nevent", &sc_nevent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dipl_nevent", &dipl_nevent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "diph_nevent", &diph_nevent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dipvh_nevent", &dipvh_nevent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_nevent_l1t", &a1_nevent_l1t);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_nevent_l1t_enable", &a1_nevent_l1t_enable);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a2_nevent_l1t", &a2_nevent_l1t);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a2_nevent_l1t_enable", &a2_nevent_l1t_enable);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_nevent_presetMB", &a1_nevent_presetMB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_nevent_presetSP", &a1_nevent_presetSP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a2_nevent_presetMB", &a2_nevent_presetMB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a2_nevent_presetSP", &a2_nevent_presetSP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a2_ncrcerror", &a2_ncrcerror);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stable_beam", &stable_beam);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "crossingangle", &crossingangle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beam1_nbunches", &beam1_nbunches);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beam2_nbunches", &beam2_nbunches);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beam1_bunches[200]", beam1_bunches);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beam2_bunches[200]", beam2_bunches);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beam1_tag[200]", beam1_tag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beam2_tag[200]", beam2_tag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beam1_avintensity", &beam1_avintensity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beam2_avintensity", &beam2_avintensity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beam1_avintensitypb[200]", beam1_avintensitypb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beam2_avintensitypb[200]", beam2_avintensitypb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beam_avluminositypb[200]", beam_avluminositypb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "done_lumiscan", &done_lumiscan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beam_comments[512]", beam_comments);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "analysis_quality", &analysis_quality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "analysis_cut_stime", &analysis_cut_stime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "analysis_cut_etime", &analysis_cut_etime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "analysis_a1_nevent", &analysis_a1_nevent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "analysis_a1_nevent_L2TA", &analysis_a1_nevent_L2TA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "analysis_a2_nevent", &analysis_a2_nevent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "analysis_a2_nevent_L2TA", &analysis_a2_nevent_L2TA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "analysis_comments[512]", analysis_comments);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_LHCfRunInfo(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::LHCfRunInfo : new ::LHCfRunInfo;
   }
   static void *newArray_LHCfRunInfo(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::LHCfRunInfo[nElements] : new ::LHCfRunInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_LHCfRunInfo(void *p) {
      delete ((::LHCfRunInfo*)p);
   }
   static void deleteArray_LHCfRunInfo(void *p) {
      delete [] ((::LHCfRunInfo*)p);
   }
   static void destruct_LHCfRunInfo(void *p) {
      typedef ::LHCfRunInfo current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_LHCfRunInfo(TBuffer &buf, void *obj) {
      ((::LHCfRunInfo*)obj)->::LHCfRunInfo::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::LHCfRunInfo

//______________________________________________________________________________
void LHCfRunInfoTable::Streamer(TBuffer &R__b)
{
   // Stream an object of class LHCfRunInfoTable.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> ioformat;
      R__b >> ninfo;
      R__b >> iinfo;
      R__b >> irun;
      R__b.CheckByteCount(R__s, R__c, LHCfRunInfoTable::IsA());
   } else {
      R__c = R__b.WriteVersion(LHCfRunInfoTable::IsA(), kTRUE);
      R__b << ioformat;
      R__b << ninfo;
      R__b << iinfo;
      R__b << irun;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void LHCfRunInfoTable::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class LHCfRunInfoTable.
      TClass *R__cl = ::LHCfRunInfoTable::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ioformat", &ioformat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ninfo", &ninfo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iinfo", &iinfo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "irun", &irun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runinfo", (void*)&runinfo);
      R__insp.InspectMember("vector<LHCfRunInfo*>", (void*)&runinfo, "runinfo.", true);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_LHCfRunInfoTable(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::LHCfRunInfoTable : new ::LHCfRunInfoTable;
   }
   static void *newArray_LHCfRunInfoTable(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::LHCfRunInfoTable[nElements] : new ::LHCfRunInfoTable[nElements];
   }
   // Wrapper around operator delete
   static void delete_LHCfRunInfoTable(void *p) {
      delete ((::LHCfRunInfoTable*)p);
   }
   static void deleteArray_LHCfRunInfoTable(void *p) {
      delete [] ((::LHCfRunInfoTable*)p);
   }
   static void destruct_LHCfRunInfoTable(void *p) {
      typedef ::LHCfRunInfoTable current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_LHCfRunInfoTable(TBuffer &buf, void *obj) {
      ((::LHCfRunInfoTable*)obj)->::LHCfRunInfoTable::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::LHCfRunInfoTable

//______________________________________________________________________________
void PMTGain::Streamer(TBuffer &R__b)
{
   // Stream an object of class PMTGain.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b.ReadStaticArray((char*)tablefile);
      R__b.ReadStaticArray((char*)format);
      R__b >> version;
      R__b >> type;
      R__b >> date;
      R__b >> nhv;
      R__b.ReadStaticArray((double*)hv);
      R__b.ReadStaticArray((char*)sn);
      R__b.ReadStaticArray((int*)caln);
      R__b.ReadStaticArray((double*)gain);
      R__b.CheckByteCount(R__s, R__c, PMTGain::IsA());
   } else {
      R__c = R__b.WriteVersion(PMTGain::IsA(), kTRUE);
      R__b.WriteArray(tablefile, 256);
      R__b.WriteArray(format, 100);
      R__b << version;
      R__b << type;
      R__b << date;
      R__b << nhv;
      R__b.WriteArray(hv, 101);
      R__b.WriteArray((char*)sn, 720);
      R__b.WriteArray((int*)caln, 72);
      R__b.WriteArray((double*)gain, 7272);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void PMTGain::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class PMTGain.
      TClass *R__cl = ::PMTGain::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tablefile[256]", tablefile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "format[100]", format);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "version", &version);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "type", &type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "date", &date);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nhv", &nhv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hv[101]", hv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sn[2][2][18][10]", sn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "caln[2][2][18]", caln);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gain[2][2][18][101]", gain);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_PMTGain(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::PMTGain : new ::PMTGain;
   }
   static void *newArray_PMTGain(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::PMTGain[nElements] : new ::PMTGain[nElements];
   }
   // Wrapper around operator delete
   static void delete_PMTGain(void *p) {
      delete ((::PMTGain*)p);
   }
   static void deleteArray_PMTGain(void *p) {
      delete [] ((::PMTGain*)p);
   }
   static void destruct_PMTGain(void *p) {
      typedef ::PMTGain current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_PMTGain(TBuffer &buf, void *obj) {
      ((::PMTGain*)obj)->::PMTGain::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::PMTGain

//______________________________________________________________________________
void PMTSatu::Streamer(TBuffer &R__b)
{
   // Stream an object of class PMTSatu.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b.StreamObject(&(pmttable),typeid(PMTSatu::PMTTable));
      R__b.ReadStaticArray((double*)spoint);
      R__b.ReadStaticArray((double*)slope);
      R__b.ReadStaticArray((double*)coef2nd);
      R__b.ReadStaticArray((char*)tablepath);
      R__b.ReadStaticArray((char*)pmttablename);
      R__b.CheckByteCount(R__s, R__c, PMTSatu::IsA());
   } else {
      R__c = R__b.WriteVersion(PMTSatu::IsA(), kTRUE);
      R__b.StreamObject(&(pmttable),typeid(PMTSatu::PMTTable));
      R__b.WriteArray((double*)spoint, 704);
      R__b.WriteArray((double*)slope, 704);
      R__b.WriteArray((double*)coef2nd, 704);
      R__b.WriteArray(tablepath, 100);
      R__b.WriteArray(pmttablename, 40);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void PMTSatu::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class PMTSatu.
      TClass *R__cl = ::PMTSatu::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pmttable", (void*)&pmttable);
      R__insp.InspectMember("PMTSatu::PMTTable", (void*)&pmttable, "pmttable.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "spoint[2][2][16][11]", spoint);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "slope[2][2][16][11]", slope);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "coef2nd[2][2][16][11]", coef2nd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tablepath[100]", tablepath);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pmttablename[40]", pmttablename);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_PMTSatu(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::PMTSatu : new ::PMTSatu;
   }
   static void *newArray_PMTSatu(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::PMTSatu[nElements] : new ::PMTSatu[nElements];
   }
   // Wrapper around operator delete
   static void delete_PMTSatu(void *p) {
      delete ((::PMTSatu*)p);
   }
   static void deleteArray_PMTSatu(void *p) {
      delete [] ((::PMTSatu*)p);
   }
   static void destruct_PMTSatu(void *p) {
      typedef ::PMTSatu current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_PMTSatu(TBuffer &buf, void *obj) {
      ((::PMTSatu*)obj)->::PMTSatu::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::PMTSatu

//______________________________________________________________________________
void PMTSatuCorrection::Streamer(TBuffer &R__b)
{
   // Stream an object of class PMTSatuCorrection.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      PMTSatu::Streamer(R__b);
      R__b.ReadStaticArray((int*)hvtable);
      R__b.CheckByteCount(R__s, R__c, PMTSatuCorrection::IsA());
   } else {
      R__c = R__b.WriteVersion(PMTSatuCorrection::IsA(), kTRUE);
      PMTSatu::Streamer(R__b);
      R__b.WriteArray((int*)hvtable, 64);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void PMTSatuCorrection::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class PMTSatuCorrection.
      TClass *R__cl = ::PMTSatuCorrection::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hvtable[2][2][16]", hvtable);
      PMTSatu::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_PMTSatuCorrection(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::PMTSatuCorrection : new ::PMTSatuCorrection;
   }
   static void *newArray_PMTSatuCorrection(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::PMTSatuCorrection[nElements] : new ::PMTSatuCorrection[nElements];
   }
   // Wrapper around operator delete
   static void delete_PMTSatuCorrection(void *p) {
      delete ((::PMTSatuCorrection*)p);
   }
   static void deleteArray_PMTSatuCorrection(void *p) {
      delete [] ((::PMTSatuCorrection*)p);
   }
   static void destruct_PMTSatuCorrection(void *p) {
      typedef ::PMTSatuCorrection current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_PMTSatuCorrection(TBuffer &buf, void *obj) {
      ((::PMTSatuCorrection*)obj)->::PMTSatuCorrection::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::PMTSatuCorrection

//______________________________________________________________________________
void ParticleID01::Streamer(TBuffer &R__b)
{
   // Stream an object of class ParticleID01.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b.ReadStaticArray((double*)calsum);
      R__b.ReadStaticArray((double*)L);
      R__b.CheckByteCount(R__s, R__c, ParticleID01::IsA());
   } else {
      R__c = R__b.WriteVersion(ParticleID01::IsA(), kTRUE);
      R__b.WriteArray(calsum, 2);
      R__b.WriteArray((double*)L, 4);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void ParticleID01::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ParticleID01.
      TClass *R__cl = ::ParticleID01::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "calsum[2]", calsum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "L[2][2]", L);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_ParticleID01(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ParticleID01 : new ::ParticleID01;
   }
   static void *newArray_ParticleID01(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ParticleID01[nElements] : new ::ParticleID01[nElements];
   }
   // Wrapper around operator delete
   static void delete_ParticleID01(void *p) {
      delete ((::ParticleID01*)p);
   }
   static void deleteArray_ParticleID01(void *p) {
      delete [] ((::ParticleID01*)p);
   }
   static void destruct_ParticleID01(void *p) {
      typedef ::ParticleID01 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_ParticleID01(TBuffer &buf, void *obj) {
      ((::ParticleID01*)obj)->::ParticleID01::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::ParticleID01

//______________________________________________________________________________
void ParticleID02::Streamer(TBuffer &R__b)
{
   // Stream an object of class ParticleID02.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      ParticleID01::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, ParticleID02::IsA());
   } else {
      R__c = R__b.WriteVersion(ParticleID02::IsA(), kTRUE);
      ParticleID01::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void ParticleID02::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ParticleID02.
      TClass *R__cl = ::ParticleID02::IsA();
      if (R__cl || R__insp.IsA()) { }
      ParticleID01::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_ParticleID02(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ParticleID02 : new ::ParticleID02;
   }
   static void *newArray_ParticleID02(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ParticleID02[nElements] : new ::ParticleID02[nElements];
   }
   // Wrapper around operator delete
   static void delete_ParticleID02(void *p) {
      delete ((::ParticleID02*)p);
   }
   static void deleteArray_ParticleID02(void *p) {
      delete [] ((::ParticleID02*)p);
   }
   static void destruct_ParticleID02(void *p) {
      typedef ::ParticleID02 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_ParticleID02(TBuffer &buf, void *obj) {
      ((::ParticleID02*)obj)->::ParticleID02::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::ParticleID02

//______________________________________________________________________________
void SciFiPosCalculation::Streamer(TBuffer &R__b)
{
   // Stream an object of class SciFiPosCalculation.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b.ReadStaticArray((double*)hosei0);
      R__b.ReadStaticArray((double*)hosei1);
      R__b.ReadStaticArray((double*)hosei_1MIP0);
      R__b.ReadStaticArray((double*)hosei_1MIP1);
      R__b.ReadStaticArray((double*)scifikai0);
      R__b.ReadStaticArray((double*)scifikai1);
      R__b.ReadStaticArray((double*)sumscifi0);
      R__b.ReadStaticArray((double*)sumscifi1);
      R__b.ReadStaticArray((double*)max0);
      R__b.ReadStaticArray((double*)max1);
      R__b.ReadStaticArray((int*)saidai0);
      R__b.ReadStaticArray((int*)saidai1);
      R__b.ReadStaticArray((double*)goukei0);
      R__b.ReadStaticArray((double*)goukei1);
      R__b.ReadStaticArray((double*)goukei0_1);
      R__b.ReadStaticArray((double*)goukei1_1);
      R__b.ReadStaticArray((double*)zyuusinn0);
      R__b.ReadStaticArray((double*)zyuusinn1);
      R__b.CheckByteCount(R__s, R__c, SciFiPosCalculation::IsA());
   } else {
      R__c = R__b.WriteVersion(SciFiPosCalculation::IsA(), kTRUE);
      R__b.WriteArray((double*)hosei0, 160);
      R__b.WriteArray((double*)hosei1, 320);
      R__b.WriteArray((double*)hosei_1MIP0, 160);
      R__b.WriteArray((double*)hosei_1MIP1, 320);
      R__b.WriteArray((double*)scifikai0, 160);
      R__b.WriteArray((double*)scifikai1, 320);
      R__b.WriteArray((double*)sumscifi0, 8);
      R__b.WriteArray((double*)sumscifi1, 8);
      R__b.WriteArray((double*)max0, 8);
      R__b.WriteArray((double*)max1, 8);
      R__b.WriteArray((int*)saidai0, 8);
      R__b.WriteArray((int*)saidai1, 8);
      R__b.WriteArray((double*)goukei0, 8);
      R__b.WriteArray((double*)goukei1, 8);
      R__b.WriteArray((double*)goukei0_1, 8);
      R__b.WriteArray((double*)goukei1_1, 8);
      R__b.WriteArray((double*)zyuusinn0, 8);
      R__b.WriteArray((double*)zyuusinn1, 8);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void SciFiPosCalculation::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class SciFiPosCalculation.
      TClass *R__cl = ::SciFiPosCalculation::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hosei0[4][2][20]", hosei0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hosei1[4][2][40]", hosei1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hosei_1MIP0[4][2][20]", hosei_1MIP0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hosei_1MIP1[4][2][40]", hosei_1MIP1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scifikai0[4][2][20]", scifikai0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scifikai1[4][2][40]", scifikai1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sumscifi0[4][2]", sumscifi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sumscifi1[4][2]", sumscifi1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "max0[4][2]", max0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "max1[4][2]", max1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "saidai0[4][2]", saidai0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "saidai1[4][2]", saidai1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "goukei0[4][2]", goukei0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "goukei1[4][2]", goukei1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "goukei0_1[4][2]", goukei0_1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "goukei1_1[4][2]", goukei1_1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zyuusinn0[4][2]", zyuusinn0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zyuusinn1[4][2]", zyuusinn1);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_SciFiPosCalculation(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::SciFiPosCalculation : new ::SciFiPosCalculation;
   }
   static void *newArray_SciFiPosCalculation(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::SciFiPosCalculation[nElements] : new ::SciFiPosCalculation[nElements];
   }
   // Wrapper around operator delete
   static void delete_SciFiPosCalculation(void *p) {
      delete ((::SciFiPosCalculation*)p);
   }
   static void deleteArray_SciFiPosCalculation(void *p) {
      delete [] ((::SciFiPosCalculation*)p);
   }
   static void destruct_SciFiPosCalculation(void *p) {
      typedef ::SciFiPosCalculation current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_SciFiPosCalculation(TBuffer &buf, void *obj) {
      ((::SciFiPosCalculation*)obj)->::SciFiPosCalculation::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::SciFiPosCalculation

//______________________________________________________________________________
void ScifiGain::Streamer(TBuffer &R__b)
{
   // Stream an object of class ScifiGain.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b.ReadStaticArray((char*)tablefile);
      R__b.ReadStaticArray((char*)format);
      R__b >> version;
      R__b >> type;
      R__b >> nhv;
      R__b.ReadStaticArray((int*)checkhv);
      R__b.ReadStaticArray((double*)gain);
      R__b.CheckByteCount(R__s, R__c, ScifiGain::IsA());
   } else {
      R__c = R__b.WriteVersion(ScifiGain::IsA(), kTRUE);
      R__b.WriteArray(tablefile, 256);
      R__b.WriteArray(format, 100);
      R__b << version;
      R__b << type;
      R__b << nhv;
      R__b.WriteArray(checkhv, 5);
      R__b.WriteArray((double*)gain, 3200);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void ScifiGain::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ScifiGain.
      TClass *R__cl = ::ScifiGain::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tablefile[256]", tablefile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "format[100]", format);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "version", &version);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "type", &type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nhv", &nhv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "checkhv[5]", checkhv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gain[2][4][2][40][5]", gain);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_ScifiGain(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ScifiGain : new ::ScifiGain;
   }
   static void *newArray_ScifiGain(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ScifiGain[nElements] : new ::ScifiGain[nElements];
   }
   // Wrapper around operator delete
   static void delete_ScifiGain(void *p) {
      delete ((::ScifiGain*)p);
   }
   static void deleteArray_ScifiGain(void *p) {
      delete [] ((::ScifiGain*)p);
   }
   static void destruct_ScifiGain(void *p) {
      typedef ::ScifiGain current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_ScifiGain(TBuffer &buf, void *obj) {
      ((::ScifiGain*)obj)->::ScifiGain::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::ScifiGain

//______________________________________________________________________________
void ScifiIncidentPosition02::Streamer(TBuffer &R__b)
{
   // Stream an object of class ScifiIncidentPosition02.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b.ReadStaticArray((double*)pos);
      R__b.ReadStaticArray((double*)qparam);
      R__b.ReadStaticArray((double*)pede);
      R__b >> scifipos;
      R__b.CheckByteCount(R__s, R__c, ScifiIncidentPosition02::IsA());
   } else {
      R__c = R__b.WriteVersion(ScifiIncidentPosition02::IsA(), kTRUE);
      R__b.WriteArray((double*)pos, 16);
      R__b.WriteArray((double*)qparam, 96);
      R__b.WriteArray((double*)pede, 16);
      R__b << scifipos;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void ScifiIncidentPosition02::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ScifiIncidentPosition02.
      TClass *R__cl = ::ScifiIncidentPosition02::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pos[2][4][2]", pos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "qparam[2][4][2][6]", qparam);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pede[2][4][2]", pede);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*scifipos", &scifipos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*f[2][4][2]", &f);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ge[2][4][2]", &ge);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_ScifiIncidentPosition02(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ScifiIncidentPosition02 : new ::ScifiIncidentPosition02;
   }
   static void *newArray_ScifiIncidentPosition02(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ScifiIncidentPosition02[nElements] : new ::ScifiIncidentPosition02[nElements];
   }
   // Wrapper around operator delete
   static void delete_ScifiIncidentPosition02(void *p) {
      delete ((::ScifiIncidentPosition02*)p);
   }
   static void deleteArray_ScifiIncidentPosition02(void *p) {
      delete [] ((::ScifiIncidentPosition02*)p);
   }
   static void destruct_ScifiIncidentPosition02(void *p) {
      typedef ::ScifiIncidentPosition02 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_ScifiIncidentPosition02(TBuffer &buf, void *obj) {
      ((::ScifiIncidentPosition02*)obj)->::ScifiIncidentPosition02::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::ScifiIncidentPosition02

//______________________________________________________________________________
void ScifiPosTable::Streamer(TBuffer &R__b)
{
   // Stream an object of class ScifiPosTable.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b.ReadStaticArray((char*)tablefile);
      R__b.ReadStaticArray((char*)tableformat);
      R__b >> tableversion;
      R__b >> tabletype;
      R__b.ReadStaticArray((int*)tower);
      R__b.ReadStaticArray((int*)layer);
      R__b.ReadStaticArray((int*)xy);
      R__b.ReadStaticArray((int*)pos);
      R__b.ReadStaticArray((int*)mapmt);
      R__b.ReadStaticArray((int*)ch);
      R__b.CheckByteCount(R__s, R__c, ScifiPosTable::IsA());
   } else {
      R__c = R__b.WriteVersion(ScifiPosTable::IsA(), kTRUE);
      R__b.WriteArray(tablefile, 256);
      R__b.WriteArray(tableformat, 256);
      R__b << tableversion;
      R__b << tabletype;
      R__b.WriteArray(tower, 512);
      R__b.WriteArray(layer, 512);
      R__b.WriteArray(xy, 512);
      R__b.WriteArray(pos, 512);
      R__b.WriteArray(mapmt, 512);
      R__b.WriteArray((int*)ch, 640);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void ScifiPosTable::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ScifiPosTable.
      TClass *R__cl = ::ScifiPosTable::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tablefile[256]", tablefile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tableformat[256]", tableformat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tableversion", &tableversion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tabletype", &tabletype);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tower[512]", tower);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "layer[512]", layer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xy[512]", xy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pos[512]", pos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mapmt[512]", mapmt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ch[2][4][2][40]", ch);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_ScifiPosTable(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ScifiPosTable : new ::ScifiPosTable;
   }
   static void *newArray_ScifiPosTable(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ScifiPosTable[nElements] : new ::ScifiPosTable[nElements];
   }
   // Wrapper around operator delete
   static void delete_ScifiPosTable(void *p) {
      delete ((::ScifiPosTable*)p);
   }
   static void deleteArray_ScifiPosTable(void *p) {
      delete [] ((::ScifiPosTable*)p);
   }
   static void destruct_ScifiPosTable(void *p) {
      typedef ::ScifiPosTable current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_ScifiPosTable(TBuffer &buf, void *obj) {
      ((::ScifiPosTable*)obj)->::ScifiPosTable::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::ScifiPosTable

//______________________________________________________________________________
void ScintiPosDependence::Streamer(TBuffer &R__b)
{
   // Stream an object of class ScintiPosDependence.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b.ReadStaticArray((char*)file);
      R__b.ReadStaticArray((char*)format_type);
      R__b >> format;
      R__b >> version;
      R__b.ReadStaticArray((char*)date);
      R__b.ReadStaticArray((char*)person);
      R__b.ReadStaticArray((double*)C);
      R__b.CheckByteCount(R__s, R__c, ScintiPosDependence::IsA());
   } else {
      R__c = R__b.WriteVersion(ScintiPosDependence::IsA(), kTRUE);
      R__b.WriteArray(file, 256);
      R__b.WriteArray(format_type, 256);
      R__b << format;
      R__b << version;
      R__b.WriteArray(date, 256);
      R__b.WriteArray(person, 256);
      R__b.WriteArray((double*)C, 640);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void ScintiPosDependence::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ScintiPosDependence.
      TClass *R__cl = ::ScintiPosDependence::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "file[256]", file);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "format_type[256]", format_type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "format", &format);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "version", &version);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "date[256]", date);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "person[256]", person);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "C[4][16][10]", C);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_ScintiPosDependence(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ScintiPosDependence : new ::ScintiPosDependence;
   }
   static void *newArray_ScintiPosDependence(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ScintiPosDependence[nElements] : new ::ScintiPosDependence[nElements];
   }
   // Wrapper around operator delete
   static void delete_ScintiPosDependence(void *p) {
      delete ((::ScintiPosDependence*)p);
   }
   static void deleteArray_ScintiPosDependence(void *p) {
      delete [] ((::ScintiPosDependence*)p);
   }
   static void destruct_ScintiPosDependence(void *p) {
      typedef ::ScintiPosDependence current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_ScintiPosDependence(TBuffer &buf, void *obj) {
      ((::ScintiPosDependence*)obj)->::ScintiPosDependence::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::ScintiPosDependence

//______________________________________________________________________________
void SiliconGain::Streamer(TBuffer &R__b)
{
   // Stream an object of class SiliconGain.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b.ReadStaticArray((char*)tablefile);
      R__b.ReadStaticArray((char*)format);
      R__b >> version;
      R__b >> type;
      R__b.CheckByteCount(R__s, R__c, SiliconGain::IsA());
   } else {
      R__c = R__b.WriteVersion(SiliconGain::IsA(), kTRUE);
      R__b.WriteArray(tablefile, 256);
      R__b.WriteArray(format, 100);
      R__b << version;
      R__b << type;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void SiliconGain::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class SiliconGain.
      TClass *R__cl = ::SiliconGain::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tablefile[256]", tablefile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "format[100]", format);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "version", &version);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "type", &type);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_SiliconGain(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::SiliconGain : new ::SiliconGain;
   }
   static void *newArray_SiliconGain(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::SiliconGain[nElements] : new ::SiliconGain[nElements];
   }
   // Wrapper around operator delete
   static void delete_SiliconGain(void *p) {
      delete ((::SiliconGain*)p);
   }
   static void deleteArray_SiliconGain(void *p) {
      delete [] ((::SiliconGain*)p);
   }
   static void destruct_SiliconGain(void *p) {
      typedef ::SiliconGain current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_SiliconGain(TBuffer &buf, void *obj) {
      ((::SiliconGain*)obj)->::SiliconGain::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::SiliconGain

//______________________________________________________________________________
void SPSAdamoPedeSubtract::Streamer(TBuffer &R__b)
{
   // Stream an object of class SPSAdamoPedeSubtract.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> nevent;
      pedeaccum.Streamer(R__b);
      pedeaccum2.Streamer(R__b);
      pedeaccum_sub.Streamer(R__b);
      pedeaccum_sub2.Streamer(R__b);
      pedestal.Streamer(R__b);
      pedesigma.Streamer(R__b);
      pedestal2.Streamer(R__b);
      pedesigma2.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, SPSAdamoPedeSubtract::IsA());
   } else {
      R__c = R__b.WriteVersion(SPSAdamoPedeSubtract::IsA(), kTRUE);
      R__b << nevent;
      pedeaccum.Streamer(R__b);
      pedeaccum2.Streamer(R__b);
      pedeaccum_sub.Streamer(R__b);
      pedeaccum_sub2.Streamer(R__b);
      pedestal.Streamer(R__b);
      pedesigma.Streamer(R__b);
      pedestal2.Streamer(R__b);
      pedesigma2.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void SPSAdamoPedeSubtract::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class SPSAdamoPedeSubtract.
      TClass *R__cl = ::SPSAdamoPedeSubtract::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nevent", &nevent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pedeaccum", &pedeaccum);
      R__insp.InspectMember(pedeaccum, "pedeaccum.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pedeaccum2", &pedeaccum2);
      R__insp.InspectMember(pedeaccum2, "pedeaccum2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pedeaccum_sub", &pedeaccum_sub);
      R__insp.InspectMember(pedeaccum_sub, "pedeaccum_sub.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pedeaccum_sub2", &pedeaccum_sub2);
      R__insp.InspectMember(pedeaccum_sub2, "pedeaccum_sub2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pedestal", &pedestal);
      R__insp.InspectMember(pedestal, "pedestal.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pedesigma", &pedesigma);
      R__insp.InspectMember(pedesigma, "pedesigma.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pedestal2", &pedestal2);
      R__insp.InspectMember(pedestal2, "pedestal2.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pedesigma2", &pedesigma2);
      R__insp.InspectMember(pedesigma2, "pedesigma2.");
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_SPSAdamoPedeSubtract(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::SPSAdamoPedeSubtract : new ::SPSAdamoPedeSubtract;
   }
   static void *newArray_SPSAdamoPedeSubtract(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::SPSAdamoPedeSubtract[nElements] : new ::SPSAdamoPedeSubtract[nElements];
   }
   // Wrapper around operator delete
   static void delete_SPSAdamoPedeSubtract(void *p) {
      delete ((::SPSAdamoPedeSubtract*)p);
   }
   static void deleteArray_SPSAdamoPedeSubtract(void *p) {
      delete [] ((::SPSAdamoPedeSubtract*)p);
   }
   static void destruct_SPSAdamoPedeSubtract(void *p) {
      typedef ::SPSAdamoPedeSubtract current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_SPSAdamoPedeSubtract(TBuffer &buf, void *obj) {
      ((::SPSAdamoPedeSubtract*)obj)->::SPSAdamoPedeSubtract::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::SPSAdamoPedeSubtract

//______________________________________________________________________________
void TransitionFit::Streamer(TBuffer &R__b)
{
   // Stream an object of class TransitionFit.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b.ReadStaticArray((char*)name);
      R__b.ReadStaticArray((char*)title);
      R__b >> dir;
      int R__i;
      for (R__i = 0; R__i < 2; R__i++)
         R__b >> g[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b >> f[R__i];
      R__b.ReadStaticArray((double*)depth);
      R__b.ReadStaticArray((double*)pede);
      R__b.CheckByteCount(R__s, R__c, TransitionFit::IsA());
   } else {
      R__c = R__b.WriteVersion(TransitionFit::IsA(), kTRUE);
      R__b.WriteArray(name, 256);
      R__b.WriteArray(title, 256);
      R__b << dir;
      int R__i;
      for (R__i = 0; R__i < 2; R__i++)
         R__b << g[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b << f[R__i];
      R__b.WriteArray(depth, 16);
      R__b.WriteArray(pede, 2);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TransitionFit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TransitionFit.
      TClass *R__cl = ::TransitionFit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "name[256]", name);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "title[256]", title);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dir", &dir);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*g[2]", &g);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*f[2]", &f);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "depth[16]", depth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pede[2]", pede);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_TransitionFit(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TransitionFit : new ::TransitionFit;
   }
   static void *newArray_TransitionFit(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TransitionFit[nElements] : new ::TransitionFit[nElements];
   }
   // Wrapper around operator delete
   static void delete_TransitionFit(void *p) {
      delete ((::TransitionFit*)p);
   }
   static void deleteArray_TransitionFit(void *p) {
      delete [] ((::TransitionFit*)p);
   }
   static void destruct_TransitionFit(void *p) {
      typedef ::TransitionFit current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TransitionFit(TBuffer &buf, void *obj) {
      ((::TransitionFit*)obj)->::TransitionFit::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::TransitionFit

//______________________________________________________________________________
void RHICfRunInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class RHICfRunInfo.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> ioformat;
      R__b >> run;
      R__b >> start_time;
      R__b >> end_time;
      R__b.ReadStaticArray((char*)general_comments);
      R__b >> a1_runmode;
      R__b.ReadStaticArray((char*)a1_LogicMode);
      R__b.ReadStaticArray((char*)a1_GPIOLoad);
      R__b.ReadStaticArray((char*)a1_GPIOLoadFiles);
      R__b.ReadStaticArray((char*)a1_GPIOSetup);
      R__b.ReadStaticArray((char*)a1_Discriminator);
      R__b >> a1_scifidaq;
      R__b >> common_operation;
      R__b.ReadStaticArray((char*)a1_PMTgain);
      R__b.ReadStaticArray((char*)a1_scifigain);
      R__b.ReadStaticArray((char*)a1_position);
      R__b >> daq_beam1_scl_nbunch_offset;
      R__b >> daq_beam2_scl_nbunch_offset;
      R__b.ReadStaticArray((char*)daq_comments);
      R__b >> nevent;
      R__b >> a1_nevent;
      R__b >> a1_nevent_L3T_Shower;
      R__b >> a1_nevent_L3T_Special1;
      R__b >> a1_nevent_L3T_Special2;
      R__b >> a1_nevent_L3T_Pedestal;
      R__b >> a1_nevent_L3T_L1T;
      R__b >> a1_nevent_L3T_Shower_TS;
      R__b >> a1_nevent_L3T_Shower_TL;
      R__b >> a1_nevent_L3T_STAR;
      R__b >> a1_nevent_STAR_Only;
      R__b >> a1scl_nevent;
      R__b >> sc_nevent;
      R__b >> a1_nevent_l1t;
      R__b >> a1_nevent_l1t_enable;
      R__b >> a1_nevent_presetMB;
      R__b >> a1_nevent_presetSP;
      R__b >> stable_beam;
      R__b >> crossingangle;
      R__b >> beam1_nbunches;
      R__b >> beam2_nbunches;
      R__b.ReadStaticArray((int*)beam1_bunches);
      R__b.ReadStaticArray((int*)beam2_bunches);
      R__b.ReadStaticArray((int*)beam1_tag);
      R__b.ReadStaticArray((int*)beam2_tag);
      R__b >> beam1_avintensity;
      R__b >> beam2_avintensity;
      R__b.ReadStaticArray((double*)beam1_avintensitypb);
      R__b.ReadStaticArray((double*)beam2_avintensitypb);
      R__b.ReadStaticArray((double*)beam_avluminositypb);
      R__b >> done_lumiscan;
      R__b.ReadStaticArray((char*)beam_comments);
      R__b >> analysis_quality;
      R__b >> analysis_cut_stime;
      R__b >> analysis_cut_etime;
      R__b >> analysis_a1_nevent;
      R__b.ReadStaticArray((char*)analysis_comments);
      R__b.CheckByteCount(R__s, R__c, RHICfRunInfo::IsA());
   } else {
      R__c = R__b.WriteVersion(RHICfRunInfo::IsA(), kTRUE);
      R__b << ioformat;
      R__b << run;
      R__b << start_time;
      R__b << end_time;
      R__b.WriteArray(general_comments, 512);
      R__b << a1_runmode;
      R__b.WriteArray(a1_LogicMode, 256);
      R__b.WriteArray(a1_GPIOLoad, 256);
      R__b.WriteArray((char*)a1_GPIOLoadFiles, 512);
      R__b.WriteArray(a1_GPIOSetup, 256);
      R__b.WriteArray(a1_Discriminator, 256);
      R__b << a1_scifidaq;
      R__b << common_operation;
      R__b.WriteArray(a1_PMTgain, 32);
      R__b.WriteArray(a1_scifigain, 32);
      R__b.WriteArray(a1_position, 32);
      R__b << daq_beam1_scl_nbunch_offset;
      R__b << daq_beam2_scl_nbunch_offset;
      R__b.WriteArray(daq_comments, 512);
      R__b << nevent;
      R__b << a1_nevent;
      R__b << a1_nevent_L3T_Shower;
      R__b << a1_nevent_L3T_Special1;
      R__b << a1_nevent_L3T_Special2;
      R__b << a1_nevent_L3T_Pedestal;
      R__b << a1_nevent_L3T_L1T;
      R__b << a1_nevent_L3T_Shower_TS;
      R__b << a1_nevent_L3T_Shower_TL;
      R__b << a1_nevent_L3T_STAR;
      R__b << a1_nevent_STAR_Only;
      R__b << a1scl_nevent;
      R__b << sc_nevent;
      R__b << a1_nevent_l1t;
      R__b << a1_nevent_l1t_enable;
      R__b << a1_nevent_presetMB;
      R__b << a1_nevent_presetSP;
      R__b << stable_beam;
      R__b << crossingangle;
      R__b << beam1_nbunches;
      R__b << beam2_nbunches;
      R__b.WriteArray(beam1_bunches, 200);
      R__b.WriteArray(beam2_bunches, 200);
      R__b.WriteArray(beam1_tag, 200);
      R__b.WriteArray(beam2_tag, 200);
      R__b << beam1_avintensity;
      R__b << beam2_avintensity;
      R__b.WriteArray(beam1_avintensitypb, 200);
      R__b.WriteArray(beam2_avintensitypb, 200);
      R__b.WriteArray(beam_avluminositypb, 200);
      R__b << done_lumiscan;
      R__b.WriteArray(beam_comments, 512);
      R__b << analysis_quality;
      R__b << analysis_cut_stime;
      R__b << analysis_cut_etime;
      R__b << analysis_a1_nevent;
      R__b.WriteArray(analysis_comments, 512);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RHICfRunInfo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RHICfRunInfo.
      TClass *R__cl = ::RHICfRunInfo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ioformat", &ioformat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "start_time", &start_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "end_time", &end_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "general_comments[512]", general_comments);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_runmode", &a1_runmode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_LogicMode[256]", a1_LogicMode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_GPIOLoad[256]", a1_GPIOLoad);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_GPIOLoadFiles[2][256]", a1_GPIOLoadFiles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_GPIOSetup[256]", a1_GPIOSetup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_Discriminator[256]", a1_Discriminator);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_scifidaq", &a1_scifidaq);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "common_operation", &common_operation);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_PMTgain[32]", a1_PMTgain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_scifigain[32]", a1_scifigain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_position[32]", a1_position);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "daq_beam1_scl_nbunch_offset", &daq_beam1_scl_nbunch_offset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "daq_beam2_scl_nbunch_offset", &daq_beam2_scl_nbunch_offset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "daq_comments[512]", daq_comments);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nevent", &nevent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_nevent", &a1_nevent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_nevent_L3T_Shower", &a1_nevent_L3T_Shower);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_nevent_L3T_Special1", &a1_nevent_L3T_Special1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_nevent_L3T_Special2", &a1_nevent_L3T_Special2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_nevent_L3T_Pedestal", &a1_nevent_L3T_Pedestal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_nevent_L3T_L1T", &a1_nevent_L3T_L1T);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_nevent_L3T_Shower_TS", &a1_nevent_L3T_Shower_TS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_nevent_L3T_Shower_TL", &a1_nevent_L3T_Shower_TL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_nevent_L3T_STAR", &a1_nevent_L3T_STAR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_nevent_STAR_Only", &a1_nevent_STAR_Only);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1scl_nevent", &a1scl_nevent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sc_nevent", &sc_nevent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_nevent_l1t", &a1_nevent_l1t);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_nevent_l1t_enable", &a1_nevent_l1t_enable);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_nevent_presetMB", &a1_nevent_presetMB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1_nevent_presetSP", &a1_nevent_presetSP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stable_beam", &stable_beam);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "crossingangle", &crossingangle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beam1_nbunches", &beam1_nbunches);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beam2_nbunches", &beam2_nbunches);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beam1_bunches[200]", beam1_bunches);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beam2_bunches[200]", beam2_bunches);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beam1_tag[200]", beam1_tag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beam2_tag[200]", beam2_tag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beam1_avintensity", &beam1_avintensity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beam2_avintensity", &beam2_avintensity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beam1_avintensitypb[200]", beam1_avintensitypb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beam2_avintensitypb[200]", beam2_avintensitypb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beam_avluminositypb[200]", beam_avluminositypb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "done_lumiscan", &done_lumiscan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beam_comments[512]", beam_comments);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "analysis_quality", &analysis_quality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "analysis_cut_stime", &analysis_cut_stime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "analysis_cut_etime", &analysis_cut_etime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "analysis_a1_nevent", &analysis_a1_nevent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "analysis_comments[512]", analysis_comments);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RHICfRunInfo(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::RHICfRunInfo : new ::RHICfRunInfo;
   }
   static void *newArray_RHICfRunInfo(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::RHICfRunInfo[nElements] : new ::RHICfRunInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_RHICfRunInfo(void *p) {
      delete ((::RHICfRunInfo*)p);
   }
   static void deleteArray_RHICfRunInfo(void *p) {
      delete [] ((::RHICfRunInfo*)p);
   }
   static void destruct_RHICfRunInfo(void *p) {
      typedef ::RHICfRunInfo current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RHICfRunInfo(TBuffer &buf, void *obj) {
      ((::RHICfRunInfo*)obj)->::RHICfRunInfo::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::RHICfRunInfo

//______________________________________________________________________________
void RHICfRunInfoTable::Streamer(TBuffer &R__b)
{
   // Stream an object of class RHICfRunInfoTable.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> ioformat;
      R__b >> ninfo;
      R__b >> iinfo;
      R__b >> irun;
      R__b.CheckByteCount(R__s, R__c, RHICfRunInfoTable::IsA());
   } else {
      R__c = R__b.WriteVersion(RHICfRunInfoTable::IsA(), kTRUE);
      R__b << ioformat;
      R__b << ninfo;
      R__b << iinfo;
      R__b << irun;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RHICfRunInfoTable::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RHICfRunInfoTable.
      TClass *R__cl = ::RHICfRunInfoTable::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ioformat", &ioformat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ninfo", &ninfo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iinfo", &iinfo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "irun", &irun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runinfo", (void*)&runinfo);
      R__insp.InspectMember("vector<RHICfRunInfo*>", (void*)&runinfo, "runinfo.", true);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RHICfRunInfoTable(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::RHICfRunInfoTable : new ::RHICfRunInfoTable;
   }
   static void *newArray_RHICfRunInfoTable(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::RHICfRunInfoTable[nElements] : new ::RHICfRunInfoTable[nElements];
   }
   // Wrapper around operator delete
   static void delete_RHICfRunInfoTable(void *p) {
      delete ((::RHICfRunInfoTable*)p);
   }
   static void deleteArray_RHICfRunInfoTable(void *p) {
      delete [] ((::RHICfRunInfoTable*)p);
   }
   static void destruct_RHICfRunInfoTable(void *p) {
      typedef ::RHICfRunInfoTable current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RHICfRunInfoTable(TBuffer &buf, void *obj) {
      ((::RHICfRunInfoTable*)obj)->::RHICfRunInfoTable::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::RHICfRunInfoTable

//______________________________________________________________________________
namespace ROOTDict {
   void MyFilePath_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class MyFilePath.
      typedef ::ROOTShadow::Shadow::MyFilePath ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::MyFilePath*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "base[256]", sobj->base);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tmp[512]", sobj->tmp);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MyFilePath(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MyFilePath : new ::MyFilePath;
   }
   static void *newArray_MyFilePath(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::MyFilePath[nElements] : new ::MyFilePath[nElements];
   }
   // Wrapper around operator delete
   static void delete_MyFilePath(void *p) {
      delete ((::MyFilePath*)p);
   }
   static void deleteArray_MyFilePath(void *p) {
      delete [] ((::MyFilePath*)p);
   }
   static void destruct_MyFilePath(void *p) {
      typedef ::MyFilePath current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::MyFilePath

//______________________________________________________________________________
namespace ROOTDict {
   void SimpleList_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class SimpleList.
      typedef ::ROOTShadow::Shadow::SimpleList ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::SimpleList*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nlist", &sobj->nlist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "list[200][256]", sobj->list);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_SimpleList(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::SimpleList : new ::SimpleList;
   }
   static void *newArray_SimpleList(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::SimpleList[nElements] : new ::SimpleList[nElements];
   }
   // Wrapper around operator delete
   static void delete_SimpleList(void *p) {
      delete ((::SimpleList*)p);
   }
   static void deleteArray_SimpleList(void *p) {
      delete [] ((::SimpleList*)p);
   }
   static void destruct_SimpleList(void *p) {
      typedef ::SimpleList current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::SimpleList

//______________________________________________________________________________
namespace ROOTDict {
   void Arm2Hit_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Arm2Hit.
      typedef ::ROOTShadow::Shadow::Arm2Hit ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::Arm2Hit*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ManipPosition", &sobj->ManipPosition);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Strips[2]", sobj->Strips);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Module", &sobj->Module);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LeftbarCoord[3]", sobj->LeftbarCoord);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GeneralCoord[3]", sobj->GeneralCoord);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CalorimCoord[6]", sobj->CalorimCoord);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LHC_Coord[3]", sobj->LHC_Coord);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Arm2Hit(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Arm2Hit : new ::Arm2Hit;
   }
   static void *newArray_Arm2Hit(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Arm2Hit[nElements] : new ::Arm2Hit[nElements];
   }
   // Wrapper around operator delete
   static void delete_Arm2Hit(void *p) {
      delete ((::Arm2Hit*)p);
   }
   static void deleteArray_Arm2Hit(void *p) {
      delete [] ((::Arm2Hit*)p);
   }
   static void destruct_Arm2Hit(void *p) {
      typedef ::Arm2Hit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::Arm2Hit

/********************************************************
* libLHCfFunction.cpp
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtablelibLHCfFunction();

extern "C" void G__set_cpp_environmentlibLHCfFunction() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("A1Cal1ToCal2.h");
  G__add_compiledheader("A1GainCalibration.h");
  G__add_compiledheader("A1PedeSubtract.h");
  G__add_compiledheader("A1RawToCal1.h");
  G__add_compiledheader("A1CrossTalk.h");
  G__add_compiledheader("A1LHCCrossTalk.h");
  G__add_compiledheader("A2Cal1ToCal2.h");
  G__add_compiledheader("A2GainCalibration.h");
  G__add_compiledheader("A2PedeSubtract.h");
  G__add_compiledheader("A2RawToCal1.h");
  G__add_compiledheader("A2RawToCal1Silicon.h");
  G__add_compiledheader("ADCRange.h");
  G__add_compiledheader("Arm2Alignment.h");
  G__add_compiledheader("ConParticleDefine.h");
  G__add_compiledheader("ConScifiPosition.h");
  G__add_compiledheader("ConShowerLeakage.h");
  G__add_compiledheader("FCGain.h");
  G__add_compiledheader("FuncForLHC.h");
  G__add_compiledheader("LHCfRunInfoTable.h");
  G__add_compiledheader("MyFunction.h");
  G__add_compiledheader("PMTGain.h");
  G__add_compiledheader("PMTSatu.h");
  G__add_compiledheader("PMTSatuCorrection.h");
  G__add_compiledheader("ParticleID01.h");
  G__add_compiledheader("ParticleID02.h");
  G__add_compiledheader("SciFiPosCalculation.h");
  G__add_compiledheader("ScifiGain.h");
  G__add_compiledheader("ScifiIncidentPosition02.h");
  G__add_compiledheader("ScifiPosTable.h");
  G__add_compiledheader("ScintiPosDependence.h");
  G__add_compiledheader("SiliconGain.h");
  G__add_compiledheader("SPSAdamoPedeSubtract.h");
  G__add_compiledheader("TransitionFit.h");
  G__add_compiledheader("RHICfRunInfoTable.h");
  G__cpp_reset_tagtablelibLHCfFunction();
}
#include <new>
extern "C" int G__cpp_dllrevlibLHCfFunction() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* ADCRange */
static int G__libLHCfFunction_135_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ADCRange* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ADCRange[n];
     } else {
       p = new((void*) gvp) ADCRange[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ADCRange;
     } else {
       p = new((void*) gvp) ADCRange;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_ADCRange));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_135_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ADCRange* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ADCRange((char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) ADCRange((char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_ADCRange));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_135_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ADCRange*) G__getstructoffset())->Initialize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_135_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ADCRange*) G__getstructoffset())->ReadFile((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_135_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((ADCRange*) G__getstructoffset())->WriteFile((int) G__int(libp->para[0]), (char*) G__int(libp->para[1])
, (char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((ADCRange*) G__getstructoffset())->WriteFile((int) G__int(libp->para[0]), (char*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_135_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ADCRange*) G__getstructoffset())->SetThresold((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_135_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ADCRange*) G__getstructoffset())->GetThresold());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_135_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ADCRange*) G__getstructoffset())->SetParameters((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_135_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ADCRange*) G__getstructoffset())->SetParameter((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_135_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ADCRange*) G__getstructoffset())->GetParameter((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_135_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ADCRange*) G__getstructoffset())->Get((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_135_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ADCRange::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_135_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ADCRange::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_135_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ADCRange::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_135_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ADCRange::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_135_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const ADCRange*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_135_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ADCRange*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_135_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ADCRange*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_135_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ADCRange*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_135_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ADCRange::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_135_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ADCRange::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_135_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ADCRange::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_135_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ADCRange::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfFunction_135_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ADCRange* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ADCRange(*(ADCRange*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_ADCRange));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ADCRange G__TADCRange;
static int G__libLHCfFunction_135_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ADCRange*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ADCRange*) (soff+(sizeof(ADCRange)*i)))->~G__TADCRange();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ADCRange*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ADCRange*) (soff))->~G__TADCRange();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfFunction_135_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ADCRange* dest = (ADCRange*) G__getstructoffset();
   *dest = *(ADCRange*) libp->para[0].ref;
   const ADCRange& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* A1Cal1ToCal2 */
static int G__libLHCfFunction_136_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1Cal1ToCal2* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A1Cal1ToCal2[n];
     } else {
       p = new((void*) gvp) A1Cal1ToCal2[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A1Cal1ToCal2;
     } else {
       p = new((void*) gvp) A1Cal1ToCal2;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_A1Cal1ToCal2));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_136_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1ToCal2*) G__getstructoffset())->Init());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_136_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1ToCal2*) G__getstructoffset())->Exit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_136_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1ToCal2*) G__getstructoffset())->Bor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_136_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1ToCal2*) G__getstructoffset())->Eor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_136_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1ToCal2*) G__getstructoffset())->Loop());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_136_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1ToCal2*) G__getstructoffset())->Initialize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_136_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((A1Cal1ToCal2*) G__getstructoffset())->GetADCRange());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_136_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((A1Cal1ToCal2*) G__getstructoffset())->UseADCRange((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((A1Cal1ToCal2*) G__getstructoffset())->UseADCRange();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_136_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1ToCal2*) G__getstructoffset())->ReadADCRangeTable((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_136_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1ToCal2*) G__getstructoffset())->SetADCRangeThreshold((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_136_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A1Cal1ToCal2*) G__getstructoffset())->GetADCRangeThreshold());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_136_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((A1Cal1ToCal2*) G__getstructoffset())->Convert((A1Cal1*) G__int(libp->para[0]), (A1Cal2*) G__int(libp->para[1])
, (A1Cal1*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((A1Cal1ToCal2*) G__getstructoffset())->Convert((A1Cal1*) G__int(libp->para[0]), (A1Cal2*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_136_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((A1Cal1ToCal2*) G__getstructoffset())->InverseConvert((A1Cal2*) G__int(libp->para[0]), (A1Cal1*) G__int(libp->para[1])
, (A1Cal1*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((A1Cal1ToCal2*) G__getstructoffset())->InverseConvert((A1Cal2*) G__int(libp->para[0]), (A1Cal1*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_136_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1ToCal2*) G__getstructoffset())->CalculateADC((A1Cal1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_136_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1ToCal2*) G__getstructoffset())->CheckADCOverRange((A1Cal1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_136_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) A1Cal1ToCal2::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_136_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1Cal1ToCal2::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_136_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) A1Cal1ToCal2::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_136_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      A1Cal1ToCal2::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_136_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const A1Cal1ToCal2*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_136_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1Cal1ToCal2*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_136_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1Cal1ToCal2*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_136_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1Cal1ToCal2*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_136_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1Cal1ToCal2::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_136_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A1Cal1ToCal2::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_136_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1Cal1ToCal2::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_136_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A1Cal1ToCal2::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfFunction_136_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   A1Cal1ToCal2* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new A1Cal1ToCal2(*(A1Cal1ToCal2*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_A1Cal1ToCal2));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef A1Cal1ToCal2 G__TA1Cal1ToCal2;
static int G__libLHCfFunction_136_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (A1Cal1ToCal2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((A1Cal1ToCal2*) (soff+(sizeof(A1Cal1ToCal2)*i)))->~G__TA1Cal1ToCal2();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (A1Cal1ToCal2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((A1Cal1ToCal2*) (soff))->~G__TA1Cal1ToCal2();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfFunction_136_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1Cal1ToCal2* dest = (A1Cal1ToCal2*) G__getstructoffset();
   *dest = *(A1Cal1ToCal2*) libp->para[0].ref;
   const A1Cal1ToCal2& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ConParticleDefine */
static int G__libLHCfFunction_137_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ConParticleDefine* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ConParticleDefine[n];
     } else {
       p = new((void*) gvp) ConParticleDefine[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ConParticleDefine;
     } else {
       p = new((void*) gvp) ConParticleDefine;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_ConParticleDefine));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ConParticleDefine* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ConParticleDefine((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ConParticleDefine((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ConParticleDefine((char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) ConParticleDefine((char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_ConParticleDefine));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConParticleDefine*) G__getstructoffset())->Initialize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConParticleDefine*) G__getstructoffset())->GetType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ConParticleDefine*) G__getstructoffset())->SetType((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConParticleDefine*) G__getstructoffset())->GetVersion());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ConParticleDefine*) G__getstructoffset())->SetVersion((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConParticleDefine*) G__getstructoffset())->SetDetector((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((ConParticleDefine*) G__getstructoffset())->GetDetector());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConParticleDefine*) G__getstructoffset())->SetHV((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ConParticleDefine*) G__getstructoffset())->GetHV((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConParticleDefine*) G__getstructoffset())->SetHV0((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ConParticleDefine*) G__getstructoffset())->GetHV0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConParticleDefine*) G__getstructoffset())->SetHV1((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ConParticleDefine*) G__getstructoffset())->GetHV1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConParticleDefine*) G__getstructoffset())->SetScifiHV((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ConParticleDefine*) G__getstructoffset())->GetScifiHV());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConParticleDefine*) G__getstructoffset())->SetFCHV((int) G__int(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ConParticleDefine*) G__getstructoffset())->GetFCHV((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConParticleDefine*) G__getstructoffset())->SetFCHV1((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ConParticleDefine*) G__getstructoffset())->GetFCHV1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConParticleDefine*) G__getstructoffset())->SetFCHV2((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ConParticleDefine*) G__getstructoffset())->GetFCHV2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ConParticleDefine*) G__getstructoffset())->GetADCParticle((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConParticleDefine*) G__getstructoffset())->SetADCParticle((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ConParticleDefine*) G__getstructoffset())->GetSCIFParticle((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConParticleDefine*) G__getstructoffset())->SetSCIFParticle((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (double) G__double(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ConParticleDefine*) G__getstructoffset())->GetFCParticle((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConParticleDefine*) G__getstructoffset())->SetFCParticle((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ConParticleDefine*) G__getstructoffset())->GetCalParticle((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConParticleDefine*) G__getstructoffset())->SetCalParticle((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ConParticleDefine*) G__getstructoffset())->GetScifiParticle((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConParticleDefine*) G__getstructoffset())->SetScifiParticle((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (double) G__double(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ConParticleDefine*) G__getstructoffset())->GetSiliconParticle((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConParticleDefine*) G__getstructoffset())->SetSiliconParticle((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConParticleDefine*) G__getstructoffset())->SetSiliconParticle((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((ConParticleDefine*) G__getstructoffset())->ReadFile((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((ConParticleDefine*) G__getstructoffset())->ReadFile((char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConParticleDefine*) G__getstructoffset())->ReadType1((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((ConParticleDefine*) G__getstructoffset())->WriteFile((int) G__int(libp->para[0]), (char*) G__int(libp->para[1])
, (char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((ConParticleDefine*) G__getstructoffset())->WriteFile((int) G__int(libp->para[0]), (char*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConParticleDefine*) G__getstructoffset())->WriteType1((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConParticleDefine*) G__getstructoffset())->Copy((ConParticleDefine*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConParticleDefine*) G__getstructoffset())->PrintStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ConParticleDefine::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ConParticleDefine::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ConParticleDefine::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ConParticleDefine::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const ConParticleDefine*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ConParticleDefine*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ConParticleDefine*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ConParticleDefine*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ConParticleDefine::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ConParticleDefine::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ConParticleDefine::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_137_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ConParticleDefine::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfFunction_137_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ConParticleDefine* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ConParticleDefine(*(ConParticleDefine*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_ConParticleDefine));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ConParticleDefine G__TConParticleDefine;
static int G__libLHCfFunction_137_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ConParticleDefine*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ConParticleDefine*) (soff+(sizeof(ConParticleDefine)*i)))->~G__TConParticleDefine();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ConParticleDefine*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ConParticleDefine*) (soff))->~G__TConParticleDefine();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfFunction_137_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ConParticleDefine* dest = (ConParticleDefine*) G__getstructoffset();
   *dest = *(ConParticleDefine*) libp->para[0].ref;
   const ConParticleDefine& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* PMTGain */
static int G__libLHCfFunction_138_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PMTGain* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PMTGain[n];
     } else {
       p = new((void*) gvp) PMTGain[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PMTGain;
     } else {
       p = new((void*) gvp) PMTGain;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_PMTGain));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_138_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PMTGain* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new PMTGain((char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) PMTGain((char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_PMTGain));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_138_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PMTGain*) G__getstructoffset())->Initalize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_138_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PMTGain*) G__getstructoffset())->ReadTable((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_138_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PMTGain*) G__getstructoffset())->ReadTableType2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_138_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PMTGain*) G__getstructoffset())->ReadTableType3());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_138_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((PMTGain*) G__getstructoffset())->GatTable());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_138_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((PMTGain*) G__getstructoffset())->GetFormat());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_138_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PMTGain*) G__getstructoffset())->GetVersion());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_138_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PMTGain*) G__getstructoffset())->GetType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_138_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PMTGain*) G__getstructoffset())->GetDate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_138_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PMTGain*) G__getstructoffset())->GetNHV());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_138_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((PMTGain*) G__getstructoffset())->GetGain((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_138_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((PMTGain*) G__getstructoffset())->GetGain((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_138_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((PMTGain*) G__getstructoffset())->GetGain((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_138_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((PMTGain*) G__getstructoffset())->GetGain((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_138_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PMTGain*) G__getstructoffset())->HV2nHV((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_138_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((PMTGain*) G__getstructoffset())->nHV2HV((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_138_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PMTGain*) G__getstructoffset())->TSize2iT((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_138_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PMTGain*) G__getstructoffset())->TSize2iD((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_138_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PMTGain*) G__getstructoffset())->TSize2D((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_138_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PMTGain*) G__getstructoffset())->iT2TSize((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_138_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PMTGain*) G__getstructoffset())->PrintStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_138_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PMTGain::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_138_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PMTGain::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_138_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) PMTGain::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_138_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PMTGain::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_138_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const PMTGain*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_138_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PMTGain*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_138_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PMTGain*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_138_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PMTGain*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_138_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PMTGain::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_138_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PMTGain::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_138_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PMTGain::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_138_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PMTGain::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfFunction_138_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   PMTGain* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new PMTGain(*(PMTGain*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_PMTGain));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef PMTGain G__TPMTGain;
static int G__libLHCfFunction_138_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (PMTGain*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((PMTGain*) (soff+(sizeof(PMTGain)*i)))->~G__TPMTGain();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (PMTGain*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((PMTGain*) (soff))->~G__TPMTGain();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfFunction_138_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PMTGain* dest = (PMTGain*) G__getstructoffset();
   *dest = *(PMTGain*) libp->para[0].ref;
   const PMTGain& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ScifiGain */
static int G__libLHCfFunction_139_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ScifiGain* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ScifiGain[n];
     } else {
       p = new((void*) gvp) ScifiGain[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ScifiGain;
     } else {
       p = new((void*) gvp) ScifiGain;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_ScifiGain));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_139_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ScifiGain* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ScifiGain((char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) ScifiGain((char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_ScifiGain));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_139_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ScifiGain*) G__getstructoffset())->Initialize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_139_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ScifiGain*) G__getstructoffset())->GetType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_139_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ScifiGain*) G__getstructoffset())->SetType((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_139_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ScifiGain*) G__getstructoffset())->GetVersion());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_139_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ScifiGain*) G__getstructoffset())->SetVersion((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_139_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ScifiGain*) G__getstructoffset())->ReadTable((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_139_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ScifiGain*) G__getstructoffset())->ReadTableType1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_139_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ScifiGain*) G__getstructoffset())->WriteTable((int) G__int(libp->para[0]), (char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_139_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ScifiGain*) G__getstructoffset())->WriteTableType1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_139_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ScifiGain*) G__getstructoffset())->GetGain((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_139_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ScifiGain*) G__getstructoffset())->GetGain((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (double) G__double(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_139_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ScifiGain*) G__getstructoffset())->SetGain((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_139_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ScifiGain*) G__getstructoffset())->errorchech((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_139_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ScifiGain*) G__getstructoffset())->HV2nHV((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_139_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ScifiGain*) G__getstructoffset())->nHV2HV((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_139_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ScifiGain*) G__getstructoffset())->NPos((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_139_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ScifiGain*) G__getstructoffset())->PrintStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_139_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ScifiGain::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_139_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ScifiGain::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_139_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ScifiGain::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_139_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ScifiGain::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_139_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const ScifiGain*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_139_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ScifiGain*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_139_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ScifiGain*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_139_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ScifiGain*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_139_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ScifiGain::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_139_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ScifiGain::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_139_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ScifiGain::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_139_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ScifiGain::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfFunction_139_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ScifiGain* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ScifiGain(*(ScifiGain*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_ScifiGain));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ScifiGain G__TScifiGain;
static int G__libLHCfFunction_139_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ScifiGain*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ScifiGain*) (soff+(sizeof(ScifiGain)*i)))->~G__TScifiGain();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ScifiGain*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ScifiGain*) (soff))->~G__TScifiGain();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfFunction_139_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ScifiGain* dest = (ScifiGain*) G__getstructoffset();
   *dest = *(ScifiGain*) libp->para[0].ref;
   const ScifiGain& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* FCGain */
static int G__libLHCfFunction_140_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FCGain* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FCGain[n];
     } else {
       p = new((void*) gvp) FCGain[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new FCGain;
     } else {
       p = new((void*) gvp) FCGain;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_FCGain));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_140_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FCGain* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new FCGain((char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) FCGain((char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_FCGain));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_140_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((FCGain*) G__getstructoffset())->Initialize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_140_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((FCGain*) G__getstructoffset())->GetType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_140_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FCGain*) G__getstructoffset())->SetType((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_140_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((FCGain*) G__getstructoffset())->GetVersion());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_140_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FCGain*) G__getstructoffset())->SetVersion((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_140_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((FCGain*) G__getstructoffset())->ReadTable((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_140_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((FCGain*) G__getstructoffset())->ReadTableType1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_140_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((FCGain*) G__getstructoffset())->WriteTable((int) G__int(libp->para[0]), (char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_140_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((FCGain*) G__getstructoffset())->WriteTableType1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_140_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((FCGain*) G__getstructoffset())->GetGain((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_140_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((FCGain*) G__getstructoffset())->GetGain((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_140_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((FCGain*) G__getstructoffset())->SetGain((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_140_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((FCGain*) G__getstructoffset())->errorchech((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_140_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((FCGain*) G__getstructoffset())->HV2nHV((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_140_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((FCGain*) G__getstructoffset())->nHV2HV((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_140_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((FCGain*) G__getstructoffset())->PrintStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_140_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) FCGain::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_140_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FCGain::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_140_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) FCGain::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_140_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      FCGain::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_140_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const FCGain*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_140_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FCGain*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_140_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FCGain*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_140_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((FCGain*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_140_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FCGain::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_140_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FCGain::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_140_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) FCGain::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_140_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) FCGain::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfFunction_140_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   FCGain* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new FCGain(*(FCGain*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_FCGain));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef FCGain G__TFCGain;
static int G__libLHCfFunction_140_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (FCGain*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((FCGain*) (soff+(sizeof(FCGain)*i)))->~G__TFCGain();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (FCGain*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((FCGain*) (soff))->~G__TFCGain();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfFunction_140_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   FCGain* dest = (FCGain*) G__getstructoffset();
   *dest = *(FCGain*) libp->para[0].ref;
   const FCGain& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* A1GainCalibration */
static int G__libLHCfFunction_141_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1GainCalibration* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A1GainCalibration[n];
     } else {
       p = new((void*) gvp) A1GainCalibration[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A1GainCalibration;
     } else {
       p = new((void*) gvp) A1GainCalibration;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_A1GainCalibration));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1GainCalibration*) G__getstructoffset())->Initialize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1GainCalibration*) G__getstructoffset())->SetPdefFactorPMT((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1GainCalibration*) G__getstructoffset())->SetPdefFactorScifi((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1GainCalibration*) G__getstructoffset())->SetPdefFactorFC((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A1GainCalibration*) G__getstructoffset())->GetPdefFactorPMT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A1GainCalibration*) G__getstructoffset())->GetPdefFactorScifi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A1GainCalibration*) G__getstructoffset())->GetPdefFactorFC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A1GainCalibration*) G__getstructoffset())->ReadParticleDefineTable((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A1GainCalibration*) G__getstructoffset())->ReadParticleDefineTable((char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1GainCalibration*) G__getstructoffset())->ReadPMTGainTable((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1GainCalibration*) G__getstructoffset())->ReadScifiGainTable((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1GainCalibration*) G__getstructoffset())->ReadFCGainTable((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((A1GainCalibration*) G__getstructoffset())->GetParticleDefineTable());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((A1GainCalibration*) G__getstructoffset())->GetPMTGainTable());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((A1GainCalibration*) G__getstructoffset())->GetScifiGainTable());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((A1GainCalibration*) G__getstructoffset())->GetFCGainTable());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1GainCalibration*) G__getstructoffset())->SetHV((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1GainCalibration*) G__getstructoffset())->SetScifiHV((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1GainCalibration*) G__getstructoffset())->SetFCHV((int) G__int(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A1GainCalibration*) G__getstructoffset())->GetHV((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A1GainCalibration*) G__getstructoffset())->GetScifiHV());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A1GainCalibration*) G__getstructoffset())->GetFCHV((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A1GainCalibration*) G__getstructoffset())->GetParticleADC((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A1GainCalibration*) G__getstructoffset())->ReadHVTable((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A1GainCalibration*) G__getstructoffset())->ReadHVTable((char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1GainCalibration*) G__getstructoffset())->ShowHVTable());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1GainCalibration*) G__getstructoffset())->ShowHVTable(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1GainCalibration*) G__getstructoffset())->Calculate((A1Cal2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1GainCalibration*) G__getstructoffset())->CalculatePMT((A1Cal2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1GainCalibration*) G__getstructoffset())->CalculateScifi((A1Cal2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1GainCalibration*) G__getstructoffset())->CalculateFC((A1Cal2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1GainCalibration*) G__getstructoffset())->InverseCalculate((A1Cal2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1GainCalibration*) G__getstructoffset())->InverseCalculate_pp2015((A1Cal2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1GainCalibration*) G__getstructoffset())->InverseCalculatePMT((A1Cal2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1GainCalibration*) G__getstructoffset())->InverseCalculatePMT_pp2015((A1Cal2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1GainCalibration*) G__getstructoffset())->InverseCalculateScifi((A1Cal2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1GainCalibration*) G__getstructoffset())->InverseCalculateFC((A1Cal2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1GainCalibration*) G__getstructoffset())->Init());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1GainCalibration*) G__getstructoffset())->Exit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1GainCalibration*) G__getstructoffset())->Bor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1GainCalibration*) G__getstructoffset())->Eor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1GainCalibration*) G__getstructoffset())->Loop((A1Cal2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) A1GainCalibration::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1GainCalibration::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) A1GainCalibration::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      A1GainCalibration::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const A1GainCalibration*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1GainCalibration*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1GainCalibration*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1GainCalibration*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1GainCalibration::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A1GainCalibration::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1GainCalibration::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_141_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A1GainCalibration::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfFunction_141_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   A1GainCalibration* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new A1GainCalibration(*(A1GainCalibration*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_A1GainCalibration));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef A1GainCalibration G__TA1GainCalibration;
static int G__libLHCfFunction_141_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (A1GainCalibration*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((A1GainCalibration*) (soff+(sizeof(A1GainCalibration)*i)))->~G__TA1GainCalibration();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (A1GainCalibration*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((A1GainCalibration*) (soff))->~G__TA1GainCalibration();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfFunction_141_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1GainCalibration* dest = (A1GainCalibration*) G__getstructoffset();
   *dest = *(A1GainCalibration*) libp->para[0].ref;
   const A1GainCalibration& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* A1PedeSubtract */
static int G__libLHCfFunction_185_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1PedeSubtract* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A1PedeSubtract[n];
     } else {
       p = new((void*) gvp) A1PedeSubtract[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A1PedeSubtract;
     } else {
       p = new((void*) gvp) A1PedeSubtract;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_A1PedeSubtract));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_185_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1PedeSubtract*) G__getstructoffset())->Initialize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_185_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1PedeSubtract*) G__getstructoffset())->SetPedestal((A1Cal1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_185_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1PedeSubtract*) G__getstructoffset())->SetAccumNEvent((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_185_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1PedeSubtract*) G__getstructoffset())->AccumClear());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_185_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1PedeSubtract*) G__getstructoffset())->FillPedeEvent((A1Cal1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_185_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1PedeSubtract*) G__getstructoffset())->CalPedestal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_185_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A1PedeSubtract*) G__getstructoffset())->Subtract((A1Cal1*) G__int(libp->para[0]), (A1Cal1*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A1PedeSubtract*) G__getstructoffset())->Subtract((A1Cal1*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_185_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A1PedeSubtract*) G__getstructoffset())->RHICfSubtract((A1Cal1*) G__int(libp->para[0]), (A1Cal1*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A1PedeSubtract*) G__getstructoffset())->RHICfSubtract((A1Cal1*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_185_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1PedeSubtract*) G__getstructoffset())->Subtraction((A1Cal1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_185_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1PedeSubtract*) G__getstructoffset())->RHICfSubtraction((A1Cal1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_185_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A1PedeSubtract*) G__getstructoffset())->Subtraction1((A1Cal1*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A1PedeSubtract*) G__getstructoffset())->Subtraction1((A1Cal1*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_185_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A1PedeSubtract*) G__getstructoffset())->RHICfSubtraction1((A1Cal1*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A1PedeSubtract*) G__getstructoffset())->RHICfSubtraction1((A1Cal1*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_185_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1PedeSubtract*) G__getstructoffset())->Subtraction2((A1Cal1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_185_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((A1PedeSubtract*) G__getstructoffset())->SetOffsetSubtraction((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((A1PedeSubtract*) G__getstructoffset())->SetOffsetSubtraction();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_185_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((A1PedeSubtract*) G__getstructoffset())->GetOffsetSubtraction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_185_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A1PedeSubtract*) G__getstructoffset())->WriteFile((char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A1PedeSubtract*) G__getstructoffset())->WriteFile());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_185_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A1PedeSubtract*) G__getstructoffset())->ReadFile((char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A1PedeSubtract*) G__getstructoffset())->ReadFile());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_185_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A1PedeSubtract*) G__getstructoffset())->ReadAveFile((char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A1PedeSubtract*) G__getstructoffset())->ReadAveFile());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_185_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((A1PedeSubtract*) G__getstructoffset())->GetPedestal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_185_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((A1PedeSubtract*) G__getstructoffset())->GetPedesigma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_185_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((A1PedeSubtract*) G__getstructoffset())->GetPedestal2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_185_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((A1PedeSubtract*) G__getstructoffset())->GetPedesigma2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_185_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1PedeSubtract*) G__getstructoffset())->AddSqare((A1Cal1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_185_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1PedeSubtract*) G__getstructoffset())->AddSqare2((A1Cal1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_185_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1PedeSubtract*) G__getstructoffset())->CalSigma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_185_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1PedeSubtract*) G__getstructoffset())->CalSigma2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_185_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A1PedeSubtract*) G__getstructoffset())->Init((A1Cal1*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A1PedeSubtract*) G__getstructoffset())->Init());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_185_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1PedeSubtract*) G__getstructoffset())->Exit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_185_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1PedeSubtract*) G__getstructoffset())->Bor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_185_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1PedeSubtract*) G__getstructoffset())->Eor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_185_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1PedeSubtract*) G__getstructoffset())->Loop((A1Cal1*) G__int(libp->para[0]), (A1Cal1*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_185_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) A1PedeSubtract::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_185_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1PedeSubtract::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_185_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) A1PedeSubtract::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_185_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      A1PedeSubtract::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_185_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const A1PedeSubtract*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_185_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1PedeSubtract*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_185_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1PedeSubtract*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_185_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1PedeSubtract*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_185_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1PedeSubtract::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_185_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A1PedeSubtract::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_185_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1PedeSubtract::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_185_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A1PedeSubtract::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfFunction_185_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   A1PedeSubtract* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new A1PedeSubtract(*(A1PedeSubtract*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_A1PedeSubtract));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef A1PedeSubtract G__TA1PedeSubtract;
static int G__libLHCfFunction_185_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (A1PedeSubtract*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((A1PedeSubtract*) (soff+(sizeof(A1PedeSubtract)*i)))->~G__TA1PedeSubtract();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (A1PedeSubtract*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((A1PedeSubtract*) (soff))->~G__TA1PedeSubtract();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfFunction_185_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1PedeSubtract* dest = (A1PedeSubtract*) G__getstructoffset();
   *dest = *(A1PedeSubtract*) libp->para[0].ref;
   const A1PedeSubtract& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ScifiPosTable */
static int G__libLHCfFunction_192_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ScifiPosTable* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ScifiPosTable[n];
     } else {
       p = new((void*) gvp) ScifiPosTable[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ScifiPosTable;
     } else {
       p = new((void*) gvp) ScifiPosTable;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_ScifiPosTable));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_192_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ScifiPosTable* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ScifiPosTable((char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) ScifiPosTable((char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_ScifiPosTable));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_192_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ScifiPosTable*) G__getstructoffset())->Initialize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_192_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ScifiPosTable*) G__getstructoffset())->ReadPositionTable((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_192_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ScifiPosTable*) G__getstructoffset())->ReadFileType1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_192_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ScifiPosTable*) G__getstructoffset())->ReadFileType2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_192_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ScifiPosTable*) G__getstructoffset())->ReadCheck());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_192_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ScifiPosTable*) G__getstructoffset())->GetChannel((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_192_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ScifiPosTable*) G__getstructoffset())->GetTower((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_192_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ScifiPosTable*) G__getstructoffset())->GetLayer((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_192_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ScifiPosTable*) G__getstructoffset())->GetXY((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_192_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ScifiPosTable*) G__getstructoffset())->GetPos((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_192_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ScifiPosTable*) G__getstructoffset())->GetIPMT((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_192_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ScifiPosTable*) G__getstructoffset())->GetPosOnPMT((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_192_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ScifiPosTable*) G__getstructoffset())->PrintStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_192_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ScifiPosTable::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_192_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ScifiPosTable::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_192_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ScifiPosTable::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_192_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ScifiPosTable::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_192_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const ScifiPosTable*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_192_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ScifiPosTable*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_192_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ScifiPosTable*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_192_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ScifiPosTable*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_192_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ScifiPosTable::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_192_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ScifiPosTable::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_192_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ScifiPosTable::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_192_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ScifiPosTable::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfFunction_192_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ScifiPosTable* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ScifiPosTable(*(ScifiPosTable*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_ScifiPosTable));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ScifiPosTable G__TScifiPosTable;
static int G__libLHCfFunction_192_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ScifiPosTable*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ScifiPosTable*) (soff+(sizeof(ScifiPosTable)*i)))->~G__TScifiPosTable();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ScifiPosTable*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ScifiPosTable*) (soff))->~G__TScifiPosTable();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfFunction_192_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ScifiPosTable* dest = (ScifiPosTable*) G__getstructoffset();
   *dest = *(ScifiPosTable*) libp->para[0].ref;
   const ScifiPosTable& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* A1RawToCal1 */
static int G__libLHCfFunction_193_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1RawToCal1* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A1RawToCal1[n];
     } else {
       p = new((void*) gvp) A1RawToCal1[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A1RawToCal1;
     } else {
       p = new((void*) gvp) A1RawToCal1;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_A1RawToCal1));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_193_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1RawToCal1*) G__getstructoffset())->Initialize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_193_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1RawToCal1*) G__getstructoffset())->Convert((TObject*) G__int(libp->para[0]), (A1Cal1*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_193_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1RawToCal1*) G__getstructoffset())->Convert_OP2009((A1Raw*) G__int(libp->para[0]), (A1Cal1*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_193_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1RawToCal1*) G__getstructoffset())->Convert_OP2010((A1Raw*) G__int(libp->para[0]), (A1Cal1*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_193_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1RawToCal1*) G__getstructoffset())->Convert_SPS2010((A1Raw*) G__int(libp->para[0]), (A1Cal1*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_193_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1RawToCal1*) G__getstructoffset())->Convert_OP2015((A1Raw_pp2015*) G__int(libp->para[0]), (A1Cal1*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_193_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1RawToCal1*) G__getstructoffset())->Convert_RHICF_OP2017((RHICfRaw_Op2017*) G__int(libp->para[0]), (A1Cal1*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_193_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1RawToCal1*) G__getstructoffset())->InverseConvert((A1Cal1*) G__int(libp->para[0]), (A1Raw*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_193_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1RawToCal1*) G__getstructoffset())->InverseConvert_OP2009((A1Cal1*) G__int(libp->para[0]), (A1Raw*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_193_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1RawToCal1*) G__getstructoffset())->InverseConvert_OP2010((A1Cal1*) G__int(libp->para[0]), (A1Raw*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_193_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1RawToCal1*) G__getstructoffset())->InverseConvert((A1Cal1*) G__int(libp->para[0]), (A1Raw_pp2015*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_193_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1RawToCal1*) G__getstructoffset())->InverseConvert_OP2015((A1Cal1*) G__int(libp->para[0]), (A1Raw_pp2015*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_193_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1RawToCal1*) G__getstructoffset())->InverseConvert_RHICF_OP2017((A1Cal1*) G__int(libp->para[0]), (RHICfRaw_Op2017*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_193_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((A1RawToCal1*) G__getstructoffset())->GetScifiPosTable());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_193_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1RawToCal1*) G__getstructoffset())->ReadScifiPosTable((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_193_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1RawToCal1*) G__getstructoffset())->GetFormat());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_193_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1RawToCal1*) G__getstructoffset())->SetFormat((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_193_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1RawToCal1*) G__getstructoffset())->SerFormatOp2009();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_193_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1RawToCal1*) G__getstructoffset())->SerFormatOp2010();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_193_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1RawToCal1*) G__getstructoffset())->SerFormatSPS2010();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_193_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1RawToCal1*) G__getstructoffset())->SerFormatOp2015();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_193_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1RawToCal1*) G__getstructoffset())->SerFormatRHICfOp2017();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_193_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 104, (long) ((A1RawToCal1*) G__getstructoffset())->CounterFilter((unsigned int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 104, (long) ((A1RawToCal1*) G__getstructoffset())->CounterFilter((unsigned int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_193_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((A1RawToCal1*) G__getstructoffset())->CounterCombine((unsigned int*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_193_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1RawToCal1*) G__getstructoffset())->Init());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_193_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1RawToCal1*) G__getstructoffset())->Exit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_193_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1RawToCal1*) G__getstructoffset())->Bor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_193_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1RawToCal1*) G__getstructoffset())->Eor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_193_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1RawToCal1*) G__getstructoffset())->Loop());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_193_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) A1RawToCal1::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_193_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1RawToCal1::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_193_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) A1RawToCal1::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_193_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      A1RawToCal1::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_193_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const A1RawToCal1*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_193_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1RawToCal1*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_193_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1RawToCal1*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_193_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1RawToCal1*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_193_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1RawToCal1::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_193_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A1RawToCal1::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_193_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1RawToCal1::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_193_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A1RawToCal1::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfFunction_193_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   A1RawToCal1* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new A1RawToCal1(*(A1RawToCal1*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_A1RawToCal1));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef A1RawToCal1 G__TA1RawToCal1;
static int G__libLHCfFunction_193_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (A1RawToCal1*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((A1RawToCal1*) (soff+(sizeof(A1RawToCal1)*i)))->~G__TA1RawToCal1();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (A1RawToCal1*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((A1RawToCal1*) (soff))->~G__TA1RawToCal1();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfFunction_193_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1RawToCal1* dest = (A1RawToCal1*) G__getstructoffset();
   *dest = *(A1RawToCal1*) libp->para[0].ref;
   const A1RawToCal1& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* A1CrossTalk */
static int G__libLHCfFunction_259_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1CrossTalk* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A1CrossTalk[n];
     } else {
       p = new((void*) gvp) A1CrossTalk[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A1CrossTalk;
     } else {
       p = new((void*) gvp) A1CrossTalk;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_A1CrossTalk));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_259_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1CrossTalk*) G__getstructoffset())->ReadFile((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_259_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1CrossTalk*) G__getstructoffset())->ReadFile((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_259_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
  struct G__aRyp0 { double a[1][20]; }* G__Ap0 = (struct G__aRyp0*) G__int(libp->para[0]);
  struct G__aRyp1 { double a[1][20]; }* G__Ap1 = (struct G__aRyp1*) G__int(libp->para[1]);
  struct G__aRyp2 { double a[1][40]; }* G__Ap2 = (struct G__aRyp2*) G__int(libp->para[2]);
  struct G__aRyp3 { double a[1][40]; }* G__Ap3 = (struct G__aRyp3*) G__int(libp->para[3]);
      G__letint(result7, 105, (long) ((A1CrossTalk*) G__getstructoffset())->CalibCrossTalk(G__Ap0->a, G__Ap1->a
, G__Ap2->a, G__Ap3->a));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_259_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1CrossTalk*) G__getstructoffset())->CalibCrossTalk_wM((A1Cal1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_259_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1CrossTalk*) G__getstructoffset())->CalibCrossTalk_wM((A1Cal2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_259_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
  struct G__aRyp0 { double a[1][2][20]; }* G__Ap0 = (struct G__aRyp0*) G__int(libp->para[0]);
  struct G__aRyp1 { double a[1][2][40]; }* G__Ap1 = (struct G__aRyp1*) G__int(libp->para[1]);
      G__letint(result7, 105, (long) ((A1CrossTalk*) G__getstructoffset())->CalibCrossTalk_wM(G__Ap0->a, G__Ap1->a));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_259_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1CrossTalk*) G__getstructoffset())->CalibCrossTalk_wOrgM((A1Cal1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_259_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1CrossTalk*) G__getstructoffset())->CalibCrossTalk_wOrgM((A1Cal2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_259_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
  struct G__aRyp0 { double a[1][2][20]; }* G__Ap0 = (struct G__aRyp0*) G__int(libp->para[0]);
  struct G__aRyp1 { double a[1][2][40]; }* G__Ap1 = (struct G__aRyp1*) G__int(libp->para[1]);
      G__letint(result7, 105, (long) ((A1CrossTalk*) G__getstructoffset())->CalibCrossTalk_wOrgM(G__Ap0->a, G__Ap1->a));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_259_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) A1CrossTalk::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_259_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1CrossTalk::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_259_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) A1CrossTalk::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_259_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      A1CrossTalk::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_259_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const A1CrossTalk*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_259_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1CrossTalk*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_259_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1CrossTalk*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_259_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1CrossTalk*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_259_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1CrossTalk::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_259_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A1CrossTalk::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_259_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1CrossTalk::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_259_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A1CrossTalk::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef A1CrossTalk G__TA1CrossTalk;
static int G__libLHCfFunction_259_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (A1CrossTalk*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((A1CrossTalk*) (soff+(sizeof(A1CrossTalk)*i)))->~G__TA1CrossTalk();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (A1CrossTalk*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((A1CrossTalk*) (soff))->~G__TA1CrossTalk();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* A1LHCCrossTalk */
static int G__libLHCfFunction_260_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1LHCCrossTalk* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A1LHCCrossTalk[n];
     } else {
       p = new((void*) gvp) A1LHCCrossTalk[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A1LHCCrossTalk;
     } else {
       p = new((void*) gvp) A1LHCCrossTalk;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_A1LHCCrossTalk));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_260_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1LHCCrossTalk*) G__getstructoffset())->CTReadFile((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_260_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1LHCCrossTalk*) G__getstructoffset())->CTReadFile((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_260_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1LHCCrossTalk*) G__getstructoffset())->CalibLHCCrossTalk((A1Cal2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_260_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) A1LHCCrossTalk::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_260_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1LHCCrossTalk::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_260_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) A1LHCCrossTalk::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_260_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      A1LHCCrossTalk::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_260_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1LHCCrossTalk*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_260_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1LHCCrossTalk::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_260_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A1LHCCrossTalk::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_260_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1LHCCrossTalk::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_260_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A1LHCCrossTalk::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef A1LHCCrossTalk G__TA1LHCCrossTalk;
static int G__libLHCfFunction_260_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (A1LHCCrossTalk*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((A1LHCCrossTalk*) (soff+(sizeof(A1LHCCrossTalk)*i)))->~G__TA1LHCCrossTalk();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (A1LHCCrossTalk*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((A1LHCCrossTalk*) (soff))->~G__TA1LHCCrossTalk();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* A2Cal1ToCal2 */
static int G__libLHCfFunction_270_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Cal1ToCal2* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A2Cal1ToCal2[n];
     } else {
       p = new((void*) gvp) A2Cal1ToCal2[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A2Cal1ToCal2;
     } else {
       p = new((void*) gvp) A2Cal1ToCal2;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_A2Cal1ToCal2));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_270_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1ToCal2*) G__getstructoffset())->Initialize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_270_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((A2Cal1ToCal2*) G__getstructoffset())->GetADCRange());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_270_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((A2Cal1ToCal2*) G__getstructoffset())->UseADCRange((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((A2Cal1ToCal2*) G__getstructoffset())->UseADCRange();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_270_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1ToCal2*) G__getstructoffset())->ReadADCRangeTable((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_270_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1ToCal2*) G__getstructoffset())->SetADCRangeThreshold((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_270_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A2Cal1ToCal2*) G__getstructoffset())->GetADCRangeThreshold());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_270_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((A2Cal1ToCal2*) G__getstructoffset())->Convert((A2Cal1*) G__int(libp->para[0]), (A2Cal2*) G__int(libp->para[1])
, (A2Cal1*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((A2Cal1ToCal2*) G__getstructoffset())->Convert((A2Cal1*) G__int(libp->para[0]), (A2Cal2*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_270_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((A2Cal1ToCal2*) G__getstructoffset())->InverseConvert((A2Cal2*) G__int(libp->para[0]), (A2Cal1*) G__int(libp->para[1])
, (A2Cal1*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((A2Cal1ToCal2*) G__getstructoffset())->InverseConvert((A2Cal2*) G__int(libp->para[0]), (A2Cal1*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_270_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1ToCal2*) G__getstructoffset())->CalculateADC((A2Cal1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_270_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1ToCal2*) G__getstructoffset())->CheckADCOverRange((A2Cal1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_270_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1ToCal2*) G__getstructoffset())->Init());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_270_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1ToCal2*) G__getstructoffset())->Exit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_270_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1ToCal2*) G__getstructoffset())->Bor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_270_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1ToCal2*) G__getstructoffset())->Eor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_270_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1ToCal2*) G__getstructoffset())->Loop());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_270_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) A2Cal1ToCal2::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_270_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Cal1ToCal2::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_270_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) A2Cal1ToCal2::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_270_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      A2Cal1ToCal2::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_270_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const A2Cal1ToCal2*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_270_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2Cal1ToCal2*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_270_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2Cal1ToCal2*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_270_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2Cal1ToCal2*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_270_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Cal1ToCal2::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_270_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2Cal1ToCal2::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_270_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Cal1ToCal2::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_270_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2Cal1ToCal2::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfFunction_270_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   A2Cal1ToCal2* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new A2Cal1ToCal2(*(A2Cal1ToCal2*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_A2Cal1ToCal2));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef A2Cal1ToCal2 G__TA2Cal1ToCal2;
static int G__libLHCfFunction_270_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (A2Cal1ToCal2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((A2Cal1ToCal2*) (soff+(sizeof(A2Cal1ToCal2)*i)))->~G__TA2Cal1ToCal2();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (A2Cal1ToCal2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((A2Cal1ToCal2*) (soff))->~G__TA2Cal1ToCal2();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfFunction_270_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Cal1ToCal2* dest = (A2Cal1ToCal2*) G__getstructoffset();
   *dest = *(A2Cal1ToCal2*) libp->para[0].ref;
   const A2Cal1ToCal2& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SiliconGain */
static int G__libLHCfFunction_271_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SiliconGain* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SiliconGain[n];
     } else {
       p = new((void*) gvp) SiliconGain[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SiliconGain;
     } else {
       p = new((void*) gvp) SiliconGain;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_SiliconGain));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_271_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SiliconGain*) G__getstructoffset())->Initialize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_271_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SiliconGain*) G__getstructoffset())->GetType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_271_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SiliconGain*) G__getstructoffset())->SetType((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_271_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SiliconGain*) G__getstructoffset())->GetVersion());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_271_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SiliconGain*) G__getstructoffset())->SetVersion((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_271_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SiliconGain*) G__getstructoffset())->ReadTable((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_271_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SiliconGain*) G__getstructoffset())->ReadTableType1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_271_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SiliconGain*) G__getstructoffset())->WriteTable((int) G__int(libp->para[0]), (char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_271_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SiliconGain*) G__getstructoffset())->WriteTableType1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_271_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) ((SiliconGain*) G__getstructoffset())->GetGain((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((SiliconGain*) G__getstructoffset())->GetGain((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_271_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SiliconGain::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_271_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SiliconGain::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_271_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SiliconGain::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_271_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SiliconGain::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_271_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const SiliconGain*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_271_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SiliconGain*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_271_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SiliconGain*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_271_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SiliconGain*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_271_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SiliconGain::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_271_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SiliconGain::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_271_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SiliconGain::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_271_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SiliconGain::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfFunction_271_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   SiliconGain* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new SiliconGain(*(SiliconGain*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_SiliconGain));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SiliconGain G__TSiliconGain;
static int G__libLHCfFunction_271_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SiliconGain*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SiliconGain*) (soff+(sizeof(SiliconGain)*i)))->~G__TSiliconGain();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SiliconGain*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SiliconGain*) (soff))->~G__TSiliconGain();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfFunction_271_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SiliconGain* dest = (SiliconGain*) G__getstructoffset();
   *dest = *(SiliconGain*) libp->para[0].ref;
   const SiliconGain& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* A2GainCalibration */
static int G__libLHCfFunction_272_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2GainCalibration* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A2GainCalibration[n];
     } else {
       p = new((void*) gvp) A2GainCalibration[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A2GainCalibration;
     } else {
       p = new((void*) gvp) A2GainCalibration;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_A2GainCalibration));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2GainCalibration*) G__getstructoffset())->Initialize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2GainCalibration*) G__getstructoffset())->SetPdefFactorPMT((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2GainCalibration*) G__getstructoffset())->SetPdefFactorSilicon((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2GainCalibration*) G__getstructoffset())->SetPdefFactorFC((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A2GainCalibration*) G__getstructoffset())->GetPdefFactorPMT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A2GainCalibration*) G__getstructoffset())->GetPdefFactorSilicon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A2GainCalibration*) G__getstructoffset())->GetPdefFactorFC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A2GainCalibration*) G__getstructoffset())->ReadParticleDefineTable((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A2GainCalibration*) G__getstructoffset())->ReadParticleDefineTable((char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2GainCalibration*) G__getstructoffset())->ReadPMTGainTable((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2GainCalibration*) G__getstructoffset())->ReadSiliconGainTable((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2GainCalibration*) G__getstructoffset())->ReadFCGainTable((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((A2GainCalibration*) G__getstructoffset())->GetParticleDefineTable());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((A2GainCalibration*) G__getstructoffset())->GetPMTGainTable());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((A2GainCalibration*) G__getstructoffset())->GetSiliconGainTable());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((A2GainCalibration*) G__getstructoffset())->GetFCGainTable());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2GainCalibration*) G__getstructoffset())->SetHV((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2GainCalibration*) G__getstructoffset())->SetSiliconHV((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2GainCalibration*) G__getstructoffset())->SetFCHV((int) G__int(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A2GainCalibration*) G__getstructoffset())->GetHV((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A2GainCalibration*) G__getstructoffset())->GetSiliconHV());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A2GainCalibration*) G__getstructoffset())->GetFCHV((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A2GainCalibration*) G__getstructoffset())->GetParticleADC((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A2GainCalibration*) G__getstructoffset())->ReadHVTable((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A2GainCalibration*) G__getstructoffset())->ReadHVTable((char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2GainCalibration*) G__getstructoffset())->ShowHVTable());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2GainCalibration*) G__getstructoffset())->ShowHVTable(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2GainCalibration*) G__getstructoffset())->Calculate((A2Cal2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2GainCalibration*) G__getstructoffset())->CalculatePMT((A2Cal2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2GainCalibration*) G__getstructoffset())->CalculateSilicon((A2Cal2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2GainCalibration*) G__getstructoffset())->CalculateFC((A2Cal2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2GainCalibration*) G__getstructoffset())->InverseCalculate((A2Cal2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2GainCalibration*) G__getstructoffset())->InverseCalculatePMT((A2Cal2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2GainCalibration*) G__getstructoffset())->InverseCalculateSilicon((A2Cal2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2GainCalibration*) G__getstructoffset())->InverseCalculateFC((A2Cal2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2GainCalibration*) G__getstructoffset())->Init());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2GainCalibration*) G__getstructoffset())->Exit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2GainCalibration*) G__getstructoffset())->Bor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2GainCalibration*) G__getstructoffset())->Eor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2GainCalibration*) G__getstructoffset())->Loop((A2Cal2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) A2GainCalibration::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2GainCalibration::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) A2GainCalibration::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      A2GainCalibration::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const A2GainCalibration*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2GainCalibration*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2GainCalibration*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2GainCalibration*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2GainCalibration::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2GainCalibration::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2GainCalibration::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_272_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2GainCalibration::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfFunction_272_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   A2GainCalibration* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new A2GainCalibration(*(A2GainCalibration*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_A2GainCalibration));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef A2GainCalibration G__TA2GainCalibration;
static int G__libLHCfFunction_272_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (A2GainCalibration*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((A2GainCalibration*) (soff+(sizeof(A2GainCalibration)*i)))->~G__TA2GainCalibration();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (A2GainCalibration*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((A2GainCalibration*) (soff))->~G__TA2GainCalibration();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfFunction_272_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2GainCalibration* dest = (A2GainCalibration*) G__getstructoffset();
   *dest = *(A2GainCalibration*) libp->para[0].ref;
   const A2GainCalibration& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* A2PedeSubtract */
static int G__libLHCfFunction_273_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2PedeSubtract* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A2PedeSubtract[n];
     } else {
       p = new((void*) gvp) A2PedeSubtract[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A2PedeSubtract;
     } else {
       p = new((void*) gvp) A2PedeSubtract;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_A2PedeSubtract));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_273_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2PedeSubtract*) G__getstructoffset())->Initialize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_273_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2PedeSubtract*) G__getstructoffset())->SetPedestal((A2Cal1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_273_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2PedeSubtract*) G__getstructoffset())->SetAccumNEvent((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_273_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2PedeSubtract*) G__getstructoffset())->AccumClear());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_273_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2PedeSubtract*) G__getstructoffset())->FillPedeEvent((A2Cal1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_273_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2PedeSubtract*) G__getstructoffset())->CalPedestal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_273_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A2PedeSubtract*) G__getstructoffset())->Subtract((A2Cal1*) G__int(libp->para[0]), (A2Cal1*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A2PedeSubtract*) G__getstructoffset())->Subtract((A2Cal1*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_273_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2PedeSubtract*) G__getstructoffset())->Subtraction((A2Cal1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_273_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A2PedeSubtract*) G__getstructoffset())->Subtraction1((A2Cal1*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A2PedeSubtract*) G__getstructoffset())->Subtraction1((A2Cal1*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_273_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2PedeSubtract*) G__getstructoffset())->Subtraction2((A2Cal1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_273_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((A2PedeSubtract*) G__getstructoffset())->SetOffsetSubtraction((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((A2PedeSubtract*) G__getstructoffset())->SetOffsetSubtraction();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_273_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((A2PedeSubtract*) G__getstructoffset())->GetOffsetSubtraction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_273_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A2PedeSubtract*) G__getstructoffset())->WriteFile((char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A2PedeSubtract*) G__getstructoffset())->WriteFile());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_273_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A2PedeSubtract*) G__getstructoffset())->ReadFile((char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A2PedeSubtract*) G__getstructoffset())->ReadFile());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_273_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((A2PedeSubtract*) G__getstructoffset())->GetPedestal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_273_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((A2PedeSubtract*) G__getstructoffset())->GetPedesigma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_273_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((A2PedeSubtract*) G__getstructoffset())->GetPedestal2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_273_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((A2PedeSubtract*) G__getstructoffset())->GetPedesigma2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_273_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2PedeSubtract*) G__getstructoffset())->AddSqare((A2Cal1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_273_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2PedeSubtract*) G__getstructoffset())->AddSqare2((A2Cal1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_273_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2PedeSubtract*) G__getstructoffset())->CalSigma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_273_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2PedeSubtract*) G__getstructoffset())->CalSigma2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_273_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A2PedeSubtract*) G__getstructoffset())->Init((A2Cal1*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A2PedeSubtract*) G__getstructoffset())->Init());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_273_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2PedeSubtract*) G__getstructoffset())->Exit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_273_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2PedeSubtract*) G__getstructoffset())->Bor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_273_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2PedeSubtract*) G__getstructoffset())->Eor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_273_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2PedeSubtract*) G__getstructoffset())->Loop((A2Cal1*) G__int(libp->para[0]), (A2Cal1*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_273_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) A2PedeSubtract::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_273_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2PedeSubtract::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_273_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) A2PedeSubtract::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_273_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      A2PedeSubtract::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_273_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const A2PedeSubtract*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_273_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2PedeSubtract*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_273_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2PedeSubtract*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_273_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2PedeSubtract*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_273_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2PedeSubtract::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_273_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2PedeSubtract::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_273_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2PedeSubtract::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_273_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2PedeSubtract::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfFunction_273_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   A2PedeSubtract* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new A2PedeSubtract(*(A2PedeSubtract*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_A2PedeSubtract));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef A2PedeSubtract G__TA2PedeSubtract;
static int G__libLHCfFunction_273_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (A2PedeSubtract*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((A2PedeSubtract*) (soff+(sizeof(A2PedeSubtract)*i)))->~G__TA2PedeSubtract();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (A2PedeSubtract*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((A2PedeSubtract*) (soff))->~G__TA2PedeSubtract();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfFunction_273_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2PedeSubtract* dest = (A2PedeSubtract*) G__getstructoffset();
   *dest = *(A2PedeSubtract*) libp->para[0].ref;
   const A2PedeSubtract& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* A2RawToCal1 */
static int G__libLHCfFunction_282_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2RawToCal1* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A2RawToCal1[n];
     } else {
       p = new((void*) gvp) A2RawToCal1[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A2RawToCal1;
     } else {
       p = new((void*) gvp) A2RawToCal1;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_A2RawToCal1));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_282_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2RawToCal1*) G__getstructoffset())->Initialize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_282_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2RawToCal1*) G__getstructoffset())->Convert((TObject*) G__int(libp->para[0]), (A2Cal1*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_282_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2RawToCal1*) G__getstructoffset())->Convert_OP2009((A2Raw*) G__int(libp->para[0]), (A2Cal1*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_282_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2RawToCal1*) G__getstructoffset())->Convert_OP2010((A2Raw*) G__int(libp->para[0]), (A2Cal1*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_282_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2RawToCal1*) G__getstructoffset())->Convert_SPS2010((A2Raw*) G__int(libp->para[0]), (A2Cal1*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_282_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2RawToCal1*) G__getstructoffset())->Convert_pPb2013((A2Raw_pPb2013*) G__int(libp->para[0]), (A2Cal1*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_282_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2RawToCal1*) G__getstructoffset())->Convert_OP2015((A2Raw_pp2015*) G__int(libp->para[0]), (A2Cal1*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_282_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2RawToCal1*) G__getstructoffset())->Convert_pPb2016((A2Raw_pPb2016*) G__int(libp->para[0]), (A2Cal1*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_282_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2RawToCal1*) G__getstructoffset())->InverseConvert((A2Cal1*) G__int(libp->para[0]), (A2Raw*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_282_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2RawToCal1*) G__getstructoffset())->InverseConvert_OP2009((A2Cal1*) G__int(libp->para[0]), (A2Raw*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_282_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2RawToCal1*) G__getstructoffset())->InverseConvert_OP2010((A2Cal1*) G__int(libp->para[0]), (A2Raw*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_282_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2RawToCal1*) G__getstructoffset())->InverseConvert_OP2015((A2Cal1*) G__int(libp->para[0]), (A2Raw*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_282_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2RawToCal1*) G__getstructoffset())->GetFormat());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_282_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2RawToCal1*) G__getstructoffset())->SetFormat((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_282_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2RawToCal1*) G__getstructoffset())->SerFormatOp2009();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_282_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2RawToCal1*) G__getstructoffset())->SerFormatOp2010();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_282_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2RawToCal1*) G__getstructoffset())->SerFormatSPS2010();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_282_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2RawToCal1*) G__getstructoffset())->SerFormatOp2015();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_282_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 104, (long) ((A2RawToCal1*) G__getstructoffset())->CounterFilter((unsigned int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 104, (long) ((A2RawToCal1*) G__getstructoffset())->CounterFilter((unsigned int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_282_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((A2RawToCal1*) G__getstructoffset())->CounterCombine((unsigned int*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_282_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2RawToCal1*) G__getstructoffset())->Init());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_282_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2RawToCal1*) G__getstructoffset())->Exit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_282_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2RawToCal1*) G__getstructoffset())->Bor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_282_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2RawToCal1*) G__getstructoffset())->Eor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_282_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2RawToCal1*) G__getstructoffset())->Loop());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_282_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) A2RawToCal1::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_282_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2RawToCal1::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_282_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) A2RawToCal1::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_282_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      A2RawToCal1::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_282_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const A2RawToCal1*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_282_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2RawToCal1*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_282_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2RawToCal1*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_282_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2RawToCal1*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_282_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2RawToCal1::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_282_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2RawToCal1::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_282_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2RawToCal1::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_282_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2RawToCal1::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfFunction_282_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   A2RawToCal1* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new A2RawToCal1(*(A2RawToCal1*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_A2RawToCal1));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef A2RawToCal1 G__TA2RawToCal1;
static int G__libLHCfFunction_282_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (A2RawToCal1*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((A2RawToCal1*) (soff+(sizeof(A2RawToCal1)*i)))->~G__TA2RawToCal1();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (A2RawToCal1*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((A2RawToCal1*) (soff))->~G__TA2RawToCal1();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfFunction_282_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2RawToCal1* dest = (A2RawToCal1*) G__getstructoffset();
   *dest = *(A2RawToCal1*) libp->para[0].ref;
   const A2RawToCal1& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* A2RawToCal1Silicon */
static int G__libLHCfFunction_318_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2RawToCal1Silicon* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A2RawToCal1Silicon[n];
     } else {
       p = new((void*) gvp) A2RawToCal1Silicon[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A2RawToCal1Silicon;
     } else {
       p = new((void*) gvp) A2RawToCal1Silicon;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_A2RawToCal1Silicon));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_318_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2RawToCal1Silicon*) G__getstructoffset())->Initialize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_318_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2RawToCal1Silicon*) G__getstructoffset())->Convert((TObject*) G__int(libp->para[0]), (A2Cal1*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_318_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2RawToCal1Silicon*) G__getstructoffset())->Convert_pp2010((A2Raw*) G__int(libp->para[0]), (A2Cal1*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_318_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2RawToCal1Silicon*) G__getstructoffset())->Convert_pPb2013((A2Raw_pPb2013*) G__int(libp->para[0]), (A2Cal1*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_318_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2RawToCal1Silicon*) G__getstructoffset())->Convert_pp2015((A2Raw_pp2015*) G__int(libp->para[0]), (A2Cal1*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_318_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2RawToCal1Silicon*) G__getstructoffset())->Convert_pPb2016((A2Raw_pPb2016*) G__int(libp->para[0]), (A2Cal1*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_318_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2RawToCal1Silicon*) G__getstructoffset())->hyb_seq_decode((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int*) G__int(libp->para[2]), (int*) G__int(libp->para[3])
, (int*) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_318_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2RawToCal1Silicon*) G__getstructoffset())->define_hyb_seq();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_318_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2RawToCal1Silicon*) G__getstructoffset())->define_hyb_seq_pp2015();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_318_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((A2RawToCal1Silicon*) G__getstructoffset())->read_hyb_seq((char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((A2RawToCal1Silicon*) G__getstructoffset())->read_hyb_seq();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_318_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2RawToCal1Silicon*) G__getstructoffset())->ExtractData();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_318_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2RawToCal1Silicon*) G__getstructoffset())->EventChk());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_318_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2RawToCal1Silicon*) G__getstructoffset())->checkSR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_318_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2RawToCal1Silicon*) G__getstructoffset())->Check_id_board());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_318_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2RawToCal1Silicon*) G__getstructoffset())->CRC8_InitChecksum((unsigned char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_318_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2RawToCal1Silicon*) G__getstructoffset())->CRC8_Update((unsigned char*) G__int(libp->para[0]), (const unsigned char) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_318_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2RawToCal1Silicon*) G__getstructoffset())->CRC8_UpdateChecksum((unsigned char*) G__int(libp->para[0]), (void*) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_318_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2RawToCal1Silicon*) G__getstructoffset())->CRC8_FinishChecksum((unsigned char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_318_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((A2RawToCal1Silicon*) G__getstructoffset())->CRC8_BlockChecksum((void*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_318_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((A2RawToCal1Silicon*) G__getstructoffset())->ErrorDecode();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_318_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) A2RawToCal1Silicon::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_318_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2RawToCal1Silicon::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_318_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) A2RawToCal1Silicon::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_318_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      A2RawToCal1Silicon::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_318_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const A2RawToCal1Silicon*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_318_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2RawToCal1Silicon*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_318_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2RawToCal1Silicon*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_318_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2RawToCal1Silicon*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_318_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2RawToCal1Silicon::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_318_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2RawToCal1Silicon::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_318_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2RawToCal1Silicon::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_318_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2RawToCal1Silicon::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfFunction_318_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   A2RawToCal1Silicon* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new A2RawToCal1Silicon(*(A2RawToCal1Silicon*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_A2RawToCal1Silicon));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef A2RawToCal1Silicon G__TA2RawToCal1Silicon;
static int G__libLHCfFunction_318_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (A2RawToCal1Silicon*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((A2RawToCal1Silicon*) (soff+(sizeof(A2RawToCal1Silicon)*i)))->~G__TA2RawToCal1Silicon();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (A2RawToCal1Silicon*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((A2RawToCal1Silicon*) (soff))->~G__TA2RawToCal1Silicon();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfFunction_318_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2RawToCal1Silicon* dest = (A2RawToCal1Silicon*) G__getstructoffset();
   *dest = *(A2RawToCal1Silicon*) libp->para[0].ref;
   const A2RawToCal1Silicon& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Arm2Hit */
// automatic default constructor
static int G__libLHCfFunction_319_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Arm2Hit *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Arm2Hit[n];
     } else {
       p = new((void*) gvp) Arm2Hit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Arm2Hit;
     } else {
       p = new((void*) gvp) Arm2Hit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_Arm2Hit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfFunction_319_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Arm2Hit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Arm2Hit(*(Arm2Hit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_Arm2Hit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Arm2Hit G__TArm2Hit;
static int G__libLHCfFunction_319_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Arm2Hit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Arm2Hit*) (soff+(sizeof(Arm2Hit)*i)))->~G__TArm2Hit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Arm2Hit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Arm2Hit*) (soff))->~G__TArm2Hit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfFunction_319_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Arm2Hit* dest = (Arm2Hit*) G__getstructoffset();
   *dest = *(Arm2Hit*) libp->para[0].ref;
   const Arm2Hit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Arm2Alignment */
static int G__libLHCfFunction_320_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Arm2Alignment* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Arm2Alignment((double) G__double(libp->para[0]));
   } else {
     p = new((void*) gvp) Arm2Alignment((double) G__double(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_Arm2Alignment));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_320_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Arm2Alignment* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Arm2Alignment[n];
     } else {
       p = new((void*) gvp) Arm2Alignment[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Arm2Alignment;
     } else {
       p = new((void*) gvp) Arm2Alignment;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_Arm2Alignment));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_320_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Arm2Alignment*) G__getstructoffset())->Init());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_320_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Arm2Alignment*) G__getstructoffset())->ClearHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_320_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Arm2Alignment*) G__getstructoffset())->SetRawHit((int) G__int(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_320_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Arm2Alignment*) G__getstructoffset())->SetRawHit((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_320_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Arm2Alignment*) G__getstructoffset())->SetPos((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_320_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Arm2Alignment*) G__getstructoffset())->GetPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_320_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         Arm2Hit* pobj;
         Arm2Hit xobj = ((Arm2Alignment*) G__getstructoffset())->GetHit();
         pobj = new Arm2Hit(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_320_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         Arm2Hit* pobj;
         Arm2Hit xobj = ((Arm2Alignment*) G__getstructoffset())->Strip2Coord();
         pobj = new Arm2Hit(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_320_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Arm2Alignment::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_320_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Arm2Alignment::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_320_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Arm2Alignment::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_320_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Arm2Alignment::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_320_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const Arm2Alignment*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_320_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Arm2Alignment*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_320_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Arm2Alignment*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_320_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Arm2Alignment*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_320_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Arm2Alignment::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_320_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Arm2Alignment::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_320_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Arm2Alignment::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_320_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Arm2Alignment::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfFunction_320_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Arm2Alignment* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Arm2Alignment(*(Arm2Alignment*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_Arm2Alignment));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Arm2Alignment G__TArm2Alignment;
static int G__libLHCfFunction_320_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Arm2Alignment*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Arm2Alignment*) (soff+(sizeof(Arm2Alignment)*i)))->~G__TArm2Alignment();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Arm2Alignment*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Arm2Alignment*) (soff))->~G__TArm2Alignment();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfFunction_320_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Arm2Alignment* dest = (Arm2Alignment*) G__getstructoffset();
   *dest = *(Arm2Alignment*) libp->para[0].ref;
   const Arm2Alignment& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MyFilePath */
static int G__libLHCfFunction_321_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyFilePath* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyFilePath[n];
     } else {
       p = new((void*) gvp) MyFilePath[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MyFilePath;
     } else {
       p = new((void*) gvp) MyFilePath;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_MyFilePath));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_321_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyFilePath* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new MyFilePath((char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) MyFilePath((char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_MyFilePath));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_321_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MyFilePath*) G__getstructoffset())->SetBase((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_321_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((MyFilePath*) G__getstructoffset())->SetDirectory((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_321_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((MyFilePath*) G__getstructoffset())->GetPath((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfFunction_321_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MyFilePath* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MyFilePath(*(MyFilePath*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_MyFilePath));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MyFilePath G__TMyFilePath;
static int G__libLHCfFunction_321_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MyFilePath*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MyFilePath*) (soff+(sizeof(MyFilePath)*i)))->~G__TMyFilePath();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MyFilePath*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MyFilePath*) (soff))->~G__TMyFilePath();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfFunction_321_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MyFilePath* dest = (MyFilePath*) G__getstructoffset();
   *dest = *(MyFilePath*) libp->para[0].ref;
   const MyFilePath& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SimpleList */
static int G__libLHCfFunction_322_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SimpleList* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SimpleList[n];
     } else {
       p = new((void*) gvp) SimpleList[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SimpleList;
     } else {
       p = new((void*) gvp) SimpleList;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_SimpleList));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_322_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SimpleList* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SimpleList((char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) SimpleList((char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_SimpleList));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_322_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SimpleList*) G__getstructoffset())->Open((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_322_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((SimpleList*) G__getstructoffset())->Get((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_322_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SimpleList*) G__getstructoffset())->GetNlist());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfFunction_322_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   SimpleList* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new SimpleList(*(SimpleList*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_SimpleList));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SimpleList G__TSimpleList;
static int G__libLHCfFunction_322_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SimpleList*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SimpleList*) (soff+(sizeof(SimpleList)*i)))->~G__TSimpleList();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SimpleList*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SimpleList*) (soff))->~G__TSimpleList();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfFunction_322_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SimpleList* dest = (SimpleList*) G__getstructoffset();
   *dest = *(SimpleList*) libp->para[0].ref;
   const SimpleList& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StructFiberPos */
static int G__libLHCfFunction_323_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StructFiberPos* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StructFiberPos[n];
     } else {
       p = new((void*) gvp) StructFiberPos[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StructFiberPos;
     } else {
       p = new((void*) gvp) StructFiberPos;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_StructFiberPos));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_323_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StructFiberPos::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_323_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StructFiberPos::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_323_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StructFiberPos::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_323_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StructFiberPos::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_323_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StructFiberPos*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_323_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StructFiberPos*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_323_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StructFiberPos*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_323_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StructFiberPos*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_323_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StructFiberPos::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_323_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StructFiberPos::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_323_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StructFiberPos::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_323_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StructFiberPos::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfFunction_323_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StructFiberPos* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StructFiberPos(*(StructFiberPos*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_StructFiberPos));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StructFiberPos G__TStructFiberPos;
static int G__libLHCfFunction_323_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StructFiberPos*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StructFiberPos*) (soff+(sizeof(StructFiberPos)*i)))->~G__TStructFiberPos();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StructFiberPos*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StructFiberPos*) (soff))->~G__TStructFiberPos();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfFunction_323_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StructFiberPos* dest = (StructFiberPos*) G__getstructoffset();
   *dest = *(StructFiberPos*) libp->para[0].ref;
   const StructFiberPos& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ConScifiPosition */
static int G__libLHCfFunction_324_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ConScifiPosition* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ConScifiPosition[n];
     } else {
       p = new((void*) gvp) ConScifiPosition[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ConScifiPosition;
     } else {
       p = new((void*) gvp) ConScifiPosition;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_ConScifiPosition));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_324_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ConScifiPosition* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ConScifiPosition((char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) ConScifiPosition((char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_ConScifiPosition));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_324_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConScifiPosition*) G__getstructoffset())->Initialize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_324_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConScifiPosition*) G__getstructoffset())->ReadFile((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_324_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((ConScifiPosition*) G__getstructoffset())->WriteFile((int) G__int(libp->para[0]), (char*) G__int(libp->para[1])
, (char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((ConScifiPosition*) G__getstructoffset())->WriteFile((int) G__int(libp->para[0]), (char*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_324_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ConScifiPosition*) G__getstructoffset())->GetFiberOriginX((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_324_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ConScifiPosition*) G__getstructoffset())->GetFiberOriginY((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_324_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ConScifiPosition*) G__getstructoffset())->GetFiberWidth((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_324_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ConScifiPosition*) G__getstructoffset())->GetFiberLength((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_324_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ConScifiPosition*) G__getstructoffset())->GetFiberDirection((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_324_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letdouble(result7, 100, (double) ((ConScifiPosition*) G__getstructoffset())->GetCenterPosition((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (double) G__double(libp->para[4])));
      break;
   case 4:
      G__letdouble(result7, 100, (double) ((ConScifiPosition*) G__getstructoffset())->GetCenterPosition((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_324_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ConScifiPosition*) G__getstructoffset())->CalPos2FiberPosX((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_324_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ConScifiPosition*) G__getstructoffset())->CalPos2FiberPosY((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_324_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConScifiPosition*) G__getstructoffset())->CalPos2FiberPos(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_324_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ConScifiPosition*) G__getstructoffset())->FiberPos2CalPosX((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_324_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ConScifiPosition*) G__getstructoffset())->FiberPos2CalPosY((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_324_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConScifiPosition*) G__getstructoffset())->FiberPos2CalPos(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (int) G__int(libp->para[7])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_324_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConScifiPosition*) G__getstructoffset())->FindFiber((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_324_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConScifiPosition*) G__getstructoffset())->it2size((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_324_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ConScifiPosition::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_324_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ConScifiPosition::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_324_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ConScifiPosition::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_324_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ConScifiPosition::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_324_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const ConScifiPosition*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_324_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ConScifiPosition*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_324_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ConScifiPosition*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_324_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ConScifiPosition*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_324_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ConScifiPosition::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_324_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ConScifiPosition::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_324_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ConScifiPosition::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_324_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ConScifiPosition::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfFunction_324_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ConScifiPosition* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ConScifiPosition(*(ConScifiPosition*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_ConScifiPosition));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ConScifiPosition G__TConScifiPosition;
static int G__libLHCfFunction_324_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ConScifiPosition*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ConScifiPosition*) (soff+(sizeof(ConScifiPosition)*i)))->~G__TConScifiPosition();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ConScifiPosition*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ConScifiPosition*) (soff))->~G__TConScifiPosition();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfFunction_324_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ConScifiPosition* dest = (ConScifiPosition*) G__getstructoffset();
   *dest = *(ConScifiPosition*) libp->para[0].ref;
   const ConScifiPosition& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ConShowerLeakage */
static int G__libLHCfFunction_332_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ConShowerLeakage* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ConShowerLeakage[n];
     } else {
       p = new((void*) gvp) ConShowerLeakage[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ConShowerLeakage;
     } else {
       p = new((void*) gvp) ConShowerLeakage;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_ConShowerLeakage));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_332_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ConShowerLeakage* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ConShowerLeakage((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ConShowerLeakage((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ConShowerLeakage((char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) ConShowerLeakage((char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_ConShowerLeakage));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_332_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConShowerLeakage*) G__getstructoffset())->Initialize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_332_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((ConShowerLeakage*) G__getstructoffset())->ReadROOTFile((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((ConShowerLeakage*) G__getstructoffset())->ReadROOTFile((char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_332_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((ConShowerLeakage*) G__getstructoffset())->WriteROOTFile((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((ConShowerLeakage*) G__getstructoffset())->WriteROOTFile((char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_332_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ConShowerLeakage*) G__getstructoffset())->GetH2map20());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_332_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ConShowerLeakage*) G__getstructoffset())->GetH2map40());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_332_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ConShowerLeakage*) G__getstructoffset())->GetH2map25());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_332_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ConShowerLeakage*) G__getstructoffset())->GetH2map32());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_332_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ConShowerLeakage*) G__getstructoffset())->GetH2map20Leakin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_332_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ConShowerLeakage*) G__getstructoffset())->GetH2map40Leakin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_332_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ConShowerLeakage*) G__getstructoffset())->GetH2map25Leakin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_332_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ConShowerLeakage*) G__getstructoffset())->GetH2map32Leakin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_332_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ConShowerLeakage*) G__getstructoffset())->GetH2param20Leakin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_332_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ConShowerLeakage*) G__getstructoffset())->GetH2param40Leakin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_332_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ConShowerLeakage*) G__getstructoffset())->GetH2param25Leakin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_332_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ConShowerLeakage*) G__getstructoffset())->GetH2param32Leakin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_332_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConShowerLeakage*) G__getstructoffset())->SetH2map20((TH2F*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_332_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConShowerLeakage*) G__getstructoffset())->SetH2map40((TH2F*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_332_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConShowerLeakage*) G__getstructoffset())->SetH2map25((TH2F*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_332_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConShowerLeakage*) G__getstructoffset())->SetH2map32((TH2F*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_332_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConShowerLeakage*) G__getstructoffset())->SetH2map20Leakin((TH2F*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_332_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConShowerLeakage*) G__getstructoffset())->SetH2map40Leakin((TH2F*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_332_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConShowerLeakage*) G__getstructoffset())->SetH2map25Leakin((TH2F*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_332_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConShowerLeakage*) G__getstructoffset())->SetH2map32Leakin((TH2F*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_332_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConShowerLeakage*) G__getstructoffset())->SetH2param20Leakin((TH2F*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_332_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConShowerLeakage*) G__getstructoffset())->SetH2param40Leakin((TH2F*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_332_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConShowerLeakage*) G__getstructoffset())->SetH2param25Leakin((TH2F*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_332_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConShowerLeakage*) G__getstructoffset())->SetH2param32Leakin((TH2F*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_332_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letdouble(result7, 100, (double) ((ConShowerLeakage*) G__getstructoffset())->GetFactor((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (char*) G__int(libp->para[4])));
      break;
   case 4:
      G__letdouble(result7, 100, (double) ((ConShowerLeakage*) G__getstructoffset())->GetFactor((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_332_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ConShowerLeakage*) G__getstructoffset())->GetLeakFactor((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_332_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ConShowerLeakage*) G__getstructoffset())->GetLeakinFactor((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_332_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ConShowerLeakage*) G__getstructoffset())->GetLeakinParam((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_332_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((ConShowerLeakage*) G__getstructoffset())->Draw((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((ConShowerLeakage*) G__getstructoffset())->Draw((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_332_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ConShowerLeakage*) G__getstructoffset())->DrawAll((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_332_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ConShowerLeakage::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_332_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ConShowerLeakage::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_332_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ConShowerLeakage::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_332_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ConShowerLeakage::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_332_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const ConShowerLeakage*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_332_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ConShowerLeakage*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_332_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ConShowerLeakage*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_332_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ConShowerLeakage*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_332_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ConShowerLeakage::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_332_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ConShowerLeakage::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_332_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ConShowerLeakage::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_332_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ConShowerLeakage::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfFunction_332_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ConShowerLeakage* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ConShowerLeakage(*(ConShowerLeakage*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_ConShowerLeakage));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ConShowerLeakage G__TConShowerLeakage;
static int G__libLHCfFunction_332_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ConShowerLeakage*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ConShowerLeakage*) (soff+(sizeof(ConShowerLeakage)*i)))->~G__TConShowerLeakage();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ConShowerLeakage*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ConShowerLeakage*) (soff))->~G__TConShowerLeakage();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfFunction_332_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ConShowerLeakage* dest = (ConShowerLeakage*) G__getstructoffset();
   *dest = *(ConShowerLeakage*) libp->para[0].ref;
   const ConShowerLeakage& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* LHCfRunInfo */
static int G__libLHCfFunction_333_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LHCfRunInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LHCfRunInfo[n];
     } else {
       p = new((void*) gvp) LHCfRunInfo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LHCfRunInfo;
     } else {
       p = new((void*) gvp) LHCfRunInfo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_LHCfRunInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_333_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LHCfRunInfo*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_333_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((LHCfRunInfo*) G__getstructoffset())->clear_general((char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((LHCfRunInfo*) G__getstructoffset())->clear_general();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_333_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((LHCfRunInfo*) G__getstructoffset())->clear_daq((char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((LHCfRunInfo*) G__getstructoffset())->clear_daq();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_333_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((LHCfRunInfo*) G__getstructoffset())->clear_nevents((char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((LHCfRunInfo*) G__getstructoffset())->clear_nevents();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_333_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((LHCfRunInfo*) G__getstructoffset())->clear_beam((char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((LHCfRunInfo*) G__getstructoffset())->clear_beam();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_333_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((LHCfRunInfo*) G__getstructoffset())->clear_analysis((char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((LHCfRunInfo*) G__getstructoffset())->clear_analysis();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_333_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((LHCfRunInfo*) G__getstructoffset())->WriteFile((char*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((LHCfRunInfo*) G__getstructoffset())->WriteFile((char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_333_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((LHCfRunInfo*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref, (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((LHCfRunInfo*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref));
      break;
   case 0:
      G__letint(result7, 105, (long) ((LHCfRunInfo*) G__getstructoffset())->Print());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_333_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((LHCfRunInfo*) G__getstructoffset())->PrintGeneral(*(ostream*) libp->para[0].ref, (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((LHCfRunInfo*) G__getstructoffset())->PrintGeneral(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
      break;
   case 0:
      ((LHCfRunInfo*) G__getstructoffset())->PrintGeneral();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_333_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((LHCfRunInfo*) G__getstructoffset())->PrintDAQ(*(ostream*) libp->para[0].ref, (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((LHCfRunInfo*) G__getstructoffset())->PrintDAQ(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
      break;
   case 0:
      ((LHCfRunInfo*) G__getstructoffset())->PrintDAQ();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_333_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((LHCfRunInfo*) G__getstructoffset())->PrintNEvents(*(ostream*) libp->para[0].ref, (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((LHCfRunInfo*) G__getstructoffset())->PrintNEvents(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
      break;
   case 0:
      ((LHCfRunInfo*) G__getstructoffset())->PrintNEvents();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_333_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((LHCfRunInfo*) G__getstructoffset())->PrintBeam(*(ostream*) libp->para[0].ref, (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((LHCfRunInfo*) G__getstructoffset())->PrintBeam(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
      break;
   case 0:
      ((LHCfRunInfo*) G__getstructoffset())->PrintBeam();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_333_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((LHCfRunInfo*) G__getstructoffset())->PrintAnalysis(*(ostream*) libp->para[0].ref, (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((LHCfRunInfo*) G__getstructoffset())->PrintAnalysis(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
      break;
   case 0:
      ((LHCfRunInfo*) G__getstructoffset())->PrintAnalysis();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_333_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfRunInfo*) G__getstructoffset())->Read(*(istream*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_333_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfRunInfo*) G__getstructoffset())->ReadFile((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_333_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LHCfRunInfo*) G__getstructoffset())->removespace(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_333_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfRunInfo*) G__getstructoffset())->IndexToBunch((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_333_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfRunInfo*) G__getstructoffset())->BunchToIndex((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_333_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfRunInfo*) G__getstructoffset())->CountBCtoBunch((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_333_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfRunInfo*) G__getstructoffset())->CountBCtoIndex((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_333_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfRunInfo*) G__getstructoffset())->GetBunchTagByIndex((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_333_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfRunInfo*) G__getstructoffset())->GetBunchTag((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_333_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfRunInfo*) G__getstructoffset())->GetBunchTagByCountBC((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_333_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfRunInfo*) G__getstructoffset())->GetBunchTag((A1Cal1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_333_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfRunInfo*) G__getstructoffset())->GetBunchTag((A2Cal1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_333_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfRunInfo*) G__getstructoffset())->CheckTime((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_333_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfRunInfo*) G__getstructoffset())->CheckTime((A1Cal1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_333_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfRunInfo*) G__getstructoffset())->CheckTime((A1Cal2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_333_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfRunInfo*) G__getstructoffset())->CheckTime((A2Cal1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_333_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfRunInfo*) G__getstructoffset())->CheckTime((A2Cal2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_333_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfRunInfo*) G__getstructoffset())->CheckBunchQuality((A1Cal1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_333_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfRunInfo*) G__getstructoffset())->CheckBunchQuality((A2Cal1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_333_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((LHCfRunInfo*) G__getstructoffset())->CutdownGPIOSetup((char*) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_333_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) LHCfRunInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_333_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LHCfRunInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_333_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) LHCfRunInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_333_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      LHCfRunInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_333_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const LHCfRunInfo*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_333_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LHCfRunInfo*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_333_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LHCfRunInfo*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_333_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LHCfRunInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_333_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LHCfRunInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_333_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LHCfRunInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_333_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LHCfRunInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_333_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LHCfRunInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfFunction_333_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   LHCfRunInfo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new LHCfRunInfo(*(LHCfRunInfo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_LHCfRunInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef LHCfRunInfo G__TLHCfRunInfo;
static int G__libLHCfFunction_333_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (LHCfRunInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((LHCfRunInfo*) (soff+(sizeof(LHCfRunInfo)*i)))->~G__TLHCfRunInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (LHCfRunInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((LHCfRunInfo*) (soff))->~G__TLHCfRunInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfFunction_333_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LHCfRunInfo* dest = (LHCfRunInfo*) G__getstructoffset();
   *dest = *(LHCfRunInfo*) libp->para[0].ref;
   const LHCfRunInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* LHCfRunInfoTable */
static int G__libLHCfFunction_335_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LHCfRunInfoTable* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LHCfRunInfoTable[n];
     } else {
       p = new((void*) gvp) LHCfRunInfoTable[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LHCfRunInfoTable;
     } else {
       p = new((void*) gvp) LHCfRunInfoTable;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_LHCfRunInfoTable));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_335_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LHCfRunInfoTable* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LHCfRunInfoTable((char*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) LHCfRunInfoTable((char*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LHCfRunInfoTable((char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) LHCfRunInfoTable((char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_LHCfRunInfoTable));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_335_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LHCfRunInfoTable*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_335_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfRunInfoTable*) G__getstructoffset())->ReadTable((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_335_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((LHCfRunInfoTable*) G__getstructoffset())->WriteTable((char*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((LHCfRunInfoTable*) G__getstructoffset())->WriteTable((char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_335_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfRunInfoTable*) G__getstructoffset())->GetNinfo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_335_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((LHCfRunInfoTable*) G__getstructoffset())->SetRun((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_335_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((LHCfRunInfoTable*) G__getstructoffset())->GetRunInfo((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_335_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((LHCfRunInfoTable*) G__getstructoffset())->Get((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_335_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((LHCfRunInfoTable*) G__getstructoffset())->GetIinfo((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_335_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((LHCfRunInfoTable*) G__getstructoffset())->CreateInfo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_335_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) LHCfRunInfoTable::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_335_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LHCfRunInfoTable::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_335_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) LHCfRunInfoTable::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_335_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      LHCfRunInfoTable::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_335_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const LHCfRunInfoTable*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_335_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LHCfRunInfoTable*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_335_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LHCfRunInfoTable*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_335_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LHCfRunInfoTable*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_335_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LHCfRunInfoTable::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_335_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LHCfRunInfoTable::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_335_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LHCfRunInfoTable::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_335_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LHCfRunInfoTable::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfFunction_335_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   LHCfRunInfoTable* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new LHCfRunInfoTable(*(LHCfRunInfoTable*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_LHCfRunInfoTable));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef LHCfRunInfoTable G__TLHCfRunInfoTable;
static int G__libLHCfFunction_335_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (LHCfRunInfoTable*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((LHCfRunInfoTable*) (soff+(sizeof(LHCfRunInfoTable)*i)))->~G__TLHCfRunInfoTable();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (LHCfRunInfoTable*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((LHCfRunInfoTable*) (soff))->~G__TLHCfRunInfoTable();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfFunction_335_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LHCfRunInfoTable* dest = (LHCfRunInfoTable*) G__getstructoffset();
   *dest = *(LHCfRunInfoTable*) libp->para[0].ref;
   const LHCfRunInfoTable& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* PMTSatu */
static int G__libLHCfFunction_340_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PMTSatu* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PMTSatu[n];
     } else {
       p = new((void*) gvp) PMTSatu[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PMTSatu;
     } else {
       p = new((void*) gvp) PMTSatu;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_PMTSatu));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_340_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PMTSatu* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new PMTSatu((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) PMTSatu((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_PMTSatu));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_340_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PMTSatu*) G__getstructoffset())->Init((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_340_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PMTSatu*) G__getstructoffset())->FillPMTTable());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_340_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PMTSatu*) G__getstructoffset())->FillParamTable());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_340_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PMTSatu*) G__getstructoffset())->FindPMT((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_340_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PMTSatu*) G__getstructoffset())->GetParam((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_340_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PMTSatu*) G__getstructoffset())->GetIHV((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_340_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((PMTSatu*) G__getstructoffset())->ADC2ADC((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (double) G__double(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_340_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((PMTSatu*) G__getstructoffset())->InvADC2ADC((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (double) G__double(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_340_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((PMTSatu*) G__getstructoffset())->GetParamSpoint((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_340_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((PMTSatu*) G__getstructoffset())->GetParamSlope((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_340_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((PMTSatu*) G__getstructoffset())->GetParamCoef2nd((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_340_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PMTSatu::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_340_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PMTSatu::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_340_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) PMTSatu::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_340_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PMTSatu::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_340_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const PMTSatu*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_340_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PMTSatu*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_340_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PMTSatu*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_340_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PMTSatu*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_340_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PMTSatu::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_340_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PMTSatu::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_340_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PMTSatu::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_340_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PMTSatu::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfFunction_340_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   PMTSatu* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new PMTSatu(*(PMTSatu*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_PMTSatu));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef PMTSatu G__TPMTSatu;
static int G__libLHCfFunction_340_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (PMTSatu*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((PMTSatu*) (soff+(sizeof(PMTSatu)*i)))->~G__TPMTSatu();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (PMTSatu*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((PMTSatu*) (soff))->~G__TPMTSatu();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfFunction_340_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PMTSatu* dest = (PMTSatu*) G__getstructoffset();
   *dest = *(PMTSatu*) libp->para[0].ref;
   const PMTSatu& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* PMTSatuCorrection */
static int G__libLHCfFunction_342_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PMTSatuCorrection* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PMTSatuCorrection[n];
     } else {
       p = new((void*) gvp) PMTSatuCorrection[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PMTSatuCorrection;
     } else {
       p = new((void*) gvp) PMTSatuCorrection;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_PMTSatuCorrection));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_342_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PMTSatuCorrection* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new PMTSatuCorrection((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) PMTSatuCorrection((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_PMTSatuCorrection));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_342_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((PMTSatuCorrection*) G__getstructoffset())->Initialize((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((PMTSatuCorrection*) G__getstructoffset())->Initialize((char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((PMTSatuCorrection*) G__getstructoffset())->Initialize());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_342_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PMTSatuCorrection*) G__getstructoffset())->ReadHVTable((A1GainCalibration*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_342_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PMTSatuCorrection*) G__getstructoffset())->ReadHVTable((A2GainCalibration*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_342_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((PMTSatuCorrection*) G__getstructoffset())->ReadHVTable((char*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((PMTSatuCorrection*) G__getstructoffset())->ReadHVTable((char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_342_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PMTSatuCorrection*) G__getstructoffset())->Calculate((A1Cal1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_342_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PMTSatuCorrection*) G__getstructoffset())->Calculate((A2Cal1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_342_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PMTSatuCorrection*) G__getstructoffset())->Calculate((A1Cal2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_342_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PMTSatuCorrection*) G__getstructoffset())->Calculate((A2Cal2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_342_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PMTSatuCorrection*) G__getstructoffset())->Correct((A1Cal1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_342_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PMTSatuCorrection*) G__getstructoffset())->Correct((A2Cal1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_342_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PMTSatuCorrection*) G__getstructoffset())->Correct((A1Cal2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_342_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PMTSatuCorrection*) G__getstructoffset())->Correct((A2Cal2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_342_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PMTSatuCorrection*) G__getstructoffset())->InvCalculate((A1Cal1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_342_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PMTSatuCorrection*) G__getstructoffset())->InvCalculate((A2Cal1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_342_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PMTSatuCorrection*) G__getstructoffset())->InvCalculate((A1Cal2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_342_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PMTSatuCorrection*) G__getstructoffset())->InvCalculate((A2Cal2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_342_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PMTSatuCorrection::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_342_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PMTSatuCorrection::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_342_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) PMTSatuCorrection::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_342_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PMTSatuCorrection::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_342_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PMTSatuCorrection*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_342_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PMTSatuCorrection::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_342_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PMTSatuCorrection::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_342_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PMTSatuCorrection::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_342_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PMTSatuCorrection::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfFunction_342_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   PMTSatuCorrection* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new PMTSatuCorrection(*(PMTSatuCorrection*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_PMTSatuCorrection));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef PMTSatuCorrection G__TPMTSatuCorrection;
static int G__libLHCfFunction_342_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (PMTSatuCorrection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((PMTSatuCorrection*) (soff+(sizeof(PMTSatuCorrection)*i)))->~G__TPMTSatuCorrection();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (PMTSatuCorrection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((PMTSatuCorrection*) (soff))->~G__TPMTSatuCorrection();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfFunction_342_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PMTSatuCorrection* dest = (PMTSatuCorrection*) G__getstructoffset();
   *dest = *(PMTSatuCorrection*) libp->para[0].ref;
   const PMTSatuCorrection& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ParticleID01 */
static int G__libLHCfFunction_343_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ParticleID01* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ParticleID01[n];
     } else {
       p = new((void*) gvp) ParticleID01[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ParticleID01;
     } else {
       p = new((void*) gvp) ParticleID01;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_ParticleID01));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_343_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleID01*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_343_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ParticleID01*) G__getstructoffset())->Calculate((double*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_343_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ParticleID01*) G__getstructoffset())->Calculate((A1Cal2*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_343_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ParticleID01*) G__getstructoffset())->Calculate((A2Cal2*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_343_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ParticleID01*) G__getstructoffset())->GetL20((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_343_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ParticleID01*) G__getstructoffset())->GetL95((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_343_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ParticleID01*) G__getstructoffset())->GetL90((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_343_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ParticleID01*) G__getstructoffset())->GetShowerLength((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_343_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ParticleID01*) G__getstructoffset())->LayerToX((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_343_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ParticleID01*) G__getstructoffset())->GetSum((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_343_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ParticleID01::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_343_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ParticleID01::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_343_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ParticleID01::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_343_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ParticleID01::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_343_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const ParticleID01*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_343_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleID01*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_343_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleID01*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_343_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleID01*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_343_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ParticleID01::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_343_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ParticleID01::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_343_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ParticleID01::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_343_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ParticleID01::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfFunction_343_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ParticleID01* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ParticleID01(*(ParticleID01*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_ParticleID01));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ParticleID01 G__TParticleID01;
static int G__libLHCfFunction_343_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ParticleID01*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ParticleID01*) (soff+(sizeof(ParticleID01)*i)))->~G__TParticleID01();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ParticleID01*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ParticleID01*) (soff))->~G__TParticleID01();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfFunction_343_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ParticleID01* dest = (ParticleID01*) G__getstructoffset();
   *dest = *(ParticleID01*) libp->para[0].ref;
   const ParticleID01& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ParticleID02 */
static int G__libLHCfFunction_344_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ParticleID02* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ParticleID02[n];
     } else {
       p = new((void*) gvp) ParticleID02[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ParticleID02;
     } else {
       p = new((void*) gvp) ParticleID02;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_ParticleID02));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_344_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ParticleID02*) G__getstructoffset())->Cal2SumLayer((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_344_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ParticleID02*) G__getstructoffset())->Cal2PosdE((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_344_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ParticleID02*) G__getstructoffset())->CalPosition((double*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_344_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ParticleID02::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_344_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ParticleID02::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_344_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ParticleID02::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_344_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ParticleID02::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_344_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ParticleID02*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_344_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ParticleID02::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_344_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ParticleID02::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_344_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ParticleID02::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_344_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ParticleID02::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfFunction_344_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ParticleID02* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ParticleID02(*(ParticleID02*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_ParticleID02));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ParticleID02 G__TParticleID02;
static int G__libLHCfFunction_344_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ParticleID02*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ParticleID02*) (soff+(sizeof(ParticleID02)*i)))->~G__TParticleID02();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ParticleID02*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ParticleID02*) (soff))->~G__TParticleID02();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfFunction_344_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ParticleID02* dest = (ParticleID02*) G__getstructoffset();
   *dest = *(ParticleID02*) libp->para[0].ref;
   const ParticleID02& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SciFiPosCalculation */
static int G__libLHCfFunction_346_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SciFiPosCalculation* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SciFiPosCalculation[n];
     } else {
       p = new((void*) gvp) SciFiPosCalculation[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SciFiPosCalculation;
     } else {
       p = new((void*) gvp) SciFiPosCalculation;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_SciFiPosCalculation));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_346_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SciFiPosCalculation*) G__getstructoffset())->Init());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_346_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SciFiPosCalculation*) G__getstructoffset())->CalPosition((A1Cal2*) G__int(libp->para[0]), (A1Phys*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_346_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SciFiPosCalculation*) G__getstructoffset())->ReadGSObarPosTable());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_346_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SciFiPosCalculation*) G__getstructoffset())->Initialize_op2015());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_346_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SciFiPosCalculation*) G__getstructoffset())->Initialize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_346_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SciFiPosCalculation*) G__getstructoffset())->scifi_gaincalibration((A1Cal2*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_346_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SciFiPosCalculation*) G__getstructoffset())->scifipos_read((A1Cal2*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_346_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SciFiPosCalculation*) G__getstructoffset())->scifipos_fill((A1Phys*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_346_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SciFiPosCalculation::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_346_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SciFiPosCalculation::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_346_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SciFiPosCalculation::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_346_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SciFiPosCalculation::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_346_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const SciFiPosCalculation*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_346_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SciFiPosCalculation*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_346_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SciFiPosCalculation*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_346_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SciFiPosCalculation*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_346_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SciFiPosCalculation::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_346_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SciFiPosCalculation::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_346_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SciFiPosCalculation::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_346_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SciFiPosCalculation::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfFunction_346_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   SciFiPosCalculation* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new SciFiPosCalculation(*(SciFiPosCalculation*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_SciFiPosCalculation));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SciFiPosCalculation G__TSciFiPosCalculation;
static int G__libLHCfFunction_346_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SciFiPosCalculation*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SciFiPosCalculation*) (soff+(sizeof(SciFiPosCalculation)*i)))->~G__TSciFiPosCalculation();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SciFiPosCalculation*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SciFiPosCalculation*) (soff))->~G__TSciFiPosCalculation();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfFunction_346_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SciFiPosCalculation* dest = (SciFiPosCalculation*) G__getstructoffset();
   *dest = *(SciFiPosCalculation*) libp->para[0].ref;
   const SciFiPosCalculation& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ScifiIncidentPosition02 */
static int G__libLHCfFunction_424_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ScifiIncidentPosition02* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ScifiIncidentPosition02[n];
     } else {
       p = new((void*) gvp) ScifiIncidentPosition02[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ScifiIncidentPosition02;
     } else {
       p = new((void*) gvp) ScifiIncidentPosition02;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_ScifiIncidentPosition02));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_424_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ScifiIncidentPosition02* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ScifiIncidentPosition02((char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) ScifiIncidentPosition02((char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_ScifiIncidentPosition02));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_424_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ScifiIncidentPosition02*) G__getstructoffset())->Initialize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_424_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ScifiIncidentPosition02*) G__getstructoffset())->Clear());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_424_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ScifiIncidentPosition02*) G__getstructoffset())->ReadScifiPisition((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_424_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ScifiIncidentPosition02*) G__getstructoffset())->SetConScifiPosition((ConScifiPosition*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_424_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ScifiIncidentPosition02*) G__getstructoffset())->Calculate((A1Cal2*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_424_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ScifiIncidentPosition02*) G__getstructoffset())->Calculate((A1Cal2*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_424_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((ScifiIncidentPosition02*) G__getstructoffset())->GetPos((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((ScifiIncidentPosition02*) G__getstructoffset())->GetPos((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((ScifiIncidentPosition02*) G__getstructoffset())->GetPos((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((ScifiIncidentPosition02*) G__getstructoffset())->GetPos());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_424_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((ScifiIncidentPosition02*) G__getstructoffset())->GetPosX((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((ScifiIncidentPosition02*) G__getstructoffset())->GetPosX((int) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_424_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((ScifiIncidentPosition02*) G__getstructoffset())->GetPosY((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((ScifiIncidentPosition02*) G__getstructoffset())->GetPosY((int) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_424_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) ((ScifiIncidentPosition02*) G__getstructoffset())->GetQParam((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((ScifiIncidentPosition02*) G__getstructoffset())->GetQParam((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((ScifiIncidentPosition02*) G__getstructoffset())->GetQParam((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((ScifiIncidentPosition02*) G__getstructoffset())->GetQParam((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((ScifiIncidentPosition02*) G__getstructoffset())->GetQParam());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_424_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ScifiIncidentPosition02*) G__getstructoffset())->SetQParam((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (double) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_424_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((ScifiIncidentPosition02*) G__getstructoffset())->GetBaseFluctuation((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((ScifiIncidentPosition02*) G__getstructoffset())->GetBaseFluctuation((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((ScifiIncidentPosition02*) G__getstructoffset())->GetBaseFluctuation((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((ScifiIncidentPosition02*) G__getstructoffset())->GetBaseFluctuation());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_424_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ScifiIncidentPosition02*) G__getstructoffset())->SetBaseFluctuation((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_424_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ScifiIncidentPosition02*) G__getstructoffset())->SetBaseFluctuation((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_424_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ScifiIncidentPosition02*) G__getstructoffset())->GetFunction((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_424_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ScifiIncidentPosition02*) G__getstructoffset())->SetGraph((A1Cal2*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_424_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ScifiIncidentPosition02*) G__getstructoffset())->Draw((A1Cal2*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_424_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ScifiIncidentPosition02::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_424_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ScifiIncidentPosition02::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_424_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ScifiIncidentPosition02::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_424_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ScifiIncidentPosition02::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_424_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const ScifiIncidentPosition02*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_424_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ScifiIncidentPosition02*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_424_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ScifiIncidentPosition02*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_424_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ScifiIncidentPosition02*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_424_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ScifiIncidentPosition02::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_424_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ScifiIncidentPosition02::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_424_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ScifiIncidentPosition02::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_424_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ScifiIncidentPosition02::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfFunction_424_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ScifiIncidentPosition02* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ScifiIncidentPosition02(*(ScifiIncidentPosition02*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_ScifiIncidentPosition02));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ScifiIncidentPosition02 G__TScifiIncidentPosition02;
static int G__libLHCfFunction_424_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ScifiIncidentPosition02*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ScifiIncidentPosition02*) (soff+(sizeof(ScifiIncidentPosition02)*i)))->~G__TScifiIncidentPosition02();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ScifiIncidentPosition02*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ScifiIncidentPosition02*) (soff))->~G__TScifiIncidentPosition02();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfFunction_424_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ScifiIncidentPosition02* dest = (ScifiIncidentPosition02*) G__getstructoffset();
   *dest = *(ScifiIncidentPosition02*) libp->para[0].ref;
   const ScifiIncidentPosition02& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ScintiPosDependence */
static int G__libLHCfFunction_425_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ScintiPosDependence* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ScintiPosDependence[n];
     } else {
       p = new((void*) gvp) ScintiPosDependence[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ScintiPosDependence;
     } else {
       p = new((void*) gvp) ScintiPosDependence;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_ScintiPosDependence));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_425_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ScintiPosDependence* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ScintiPosDependence((char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) ScintiPosDependence((char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_ScintiPosDependence));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_425_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ScintiPosDependence*) G__getstructoffset())->Initialize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_425_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ScintiPosDependence*) G__getstructoffset())->ReadFile((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_425_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ScintiPosDependence*) G__getstructoffset())->GetFunctionFactor((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_425_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ScintiPosDependence*) G__getstructoffset())->GetFunctionFactor((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_425_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ScintiPosDependence*) G__getstructoffset())->SetFunctionFactor((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_425_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ScintiPosDependence*) G__getstructoffset())->SetFunctionFactor((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (double) G__double(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_425_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ScintiPosDependence*) G__getstructoffset())->GetEfficiency((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_425_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((ScintiPosDependence*) G__getstructoffset())->GetEfficiency((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_425_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ScintiPosDependence*) G__getstructoffset())->Calibration((A1Cal2*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_425_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ScintiPosDependence*) G__getstructoffset())->Calibration((A2Cal2*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_425_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ScintiPosDependence::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_425_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ScintiPosDependence::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_425_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ScintiPosDependence::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_425_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ScintiPosDependence::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_425_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const ScintiPosDependence*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_425_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ScintiPosDependence*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_425_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ScintiPosDependence*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_425_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ScintiPosDependence*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_425_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ScintiPosDependence::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_425_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ScintiPosDependence::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_425_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ScintiPosDependence::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_425_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ScintiPosDependence::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfFunction_425_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ScintiPosDependence* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ScintiPosDependence(*(ScintiPosDependence*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_ScintiPosDependence));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ScintiPosDependence G__TScintiPosDependence;
static int G__libLHCfFunction_425_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ScintiPosDependence*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ScintiPosDependence*) (soff+(sizeof(ScintiPosDependence)*i)))->~G__TScintiPosDependence();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ScintiPosDependence*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ScintiPosDependence*) (soff))->~G__TScintiPosDependence();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfFunction_425_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ScintiPosDependence* dest = (ScintiPosDependence*) G__getstructoffset();
   *dest = *(ScintiPosDependence*) libp->para[0].ref;
   const ScintiPosDependence& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SPSAdamoPedeSubtract */
static int G__libLHCfFunction_427_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SPSAdamoPedeSubtract* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SPSAdamoPedeSubtract[n];
     } else {
       p = new((void*) gvp) SPSAdamoPedeSubtract[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SPSAdamoPedeSubtract;
     } else {
       p = new((void*) gvp) SPSAdamoPedeSubtract;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_SPSAdamoPedeSubtract));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_427_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SPSAdamoPedeSubtract*) G__getstructoffset())->Initialize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_427_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SPSAdamoPedeSubtract*) G__getstructoffset())->SubtractPedeAverage((SPSAdamo*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_427_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SPSAdamoPedeSubtract*) G__getstructoffset())->SubtractCommonNoise((SPSAdamo*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_427_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SPSAdamoPedeSubtract*) G__getstructoffset())->FillPedeEvent((SPSAdamo*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_427_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SPSAdamoPedeSubtract*) G__getstructoffset())->AccumClear());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_427_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SPSAdamoPedeSubtract*) G__getstructoffset())->CalPedestal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_427_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((SPSAdamoPedeSubtract*) G__getstructoffset())->WriteFile((char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((SPSAdamoPedeSubtract*) G__getstructoffset())->WriteFile());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_427_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((SPSAdamoPedeSubtract*) G__getstructoffset())->ReadFile((char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((SPSAdamoPedeSubtract*) G__getstructoffset())->ReadFile());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_427_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((SPSAdamoPedeSubtract*) G__getstructoffset())->GetPedestal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_427_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((SPSAdamoPedeSubtract*) G__getstructoffset())->GetPedesigma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_427_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((SPSAdamoPedeSubtract*) G__getstructoffset())->GetPedestal2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_427_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((SPSAdamoPedeSubtract*) G__getstructoffset())->GetPedesigma2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_427_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SPSAdamoPedeSubtract::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_427_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SPSAdamoPedeSubtract::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_427_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SPSAdamoPedeSubtract::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_427_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SPSAdamoPedeSubtract::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_427_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const SPSAdamoPedeSubtract*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_427_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SPSAdamoPedeSubtract*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_427_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SPSAdamoPedeSubtract*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_427_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SPSAdamoPedeSubtract*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_427_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SPSAdamoPedeSubtract::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_427_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SPSAdamoPedeSubtract::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_427_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SPSAdamoPedeSubtract::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_427_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SPSAdamoPedeSubtract::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfFunction_427_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   SPSAdamoPedeSubtract* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new SPSAdamoPedeSubtract(*(SPSAdamoPedeSubtract*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_SPSAdamoPedeSubtract));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SPSAdamoPedeSubtract G__TSPSAdamoPedeSubtract;
static int G__libLHCfFunction_427_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SPSAdamoPedeSubtract*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SPSAdamoPedeSubtract*) (soff+(sizeof(SPSAdamoPedeSubtract)*i)))->~G__TSPSAdamoPedeSubtract();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SPSAdamoPedeSubtract*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SPSAdamoPedeSubtract*) (soff))->~G__TSPSAdamoPedeSubtract();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfFunction_427_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SPSAdamoPedeSubtract* dest = (SPSAdamoPedeSubtract*) G__getstructoffset();
   *dest = *(SPSAdamoPedeSubtract*) libp->para[0].ref;
   const SPSAdamoPedeSubtract& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TransitionFit */
static int G__libLHCfFunction_428_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TransitionFit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TransitionFit[n];
     } else {
       p = new((void*) gvp) TransitionFit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TransitionFit;
     } else {
       p = new((void*) gvp) TransitionFit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_TransitionFit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_428_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TransitionFit* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TransitionFit((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TransitionFit((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TransitionFit((char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TransitionFit((char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_TransitionFit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_428_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TransitionFit*) G__getstructoffset())->Initialize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_428_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TransitionFit*) G__getstructoffset())->FillToGraph((int) G__int(libp->para[0]), (A1Cal2*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_428_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TransitionFit*) G__getstructoffset())->FillToGraph((int) G__int(libp->para[0]), (A2Cal2*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_428_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TransitionFit*) G__getstructoffset())->FillToGraphMod((int) G__int(libp->para[0]), (A2Cal2*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_428_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TransitionFit*) G__getstructoffset())->Fit((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_428_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TransitionFit*) G__getstructoffset())->Fit((int) G__int(libp->para[0]), (A1Cal2*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_428_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TransitionFit*) G__getstructoffset())->Fit((int) G__int(libp->para[0]), (A2Cal2*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_428_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TransitionFit*) G__getstructoffset())->GetGraph((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_428_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TransitionFit*) G__getstructoffset())->GetFunction((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_428_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TransitionFit*) G__getstructoffset())->GetParameter((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_428_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TransitionFit*) G__getstructoffset())->SetParameter((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_428_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TransitionFit*) G__getstructoffset())->GetParameters((int) G__int(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_428_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TransitionFit*) G__getstructoffset())->SetParameters((int) G__int(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_428_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TransitionFit*) G__getstructoffset())->GetParError((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_428_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TransitionFit*) G__getstructoffset())->GetChisquare((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_428_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TransitionFit*) G__getstructoffset())->GetShowerMax((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_428_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TransitionFit*) G__getstructoffset())->GetFitRange((int) G__int(libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_428_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TransitionFit*) G__getstructoffset())->GetFitRangeMax((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_428_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TransitionFit*) G__getstructoffset())->GetFitRangeMin((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_428_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((TransitionFit*) G__getstructoffset())->SetFitRange((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((TransitionFit*) G__getstructoffset())->SetFitRange((int) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((TransitionFit*) G__getstructoffset())->SetFitRange((int) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_428_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((TransitionFit*) G__getstructoffset())->SetFitRangeLayer((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((TransitionFit*) G__getstructoffset())->SetFitRangeLayer((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((TransitionFit*) G__getstructoffset())->SetFitRangeLayer((int) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_428_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TransitionFit*) G__getstructoffset())->GetBaseFluctuation((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_428_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TransitionFit*) G__getstructoffset())->SetBaseFluctuation((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_428_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TransitionFit*) G__getstructoffset())->Eval((int) G__int(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_428_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TransitionFit*) G__getstructoffset())->EvalAtLayer((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_428_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TransitionFit*) G__getstructoffset())->Subtract((int) G__int(libp->para[0]), (A1Cal2*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_428_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TransitionFit*) G__getstructoffset())->Subtract((int) G__int(libp->para[0]), (A2Cal2*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_428_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TransitionFit*) G__getstructoffset())->FittingFunction((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_428_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TransitionFit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_428_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TransitionFit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_428_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TransitionFit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_428_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TransitionFit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_428_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TransitionFit*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_428_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TransitionFit*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_428_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TransitionFit*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_428_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TransitionFit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_428_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TransitionFit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_428_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TransitionFit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_428_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TransitionFit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_428_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TransitionFit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfFunction_428_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TransitionFit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TransitionFit(*(TransitionFit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_TransitionFit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TransitionFit G__TTransitionFit;
static int G__libLHCfFunction_428_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TransitionFit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TransitionFit*) (soff+(sizeof(TransitionFit)*i)))->~G__TTransitionFit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TransitionFit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TransitionFit*) (soff))->~G__TTransitionFit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfFunction_428_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TransitionFit* dest = (TransitionFit*) G__getstructoffset();
   *dest = *(TransitionFit*) libp->para[0].ref;
   const TransitionFit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RHICfRunInfo */
static int G__libLHCfFunction_429_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RHICfRunInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RHICfRunInfo[n];
     } else {
       p = new((void*) gvp) RHICfRunInfo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RHICfRunInfo;
     } else {
       p = new((void*) gvp) RHICfRunInfo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_RHICfRunInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_429_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRunInfo*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_429_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((RHICfRunInfo*) G__getstructoffset())->clear_general((char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((RHICfRunInfo*) G__getstructoffset())->clear_general();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_429_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((RHICfRunInfo*) G__getstructoffset())->clear_daq((char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((RHICfRunInfo*) G__getstructoffset())->clear_daq();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_429_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((RHICfRunInfo*) G__getstructoffset())->clear_nevents((char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((RHICfRunInfo*) G__getstructoffset())->clear_nevents();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_429_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((RHICfRunInfo*) G__getstructoffset())->clear_beam((char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((RHICfRunInfo*) G__getstructoffset())->clear_beam();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_429_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((RHICfRunInfo*) G__getstructoffset())->clear_analysis((char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((RHICfRunInfo*) G__getstructoffset())->clear_analysis();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_429_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((RHICfRunInfo*) G__getstructoffset())->WriteFile((char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((RHICfRunInfo*) G__getstructoffset())->WriteFile((char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_429_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((RHICfRunInfo*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref, (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((RHICfRunInfo*) G__getstructoffset())->Print(*(ostream*) libp->para[0].ref));
      break;
   case 0:
      G__letint(result7, 105, (long) ((RHICfRunInfo*) G__getstructoffset())->Print());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_429_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((RHICfRunInfo*) G__getstructoffset())->PrintGeneral(*(ostream*) libp->para[0].ref, (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((RHICfRunInfo*) G__getstructoffset())->PrintGeneral(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
      break;
   case 0:
      ((RHICfRunInfo*) G__getstructoffset())->PrintGeneral();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_429_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((RHICfRunInfo*) G__getstructoffset())->PrintDAQ(*(ostream*) libp->para[0].ref, (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((RHICfRunInfo*) G__getstructoffset())->PrintDAQ(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
      break;
   case 0:
      ((RHICfRunInfo*) G__getstructoffset())->PrintDAQ();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_429_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((RHICfRunInfo*) G__getstructoffset())->PrintNEvents(*(ostream*) libp->para[0].ref, (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((RHICfRunInfo*) G__getstructoffset())->PrintNEvents(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
      break;
   case 0:
      ((RHICfRunInfo*) G__getstructoffset())->PrintNEvents();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_429_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((RHICfRunInfo*) G__getstructoffset())->PrintBeam(*(ostream*) libp->para[0].ref, (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((RHICfRunInfo*) G__getstructoffset())->PrintBeam(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
      break;
   case 0:
      ((RHICfRunInfo*) G__getstructoffset())->PrintBeam();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_429_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((RHICfRunInfo*) G__getstructoffset())->PrintAnalysis(*(ostream*) libp->para[0].ref, (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((RHICfRunInfo*) G__getstructoffset())->PrintAnalysis(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
      break;
   case 0:
      ((RHICfRunInfo*) G__getstructoffset())->PrintAnalysis();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_429_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfRunInfo*) G__getstructoffset())->Read(*(istream*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_429_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfRunInfo*) G__getstructoffset())->ReadFile((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_429_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRunInfo*) G__getstructoffset())->removespace(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_429_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfRunInfo*) G__getstructoffset())->IndexToBunch((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_429_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfRunInfo*) G__getstructoffset())->BunchToIndex((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_429_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfRunInfo*) G__getstructoffset())->CountBCtoBunch((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_429_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfRunInfo*) G__getstructoffset())->CountBCtoIndex((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_429_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfRunInfo*) G__getstructoffset())->GetBunchTagByIndex((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_429_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfRunInfo*) G__getstructoffset())->GetBunchTag((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_429_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfRunInfo*) G__getstructoffset())->GetBunchTagByCountBC((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_429_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfRunInfo*) G__getstructoffset())->GetBunchTag((A1Cal1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_429_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfRunInfo*) G__getstructoffset())->CheckTime((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_429_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfRunInfo*) G__getstructoffset())->CheckTime((A1Cal1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_429_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfRunInfo*) G__getstructoffset())->CheckBunchQuality((A1Cal1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_429_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((RHICfRunInfo*) G__getstructoffset())->CutdownGPIOSetup((char*) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_429_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RHICfRunInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_429_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RHICfRunInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_429_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RHICfRunInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_429_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RHICfRunInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_429_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const RHICfRunInfo*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_429_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRunInfo*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_429_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRunInfo*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_429_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRunInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_429_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RHICfRunInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_429_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RHICfRunInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_429_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RHICfRunInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_429_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RHICfRunInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfFunction_429_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RHICfRunInfo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RHICfRunInfo(*(RHICfRunInfo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_RHICfRunInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RHICfRunInfo G__TRHICfRunInfo;
static int G__libLHCfFunction_429_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RHICfRunInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RHICfRunInfo*) (soff+(sizeof(RHICfRunInfo)*i)))->~G__TRHICfRunInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RHICfRunInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RHICfRunInfo*) (soff))->~G__TRHICfRunInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfFunction_429_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RHICfRunInfo* dest = (RHICfRunInfo*) G__getstructoffset();
   *dest = *(RHICfRunInfo*) libp->para[0].ref;
   const RHICfRunInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RHICfRunInfoTable */
static int G__libLHCfFunction_431_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RHICfRunInfoTable* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RHICfRunInfoTable[n];
     } else {
       p = new((void*) gvp) RHICfRunInfoTable[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RHICfRunInfoTable;
     } else {
       p = new((void*) gvp) RHICfRunInfoTable;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_RHICfRunInfoTable));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_431_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RHICfRunInfoTable* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RHICfRunInfoTable((char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) RHICfRunInfoTable((char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RHICfRunInfoTable((char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) RHICfRunInfoTable((char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_RHICfRunInfoTable));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_431_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRunInfoTable*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_431_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfRunInfoTable*) G__getstructoffset())->ReadTable((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_431_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((RHICfRunInfoTable*) G__getstructoffset())->WriteTable((char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((RHICfRunInfoTable*) G__getstructoffset())->WriteTable((char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_431_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfRunInfoTable*) G__getstructoffset())->GetNinfo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_431_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RHICfRunInfoTable*) G__getstructoffset())->SetRun((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_431_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RHICfRunInfoTable*) G__getstructoffset())->GetRunInfo((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_431_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RHICfRunInfoTable*) G__getstructoffset())->Get((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_431_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RHICfRunInfoTable*) G__getstructoffset())->GetIinfo((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_431_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RHICfRunInfoTable*) G__getstructoffset())->CreateInfo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_431_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RHICfRunInfoTable::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_431_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RHICfRunInfoTable::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_431_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RHICfRunInfoTable::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_431_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RHICfRunInfoTable::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_431_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const RHICfRunInfoTable*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_431_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRunInfoTable*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_431_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRunInfoTable*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_431_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRunInfoTable*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_431_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RHICfRunInfoTable::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_431_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RHICfRunInfoTable::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_431_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RHICfRunInfoTable::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction_431_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RHICfRunInfoTable::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfFunction_431_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RHICfRunInfoTable* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RHICfRunInfoTable(*(RHICfRunInfoTable*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfFunctionLN_RHICfRunInfoTable));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RHICfRunInfoTable G__TRHICfRunInfoTable;
static int G__libLHCfFunction_431_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RHICfRunInfoTable*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RHICfRunInfoTable*) (soff+(sizeof(RHICfRunInfoTable)*i)))->~G__TRHICfRunInfoTable();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RHICfRunInfoTable*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RHICfRunInfoTable*) (soff))->~G__TRHICfRunInfoTable();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfFunction_431_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RHICfRunInfoTable* dest = (RHICfRunInfoTable*) G__getstructoffset();
   *dest = *(RHICfRunInfoTable*) libp->para[0].ref;
   const RHICfRunInfoTable& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */
static int G__libLHCfFunction__0_414(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PosShift(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction__0_415(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PosRotate(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction__0_416(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PosReflect(*(double*) G__Doubleref(&libp->para[0]), *(double*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction__0_417(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyMax((int) G__int(libp->para[0]), (int*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction__0_418(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyMax((int) G__int(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction__0_419(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyMin((int) G__int(libp->para[0]), (int*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction__0_420(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyMin((int) G__int(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction__0_421(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) Chi2((int) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (double*) G__int(libp->para[3])
, (double*) G__int(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction__0_422(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MySum((int) G__int(libp->para[0]), (int*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction__0_423(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MySum((int) G__int(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction__0_424(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MyAverage((int) G__int(libp->para[0]), (int*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction__0_425(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MyAverage((int) G__int(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction__0_426(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MyRMS((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction__0_427(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MyFitFirstLinear((int) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, *(double*) G__Doubleref(&libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfFunction__0_458(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) CalPi0Mass((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}


/*********************************************************
* Member function Stub
*********************************************************/

/* ADCRange */

/* A1Cal1ToCal2 */

/* ConParticleDefine */

/* PMTGain */

/* ScifiGain */

/* FCGain */

/* A1GainCalibration */

/* A1PedeSubtract */

/* ScifiPosTable */

/* A1RawToCal1 */

/* A1CrossTalk */

/* A1LHCCrossTalk */

/* A2Cal1ToCal2 */

/* SiliconGain */

/* A2GainCalibration */

/* A2PedeSubtract */

/* A2RawToCal1 */

/* A2RawToCal1Silicon */

/* Arm2Hit */

/* Arm2Alignment */

/* MyFilePath */

/* SimpleList */

/* StructFiberPos */

/* ConScifiPosition */

/* ConShowerLeakage */

/* LHCfRunInfo */

/* LHCfRunInfoTable */

/* PMTSatu */

/* PMTSatuCorrection */

/* ParticleID01 */

/* ParticleID02 */

/* SciFiPosCalculation */

/* ScifiIncidentPosition02 */

/* ScintiPosDependence */

/* SPSAdamoPedeSubtract */

/* TransitionFit */

/* RHICfRunInfo */

/* RHICfRunInfoTable */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfunclibLHCfFunction {
 public:
  G__Sizep2memfunclibLHCfFunction(): p(&G__Sizep2memfunclibLHCfFunction::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfunclibLHCfFunction::*p)();
};

size_t G__get_sizep2memfunclibLHCfFunction()
{
  G__Sizep2memfunclibLHCfFunction a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancelibLHCfFunction() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfFunctionLN_A1LHCCrossTalk))) {
     A1LHCCrossTalk *G__Lderived;
     G__Lderived=(A1LHCCrossTalk*)0x1000;
     {
       A1CrossTalk *G__Lpbase=(A1CrossTalk*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_A1LHCCrossTalk),G__get_linked_tagnum(&G__libLHCfFunctionLN_A1CrossTalk),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfFunctionLN_PMTSatuCorrection))) {
     PMTSatuCorrection *G__Lderived;
     G__Lderived=(PMTSatuCorrection*)0x1000;
     {
       PMTSatu *G__Lpbase=(PMTSatu*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_PMTSatuCorrection),G__get_linked_tagnum(&G__libLHCfFunctionLN_PMTSatu),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfFunctionLN_ParticleID02))) {
     ParticleID02 *G__Lderived;
     G__Lderived=(ParticleID02*)0x1000;
     {
       ParticleID01 *G__Lpbase=(ParticleID01*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_ParticleID02),G__get_linked_tagnum(&G__libLHCfFunctionLN_ParticleID01),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablelibLHCfFunction() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__libLHCfFunctionLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__libLHCfFunctionLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libLHCfFunctionLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__libLHCfFunctionLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libLHCfFunctionLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__libLHCfFunctionLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__libLHCfFunctionLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libLHCfFunctionLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__libLHCfFunctionLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libLHCfFunctionLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__libLHCfFunctionLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__libLHCfFunctionLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__libLHCfFunctionLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__libLHCfFunctionLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__libLHCfFunctionLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__libLHCfFunctionLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__libLHCfFunctionLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__libLHCfFunctionLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__libLHCfFunctionLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G__libLHCfFunctionLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Double_t>",117,G__get_linked_tagnum(&G__libLHCfFunctionLN_TMatrixTRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Double_t>",117,G__get_linked_tagnum(&G__libLHCfFunctionLN_TMatrixTColumn_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Double_t>",117,G__get_linked_tagnum(&G__libLHCfFunctionLN_TMatrixTDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Double_t>",117,G__get_linked_tagnum(&G__libLHCfFunctionLN_TMatrixTFlat_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Double_t>",117,G__get_linked_tagnum(&G__libLHCfFunctionLN_TMatrixTSub_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Double_t>",117,G__get_linked_tagnum(&G__libLHCfFunctionLN_TMatrixTSparseRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Double_t>",117,G__get_linked_tagnum(&G__libLHCfFunctionLN_TMatrixTSparseDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Double_t>",117,G__get_linked_tagnum(&G__libLHCfFunctionLN_TMatrixTRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Double_t>",117,G__get_linked_tagnum(&G__libLHCfFunctionLN_TMatrixTColumnlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Double_t>",117,G__get_linked_tagnum(&G__libLHCfFunctionLN_TMatrixTDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Double_t>",117,G__get_linked_tagnum(&G__libLHCfFunctionLN_TMatrixTFlatlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Double_t>",117,G__get_linked_tagnum(&G__libLHCfFunctionLN_TMatrixTSublEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Double_t>",117,G__get_linked_tagnum(&G__libLHCfFunctionLN_TMatrixTSparseRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Double_t>",117,G__get_linked_tagnum(&G__libLHCfFunctionLN_TMatrixTSparseDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Double_t>",117,G__get_linked_tagnum(&G__libLHCfFunctionLN_TElementActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Double_t>",117,G__get_linked_tagnum(&G__libLHCfFunctionLN_TElementPosActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSym<Double_t>",117,G__get_linked_tagnum(&G__libLHCfFunctionLN_TMatrixTSymlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparse<Double_t>",117,G__get_linked_tagnum(&G__libLHCfFunctionLN_TMatrixTSparselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<LHCfRunInfo*>",117,G__get_linked_tagnum(&G__libLHCfFunctionLN_vectorlELHCfRunInfomUcOallocatorlELHCfRunInfomUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__libLHCfFunctionLN_reverse_iteratorlEvectorlELHCfRunInfomUcOallocatorlELHCfRunInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libLHCfFunctionLN_vectorlELHCfRunInfomUcOallocatorlELHCfRunInfomUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__libLHCfFunctionLN_reverse_iteratorlEvectorlELHCfRunInfomUcOallocatorlELHCfRunInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libLHCfFunctionLN_vectorlELHCfRunInfomUcOallocatorlELHCfRunInfomUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__libLHCfFunctionLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__libLHCfFunctionLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__libLHCfFunctionLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__libLHCfFunctionLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libLHCfFunctionLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__libLHCfFunctionLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libLHCfFunctionLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__libLHCfFunctionLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RHICfRunInfo*>",117,G__get_linked_tagnum(&G__libLHCfFunctionLN_vectorlERHICfRunInfomUcOallocatorlERHICfRunInfomUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__libLHCfFunctionLN_reverse_iteratorlEvectorlERHICfRunInfomUcOallocatorlERHICfRunInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libLHCfFunctionLN_vectorlERHICfRunInfomUcOallocatorlERHICfRunInfomUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__libLHCfFunctionLN_reverse_iteratorlEvectorlERHICfRunInfomUcOallocatorlERHICfRunInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libLHCfFunctionLN_vectorlERHICfRunInfomUcOallocatorlERHICfRunInfomUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* ADCRange */
static void G__setup_memvarADCRange(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_ADCRange));
   { ADCRange *p; p=(ADCRange*)0x1000; if (p) { }
   G__memvar_setup((void*)(&ADCRange::ADCRANGE_FORMAT),67,0,1,-1,-1,-2,1,"ADCRANGE_FORMAT=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("ADCRANGE_NADC=%lldLL",(long long)ADCRange::ADCRANGE_NADC).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("ADCRANGE_NPARAM=%lldLL",(long long)ADCRange::ADCRANGE_NPARAM).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("ADCRANGE_OK=%lldLL",(long long)ADCRange::ADCRANGE_OK).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("ADCRANGE_ERROR=%lldLL",(long long)ADCRange::ADCRANGE_ERROR).data(),0,(char*)NULL);
   G__memvar_setup((void*)(&ADCRange::DEFAULT_THRESHOLD),100,0,1,-1,-1,-2,1,"DEFAULT_THRESHOLD=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tablefile)-(long)(p)),99,0,0,-1,-1,-1,1,"tablefile[256]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->format)-(long)(p)),99,0,0,-1,-1,-1,1,"format[256]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->type)-(long)(p)),105,0,0,-1,-1,-1,1,"type=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->version)-(long)(p)),105,0,0,-1,-1,-1,1,"version=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->param)-(long)(p)),100,0,0,-1,-1,-1,1,"param[4][16][2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->threshold)-(long)(p)),100,0,0,-1,-1,-1,1,"threshold=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* A1Cal1ToCal2 */
static void G__setup_memvarA1Cal1ToCal2(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_A1Cal1ToCal2));
   { A1Cal1ToCal2 *p; p=(A1Cal1ToCal2*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"threshold=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_ADCRange),-1,-1,4,"adcrange=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_A1Cal1),-1,-1,4,"defult_pede=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"use_adcrange=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,4,"DEFAULT_THRESHOLD=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,1,-1,-1,-2,4,"DEFAULT_ADCRANGE_FILE=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"ADC_OVERRANGE=-5LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"SCIFI_OVERRANGE=-6LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ConParticleDefine */
static void G__setup_memvarConParticleDefine(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_ConParticleDefine));
   { ConParticleDefine *p; p=(ConParticleDefine*)0x1000; if (p) { }
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,2,"tablefile[256]=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,2,"format[256]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"type=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"version=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"detector=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"hv0=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"hv1=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"scifihv=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fchv1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fchv2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"def_cal[2][16]=",0,"Calorimeter   Tower:Layer");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"def_scifi0[4][2][20]=",0,"Scifi 20mm    Layer:XY:Ch");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"def_scifi1[4][2][40]=",0,"Scifi 40mm    Layer:XY:Ch");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"def_fc[2][4]=",0,"Front Counter Arm:Ch");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"def_silicon[4][2][384]=",0,"Silicon Layer:XY:Strip");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("CONPARTICLEDEFINE_OK=%lldLL",(long long)ConParticleDefine::CONPARTICLEDEFINE_OK).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("CONPARTICLEDEFINE_ERROR=%lldLL",(long long)ConParticleDefine::CONPARTICLEDEFINE_ERROR).data(),0,(char*)NULL);
   G__memvar_setup((void*)(&ConParticleDefine::CONPARTICLEDEFINE_FORMAT),67,0,1,-1,-1,-2,1,"CONPARTICLEDEFINE_FORMAT=",0,(char*)NULL);
   G__memvar_setup((void*)(&ConParticleDefine::DEFALUT_DEF_SILICON),100,0,1,-1,-1,-2,1,"DEFALUT_DEF_SILICON=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* PMTGain */
static void G__setup_memvarPMTGain(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_PMTGain));
   { PMTGain *p; p=(PMTGain*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("PMTGAIN_OK=%lldLL",(long long)PMTGain::PMTGAIN_OK).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("PMTGAIN_ERROR=%lldLL",(long long)PMTGain::PMTGAIN_ERROR).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("PMTGAIN_NODATA=%lldLL",(long long)PMTGain::PMTGAIN_NODATA).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("PMTGAIN_ND=%lldLL",(long long)PMTGain::PMTGAIN_ND).data(),0,"detector");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("PMTGAIN_NT=%lldLL",(long long)PMTGain::PMTGAIN_NT).data(),0,"tower");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("PMTGAIN_NP=%lldLL",(long long)PMTGain::PMTGAIN_NP).data(),0,"PMT");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("PMTGAIN_NHV=%lldLL",(long long)PMTGain::PMTGAIN_NHV).data(),0,"HV");
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,2,"tablefile[256]=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,2,"format[100]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"version=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"type=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"date=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"nhv=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"hv[101]=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,2,"sn[2][2][18][10]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"caln[2][2][18]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"gain[2][2][18][101]=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ScifiGain */
static void G__setup_memvarScifiGain(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_ScifiGain));
   { ScifiGain *p; p=(ScifiGain*)0x1000; if (p) { }
   G__memvar_setup((void*)(&ScifiGain::SCIFIGAIN_FORMAT),67,0,1,-1,-1,-2,1,"SCIFIGAIN_FORMAT=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("SCIFIGAIN_NHV=%lldLL",(long long)ScifiGain::SCIFIGAIN_NHV).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("SCIFIGAIN_OK=%lldLL",(long long)ScifiGain::SCIFIGAIN_OK).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("SCIFIGAIN_ERROR=%lldLL",(long long)ScifiGain::SCIFIGAIN_ERROR).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("SCIFIGAIN_NODATA=%lldLL",(long long)ScifiGain::SCIFIGAIN_NODATA).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("SCIFIGAIN_DATA=%lldLL",(long long)ScifiGain::SCIFIGAIN_DATA).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tablefile)-(long)(p)),99,0,0,-1,-1,-1,1,"tablefile[256]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->format)-(long)(p)),99,0,0,-1,-1,-1,1,"format[100]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->version)-(long)(p)),105,0,0,-1,-1,-1,1,"version=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->type)-(long)(p)),105,0,0,-1,-1,-1,1,"type=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nhv)-(long)(p)),105,0,0,-1,-1,-1,1,"nhv=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->checkhv)-(long)(p)),105,0,0,-1,-1,-1,1,"checkhv[5]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->gain)-(long)(p)),100,0,0,-1,-1,-1,1,"gain[2][4][2][40][5]=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* FCGain */
static void G__setup_memvarFCGain(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_FCGain));
   { FCGain *p; p=(FCGain*)0x1000; if (p) { }
   G__memvar_setup((void*)(&FCGain::FCGAIN_FORMAT),67,0,1,-1,-1,-2,1,"FCGAIN_FORMAT=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("FCGAIN_NHV=%lldLL",(long long)FCGain::FCGAIN_NHV).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("FCGAIN_OK=%lldLL",(long long)FCGain::FCGAIN_OK).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("FCGAIN_ERROR=%lldLL",(long long)FCGain::FCGAIN_ERROR).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("FCGAIN_NODATA=%lldLL",(long long)FCGain::FCGAIN_NODATA).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("FCGAIN_DATA=%lldLL",(long long)FCGain::FCGAIN_DATA).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tablefile)-(long)(p)),99,0,0,-1,-1,-1,1,"tablefile[256]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->format)-(long)(p)),99,0,0,-1,-1,-1,1,"format[100]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->version)-(long)(p)),105,0,0,-1,-1,-1,1,"version=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->type)-(long)(p)),105,0,0,-1,-1,-1,1,"type=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nhv)-(long)(p)),105,0,0,-1,-1,-1,1,"nhv=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->checkhv)-(long)(p)),105,0,0,-1,-1,-1,1,"checkhv[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->gain)-(long)(p)),100,0,0,-1,-1,-1,1,"gain[2][4][2]=",0,"detector:channel:ihv");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* A1GainCalibration */
static void G__setup_memvarA1GainCalibration(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_A1GainCalibration));
   { A1GainCalibration *p; p=(A1GainCalibration*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"detector=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"hv[2][16]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"scifihv=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fchv[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pdeffactor_pmt=",0,"constant factor for partice definition of calorimters.");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pdeffactor_scifi=",0,"constant factor for pdef of SciFi.");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pdeffactor_fc=",0,"constant factor for pdef of Front Counter.");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_ConParticleDefine),-1,-1,4,"pdeftable=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_PMTGain),-1,-1,4,"pmtgaintable=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_ScifiGain),-1,-1,4,"scifigaintable=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_FCGain),-1,-1,4,"fcgaintable=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)(&A1GainCalibration::DEFAULT_PDEFFACTOR_PMT),100,0,1,-1,-1,-2,1,"DEFAULT_PDEFFACTOR_PMT=",0,"SPS2007 pdef -> LHC pdef");
   G__memvar_setup((void*)(&A1GainCalibration::DEFAULT_PDEFFACTOR_SCIFI),100,0,1,-1,-1,-2,1,"DEFAULT_PDEFFACTOR_SCIFI=",0,(char*)NULL);
   G__memvar_setup((void*)(&A1GainCalibration::DEFAULT_PDEFFACTOR_FC),100,0,1,-1,-1,-2,1,"DEFAULT_PDEFFACTOR_FC=",0,(char*)NULL);
   G__memvar_setup((void*)(&A1GainCalibration::DEFAULT_PDEFTABLE),67,0,1,-1,-1,-2,1,"DEFAULT_PDEFTABLE=",0,(char*)NULL);
   G__memvar_setup((void*)(&A1GainCalibration::DEFAULT_PMTGAINTABLE),67,0,1,-1,-1,-2,1,"DEFAULT_PMTGAINTABLE=",0,(char*)NULL);
   G__memvar_setup((void*)(&A1GainCalibration::DEFAULT_SCIFIGAINTABLE),67,0,1,-1,-1,-2,1,"DEFAULT_SCIFIGAINTABLE=",0,(char*)NULL);
   G__memvar_setup((void*)(&A1GainCalibration::DEFAULT_FCGAINTABLE),67,0,1,-1,-1,-2,1,"DEFAULT_FCGAINTABLE=",0,(char*)NULL);
   G__memvar_setup((void*)(&A1GainCalibration::DEFAULT_HVTABLE),67,0,1,-1,-1,-2,1,"DEFAULT_HVTABLE=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* A1PedeSubtract */
static void G__setup_memvarA1PedeSubtract(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_A1PedeSubtract));
   { A1PedeSubtract *p; p=(A1PedeSubtract*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nevent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_A1Cal1),-1,-1,4,"pedeaccum=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_A1Cal1),-1,-1,4,"pedeaccum2=",0,"square values");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_A1Cal1),-1,-1,4,"pedestal=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_A1Cal1),-1,-1,4,"pedesigma=",0,"contain RMS of silicon");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"opoffsetsubtraction=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_A1Cal1),-1,-1,4,"pedeaccum2_1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_A1Cal1),-1,-1,4,"pedeaccum2_2=",0,"contain silicon*2");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_A1Cal1),-1,-1,4,"pedestal2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_A1Cal1),-1,-1,4,"pedesigma2=",0,"contain RMS of silicon");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_A1Cal1),-1,-1,4,"datatmp=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"calav[2][16]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"accum_nevent=",0,"number of accumrated event for pedestal.");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"DEFAULT_ACCUM_NEVENT=100LL",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,1,-1,-1,-2,4,"PEDESTAL_NAME=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,1,-1,-1,-2,4,"PEDESTAL_TITLE=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,1,-1,-1,-2,4,"PEDESIGMA_NAME=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,1,-1,-1,-2,4,"PEDESIGMA_TITLE=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,1,-1,-1,-2,4,"PEDESTAL2_NAME=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,1,-1,-1,-2,4,"PEDESTAL2_TITLE=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,1,-1,-1,-2,4,"PEDESIGMA2_NAME=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,1,-1,-1,-2,4,"PEDESIGMA2_TITLE=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,1,-1,-1,-2,4,"DEFAULT_FILENAME=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ScifiPosTable */
static void G__setup_memvarScifiPosTable(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_ScifiPosTable));
   { ScifiPosTable *p; p=(ScifiPosTable*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("SCIFIPOSTABLE_NCH=%lldLL",(long long)ScifiPosTable::SCIFIPOSTABLE_NCH).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("SCIFIPOSTABLE_TOWER=%lldLL",(long long)ScifiPosTable::SCIFIPOSTABLE_TOWER).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("SCIFIPOSTABLE_LAYER=%lldLL",(long long)ScifiPosTable::SCIFIPOSTABLE_LAYER).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("SCIFIPOSTABLE_XY=%lldLL",(long long)ScifiPosTable::SCIFIPOSTABLE_XY).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("SCIFIPOSTABLE_POS=%lldLL",(long long)ScifiPosTable::SCIFIPOSTABLE_POS).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("SCIFIPOSTABLE_PMTCH=%lldLL",(long long)ScifiPosTable::SCIFIPOSTABLE_PMTCH).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,2,"tablefile[256]=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,2,"tableformat[256]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"tableversion=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"tabletype=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"tower[512]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"layer[512]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"xy[512]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"pos[512]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"mapmt[512]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"ch[2][4][2][40]=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)(&ScifiPosTable::SCIFIPOSTABLE_FORMATNAME),67,0,1,-1,-1,-2,1,"SCIFIPOSTABLE_FORMATNAME=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("SCIFIPOSTABLE_OK=%lldLL",(long long)ScifiPosTable::SCIFIPOSTABLE_OK).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("SCIFIPOSTABLE_ERROR=%lldLL",(long long)ScifiPosTable::SCIFIPOSTABLE_ERROR).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* A1RawToCal1 */
static void G__setup_memvarA1RawToCal1(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_A1RawToCal1));
   { A1RawToCal1 *p; p=(A1RawToCal1*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfFunctionLN_A1RawToCal1cLcLRAWTOCAL_FORMAT),-1,-2,1,G__FastAllocString(2048).Format("FORMAT_AUTO=%lldLL",(long long)A1RawToCal1::FORMAT_AUTO).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfFunctionLN_A1RawToCal1cLcLRAWTOCAL_FORMAT),-1,-2,1,G__FastAllocString(2048).Format("FORMAT_OP2010=%lldLL",(long long)A1RawToCal1::FORMAT_OP2010).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfFunctionLN_A1RawToCal1cLcLRAWTOCAL_FORMAT),-1,-2,1,G__FastAllocString(2048).Format("FORMAT_OP2009=%lldLL",(long long)A1RawToCal1::FORMAT_OP2009).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfFunctionLN_A1RawToCal1cLcLRAWTOCAL_FORMAT),-1,-2,1,G__FastAllocString(2048).Format("FORMAT_SPS2010=%lldLL",(long long)A1RawToCal1::FORMAT_SPS2010).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfFunctionLN_A1RawToCal1cLcLRAWTOCAL_FORMAT),-1,-2,1,G__FastAllocString(2048).Format("FORMAT_OP2015=%lldLL",(long long)A1RawToCal1::FORMAT_OP2015).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfFunctionLN_A1RawToCal1cLcLRAWTOCAL_FORMAT),-1,-2,1,G__FastAllocString(2048).Format("FORMAT_RHICF_OP2017=%lldLL",(long long)A1RawToCal1::FORMAT_RHICF_OP2017).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"format=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_ScifiPosTable),-1,-1,4,"posSCIF=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,1,-1,-1,-2,4,"DEFULT_SCIFIPOSTABLE=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* A1CrossTalk */
static void G__setup_memvarA1CrossTalk(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_A1CrossTalk));
   { A1CrossTalk *p; p=(A1CrossTalk*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"calib_cross_20x[4][20][60]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"calib_cross_40x[4][40][60]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"calib_cross_20y[4][20][60]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"calib_cross_40y[4][40][60]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"temp_40x[4][40]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"temp_20x[4][20]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"temp_40y[4][40]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"temp_20y[4][20]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_string),-1,-1,4,"listname=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"value=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"layer=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"pos=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"cross_pos=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("ifstream"),-1,4,"fin_x=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("ifstream"),-1,4,"fin_y=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"M[8]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"bM[8]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,4,"V=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,4,"Vx=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,4,"Vy=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"a4Vx[4][60]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"a4Vy[4][60]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* A1LHCCrossTalk */
static void G__setup_memvarA1LHCCrossTalk(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_A1LHCCrossTalk));
   { A1LHCCrossTalk *p; p=(A1LHCCrossTalk*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->flag_op2015)-(long)(p)),105,0,0,-1,-1,-1,1,"flag_op2015=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"scifi20x[4][20]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"scifi40x[4][40]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"scifi20y[4][20]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"scifi40y[4][40]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* A2Cal1ToCal2 */
static void G__setup_memvarA2Cal1ToCal2(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_A2Cal1ToCal2));
   { A2Cal1ToCal2 *p; p=(A2Cal1ToCal2*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"threshold=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_ADCRange),-1,-1,4,"adcrange=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_A2Cal1),-1,-1,4,"defult_pede=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"use_adcrange=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,4,"DEFAULT_THRESHOLD=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,1,-1,-1,-2,4,"DEFAULT_ADCRANGE_FILE=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"ADC_OVERRANGE=-5LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"SCIFI_OVERRANGE=-6LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SiliconGain */
static void G__setup_memvarSiliconGain(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_SiliconGain));
   { SiliconGain *p; p=(SiliconGain*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->tablefile)-(long)(p)),99,0,0,-1,-1,-1,1,"tablefile[256]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->format)-(long)(p)),99,0,0,-1,-1,-1,1,"format[100]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->version)-(long)(p)),105,0,0,-1,-1,-1,1,"version=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->type)-(long)(p)),105,0,0,-1,-1,-1,1,"type=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)(&SiliconGain::SILICONGAIN_FORMAT),67,0,1,-1,-1,-2,1,"SILICONGAIN_FORMAT=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("SILICON_NODATA=%lldLL",(long long)SiliconGain::SILICON_NODATA).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("SILICON_DATA=%lldLL",(long long)SiliconGain::SILICON_DATA).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* A2GainCalibration */
static void G__setup_memvarA2GainCalibration(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_A2GainCalibration));
   { A2GainCalibration *p; p=(A2GainCalibration*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"detector=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"hv[2][16]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"siliconhv=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fchv[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pdeffactor_pmt=",0,"constant factor for partice definition of calorimters.");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pdeffactor_silicon=",0,"constant factor for pdef of Silicon.");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"pdeffactor_fc=",0,"constant factor for pdef of Front Counter.");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_ConParticleDefine),-1,-1,4,"pdeftable=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_PMTGain),-1,-1,4,"pmtgaintable=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_FCGain),-1,-1,4,"fcgaintable=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_SiliconGain),-1,-1,4,"sigaintable=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)(&A2GainCalibration::DEFAULT_PDEFFACTOR_PMT),100,0,1,-1,-1,-2,1,"DEFAULT_PDEFFACTOR_PMT=",0,(char*)NULL);
   G__memvar_setup((void*)(&A2GainCalibration::DEFAULT_PDEFFACTOR_SILICON),100,0,1,-1,-1,-2,1,"DEFAULT_PDEFFACTOR_SILICON=",0,(char*)NULL);
   G__memvar_setup((void*)(&A2GainCalibration::DEFAULT_PDEFFACTOR_FC),100,0,1,-1,-1,-2,1,"DEFAULT_PDEFFACTOR_FC=",0,(char*)NULL);
   G__memvar_setup((void*)(&A2GainCalibration::DEFAULT_PDEFTABLE),67,0,1,-1,-1,-2,1,"DEFAULT_PDEFTABLE=",0,(char*)NULL);
   G__memvar_setup((void*)(&A2GainCalibration::DEFAULT_PMTGAINTABLE),67,0,1,-1,-1,-2,1,"DEFAULT_PMTGAINTABLE=",0,(char*)NULL);
   G__memvar_setup((void*)(&A2GainCalibration::DEFAULT_SILICONGAINTABLE),67,0,1,-1,-1,-2,1,"DEFAULT_SILICONGAINTABLE=",0,(char*)NULL);
   G__memvar_setup((void*)(&A2GainCalibration::DEFAULT_FCGAINTABLE),67,0,1,-1,-1,-2,1,"DEFAULT_FCGAINTABLE=",0,(char*)NULL);
   G__memvar_setup((void*)(&A2GainCalibration::DEFAULT_HVTABLE),67,0,1,-1,-1,-2,1,"DEFAULT_HVTABLE=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* A2PedeSubtract */
static void G__setup_memvarA2PedeSubtract(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_A2PedeSubtract));
   { A2PedeSubtract *p; p=(A2PedeSubtract*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nevent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_A2Cal1),-1,-1,4,"pedeaccum=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_A2Cal1),-1,-1,4,"pedeaccum2=",0,"contain silicon*2");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_A2Cal1),-1,-1,4,"pedestal=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_A2Cal1),-1,-1,4,"pedesigma=",0,"contain RMS of silicon");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"opoffsetsubtraction=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_A2Cal1),-1,-1,4,"pedeaccum2_1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_A2Cal1),-1,-1,4,"pedeaccum2_2=",0,"contain silicon*2");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_A2Cal1),-1,-1,4,"pedestal2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_A2Cal1),-1,-1,4,"pedesigma2=",0,"contain RMS of silicon");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_A2Cal1),-1,-1,4,"datatmp=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"silicon_accum[4][2][384][3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"silicon_accum2[4][2][384][3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"accum_nevent=",0,"number of accumrated event for pedestal.");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"DEFAULT_ACCUM_NEVENT=100LL",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,1,-1,-1,-2,4,"PEDESTAL_NAME=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,1,-1,-1,-2,4,"PEDESTAL_TITLE=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,1,-1,-1,-2,4,"PEDESIGMA_NAME=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,1,-1,-1,-2,4,"PEDESIGMA_TITLE=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,1,-1,-1,-2,4,"PEDESTAL2_NAME=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,1,-1,-1,-2,4,"PEDESTAL2_TITLE=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,1,-1,-1,-2,4,"PEDESIGMA2_NAME=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,1,-1,-1,-2,4,"PEDESIGMA2_TITLE=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,1,-1,-1,-2,4,"DEFAULT_FILENAME=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* A2RawToCal1 */
static void G__setup_memvarA2RawToCal1(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_A2RawToCal1));
   { A2RawToCal1 *p; p=(A2RawToCal1*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfFunctionLN_A2RawToCal1cLcLRAWTOCAL_FORMAT),-1,-2,1,G__FastAllocString(2048).Format("FORMAT_AUTO=%lldLL",(long long)A2RawToCal1::FORMAT_AUTO).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfFunctionLN_A2RawToCal1cLcLRAWTOCAL_FORMAT),-1,-2,1,G__FastAllocString(2048).Format("FORMAT_OP2010=%lldLL",(long long)A2RawToCal1::FORMAT_OP2010).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfFunctionLN_A2RawToCal1cLcLRAWTOCAL_FORMAT),-1,-2,1,G__FastAllocString(2048).Format("FORMAT_OP2009=%lldLL",(long long)A2RawToCal1::FORMAT_OP2009).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfFunctionLN_A2RawToCal1cLcLRAWTOCAL_FORMAT),-1,-2,1,G__FastAllocString(2048).Format("FORMAT_SPS2010=%lldLL",(long long)A2RawToCal1::FORMAT_SPS2010).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfFunctionLN_A2RawToCal1cLcLRAWTOCAL_FORMAT),-1,-2,1,G__FastAllocString(2048).Format("FORMAT_PPB2013=%lldLL",(long long)A2RawToCal1::FORMAT_PPB2013).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfFunctionLN_A2RawToCal1cLcLRAWTOCAL_FORMAT),-1,-2,1,G__FastAllocString(2048).Format("FORMAT_OP2015=%lldLL",(long long)A2RawToCal1::FORMAT_OP2015).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"format=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* A2RawToCal1Silicon */
static void G__setup_memvarA2RawToCal1Silicon(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_A2RawToCal1Silicon));
   { A2RawToCal1Silicon *p; p=(A2RawToCal1Silicon*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->data)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_SILICON_RAW),-1,-1,1,"data=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->a2cal1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_A2Cal1),-1,-1,1,"a2cal1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->HybSeqMDAQ)-(long)(p)),99,0,0,-1,-1,-1,1,"HybSeqMDAQ[4][4][4]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->id_board)-(long)(p)),105,0,0,-1,-1,-1,1,"id_board[4]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->err)-(long)(p)),105,0,0,-1,-1,-1,1,"err[4]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->errold)-(long)(p)),105,0,0,-1,-1,-1,1,"errold[4]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->crceval)-(long)(p)),99,0,0,-1,-1,-1,1,"crceval[4]=",0,(char*)NULL);
   G__memvar_setup((void*)(&A2RawToCal1Silicon::crctable),98,0,1,-1,-1,-2,1,"crctable[256]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->herror)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TH1F),-1,-1,1,"herror=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nconv)-(long)(p)),105,0,0,-1,-1,-1,1,"nconv=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Arm2Hit */
static void G__setup_memvarArm2Hit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_Arm2Hit));
   { Arm2Hit *p; p=(Arm2Hit*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->ManipPosition)-(long)(p)),100,0,0,-1,-1,-1,1,"ManipPosition=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Strips)-(long)(p)),100,0,0,-1,-1,-1,1,"Strips[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Module)-(long)(p)),105,0,0,-1,-1,-1,1,"Module=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->LeftbarCoord)-(long)(p)),100,0,0,-1,-1,-1,1,"LeftbarCoord[3]=",0,"Final coords expressed in the \"leftbar\" reference frame");
   G__memvar_setup((void*)((long)(&p->GeneralCoord)-(long)(p)),100,0,0,-1,-1,-1,1,"GeneralCoord[3]=",0,"Final coords expressed in the \"general\" reference frame");
   G__memvar_setup((void*)((long)(&p->CalorimCoord)-(long)(p)),100,0,0,-1,-1,-1,1,"CalorimCoord[6]=",0,"Final coords expressed in the \"calorim\" reference frame");
   G__memvar_setup((void*)((long)(&p->LHC_Coord)-(long)(p)),100,0,0,-1,-1,-1,1,"LHC_Coord[3]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Arm2Alignment */
static void G__setup_memvarArm2Alignment(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_Arm2Alignment));
   { Arm2Alignment *p; p=(Arm2Alignment*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("SILINMOD=%lldLL",(long long)Arm2Alignment::SILINMOD).data(),0,"Number of silicon modules");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_Arm2Hit),-1,-1,4,"Hit=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,4,"ZPOS_XSIL_IN_MODULE=",0,"position if x sili inside module (in mm) ");
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,4,"ZPOS_YSIL_IN_MODULE=",0,"position of y sili inside module (in mm)");
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,4,"ZPOS_1ST_W_MODULE_FROM_FRONT_FACE=",0,"position offace of 1st W module from front face (in mm)");
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,4,"THICKNESS_BEFORE_1ST_SILI_MOD=",0,"tot thickness of two modules before 1st sili module (in mm)");
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,4,"STRIPPITCH=",0,"silicon strip pitch in mm (=80 micron)");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"FIRST_STRIP_READ_XSIDE=0LL",0,"1st physical strip (1-768) on sili x-side that is read-out");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"FIRST_STRIP_READ_YSIDE=0LL",0,"1st physical strip (1-768) on sili y-side that is read-out");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"FIRST_STRIP_XPCB=0LL",0,"Strip pf PCB connected to 1st readout strip on sili x-side");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"FIRST_STRIP_YPCB=0LL",0,"Strip pf PCB connected to 1st readout strip on sili y-side");
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,4,"beamcentercoords[2]=",0,"Coords of beam center in the frame centered on the left G10 bar (in mm)");
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,4,"calo25lowrightcornercoords[2]=",0,"Coords of right lower corner of small (25mm) Arm2 tower (in mm)");
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,4,"calo32lowrightcornercoords[2]=",0,"Coords of right lower corner of small (25mm) Arm2 tower (in mm)");
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,4,"theta_x[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,4,"theta_y[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,4,"p1x[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,4,"p1y[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,4,"q1x[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,4,"q1y[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,4,"PA_O1_general_design[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,4,"P1_O1_general_design[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,4,"PA_LHC_meas[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,4,"P1_LHC_meas[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,4,"sil_dist[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,4,"R[3][3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,4,"Rinv[3][3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,4,"S[3][3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-2,4,"Sinv[3][3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"vec_PA_to_beamcenter_on_front_face[3]=",0,"In the general LHCf frame --> = {-20.000, -762.000, -8};");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"vec_P1_to_beamcenter_on_front_face[3]=",0,"In the general LHCf frame --> = {-20.000, -762.000, -270};");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"vec_PA_to_hit_point[3]=",0,"In the general LHCf frame");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"vec_P1_to_hit_point[3]=",0,"In the general LHCf frame");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"LHC_coord_PA[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"LHC_coord_P1[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MyFilePath */
static void G__setup_memvarMyFilePath(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_MyFilePath));
   { MyFilePath *p; p=(MyFilePath*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->base)-(long)(p)),99,0,0,-1,-1,-1,1,"base[256]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tmp)-(long)(p)),99,0,0,-1,-1,-1,1,"tmp[512]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SimpleList */
static void G__setup_memvarSimpleList(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_SimpleList));
   { SimpleList *p; p=(SimpleList*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"nlist=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,2,"list[200][256]=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StructFiberPos */
static void G__setup_memvarStructFiberPos(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_StructFiberPos));
   { StructFiberPos *p; p=(StructFiberPos*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->origin)-(long)(p)),100,0,0,-1,-1,-1,1,"origin[2]=",0,"(x,y) on the calorimeter frame");
   G__memvar_setup((void*)((long)(&p->width)-(long)(p)),100,0,0,-1,-1,-1,1,"width=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->length)-(long)(p)),100,0,0,-1,-1,-1,1,"length=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->direction)-(long)(p)),100,0,0,-1,-1,-1,1,"direction=",0,"theta[rad]");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ConScifiPosition */
static void G__setup_memvarConScifiPosition(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_ConScifiPosition));
   { ConScifiPosition *p; p=(ConScifiPosition*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->tablefile)-(long)(p)),99,0,0,-1,-1,-1,1,"tablefile[256]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->format)-(long)(p)),99,0,0,-1,-1,-1,1,"format[256]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->type)-(long)(p)),105,0,0,-1,-1,-1,1,"type=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->version)-(long)(p)),105,0,0,-1,-1,-1,1,"version=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fiber)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_StructFiberPos),-1,-1,1,"fiber[2][4][2][40]=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)(&ConScifiPosition::pi),100,0,1,-1,-1,-2,1,"pi=",0,(char*)NULL);
   G__memvar_setup((void*)(&ConScifiPosition::CONSCIFIPOSITION_FORMAT),67,0,1,-1,-1,-2,1,"CONSCIFIPOSITION_FORMAT=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("CONSCIFIPOSITION_OK=%lldLL",(long long)ConScifiPosition::CONSCIFIPOSITION_OK).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("CONSCIFIPOSITION_ERROR=%lldLL",(long long)ConScifiPosition::CONSCIFIPOSITION_ERROR).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ConShowerLeakage */
static void G__setup_memvarConShowerLeakage(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_ConShowerLeakage));
   { ConShowerLeakage *p; p=(ConShowerLeakage*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->tablefile)-(long)(p)),99,0,0,-1,-1,-1,1,"tablefile[256]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->format)-(long)(p)),99,0,0,-1,-1,-1,1,"format[256]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->type)-(long)(p)),105,0,0,-1,-1,-1,1,"type=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->version)-(long)(p)),105,0,0,-1,-1,-1,1,"version=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dir)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TDirectory),-1,-1,1,"dir=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h2fac20)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TH2F),-1,-1,1,"h2fac20=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h2fac40)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TH2F),-1,-1,1,"h2fac40=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h2fac25)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TH2F),-1,-1,1,"h2fac25=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h2fac32)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TH2F),-1,-1,1,"h2fac32=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h2fac20_leakin)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TH2F),-1,-1,1,"h2fac20_leakin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h2fac40_leakin)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TH2F),-1,-1,1,"h2fac40_leakin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h2fac25_leakin)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TH2F),-1,-1,1,"h2fac25_leakin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h2fac32_leakin)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TH2F),-1,-1,1,"h2fac32_leakin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h2param20_leakin)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TH2F),-1,-1,1,"h2param20_leakin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h2param40_leakin)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TH2F),-1,-1,1,"h2param40_leakin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h2param25_leakin)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TH2F),-1,-1,1,"h2param25_leakin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->h2param32_leakin)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TH2F),-1,-1,1,"h2param32_leakin=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)(&ConShowerLeakage::CONFSHOWERLEAKAGE_FORMAT),67,0,1,-1,-1,-2,1,"CONFSHOWERLEAKAGE_FORMAT=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("CONFSHOWERLEAKAGE_OK=%lldLL",(long long)ConShowerLeakage::CONFSHOWERLEAKAGE_OK).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("CONFSHOWERLEAKAGE_ERROR=%lldLL",(long long)ConShowerLeakage::CONFSHOWERLEAKAGE_ERROR).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-2,2,"icall=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* LHCfRunInfo */
static void G__setup_memvarLHCfRunInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_LHCfRunInfo));
   { LHCfRunInfo *p; p=(LHCfRunInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("NBUNCHES=%lldLL",(long long)LHCfRunInfo::NBUNCHES).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("STRING_LENGTH=%lldLL",(long long)LHCfRunInfo::STRING_LENGTH).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfFunctionLN_LHCfRunInfocLcLDEF_BEAMTAG),-1,-2,1,G__FastAllocString(2048).Format("COLLIDING=%lldLL",(long long)LHCfRunInfo::COLLIDING).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfFunctionLN_LHCfRunInfocLcLDEF_BEAMTAG),-1,-2,1,G__FastAllocString(2048).Format("NONCOLLIDING=%lldLL",(long long)LHCfRunInfo::NONCOLLIDING).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfFunctionLN_LHCfRunInfocLcLDEF_BEAMTAG),-1,-2,1,G__FastAllocString(2048).Format("DISPLACED=%lldLL",(long long)LHCfRunInfo::DISPLACED).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ioformat)-(long)(p)),105,0,0,-1,-1,-1,1,"ioformat=",0,"Format of the ASCII file.");
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,"Run Number");
   G__memvar_setup((void*)((long)(&p->start_time)-(long)(p)),105,0,0,-1,-1,-1,1,"start_time=",0,"DAQ start time.");
   G__memvar_setup((void*)((long)(&p->end_time)-(long)(p)),105,0,0,-1,-1,-1,1,"end_time=",0,"DAQ end time.");
   G__memvar_setup((void*)((long)(&p->general_comments)-(long)(p)),99,0,0,-1,-1,-1,1,"general_comments[512]=",0,"Comments");
   G__memvar_setup((void*)((long)(&p->a1_runmode)-(long)(p)),105,0,0,-1,-1,-1,1,"a1_runmode=",0,"Run Mode of Frontend1");
   G__memvar_setup((void*)((long)(&p->a2_runmode)-(long)(p)),105,0,0,-1,-1,-1,1,"a2_runmode=",0,"Run Mode of Frontend2");
   G__memvar_setup((void*)((long)(&p->LTPmode)-(long)(p)),99,0,0,-1,-1,-1,1,"LTPmode[32]=",0,"Mode of the LTP module ");
   G__memvar_setup((void*)((long)(&p->a1_LogicMode)-(long)(p)),99,0,0,-1,-1,-1,1,"a1_LogicMode[32]=",0,"Run Mode");
   G__memvar_setup((void*)((long)(&p->a2_LogicMode)-(long)(p)),99,0,0,-1,-1,-1,1,"a2_LogicMode[32]=",0,"Run Mode");
   G__memvar_setup((void*)((long)(&p->a1_V1495Load)-(long)(p)),99,0,0,-1,-1,-1,1,"a1_V1495Load[32]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->a2_V1495Load)-(long)(p)),99,0,0,-1,-1,-1,1,"a2_V1495Load[32]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->a1_V1495Setup)-(long)(p)),99,0,0,-1,-1,-1,1,"a1_V1495Setup[32]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->a2_V1495Setup)-(long)(p)),99,0,0,-1,-1,-1,1,"a2_V1495Setup[32]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->a1_GPIOLoad)-(long)(p)),99,0,0,-1,-1,-1,1,"a1_GPIOLoad[32]=",0,"GPIO Load File for Arm1");
   G__memvar_setup((void*)((long)(&p->a2_GPIOLoad)-(long)(p)),99,0,0,-1,-1,-1,1,"a2_GPIOLoad[32]=",0,"GPIO Load File for Arm2");
   G__memvar_setup((void*)((long)(&p->a1_GPIOSetup)-(long)(p)),99,0,0,-1,-1,-1,1,"a1_GPIOSetup[32]=",0,"GPIO Setup for Arm1");
   G__memvar_setup((void*)((long)(&p->a2_GPIOSetup)-(long)(p)),99,0,0,-1,-1,-1,1,"a2_GPIOSetup[32]=",0,"GPIO Setup for Arm2");
   G__memvar_setup((void*)((long)(&p->a1_Discriminator)-(long)(p)),99,0,0,-1,-1,-1,1,"a1_Discriminator[32]=",0,"Discriminator setup for Arm1");
   G__memvar_setup((void*)((long)(&p->a2_Discriminator)-(long)(p)),99,0,0,-1,-1,-1,1,"a2_Discriminator[32]=",0,"Discriminator setup for Arm2");
   G__memvar_setup((void*)((long)(&p->a1_scifidaq)-(long)(p)),105,0,0,-1,-1,-1,1,"a1_scifidaq=",0,"SCIFI   DAQ, 1: ON, 0: OFF, -1: Unknown");
   G__memvar_setup((void*)((long)(&p->a2_silicondaq)-(long)(p)),105,0,0,-1,-1,-1,1,"a2_silicondaq=",0,"Silicon DAQ, 1: ON, 0: OFF, -1: Unknown");
   G__memvar_setup((void*)((long)(&p->a1_PMTgain)-(long)(p)),99,0,0,-1,-1,-1,1,"a1_PMTgain[32]=",0,"Gain Configuration of Arm1 PMTs (string)");
   G__memvar_setup((void*)((long)(&p->a2_PMTgain)-(long)(p)),99,0,0,-1,-1,-1,1,"a2_PMTgain[32]=",0,"Gain Configuration of Arm2 PMTs (string)");
   G__memvar_setup((void*)((long)(&p->a1_scifigain)-(long)(p)),99,0,0,-1,-1,-1,1,"a1_scifigain[32]=",0,"Gain Configuration of SciFi (string)");
   G__memvar_setup((void*)((long)(&p->a2_silicongain)-(long)(p)),99,0,0,-1,-1,-1,1,"a2_silicongain[32]=",0,"Gain Configuration of Silicon (string)");
   G__memvar_setup((void*)((long)(&p->a1_position)-(long)(p)),99,0,0,-1,-1,-1,1,"a1_position[32]=",0,"Arm1 Detector position");
   G__memvar_setup((void*)((long)(&p->a2_position)-(long)(p)),99,0,0,-1,-1,-1,1,"a2_position[32]=",0,"Arm2 Detector position");
   G__memvar_setup((void*)((long)(&p->daq_beam1_scl_nbunch_offset)-(long)(p)),105,0,0,-1,-1,-1,1,"daq_beam1_scl_nbunch_offset=",0,"Offset of BC counts due to GPIO Configuration.");
   G__memvar_setup((void*)((long)(&p->daq_beam2_scl_nbunch_offset)-(long)(p)),105,0,0,-1,-1,-1,1,"daq_beam2_scl_nbunch_offset=",0,"Offset of BC counts due to GPIO Configuration.");
   G__memvar_setup((void*)((long)(&p->daq_comments)-(long)(p)),99,0,0,-1,-1,-1,1,"daq_comments[512]=",0,"Comments");
   G__memvar_setup((void*)((long)(&p->nevent)-(long)(p)),105,0,0,-1,-1,-1,1,"nevent=",0,"Total events in run including SlowControl. ");
   G__memvar_setup((void*)((long)(&p->a1_nevent)-(long)(p)),105,0,0,-1,-1,-1,1,"a1_nevent=",0,"Number of Arm1 events");
   G__memvar_setup((void*)((long)(&p->a1_nevent_L2TA)-(long)(p)),105,0,0,-1,-1,-1,1,"a1_nevent_L2TA=",0,"Number of Arm1 L2TA events");
   G__memvar_setup((void*)((long)(&p->a1_nevent_L2TA_MB)-(long)(p)),105,0,0,-1,-1,-1,1,"a1_nevent_L2TA_MB=",0,"Number of Arm1 L2TA (Minimum bias) events");
   G__memvar_setup((void*)((long)(&p->a1_nevent_L2TA_SP)-(long)(p)),105,0,0,-1,-1,-1,1,"a1_nevent_L2TA_SP=",0,"Number of Arm1 L2TA (Pi0 trigger) events");
   G__memvar_setup((void*)((long)(&p->a1_nevent_L2TP)-(long)(p)),105,0,0,-1,-1,-1,1,"a1_nevent_L2TP=",0,"Number of Arm1 L2TP(Pedestal) event");
   G__memvar_setup((void*)((long)(&p->a1_nevent_laser)-(long)(p)),105,0,0,-1,-1,-1,1,"a1_nevent_laser=",0,"Number of Arm1 Laser events");
   G__memvar_setup((void*)((long)(&p->a2_nevent)-(long)(p)),105,0,0,-1,-1,-1,1,"a2_nevent=",0,"Number of Arm2 events");
   G__memvar_setup((void*)((long)(&p->a2_nevent_L2TA)-(long)(p)),105,0,0,-1,-1,-1,1,"a2_nevent_L2TA=",0,"Number of Arm2 L2TA(Shower) events  ");
   G__memvar_setup((void*)((long)(&p->a2_nevent_L2TA_MB)-(long)(p)),105,0,0,-1,-1,-1,1,"a2_nevent_L2TA_MB=",0,"Number of Arm1 L2TA (Minimum bias) events");
   G__memvar_setup((void*)((long)(&p->a2_nevent_L2TA_SP)-(long)(p)),105,0,0,-1,-1,-1,1,"a2_nevent_L2TA_SP=",0,"Number of Arm1 L2TA (Pi0 trigger) events");
   G__memvar_setup((void*)((long)(&p->a2_nevent_L2TP)-(long)(p)),105,0,0,-1,-1,-1,1,"a2_nevent_L2TP=",0,"Number of Arm2 L2TP(Pedestal) events");
   G__memvar_setup((void*)((long)(&p->a2_nevent_laser)-(long)(p)),105,0,0,-1,-1,-1,1,"a2_nevent_laser=",0,"Number of Arm2 Laser events");
   G__memvar_setup((void*)((long)(&p->a1_nevent_L2T_Shower)-(long)(p)),105,0,0,-1,-1,-1,1,"a1_nevent_L2T_Shower=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->a1_nevent_L2T_Special)-(long)(p)),105,0,0,-1,-1,-1,1,"a1_nevent_L2T_Special=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->a1_nevent_L2T_Pedestal)-(long)(p)),105,0,0,-1,-1,-1,1,"a1_nevent_L2T_Pedestal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->a1_nevent_L2T_L1T)-(long)(p)),105,0,0,-1,-1,-1,1,"a1_nevent_L2T_L1T=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->a1_nevent_L2T_FC)-(long)(p)),105,0,0,-1,-1,-1,1,"a1_nevent_L2T_FC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->a2_nevent_L2T_Shower)-(long)(p)),105,0,0,-1,-1,-1,1,"a2_nevent_L2T_Shower=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->a2_nevent_L2T_Special)-(long)(p)),105,0,0,-1,-1,-1,1,"a2_nevent_L2T_Special=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->a2_nevent_L2T_Pedestal)-(long)(p)),105,0,0,-1,-1,-1,1,"a2_nevent_L2T_Pedestal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->a2_nevent_L2T_L1T)-(long)(p)),105,0,0,-1,-1,-1,1,"a2_nevent_L2T_L1T=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->a2_nevent_L2T_FC)-(long)(p)),105,0,0,-1,-1,-1,1,"a2_nevent_L2T_FC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->a1scl_nevent)-(long)(p)),105,0,0,-1,-1,-1,1,"a1scl_nevent=",0,"Number of Arm1 Scaler events");
   G__memvar_setup((void*)((long)(&p->a2scl_nevent)-(long)(p)),105,0,0,-1,-1,-1,1,"a2scl_nevent=",0,"Number of Arm2 Scaler events");
   G__memvar_setup((void*)((long)(&p->sc_nevent)-(long)(p)),105,0,0,-1,-1,-1,1,"sc_nevent=",0,"Number of SlowControl events");
   G__memvar_setup((void*)((long)(&p->dipl_nevent)-(long)(p)),105,0,0,-1,-1,-1,1,"dipl_nevent=",0,"Number of DIPL events");
   G__memvar_setup((void*)((long)(&p->diph_nevent)-(long)(p)),105,0,0,-1,-1,-1,1,"diph_nevent=",0,"Number of DIPH events");
   G__memvar_setup((void*)((long)(&p->dipvh_nevent)-(long)(p)),105,0,0,-1,-1,-1,1,"dipvh_nevent=",0,"Number of DIPVH events");
   G__memvar_setup((void*)((long)(&p->a1_nevent_l1t)-(long)(p)),104,0,0,-1,-1,-1,1,"a1_nevent_l1t=",0,"Number of Arm1 L1T");
   G__memvar_setup((void*)((long)(&p->a1_nevent_l1t_enable)-(long)(p)),104,0,0,-1,-1,-1,1,"a1_nevent_l1t_enable=",0,"Number of Arm1 L1T with BEAM and ENABLE");
   G__memvar_setup((void*)((long)(&p->a2_nevent_l1t)-(long)(p)),104,0,0,-1,-1,-1,1,"a2_nevent_l1t=",0,"Number of Arm2 L1T");
   G__memvar_setup((void*)((long)(&p->a2_nevent_l1t_enable)-(long)(p)),104,0,0,-1,-1,-1,1,"a2_nevent_l1t_enable=",0,"Number of Arm2 L1T with BEAM and ENABLE");
   G__memvar_setup((void*)((long)(&p->a1_nevent_presetMB)-(long)(p)),105,0,0,-1,-1,-1,1,"a1_nevent_presetMB=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->a1_nevent_presetSP)-(long)(p)),105,0,0,-1,-1,-1,1,"a1_nevent_presetSP=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->a2_nevent_presetMB)-(long)(p)),105,0,0,-1,-1,-1,1,"a2_nevent_presetMB=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->a2_nevent_presetSP)-(long)(p)),105,0,0,-1,-1,-1,1,"a2_nevent_presetSP=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->a2_ncrcerror)-(long)(p)),105,0,0,-1,-1,-1,1,"a2_ncrcerror=",0,"Number of CRC error;");
   G__memvar_setup((void*)((long)(&p->stable_beam)-(long)(p)),105,0,0,-1,-1,-1,1,"stable_beam=",0,"Stable Beam Flag  -1: unknown, 0: no 1:stable_beam");
   G__memvar_setup((void*)((long)(&p->crossingangle)-(long)(p)),105,0,0,-1,-1,-1,1,"crossingangle=",0,"Clossing Angle -1: unknown, 0; no, 1; yes");
   G__memvar_setup((void*)((long)(&p->beam1_nbunches)-(long)(p)),105,0,0,-1,-1,-1,1,"beam1_nbunches=",0,"Number of Bunches of Beam1");
   G__memvar_setup((void*)((long)(&p->beam2_nbunches)-(long)(p)),105,0,0,-1,-1,-1,1,"beam2_nbunches=",0,"Number of Bunches of Beam2");
   G__memvar_setup((void*)((long)(&p->beam1_bunches)-(long)(p)),105,0,0,-1,-1,-1,1,"beam1_bunches[200]=",0,"Bunch Position of Beam1 ");
   G__memvar_setup((void*)((long)(&p->beam2_bunches)-(long)(p)),105,0,0,-1,-1,-1,1,"beam2_bunches[200]=",0,"Bunch Position of Beam2");
   G__memvar_setup((void*)((long)(&p->beam1_tag)-(long)(p)),105,0,0,-1,-1,-1,1,"beam1_tag[200]=",0,"Tag of each Bunch, 1: col., 2: non, 3:displaced col.  < 0 : bad bunch ");
   G__memvar_setup((void*)((long)(&p->beam2_tag)-(long)(p)),105,0,0,-1,-1,-1,1,"beam2_tag[200]=",0,"Tag of each Bunch, 1: col., 2: non, 3:displaced col.  < 0 : bad bunch ");
   G__memvar_setup((void*)((long)(&p->beam1_avintensity)-(long)(p)),100,0,0,-1,-1,-1,1,"beam1_avintensity=",0,"Average Intensity of Beam1 (in time window of Analysis cut.)");
   G__memvar_setup((void*)((long)(&p->beam2_avintensity)-(long)(p)),100,0,0,-1,-1,-1,1,"beam2_avintensity=",0,"Average Intensity of Beam2 (in time window of Analysis cut.)");
   G__memvar_setup((void*)((long)(&p->beam1_avintensitypb)-(long)(p)),100,0,0,-1,-1,-1,1,"beam1_avintensitypb[200]=",0,"Average Intensity per Bunch  (in time window of Analysis cut.)");
   G__memvar_setup((void*)((long)(&p->beam2_avintensitypb)-(long)(p)),100,0,0,-1,-1,-1,1,"beam2_avintensitypb[200]=",0,"Average Intensity per Bunch  (in time window of Analysis cut.)");
   G__memvar_setup((void*)((long)(&p->beam_avluminositypb)-(long)(p)),100,0,0,-1,-1,-1,1,"beam_avluminositypb[200]=",0,"Average Luminosity per Bunch (in same order as beam1_bunches)");
   G__memvar_setup((void*)((long)(&p->done_lumiscan)-(long)(p)),105,0,0,-1,-1,-1,1,"done_lumiscan=",0,"Done Lumonosity Scan -1:unknown, 0: no, the others IP.                ");
   G__memvar_setup((void*)((long)(&p->beam_comments)-(long)(p)),99,0,0,-1,-1,-1,1,"beam_comments[512]=",0,"Comments");
   G__memvar_setup((void*)((long)(&p->analysis_quality)-(long)(p)),105,0,0,-1,-1,-1,1,"analysis_quality=",0,"Data Quality for Physics Analysis 1: good, -1:bad");
   G__memvar_setup((void*)((long)(&p->analysis_cut_stime)-(long)(p)),105,0,0,-1,-1,-1,1,"analysis_cut_stime=",0,"Start Time of the Good Quality Data;");
   G__memvar_setup((void*)((long)(&p->analysis_cut_etime)-(long)(p)),105,0,0,-1,-1,-1,1,"analysis_cut_etime=",0,"End Time of the Good Quality Data;");
   G__memvar_setup((void*)((long)(&p->analysis_a1_nevent)-(long)(p)),105,0,0,-1,-1,-1,1,"analysis_a1_nevent=",0,"Number of Arm1 Events in the Time Window.");
   G__memvar_setup((void*)((long)(&p->analysis_a1_nevent_L2TA)-(long)(p)),105,0,0,-1,-1,-1,1,"analysis_a1_nevent_L2TA=",0,"Number of Arm1 Shower Events in the Time Window.");
   G__memvar_setup((void*)((long)(&p->analysis_a2_nevent)-(long)(p)),105,0,0,-1,-1,-1,1,"analysis_a2_nevent=",0,"Number of Arm2 Events in the Time Window.");
   G__memvar_setup((void*)((long)(&p->analysis_a2_nevent_L2TA)-(long)(p)),105,0,0,-1,-1,-1,1,"analysis_a2_nevent_L2TA=",0,"Number of ARm2 Shower Events in the Time Window.");
   G__memvar_setup((void*)((long)(&p->analysis_comments)-(long)(p)),99,0,0,-1,-1,-1,1,"analysis_comments[512]=",0,"Comments");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)(&LHCfRunInfo::buf_run),105,0,0,-1,-1,-2,1,"buf_run=",0,(char*)NULL);
   G__memvar_setup((void*)(&LHCfRunInfo::buf_beam1_nbunches),105,0,0,-1,-1,-2,1,"buf_beam1_nbunches=",0,(char*)NULL);
   G__memvar_setup((void*)(&LHCfRunInfo::buf_beam2_nbunches),105,0,0,-1,-1,-2,1,"buf_beam2_nbunches=",0,(char*)NULL);
   G__memvar_setup((void*)(&LHCfRunInfo::buf_beam1_bunches),105,0,0,-1,-1,-2,1,"buf_beam1_bunches[200]=",0,(char*)NULL);
   G__memvar_setup((void*)(&LHCfRunInfo::buf_beam2_bunches),105,0,0,-1,-1,-2,1,"buf_beam2_bunches[200]=",0,(char*)NULL);
   G__memvar_setup((void*)(&LHCfRunInfo::buf_beam1_bunches_index),105,0,0,-1,-1,-2,1,"buf_beam1_bunches_index[3565]=",0,(char*)NULL);
   G__memvar_setup((void*)(&LHCfRunInfo::buf_beam2_bunches_index),105,0,0,-1,-1,-2,1,"buf_beam2_bunches_index[3565]=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("DEFAULT_DAQ_BEAM1_SCL_NBUNCH_OFFSET=%lldLL",(long long)LHCfRunInfo::DEFAULT_DAQ_BEAM1_SCL_NBUNCH_OFFSET).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("DEFAULT_DAQ_BEAM2_SCL_NBUNCH_OFFSET=%lldLL",(long long)LHCfRunInfo::DEFAULT_DAQ_BEAM2_SCL_NBUNCH_OFFSET).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* LHCfRunInfoTable */
static void G__setup_memvarLHCfRunInfoTable(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_LHCfRunInfoTable));
   { LHCfRunInfoTable *p; p=(LHCfRunInfoTable*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->ioformat)-(long)(p)),105,0,0,-1,-1,-1,1,"ioformat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ninfo)-(long)(p)),105,0,0,-1,-1,-1,1,"ninfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->iinfo)-(long)(p)),105,0,0,-1,-1,-1,1,"iinfo=",0,"current info number");
   G__memvar_setup((void*)((long)(&p->irun)-(long)(p)),105,0,0,-1,-1,-1,1,"irun=",0,"current run number");
   G__memvar_setup((void*)((long)(&p->runinfo)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_vectorlELHCfRunInfomUcOallocatorlELHCfRunInfomUgRsPgR),G__defined_typename("vector<LHCfRunInfo*>"),-1,1,"runinfo=",0,"!");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* PMTSatu */
static void G__setup_memvarPMTSatu(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_PMTSatu));
   { PMTSatu *p; p=(PMTSatu*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("NPMTMAX=%lldLL",(long long)PMTSatu::NPMTMAX).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("NHV=%lldLL",(long long)PMTSatu::NHV).data(),0,(char*)NULL);
   G__memvar_setup((void*)(&PMTSatu::HV),105,0,1,-1,-1,-2,1,"HV[11]=",0,(char*)NULL);
   G__memvar_setup((void*)(&PMTSatu::NAGOYACABLE),100,0,1,-1,-1,-2,1,"NAGOYACABLE=",0,"+++ To be studied !! +++");
   G__memvar_setup((void*)(&PMTSatu::AMPFACTOR),100,0,1,-1,-1,-2,1,"AMPFACTOR=",0,(char*)NULL);
   G__memvar_setup((void*)(&PMTSatu::SPSCABLE),100,0,1,-1,-1,-2,1,"SPSCABLE=",0,(char*)NULL);
   G__memvar_setup((void*)(&PMTSatu::SPS2LHCCABLE),100,0,1,-1,-1,-2,1,"SPS2LHCCABLE=",0,(char*)NULL);
   G__memvar_setup((void*)(&PMTSatu::GATE200TO500),100,0,1,-1,-1,-2,1,"GATE200TO500=",0,"+++ To be studied !! +++");
   G__memvar_setup((void*)(&PMTSatu::ADCCONV),100,0,1,-1,-1,-2,1,"ADCCONV=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_PMTSatucLcLPMTTable),-1,-1,2,"pmttable=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"spoint[2][2][16][11]=",0,"+++ saturation point           +++");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"slope[2][2][16][11]=",0,"+++ linear slope               +++");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"coef2nd[2][2][16][11]=",0,"+++ parabolic term coefficient +++");
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,2,"tablepath[100]=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,2,"pmttablename[40]=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* PMTSatuCorrection */
static void G__setup_memvarPMTSatuCorrection(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_PMTSatuCorrection));
   { PMTSatuCorrection *p; p=(PMTSatuCorrection*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"hvtable[2][2][16]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ParticleID01 */
static void G__setup_memvarParticleID01(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_ParticleID01));
   { ParticleID01 *p; p=(ParticleID01*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->calsum)-(long)(p)),100,0,0,-1,-1,-1,1,"calsum[2]=",0,"sum of 16 layers");
   G__memvar_setup((void*)((long)(&p->L)-(long)(p)),100,0,0,-1,-1,-1,1,"L[2][2]=",0,"[Layer] Position on the threshold tower:param ");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)(&ParticleID01::l0_th),100,0,1,-1,-1,-2,1,"l0_th=",0,"L20");
   G__memvar_setup((void*)(&ParticleID01::l1_th),100,0,1,-1,-1,-2,1,"l1_th=",0,"L95");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ParticleID02 */
static void G__setup_memvarParticleID02(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_ParticleID02));
   { ParticleID02 *p; p=(ParticleID02*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SciFiPosCalculation */
static void G__setup_memvarSciFiPosCalculation(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_SciFiPosCalculation));
   { SciFiPosCalculation *p; p=(SciFiPosCalculation*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->hosei0)-(long)(p)),100,0,0,-1,-1,-1,1,"hosei0[4][2][20]=",0,"alignment");
   G__memvar_setup((void*)((long)(&p->hosei1)-(long)(p)),100,0,0,-1,-1,-1,1,"hosei1[4][2][40]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hosei_1MIP0)-(long)(p)),100,0,0,-1,-1,-1,1,"hosei_1MIP0[4][2][20]=",0,"gain ");
   G__memvar_setup((void*)((long)(&p->hosei_1MIP1)-(long)(p)),100,0,0,-1,-1,-1,1,"hosei_1MIP1[4][2][40]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->scifikai0)-(long)(p)),100,0,0,-1,-1,-1,1,"scifikai0[4][2][20]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->scifikai1)-(long)(p)),100,0,0,-1,-1,-1,1,"scifikai1[4][2][40]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sumscifi0)-(long)(p)),100,0,0,-1,-1,-1,1,"sumscifi0[4][2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sumscifi1)-(long)(p)),100,0,0,-1,-1,-1,1,"sumscifi1[4][2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->max0)-(long)(p)),100,0,0,-1,-1,-1,1,"max0[4][2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->max1)-(long)(p)),100,0,0,-1,-1,-1,1,"max1[4][2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->saidai0)-(long)(p)),105,0,0,-1,-1,-1,1,"saidai0[4][2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->saidai1)-(long)(p)),105,0,0,-1,-1,-1,1,"saidai1[4][2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->goukei0)-(long)(p)),100,0,0,-1,-1,-1,1,"goukei0[4][2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->goukei1)-(long)(p)),100,0,0,-1,-1,-1,1,"goukei1[4][2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->goukei0_1)-(long)(p)),100,0,0,-1,-1,-1,1,"goukei0_1[4][2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->goukei1_1)-(long)(p)),100,0,0,-1,-1,-1,1,"goukei1_1[4][2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->zyuusinn0)-(long)(p)),100,0,0,-1,-1,-1,1,"zyuusinn0[4][2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->zyuusinn1)-(long)(p)),100,0,0,-1,-1,-1,1,"zyuusinn1[4][2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ScifiIncidentPosition02 */
static void G__setup_memvarScifiIncidentPosition02(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_ScifiIncidentPosition02));
   { ScifiIncidentPosition02 *p; p=(ScifiIncidentPosition02*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->pos)-(long)(p)),100,0,0,-1,-1,-1,1,"pos[2][4][2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->qparam)-(long)(p)),100,0,0,-1,-1,-1,1,"qparam[2][4][2][6]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pede)-(long)(p)),100,0,0,-1,-1,-1,1,"pede[2][4][2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->scifipos)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_ConScifiPosition),-1,-1,1,"scifipos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->f)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TF1),-1,-1,1,"f[2][4][2]=",0,"!");
   G__memvar_setup((void*)((long)(&p->ge)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TGraphErrors),-1,-1,1,"ge[2][4][2]=",0,"!");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("SCIFIINCIDENTPOSITION02_OK=%lldLL",(long long)ScifiIncidentPosition02::SCIFIINCIDENTPOSITION02_OK).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("SCIFIINCIDENTPOSITION02_ERROR=%lldLL",(long long)ScifiIncidentPosition02::SCIFIINCIDENTPOSITION02_ERROR).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* ScintiPosDependence */
static void G__setup_memvarScintiPosDependence(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_ScintiPosDependence));
   { ScintiPosDependence *p; p=(ScintiPosDependence*)0x1000; if (p) { }
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,2,"file[256]=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,2,"format_type[256]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"format=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"version=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,2,"date[256]=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,2,"person[256]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"C[4][16][10]=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("SCINTIPOSDEPENDENCE_OK=%lldLL",(long long)ScintiPosDependence::SCINTIPOSDEPENDENCE_OK).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("SCINTIPOSDEPENDENCE_ERROR=%lldLL",(long long)ScintiPosDependence::SCINTIPOSDEPENDENCE_ERROR).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SPSAdamoPedeSubtract */
static void G__setup_memvarSPSAdamoPedeSubtract(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_SPSAdamoPedeSubtract));
   { SPSAdamoPedeSubtract *p; p=(SPSAdamoPedeSubtract*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nevent=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_SPSAdamo),-1,-1,4,"pedeaccum=",0,"Buffer to calculate pedestal average");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_SPSAdamo),-1,-1,4,"pedeaccum2=",0,"Buffer to calculate pedestal RMS (contain square)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_SPSAdamo),-1,-1,4,"pedeaccum_sub=",0,"Buffer to calculate pedestal average");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_SPSAdamo),-1,-1,4,"pedeaccum_sub2=",0,"Buffer to calculate pedestal RMS (contain square)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_SPSAdamo),-1,-1,4,"pedestal=",0,"Average (before common noise subtraction) ");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_SPSAdamo),-1,-1,4,"pedesigma=",0,"RMS     (before common noise subtraction) ");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_SPSAdamo),-1,-1,4,"pedestal2=",0,"Average (after common noise subtraction) ");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_SPSAdamo),-1,-1,4,"pedesigma2=",0,"RMS     (after common noise subtraction) ");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,1,-1,-1,-2,4,"PEDESTAL_NAME=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,1,-1,-1,-2,4,"PEDESIGMA_NAME=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,1,-1,-1,-2,4,"PEDESTAL2_NAME=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,1,-1,-1,-2,4,"PEDESIGMA2_NAME=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,1,-1,-1,-2,4,"DEFAULT_FILENAME=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TransitionFit */
static void G__setup_memvarTransitionFit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_TransitionFit));
   { TransitionFit *p; p=(TransitionFit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-2,2,"ncall=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,2,"name[256]=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,2,"title[256]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TDirectory),-1,-1,2,"dir=",0,"directory");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TGraphErrors),-1,-1,2,"g[2]=",0,"[tower]");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TF1),-1,-1,2,"f[2]=",0,"[tower]");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"depth[16]=",0,"for the conversion from #layer to pos[r.l.]");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"pede[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RHICfRunInfo */
static void G__setup_memvarRHICfRunInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_RHICfRunInfo));
   { RHICfRunInfo *p; p=(RHICfRunInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(2048).Format("NBUNCHES=%lldLL",(long long)RHICfRunInfo::NBUNCHES).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(2048).Format("STRING_LENGTH=%lldLL",(long long)RHICfRunInfo::STRING_LENGTH).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfFunctionLN_RHICfRunInfocLcLDEF_BEAMTAG),-1,-2,1,G__FastAllocString(2048).Format("COLLIDING=%lldLL",(long long)RHICfRunInfo::COLLIDING).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfFunctionLN_RHICfRunInfocLcLDEF_BEAMTAG),-1,-2,1,G__FastAllocString(2048).Format("NONCOLLIDING=%lldLL",(long long)RHICfRunInfo::NONCOLLIDING).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfFunctionLN_RHICfRunInfocLcLDEF_BEAMTAG),-1,-2,1,G__FastAllocString(2048).Format("DISPLACED=%lldLL",(long long)RHICfRunInfo::DISPLACED).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ioformat)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ioformat=",0,"Format of the ASCII file.");
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"run=",0,"Run Number");
   G__memvar_setup((void*)((long)(&p->start_time)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"start_time=",0,"DAQ start time.");
   G__memvar_setup((void*)((long)(&p->end_time)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"end_time=",0,"DAQ end time.");
   G__memvar_setup((void*)((long)(&p->general_comments)-(long)(p)),99,0,0,-1,-1,-1,1,"general_comments[512]=",0,"Comments");
   G__memvar_setup((void*)((long)(&p->a1_runmode)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"a1_runmode=",0,"Run Mode of Frontend1");
   G__memvar_setup((void*)((long)(&p->a1_LogicMode)-(long)(p)),99,0,0,-1,-1,-1,1,"a1_LogicMode[256]=",0,"Run Mode");
   G__memvar_setup((void*)((long)(&p->a1_GPIOLoad)-(long)(p)),99,0,0,-1,-1,-1,1,"a1_GPIOLoad[256]=",0,"GPIO Load File for Arm1");
   G__memvar_setup((void*)((long)(&p->a1_GPIOLoadFiles)-(long)(p)),99,0,0,-1,-1,-1,1,"a1_GPIOLoadFiles[2][256]=",0,"GPIO Load File for Arm1");
   G__memvar_setup((void*)((long)(&p->a1_GPIOSetup)-(long)(p)),99,0,0,-1,-1,-1,1,"a1_GPIOSetup[256]=",0,"GPIO Setup for Arm1");
   G__memvar_setup((void*)((long)(&p->a1_Discriminator)-(long)(p)),99,0,0,-1,-1,-1,1,"a1_Discriminator[256]=",0,"Discriminator setup for Arm1");
   G__memvar_setup((void*)((long)(&p->a1_scifidaq)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"a1_scifidaq=",0,"SCIFI   DAQ, 1: ON, 0: OFF, -1: Unknown ");
   G__memvar_setup((void*)((long)(&p->common_operation)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"common_operation=",0,"Common Operation Mode 1:Yes 0:No, -1: Unknown");
   G__memvar_setup((void*)((long)(&p->a1_PMTgain)-(long)(p)),99,0,0,-1,-1,-1,1,"a1_PMTgain[32]=",0,"Gain Configuration of Arm1 PMTs (string)");
   G__memvar_setup((void*)((long)(&p->a1_scifigain)-(long)(p)),99,0,0,-1,-1,-1,1,"a1_scifigain[32]=",0,"Gain Configuration of SciFi (string)");
   G__memvar_setup((void*)((long)(&p->a1_position)-(long)(p)),99,0,0,-1,-1,-1,1,"a1_position[32]=",0,"Arm1 Detector position");
   G__memvar_setup((void*)((long)(&p->daq_beam1_scl_nbunch_offset)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"daq_beam1_scl_nbunch_offset=",0,"Offset of BC counts due to GPIO Configuration.");
   G__memvar_setup((void*)((long)(&p->daq_beam2_scl_nbunch_offset)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"daq_beam2_scl_nbunch_offset=",0,"Offset of BC counts due to GPIO Configuration.");
   G__memvar_setup((void*)((long)(&p->daq_comments)-(long)(p)),99,0,0,-1,-1,-1,1,"daq_comments[512]=",0,"Comments");
   G__memvar_setup((void*)((long)(&p->nevent)-(long)(p)),110,0,0,-1,G__defined_typename("Long64_t"),-1,1,"nevent=",0,"Total events in run including SlowControl. ");
   G__memvar_setup((void*)((long)(&p->a1_nevent)-(long)(p)),110,0,0,-1,G__defined_typename("Long64_t"),-1,1,"a1_nevent=",0,"Number of Arm1 events5");
   G__memvar_setup((void*)((long)(&p->a1_nevent_L3T_Shower)-(long)(p)),110,0,0,-1,G__defined_typename("Long64_t"),-1,1,"a1_nevent_L3T_Shower=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->a1_nevent_L3T_Special1)-(long)(p)),110,0,0,-1,G__defined_typename("Long64_t"),-1,1,"a1_nevent_L3T_Special1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->a1_nevent_L3T_Special2)-(long)(p)),110,0,0,-1,G__defined_typename("Long64_t"),-1,1,"a1_nevent_L3T_Special2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->a1_nevent_L3T_Pedestal)-(long)(p)),110,0,0,-1,G__defined_typename("Long64_t"),-1,1,"a1_nevent_L3T_Pedestal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->a1_nevent_L3T_L1T)-(long)(p)),110,0,0,-1,G__defined_typename("Long64_t"),-1,1,"a1_nevent_L3T_L1T=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->a1_nevent_L3T_Shower_TS)-(long)(p)),110,0,0,-1,G__defined_typename("Long64_t"),-1,1,"a1_nevent_L3T_Shower_TS=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->a1_nevent_L3T_Shower_TL)-(long)(p)),110,0,0,-1,G__defined_typename("Long64_t"),-1,1,"a1_nevent_L3T_Shower_TL=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->a1_nevent_L3T_STAR)-(long)(p)),110,0,0,-1,G__defined_typename("Long64_t"),-1,1,"a1_nevent_L3T_STAR=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->a1_nevent_STAR_Only)-(long)(p)),110,0,0,-1,G__defined_typename("Long64_t"),-1,1,"a1_nevent_STAR_Only=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->a1scl_nevent)-(long)(p)),110,0,0,-1,G__defined_typename("Long64_t"),-1,1,"a1scl_nevent=",0,"Number of Arm1 Scaler events");
   G__memvar_setup((void*)((long)(&p->sc_nevent)-(long)(p)),110,0,0,-1,G__defined_typename("Long64_t"),-1,1,"sc_nevent=",0,"Number of SlowControl events");
   G__memvar_setup((void*)((long)(&p->a1_nevent_l1t)-(long)(p)),109,0,0,-1,G__defined_typename("ULong64_t"),-1,1,"a1_nevent_l1t=",0,"Number of Arm1 L1T");
   G__memvar_setup((void*)((long)(&p->a1_nevent_l1t_enable)-(long)(p)),109,0,0,-1,G__defined_typename("ULong64_t"),-1,1,"a1_nevent_l1t_enable=",0,"Number of Arm1 L1T with BEAM and ENABLE");
   G__memvar_setup((void*)((long)(&p->a1_nevent_presetMB)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"a1_nevent_presetMB=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->a1_nevent_presetSP)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"a1_nevent_presetSP=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->stable_beam)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"stable_beam=",0,"Stable Beam Flag  -1: unknown, 0: no 1:stable_beam");
   G__memvar_setup((void*)((long)(&p->crossingangle)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"crossingangle=",0,"Clossing Angle -1: unknown, 0; no, 1; yes");
   G__memvar_setup((void*)((long)(&p->beam1_nbunches)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"beam1_nbunches=",0,"Number of Bunches of Beam1");
   G__memvar_setup((void*)((long)(&p->beam2_nbunches)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"beam2_nbunches=",0,"Number of Bunches of Beam2");
   G__memvar_setup((void*)((long)(&p->beam1_bunches)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"beam1_bunches[200]=",0,"Bunch Position of Beam1 ");
   G__memvar_setup((void*)((long)(&p->beam2_bunches)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"beam2_bunches[200]=",0,"Bunch Position of Beam2");
   G__memvar_setup((void*)((long)(&p->beam1_tag)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"beam1_tag[200]=",0,"Tag of each Bunch, 1: col., 2: non, 3:displaced col.  < 0 : bad bunch ");
   G__memvar_setup((void*)((long)(&p->beam2_tag)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"beam2_tag[200]=",0,"Tag of each Bunch, 1: col., 2: non, 3:displaced col.  < 0 : bad bunch ");
   G__memvar_setup((void*)((long)(&p->beam1_avintensity)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"beam1_avintensity=",0,"Average Intensity of Beam1 (in time window of Analysis cut.)");
   G__memvar_setup((void*)((long)(&p->beam2_avintensity)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"beam2_avintensity=",0,"Average Intensity of Beam2 (in time window of Analysis cut.)");
   G__memvar_setup((void*)((long)(&p->beam1_avintensitypb)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"beam1_avintensitypb[200]=",0,"Average Intensity per Bunch  (in time window of Analysis cut.)");
   G__memvar_setup((void*)((long)(&p->beam2_avintensitypb)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"beam2_avintensitypb[200]=",0,"Average Intensity per Bunch  (in time window of Analysis cut.)");
   G__memvar_setup((void*)((long)(&p->beam_avluminositypb)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"beam_avluminositypb[200]=",0,"Average Luminosity per Bunch (in same order as beam1_bunches)");
   G__memvar_setup((void*)((long)(&p->done_lumiscan)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"done_lumiscan=",0,"Done Lumonosity Scan -1:unknown, 0: no, the others IP.                ");
   G__memvar_setup((void*)((long)(&p->beam_comments)-(long)(p)),99,0,0,-1,-1,-1,1,"beam_comments[512]=",0,"Comments");
   G__memvar_setup((void*)((long)(&p->analysis_quality)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"analysis_quality=",0,"Data Quality for Physics Analysis 1: good, -1:bad");
   G__memvar_setup((void*)((long)(&p->analysis_cut_stime)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"analysis_cut_stime=",0,"Start Time of the Good Quality Data;");
   G__memvar_setup((void*)((long)(&p->analysis_cut_etime)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"analysis_cut_etime=",0,"End Time of the Good Quality Data;");
   G__memvar_setup((void*)((long)(&p->analysis_a1_nevent)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"analysis_a1_nevent=",0,"Number of Arm1 Events in the Time Window.");
   G__memvar_setup((void*)((long)(&p->analysis_comments)-(long)(p)),99,0,0,-1,-1,-1,1,"analysis_comments[512]=",0,"Comments");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)(&RHICfRunInfo::buf_run),105,0,0,-1,G__defined_typename("Int_t"),-2,1,"buf_run=",0,(char*)NULL);
   G__memvar_setup((void*)(&RHICfRunInfo::buf_beam1_nbunches),105,0,0,-1,G__defined_typename("Int_t"),-2,1,"buf_beam1_nbunches=",0,(char*)NULL);
   G__memvar_setup((void*)(&RHICfRunInfo::buf_beam2_nbunches),105,0,0,-1,G__defined_typename("Int_t"),-2,1,"buf_beam2_nbunches=",0,(char*)NULL);
   G__memvar_setup((void*)(&RHICfRunInfo::buf_beam1_bunches),105,0,0,-1,G__defined_typename("Int_t"),-2,1,"buf_beam1_bunches[200]=",0,(char*)NULL);
   G__memvar_setup((void*)(&RHICfRunInfo::buf_beam2_bunches),105,0,0,-1,G__defined_typename("Int_t"),-2,1,"buf_beam2_bunches[200]=",0,(char*)NULL);
   G__memvar_setup((void*)(&RHICfRunInfo::buf_beam1_bunches_index),105,0,0,-1,G__defined_typename("Int_t"),-2,1,"buf_beam1_bunches_index[3565]=",0,(char*)NULL);
   G__memvar_setup((void*)(&RHICfRunInfo::buf_beam2_bunches_index),105,0,0,-1,G__defined_typename("Int_t"),-2,1,"buf_beam2_bunches_index[3565]=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(2048).Format("DEFAULT_DAQ_BEAM1_SCL_NBUNCH_OFFSET=%lldLL",(long long)RHICfRunInfo::DEFAULT_DAQ_BEAM1_SCL_NBUNCH_OFFSET).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(2048).Format("DEFAULT_DAQ_BEAM2_SCL_NBUNCH_OFFSET=%lldLL",(long long)RHICfRunInfo::DEFAULT_DAQ_BEAM2_SCL_NBUNCH_OFFSET).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RHICfRunInfoTable */
static void G__setup_memvarRHICfRunInfoTable(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_RHICfRunInfoTable));
   { RHICfRunInfoTable *p; p=(RHICfRunInfoTable*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->ioformat)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ioformat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ninfo)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ninfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->iinfo)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"iinfo=",0,"current info number");
   G__memvar_setup((void*)((long)(&p->irun)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"irun=",0,"current run number");
   G__memvar_setup((void*)((long)(&p->runinfo)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_vectorlERHICfRunInfomUcOallocatorlERHICfRunInfomUgRsPgR),G__defined_typename("vector<RHICfRunInfo*>"),-1,1,"runinfo=",0,"!");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarlibLHCfFunction() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncADCRange(void) {
   /* ADCRange */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_ADCRange));
   G__memfunc_setup("ADCRange",693,G__libLHCfFunction_135_0_1, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_ADCRange), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ADCRange",693,G__libLHCfFunction_135_0_2, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_ADCRange), -1, 0, 1, 1, 1, 0, "C - - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__libLHCfFunction_135_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadFile",764,G__libLHCfFunction_135_0_4, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteFile",907,G__libLHCfFunction_135_0_5, 105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - t C - - 0 - file "
"C - - 0 '\"\"' comment", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetThresold",1137,G__libLHCfFunction_135_0_6, 105, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - th", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetThresold",1125,G__libLHCfFunction_135_0_7, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParameters",1344,G__libLHCfFunction_135_0_8, 105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - iadc i - - 0 - ich "
"D - - 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParameter",1229,G__libLHCfFunction_135_0_9, 105, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - iadc i - - 0 - ich "
"i - - 0 - ip d - - 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParameter",1217,G__libLHCfFunction_135_0_10, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - iadc i - - 0 - ich "
"i - - 0 - ip", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get",288,G__libLHCfFunction_135_0_11, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - iadc i - - 0 - ich "
"d - - 0 - adcr d - - 0 - adch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfFunction_135_0_12, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ADCRange::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfFunction_135_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ADCRange::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfFunction_135_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ADCRange::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfFunction_135_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ADCRange::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__libLHCfFunction_135_0_16, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__libLHCfFunction_135_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__libLHCfFunction_135_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfFunction_135_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfFunction_135_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ADCRange::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfFunction_135_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ADCRange::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfFunction_135_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ADCRange::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfFunction_135_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ADCRange::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ADCRange", 693, G__libLHCfFunction_135_0_24, (int) ('i'), G__get_linked_tagnum(&G__libLHCfFunctionLN_ADCRange), -1, 0, 1, 1, 1, 0, "u 'ADCRange' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ADCRange", 819, G__libLHCfFunction_135_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfFunction_135_0_26, (int) ('u'), G__get_linked_tagnum(&G__libLHCfFunctionLN_ADCRange), -1, 1, 1, 1, 1, 0, "u 'ADCRange' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncA1Cal1ToCal2(void) {
   /* A1Cal1ToCal2 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_A1Cal1ToCal2));
   G__memfunc_setup("A1Cal1ToCal2",952,G__libLHCfFunction_136_0_1, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_A1Cal1ToCal2), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__libLHCfFunction_136_0_2, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Exit",410,G__libLHCfFunction_136_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Bor",291,G__libLHCfFunction_136_0_4, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Eor",294,G__libLHCfFunction_136_0_5, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Loop",410,G__libLHCfFunction_136_0_6, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__libLHCfFunction_136_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetADCRange",981,G__libLHCfFunction_136_0_8, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_ADCRange), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UseADCRange",994,G__libLHCfFunction_136_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'true' use", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadADCRangeTable",1561,G__libLHCfFunction_136_0_10, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetADCRangeThreshold",1934,G__libLHCfFunction_136_0_11, 105, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - th", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetADCRangeThreshold",1922,G__libLHCfFunction_136_0_12, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Convert",737,G__libLHCfFunction_136_0_13, 105, -1, -1, 0, 3, 1, 1, 0, 
"U 'A1Cal1' - 0 - cal1 U 'A1Cal2' - 0 - cal2 "
"U 'A1Cal1' - 0 '0' pede", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseConvert",1469,G__libLHCfFunction_136_0_14, 105, -1, -1, 0, 3, 1, 1, 0, 
"U 'A1Cal2' - 0 - cal2 U 'A1Cal1' - 0 - cal1 "
"U 'A1Cal1' - 0 '0' pede", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalculateADC",1110,G__libLHCfFunction_136_0_15, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Cal1' - 0 - cal1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckADCOverRange",1583,G__libLHCfFunction_136_0_16, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Cal1' - 0 - cal1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfFunction_136_0_17, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&A1Cal1ToCal2::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfFunction_136_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1Cal1ToCal2::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfFunction_136_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&A1Cal1ToCal2::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfFunction_136_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&A1Cal1ToCal2::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__libLHCfFunction_136_0_21, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__libLHCfFunction_136_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__libLHCfFunction_136_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfFunction_136_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfFunction_136_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1Cal1ToCal2::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfFunction_136_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A1Cal1ToCal2::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfFunction_136_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1Cal1ToCal2::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfFunction_136_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A1Cal1ToCal2::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("A1Cal1ToCal2", 952, G__libLHCfFunction_136_0_29, (int) ('i'), G__get_linked_tagnum(&G__libLHCfFunctionLN_A1Cal1ToCal2), -1, 0, 1, 1, 1, 0, "u 'A1Cal1ToCal2' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~A1Cal1ToCal2", 1078, G__libLHCfFunction_136_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfFunction_136_0_31, (int) ('u'), G__get_linked_tagnum(&G__libLHCfFunctionLN_A1Cal1ToCal2), -1, 1, 1, 1, 1, 0, "u 'A1Cal1ToCal2' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncConParticleDefine(void) {
   /* ConParticleDefine */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_ConParticleDefine));
   G__memfunc_setup("ConParticleDefine",1695,G__libLHCfFunction_137_0_1, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_ConParticleDefine), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConParticleDefine",1695,G__libLHCfFunction_137_0_2, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_ConParticleDefine), -1, 0, 2, 1, 1, 0, 
"C - - 0 - file C - - 0 '\"ADC SCIF FC\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__libLHCfFunction_137_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetType",706,G__libLHCfFunction_137_0_4, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetType",718,G__libLHCfFunction_137_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVersion",1030,G__libLHCfFunction_137_0_6, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVersion",1042,G__libLHCfFunction_137_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDetector",1126,G__libLHCfFunction_137_0_8, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetector",1114,G__libLHCfFunction_137_0_9, 115, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHV",458,G__libLHCfFunction_137_0_10, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 - hv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHV",446,G__libLHCfFunction_137_0_11, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHV0",506,G__libLHCfFunction_137_0_12, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - hv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHV0",494,G__libLHCfFunction_137_0_13, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHV1",507,G__libLHCfFunction_137_0_14, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - hv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHV1",495,G__libLHCfFunction_137_0_15, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetScifiHV",952,G__libLHCfFunction_137_0_16, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - hv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetScifiHV",940,G__libLHCfFunction_137_0_17, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFCHV",595,G__libLHCfFunction_137_0_18, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - id d - - 0 - hv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFCHV",583,G__libLHCfFunction_137_0_19, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFCHV1",644,G__libLHCfFunction_137_0_20, 105, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - hv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFCHV1",632,G__libLHCfFunction_137_0_21, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFCHV2",645,G__libLHCfFunction_137_0_22, 105, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - hv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFCHV2",633,G__libLHCfFunction_137_0_23, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetADCParticle",1308,G__libLHCfFunction_137_0_24, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - t i - - 0 - l", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetADCParticle",1320,G__libLHCfFunction_137_0_25, 105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - t i - - 0 - l "
"d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSCIFParticle",1401,G__libLHCfFunction_137_0_26, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - t i - - 0 - l "
"i - - 0 - xy i - - 0 - pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSCIFParticle",1413,G__libLHCfFunction_137_0_27, 105, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - t i - - 0 - l "
"i - - 0 - xy i - - 0 - pos "
"d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFCParticle",1245,G__libLHCfFunction_137_0_28, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - detector i - - 0 - ch", "detector: 1 or 2", (void*) NULL, 0);
   G__memfunc_setup("SetFCParticle",1257,G__libLHCfFunction_137_0_29, 105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - detector i - - 0 - ch "
"d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCalParticle",1380,G__libLHCfFunction_137_0_30, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - t i - - 0 - l", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCalParticle",1392,G__libLHCfFunction_137_0_31, 105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - t i - - 0 - l "
"d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetScifiParticle",1602,G__libLHCfFunction_137_0_32, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - t i - - 0 - l "
"i - - 0 - xy i - - 0 - pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetScifiParticle",1614,G__libLHCfFunction_137_0_33, 105, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - t i - - 0 - l "
"i - - 0 - xy i - - 0 - pos "
"d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSiliconParticle",1829,G__libLHCfFunction_137_0_34, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - il i - - 0 - ixy "
"i - - 0 - istrip", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSiliconParticle",1841,G__libLHCfFunction_137_0_35, 105, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - il i - - 0 - ixy "
"i - - 0 - istrip d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSiliconParticle",1841,G__libLHCfFunction_137_0_36, 105, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - value", "Set a value to all strip.", (void*) NULL, 0);
   G__memfunc_setup("ReadFile",764,G__libLHCfFunction_137_0_37, 105, -1, -1, 0, 2, 1, 1, 0, 
"C - - 0 - file C - - 0 '\"ADC SCIF FC\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadType1",847,G__libLHCfFunction_137_0_38, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteFile",907,G__libLHCfFunction_137_0_39, 105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - t C - - 0 - file "
"C - - 0 '\"ADC SCIF FC\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteType1",990,G__libLHCfFunction_137_0_40, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Copy",411,G__libLHCfFunction_137_0_41, 105, -1, -1, 0, 1, 1, 1, 0, "U 'ConParticleDefine' - 0 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintStatus",1169,G__libLHCfFunction_137_0_42, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfFunction_137_0_43, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ConParticleDefine::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfFunction_137_0_44, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ConParticleDefine::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfFunction_137_0_45, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ConParticleDefine::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfFunction_137_0_46, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ConParticleDefine::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__libLHCfFunction_137_0_47, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__libLHCfFunction_137_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__libLHCfFunction_137_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfFunction_137_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfFunction_137_0_51, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ConParticleDefine::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfFunction_137_0_52, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ConParticleDefine::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfFunction_137_0_53, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ConParticleDefine::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfFunction_137_0_54, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ConParticleDefine::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ConParticleDefine", 1695, G__libLHCfFunction_137_0_55, (int) ('i'), G__get_linked_tagnum(&G__libLHCfFunctionLN_ConParticleDefine), -1, 0, 1, 1, 1, 0, "u 'ConParticleDefine' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ConParticleDefine", 1821, G__libLHCfFunction_137_0_56, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfFunction_137_0_57, (int) ('u'), G__get_linked_tagnum(&G__libLHCfFunctionLN_ConParticleDefine), -1, 1, 1, 1, 1, 0, "u 'ConParticleDefine' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPMTGain(void) {
   /* PMTGain */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_PMTGain));
   G__memfunc_setup("PMTGain",624,G__libLHCfFunction_138_0_1, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_PMTGain), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PMTGain",624,G__libLHCfFunction_138_0_2, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_PMTGain), -1, 0, 1, 1, 1, 0, "C - - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initalize",937,G__libLHCfFunction_138_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadTable",868,G__libLHCfFunction_138_0_4, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadTableType2",1336,G__libLHCfFunction_138_0_5, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadTableType3",1337,G__libLHCfFunction_138_0_6, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GatTable",772,G__libLHCfFunction_138_0_7, 67, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFormat",905,G__libLHCfFunction_138_0_8, 67, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVersion",1030,G__libLHCfFunction_138_0_9, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetType",706,G__libLHCfFunction_138_0_10, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDate",670,G__libLHCfFunction_138_0_11, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNHV",524,G__libLHCfFunction_138_0_12, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGain",671,G__libLHCfFunction_138_0_13, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - id i - - 0 - it "
"i - - 0 - il i - - 0 - ihv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGain",671,G__libLHCfFunction_138_0_14, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - id i - - 0 - it "
"i - - 0 - il d - - 0 - hvv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGain",671,G__libLHCfFunction_138_0_15, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ihv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGain",671,G__libLHCfFunction_138_0_16, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"d - - 0 - hvv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HV2nHV",476,G__libLHCfFunction_138_0_17, 105, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - tmp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nHV2HV",476,G__libLHCfFunction_138_0_18, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ihv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSize2iT",734,G__libLHCfFunction_138_0_19, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSize2iD",718,G__libLHCfFunction_138_0_20, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSize2D",613,G__libLHCfFunction_138_0_21, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("iT2TSize",734,G__libLHCfFunction_138_0_22, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - id i - - 0 - it", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintStatus",1169,G__libLHCfFunction_138_0_23, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfFunction_138_0_24, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&PMTGain::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfFunction_138_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PMTGain::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfFunction_138_0_26, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&PMTGain::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfFunction_138_0_27, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&PMTGain::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__libLHCfFunction_138_0_28, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__libLHCfFunction_138_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__libLHCfFunction_138_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfFunction_138_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfFunction_138_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PMTGain::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfFunction_138_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PMTGain::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfFunction_138_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PMTGain::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfFunction_138_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PMTGain::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("PMTGain", 624, G__libLHCfFunction_138_0_36, (int) ('i'), G__get_linked_tagnum(&G__libLHCfFunctionLN_PMTGain), -1, 0, 1, 1, 1, 0, "u 'PMTGain' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~PMTGain", 750, G__libLHCfFunction_138_0_37, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfFunction_138_0_38, (int) ('u'), G__get_linked_tagnum(&G__libLHCfFunctionLN_PMTGain), -1, 1, 1, 1, 1, 0, "u 'PMTGain' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncScifiGain(void) {
   /* ScifiGain */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_ScifiGain));
   G__memfunc_setup("ScifiGain",877,G__libLHCfFunction_139_0_1, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_ScifiGain), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ScifiGain",877,G__libLHCfFunction_139_0_2, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_ScifiGain), -1, 0, 1, 1, 1, 0, "C - - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__libLHCfFunction_139_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetType",706,G__libLHCfFunction_139_0_4, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetType",718,G__libLHCfFunction_139_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVersion",1030,G__libLHCfFunction_139_0_6, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVersion",1042,G__libLHCfFunction_139_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadTable",868,G__libLHCfFunction_139_0_8, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadTableType1",1335,G__libLHCfFunction_139_0_9, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteTable",1011,G__libLHCfFunction_139_0_10, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - t C - - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteTableType1",1478,G__libLHCfFunction_139_0_11, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGain",671,G__libLHCfFunction_139_0_12, 100, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - ipos "
"i - - 0 - ihv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGain",671,G__libLHCfFunction_139_0_13, 100, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - ipos "
"d - - 0 - hvv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGain",683,G__libLHCfFunction_139_0_14, 105, -1, -1, 0, 6, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - ipos "
"i - - 0 - ihv d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("errorchech",1061,G__libLHCfFunction_139_0_15, 105, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - ipos "
"i - - 0 - ihv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HV2nHV",476,G__libLHCfFunction_139_0_16, 105, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - tmp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nHV2HV",476,G__libLHCfFunction_139_0_17, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ihv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NPos",384,G__libLHCfFunction_139_0_18, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintStatus",1169,G__libLHCfFunction_139_0_19, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfFunction_139_0_20, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ScifiGain::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfFunction_139_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ScifiGain::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfFunction_139_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ScifiGain::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfFunction_139_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ScifiGain::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__libLHCfFunction_139_0_24, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__libLHCfFunction_139_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__libLHCfFunction_139_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfFunction_139_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfFunction_139_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ScifiGain::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfFunction_139_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ScifiGain::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfFunction_139_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ScifiGain::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfFunction_139_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ScifiGain::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ScifiGain", 877, G__libLHCfFunction_139_0_32, (int) ('i'), G__get_linked_tagnum(&G__libLHCfFunctionLN_ScifiGain), -1, 0, 1, 1, 1, 0, "u 'ScifiGain' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ScifiGain", 1003, G__libLHCfFunction_139_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfFunction_139_0_34, (int) ('u'), G__get_linked_tagnum(&G__libLHCfFunctionLN_ScifiGain), -1, 1, 1, 1, 1, 0, "u 'ScifiGain' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncFCGain(void) {
   /* FCGain */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_FCGain));
   G__memfunc_setup("FCGain",520,G__libLHCfFunction_140_0_1, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_FCGain), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FCGain",520,G__libLHCfFunction_140_0_2, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_FCGain), -1, 0, 1, 1, 1, 0, "C - - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__libLHCfFunction_140_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetType",706,G__libLHCfFunction_140_0_4, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetType",718,G__libLHCfFunction_140_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVersion",1030,G__libLHCfFunction_140_0_6, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVersion",1042,G__libLHCfFunction_140_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadTable",868,G__libLHCfFunction_140_0_8, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadTableType1",1335,G__libLHCfFunction_140_0_9, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteTable",1011,G__libLHCfFunction_140_0_10, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - t C - - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteTableType1",1478,G__libLHCfFunction_140_0_11, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGain",671,G__libLHCfFunction_140_0_12, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - id i - - 0 - ich "
"i - - 0 - ihv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGain",671,G__libLHCfFunction_140_0_13, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - id i - - 0 - ich "
"d - - 0 - hvv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGain",683,G__libLHCfFunction_140_0_14, 105, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - id i - - 0 - ich "
"i - - 0 - ihv d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("errorchech",1061,G__libLHCfFunction_140_0_15, 105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - id i - - 0 - ich "
"i - - 0 - ihv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HV2nHV",476,G__libLHCfFunction_140_0_16, 105, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - tmp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nHV2HV",476,G__libLHCfFunction_140_0_17, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ihv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintStatus",1169,G__libLHCfFunction_140_0_18, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfFunction_140_0_19, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&FCGain::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfFunction_140_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FCGain::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfFunction_140_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&FCGain::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfFunction_140_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&FCGain::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__libLHCfFunction_140_0_23, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__libLHCfFunction_140_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__libLHCfFunction_140_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfFunction_140_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfFunction_140_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FCGain::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfFunction_140_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FCGain::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfFunction_140_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&FCGain::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfFunction_140_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&FCGain::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("FCGain", 520, G__libLHCfFunction_140_0_31, (int) ('i'), G__get_linked_tagnum(&G__libLHCfFunctionLN_FCGain), -1, 0, 1, 1, 1, 0, "u 'FCGain' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FCGain", 646, G__libLHCfFunction_140_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfFunction_140_0_33, (int) ('u'), G__get_linked_tagnum(&G__libLHCfFunctionLN_FCGain), -1, 1, 1, 1, 1, 0, "u 'FCGain' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncA1GainCalibration(void) {
   /* A1GainCalibration */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_A1GainCalibration));
   G__memfunc_setup("A1GainCalibration",1625,G__libLHCfFunction_141_0_1, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_A1GainCalibration), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__libLHCfFunction_141_0_2, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPdefFactorPMT",1531,G__libLHCfFunction_141_0_3, 105, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPdefFactorScifi",1784,G__libLHCfFunction_141_0_4, 105, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPdefFactorFC",1427,G__libLHCfFunction_141_0_5, 105, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPdefFactorPMT",1519,G__libLHCfFunction_141_0_6, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPdefFactorScifi",1772,G__libLHCfFunction_141_0_7, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPdefFactorFC",1415,G__libLHCfFunction_141_0_8, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadParticleDefineTable",2275,G__libLHCfFunction_141_0_9, 105, -1, -1, 0, 2, 1, 1, 0, 
"C - - 0 - file C - - 0 '\"ADC SCIFI FC\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadPMTGainTable",1492,G__libLHCfFunction_141_0_10, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadScifiGainTable",1745,G__libLHCfFunction_141_0_11, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadFCGainTable",1388,G__libLHCfFunction_141_0_12, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticleDefineTable",2183,G__libLHCfFunction_141_0_13, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_ConParticleDefine), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPMTGainTable",1400,G__libLHCfFunction_141_0_14, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_PMTGain), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetScifiGainTable",1653,G__libLHCfFunction_141_0_15, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_ScifiGain), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFCGainTable",1296,G__libLHCfFunction_141_0_16, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_FCGain), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHV",458,G__libLHCfFunction_141_0_17, 105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetScifiHV",952,G__libLHCfFunction_141_0_18, 105, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFCHV",595,G__libLHCfFunction_141_0_19, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - id d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHV",446,G__libLHCfFunction_141_0_20, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 - il", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetScifiHV",940,G__libLHCfFunction_141_0_21, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFCHV",583,G__libLHCfFunction_141_0_22, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticleADC",1308,G__libLHCfFunction_141_0_23, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 - il", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadHVTable",1026,G__libLHCfFunction_141_0_24, 105, -1, -1, 0, 2, 1, 1, 0, 
"C - - 0 - file C - - 0 '\"ADC SCIFI FC\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ShowHVTable",1063,G__libLHCfFunction_141_0_25, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ShowHVTable",1063,G__libLHCfFunction_141_0_26, 105, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 1 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Calculate",910,G__libLHCfFunction_141_0_27, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Cal2' - 0 - data", "Execute CalculatePMT,Scifi and FC.", (void*) NULL, 0);
   G__memfunc_setup("CalculatePMT",1151,G__libLHCfFunction_141_0_28, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Cal2' - 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalculateScifi",1404,G__libLHCfFunction_141_0_29, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Cal2' - 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalculateFC",1047,G__libLHCfFunction_141_0_30, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Cal2' - 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseCalculate",1642,G__libLHCfFunction_141_0_31, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Cal2' - 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseCalculate_pp2015",2161,G__libLHCfFunction_141_0_32, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Cal2' - 0 - data", "Makino", (void*) NULL, 0);
   G__memfunc_setup("InverseCalculatePMT",1883,G__libLHCfFunction_141_0_33, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Cal2' - 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseCalculatePMT_pp2015",2402,G__libLHCfFunction_141_0_34, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Cal2' - 0 - data", "Makino", (void*) NULL, 0);
   G__memfunc_setup("InverseCalculateScifi",2136,G__libLHCfFunction_141_0_35, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Cal2' - 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseCalculateFC",1779,G__libLHCfFunction_141_0_36, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Cal2' - 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__libLHCfFunction_141_0_37, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Exit",410,G__libLHCfFunction_141_0_38, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Bor",291,G__libLHCfFunction_141_0_39, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Eor",294,G__libLHCfFunction_141_0_40, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Loop",410,G__libLHCfFunction_141_0_41, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Cal2' - 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfFunction_141_0_42, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&A1GainCalibration::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfFunction_141_0_43, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1GainCalibration::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfFunction_141_0_44, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&A1GainCalibration::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfFunction_141_0_45, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&A1GainCalibration::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__libLHCfFunction_141_0_46, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__libLHCfFunction_141_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__libLHCfFunction_141_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfFunction_141_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfFunction_141_0_50, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1GainCalibration::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfFunction_141_0_51, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A1GainCalibration::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfFunction_141_0_52, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1GainCalibration::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfFunction_141_0_53, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A1GainCalibration::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("A1GainCalibration", 1625, G__libLHCfFunction_141_0_54, (int) ('i'), G__get_linked_tagnum(&G__libLHCfFunctionLN_A1GainCalibration), -1, 0, 1, 1, 1, 0, "u 'A1GainCalibration' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~A1GainCalibration", 1751, G__libLHCfFunction_141_0_55, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfFunction_141_0_56, (int) ('u'), G__get_linked_tagnum(&G__libLHCfFunctionLN_A1GainCalibration), -1, 1, 1, 1, 1, 0, "u 'A1GainCalibration' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncA1PedeSubtract(void) {
   /* A1PedeSubtract */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_A1PedeSubtract));
   G__memfunc_setup("A1PedeSubtract",1336,G__libLHCfFunction_185_0_1, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_A1PedeSubtract), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__libLHCfFunction_185_0_2, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPedestal",1118,G__libLHCfFunction_185_0_3, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Cal1' - 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAccumNEvent",1381,G__libLHCfFunction_185_0_4, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AccumClear",976,G__libLHCfFunction_185_0_5, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillPedeEvent",1287,G__libLHCfFunction_185_0_6, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Cal1' - 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalPedestal",1090,G__libLHCfFunction_185_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Subtract",840,G__libLHCfFunction_185_0_8, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A1Cal1' - 0 - data U 'A1Cal1' - 0 '0' pede", "Subtraction including cal. of pedestal.", (void*) NULL, 0);
   G__memfunc_setup("RHICfSubtract",1236,G__libLHCfFunction_185_0_9, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A1Cal1' - 0 - data U 'A1Cal1' - 0 '0' pede", "Subtraction including cal. of pedestal.", (void*) NULL, 0);
   G__memfunc_setup("Subtraction",1166,G__libLHCfFunction_185_0_10, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Cal1' - 0 - data", "Only subtraction", (void*) NULL, 0);
   G__memfunc_setup("RHICfSubtraction",1562,G__libLHCfFunction_185_0_11, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Cal1' - 0 - data", "Only subtraction", (void*) NULL, 0);
   G__memfunc_setup("Subtraction1",1215,G__libLHCfFunction_185_0_12, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A1Cal1' - 0 - data i - - 0 '0' op", "op : for internal use. ", (void*) NULL, 0);
   G__memfunc_setup("RHICfSubtraction1",1611,G__libLHCfFunction_185_0_13, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A1Cal1' - 0 - data i - - 0 '0' op", "op : for internal use. ", (void*) NULL, 0);
   G__memfunc_setup("Subtraction2",1216,G__libLHCfFunction_185_0_14, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Cal1' - 0 - data", "Offset subtraction", (void*) NULL, 0);
   G__memfunc_setup("SetOffsetSubtraction",2081,G__libLHCfFunction_185_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'true' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOffsetSubtraction",2069,G__libLHCfFunction_185_0_16, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteFile",907,G__libLHCfFunction_185_0_17, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 0 '\"\"' filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadFile",764,G__libLHCfFunction_185_0_18, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 0 '\"\"' filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadAveFile",1048,G__libLHCfFunction_185_0_19, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 0 '\"\"' filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPedestal",1106,G__libLHCfFunction_185_0_20, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_A1Cal1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPedesigma",1199,G__libLHCfFunction_185_0_21, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_A1Cal1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPedestal2",1156,G__libLHCfFunction_185_0_22, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_A1Cal1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPedesigma2",1249,G__libLHCfFunction_185_0_23, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_A1Cal1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddSqare",773,G__libLHCfFunction_185_0_24, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Cal1' - 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddSqare2",823,G__libLHCfFunction_185_0_25, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Cal1' - 0 - data", "After subtraction od delayed gate", (void*) NULL, 0);
   G__memfunc_setup("CalSigma",769,G__libLHCfFunction_185_0_26, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalSigma2",819,G__libLHCfFunction_185_0_27, 105, -1, -1, 0, 0, 1, 1, 0, "", "After subtraction od delayed gate", (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__libLHCfFunction_185_0_28, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Cal1' - 0 '0' pede", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Exit",410,G__libLHCfFunction_185_0_29, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Bor",291,G__libLHCfFunction_185_0_30, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Eor",294,G__libLHCfFunction_185_0_31, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Loop",410,G__libLHCfFunction_185_0_32, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A1Cal1' - 0 - data U 'A1Cal1' - 0 - pede", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfFunction_185_0_33, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&A1PedeSubtract::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfFunction_185_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1PedeSubtract::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfFunction_185_0_35, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&A1PedeSubtract::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfFunction_185_0_36, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&A1PedeSubtract::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__libLHCfFunction_185_0_37, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__libLHCfFunction_185_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__libLHCfFunction_185_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfFunction_185_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfFunction_185_0_41, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1PedeSubtract::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfFunction_185_0_42, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A1PedeSubtract::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfFunction_185_0_43, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1PedeSubtract::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfFunction_185_0_44, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A1PedeSubtract::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("A1PedeSubtract", 1336, G__libLHCfFunction_185_0_45, (int) ('i'), G__get_linked_tagnum(&G__libLHCfFunctionLN_A1PedeSubtract), -1, 0, 1, 1, 1, 0, "u 'A1PedeSubtract' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~A1PedeSubtract", 1462, G__libLHCfFunction_185_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfFunction_185_0_47, (int) ('u'), G__get_linked_tagnum(&G__libLHCfFunctionLN_A1PedeSubtract), -1, 1, 1, 1, 1, 0, "u 'A1PedeSubtract' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncScifiPosTable(void) {
   /* ScifiPosTable */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_ScifiPosTable));
   G__memfunc_setup("ScifiPosTable",1288,G__libLHCfFunction_192_0_1, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_ScifiPosTable), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ScifiPosTable",1288,G__libLHCfFunction_192_0_2, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_ScifiPosTable), -1, 0, 1, 1, 1, 0, "C - - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__libLHCfFunction_192_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadPositionTable",1721,G__libLHCfFunction_192_0_4, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadFileType1",1231,G__libLHCfFunction_192_0_5, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadFileType2",1232,G__libLHCfFunction_192_0_6, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadCheck",858,G__libLHCfFunction_192_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChannel",985,G__libLHCfFunction_192_0_8, 105, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - t i - - 0 - l "
"i - - 0 - x i - - 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTower",817,G__libLHCfFunction_192_0_9, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLayer",797,G__libLHCfFunction_192_0_10, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXY",465,G__libLHCfFunction_192_0_11, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPos",594,G__libLHCfFunction_192_0_12, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIPMT",602,G__libLHCfFunction_192_0_13, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPosOnPMT",1024,G__libLHCfFunction_192_0_14, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintStatus",1169,G__libLHCfFunction_192_0_15, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfFunction_192_0_16, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ScifiPosTable::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfFunction_192_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ScifiPosTable::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfFunction_192_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ScifiPosTable::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfFunction_192_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ScifiPosTable::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__libLHCfFunction_192_0_20, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__libLHCfFunction_192_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__libLHCfFunction_192_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfFunction_192_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfFunction_192_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ScifiPosTable::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfFunction_192_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ScifiPosTable::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfFunction_192_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ScifiPosTable::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfFunction_192_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ScifiPosTable::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ScifiPosTable", 1288, G__libLHCfFunction_192_0_28, (int) ('i'), G__get_linked_tagnum(&G__libLHCfFunctionLN_ScifiPosTable), -1, 0, 1, 1, 1, 0, "u 'ScifiPosTable' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ScifiPosTable", 1414, G__libLHCfFunction_192_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfFunction_192_0_30, (int) ('u'), G__get_linked_tagnum(&G__libLHCfFunctionLN_ScifiPosTable), -1, 1, 1, 1, 1, 0, "u 'ScifiPosTable' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncA1RawToCal1(void) {
   /* A1RawToCal1 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_A1RawToCal1));
   G__memfunc_setup("A1RawToCal1",928,G__libLHCfFunction_193_0_1, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_A1RawToCal1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__libLHCfFunction_193_0_2, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Convert",737,G__libLHCfFunction_193_0_3, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'TObject' - 0 - raw_input U 'A1Cal1' - 0 - cal1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Convert_OP2009",1194,G__libLHCfFunction_193_0_4, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A1Raw' - 0 - raw U 'A1Cal1' - 0 - cal1", "for data in 2009", (void*) NULL, 0);
   G__memfunc_setup("Convert_OP2010",1186,G__libLHCfFunction_193_0_5, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A1Raw' - 0 - raw U 'A1Cal1' - 0 - cal1", "for data in 2010  ", (void*) NULL, 0);
   G__memfunc_setup("Convert_SPS2010",1273,G__libLHCfFunction_193_0_6, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A1Raw' - 0 - raw U 'A1Cal1' - 0 - cal1", "for data of the beam test in 2010", (void*) NULL, 0);
   G__memfunc_setup("Convert_OP2015",1191,G__libLHCfFunction_193_0_7, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A1Raw_pp2015' - 0 - raw U 'A1Cal1' - 0 - cal1", "for data in 2015", (void*) NULL, 0);
   G__memfunc_setup("Convert_RHICF_OP2017",1652,G__libLHCfFunction_193_0_8, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'RHICfRaw_Op2017' - 0 - raw U 'A1Cal1' - 0 - cal1", "for data of RHICf Op2017", (void*) NULL, 0);
   G__memfunc_setup("InverseConvert",1469,G__libLHCfFunction_193_0_9, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A1Cal1' - 0 - cal1 U 'A1Raw' - 0 - raw", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseConvert_OP2009",1926,G__libLHCfFunction_193_0_10, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A1Cal1' - 0 - cal1 U 'A1Raw' - 0 - raw", "for data in 2009 ", (void*) NULL, 0);
   G__memfunc_setup("InverseConvert_OP2010",1918,G__libLHCfFunction_193_0_11, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A1Cal1' - 0 - cal1 U 'A1Raw' - 0 - raw", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseConvert",1469,G__libLHCfFunction_193_0_12, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A1Cal1' - 0 - cal1 U 'A1Raw_pp2015' - 0 - raw", "Not yet", (void*) NULL, 0);
   G__memfunc_setup("InverseConvert_OP2015",1923,G__libLHCfFunction_193_0_13, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A1Cal1' - 0 - cal1 U 'A1Raw_pp2015' - 0 - raw", "Not yet ", (void*) NULL, 0);
   G__memfunc_setup("InverseConvert_RHICF_OP2017",2384,G__libLHCfFunction_193_0_14, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A1Cal1' - 0 - cal1 U 'RHICfRaw_Op2017' - 0 - raw", "Not yet ", (void*) NULL, 0);
   G__memfunc_setup("GetScifiPosTable",1576,G__libLHCfFunction_193_0_15, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_ScifiPosTable), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadScifiPosTable",1668,G__libLHCfFunction_193_0_16, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFormat",905,G__libLHCfFunction_193_0_17, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFormat",917,G__libLHCfFunction_193_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SerFormatOp2009",1309,G__libLHCfFunction_193_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SerFormatOp2010",1301,G__libLHCfFunction_193_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SerFormatSPS2010",1356,G__libLHCfFunction_193_0_21, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SerFormatOp2015",1306,G__libLHCfFunction_193_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SerFormatRHICfOp2017",1704,G__libLHCfFunction_193_0_23, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CounterFilter",1350,G__libLHCfFunction_193_0_24, 104, -1, -1, 0, 3, 1, 1, 0, 
"h - - 0 - val i - - 0 - mask "
"i - - 0 '0' offset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CounterCombine",1437,G__libLHCfFunction_193_0_25, 104, -1, -1, 0, 1, 1, 1, 0, "H - - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__libLHCfFunction_193_0_26, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Exit",410,G__libLHCfFunction_193_0_27, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Bor",291,G__libLHCfFunction_193_0_28, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Eor",294,G__libLHCfFunction_193_0_29, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Loop",410,G__libLHCfFunction_193_0_30, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfFunction_193_0_31, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&A1RawToCal1::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfFunction_193_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1RawToCal1::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfFunction_193_0_33, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&A1RawToCal1::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfFunction_193_0_34, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&A1RawToCal1::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__libLHCfFunction_193_0_35, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__libLHCfFunction_193_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__libLHCfFunction_193_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfFunction_193_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfFunction_193_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1RawToCal1::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfFunction_193_0_40, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A1RawToCal1::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfFunction_193_0_41, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1RawToCal1::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfFunction_193_0_42, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A1RawToCal1::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("A1RawToCal1", 928, G__libLHCfFunction_193_0_43, (int) ('i'), G__get_linked_tagnum(&G__libLHCfFunctionLN_A1RawToCal1), -1, 0, 1, 1, 1, 0, "u 'A1RawToCal1' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~A1RawToCal1", 1054, G__libLHCfFunction_193_0_44, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfFunction_193_0_45, (int) ('u'), G__get_linked_tagnum(&G__libLHCfFunctionLN_A1RawToCal1), -1, 1, 1, 1, 1, 0, "u 'A1RawToCal1' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncA1CrossTalk(void) {
   /* A1CrossTalk */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_A1CrossTalk));
   G__memfunc_setup("A1CrossTalk",1032,G__libLHCfFunction_259_0_1, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_A1CrossTalk), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadFile",764,G__libLHCfFunction_259_0_2, 105, -1, -1, 0, 2, 1, 1, 0, 
"C - - 0 - filename_x C - - 0 - filename_y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadFile",764,G__libLHCfFunction_259_0_3, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - filename", "op2015", (void*) NULL, 0);
   G__memfunc_setup("CalibCrossTalk",1393,G__libLHCfFunction_259_0_4, 105, -1, -1, 0, 4, 1, 1, 0, 
"D - - 2 - scifi20x D - - 2 - scifi20y "
"D - - 2 - scifi40x D - - 2 - scifi40y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalibCrossTalk_wM",1684,G__libLHCfFunction_259_0_5, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Cal1' - 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalibCrossTalk_wM",1684,G__libLHCfFunction_259_0_6, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Cal2' - 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalibCrossTalk_wM",1684,G__libLHCfFunction_259_0_7, 105, -1, -1, 0, 2, 1, 1, 0, 
"D - - 3 - scifi0 D - - 3 - scifi1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalibCrossTalk_wOrgM",1980,G__libLHCfFunction_259_0_8, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Cal1' - 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalibCrossTalk_wOrgM",1980,G__libLHCfFunction_259_0_9, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Cal2' - 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalibCrossTalk_wOrgM",1980,G__libLHCfFunction_259_0_10, 105, -1, -1, 0, 2, 1, 1, 0, 
"D - - 3 - scifi0 D - - 3 - scifi1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfFunction_259_0_11, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&A1CrossTalk::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfFunction_259_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1CrossTalk::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfFunction_259_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&A1CrossTalk::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfFunction_259_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&A1CrossTalk::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__libLHCfFunction_259_0_15, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__libLHCfFunction_259_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__libLHCfFunction_259_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfFunction_259_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfFunction_259_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1CrossTalk::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfFunction_259_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A1CrossTalk::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfFunction_259_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1CrossTalk::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfFunction_259_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A1CrossTalk::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~A1CrossTalk", 1158, G__libLHCfFunction_259_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncA1LHCCrossTalk(void) {
   /* A1LHCCrossTalk */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_A1LHCCrossTalk));
   G__memfunc_setup("A1LHCCrossTalk",1247,G__libLHCfFunction_260_0_1, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_A1LHCCrossTalk), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CTReadFile",915,G__libLHCfFunction_260_0_2, 105, -1, -1, 0, 2, 1, 1, 0, 
"C - - 0 - filename_x C - - 0 - filename_y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CTReadFile",915,G__libLHCfFunction_260_0_3, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - filename", "read the rootfile ", (void*) NULL, 0);
   G__memfunc_setup("CalibLHCCrossTalk",1608,G__libLHCfFunction_260_0_4, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Cal2' - 0 - a1cal2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfFunction_260_0_5, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&A1LHCCrossTalk::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfFunction_260_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1LHCCrossTalk::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfFunction_260_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&A1LHCCrossTalk::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfFunction_260_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&A1LHCCrossTalk::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfFunction_260_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfFunction_260_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1LHCCrossTalk::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfFunction_260_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A1LHCCrossTalk::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfFunction_260_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1LHCCrossTalk::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfFunction_260_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A1LHCCrossTalk::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~A1LHCCrossTalk", 1373, G__libLHCfFunction_260_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncA2Cal1ToCal2(void) {
   /* A2Cal1ToCal2 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_A2Cal1ToCal2));
   G__memfunc_setup("A2Cal1ToCal2",953,G__libLHCfFunction_270_0_1, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_A2Cal1ToCal2), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__libLHCfFunction_270_0_2, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetADCRange",981,G__libLHCfFunction_270_0_3, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_ADCRange), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UseADCRange",994,G__libLHCfFunction_270_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'true' use", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadADCRangeTable",1561,G__libLHCfFunction_270_0_5, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetADCRangeThreshold",1934,G__libLHCfFunction_270_0_6, 105, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - th", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetADCRangeThreshold",1922,G__libLHCfFunction_270_0_7, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Convert",737,G__libLHCfFunction_270_0_8, 105, -1, -1, 0, 3, 1, 1, 0, 
"U 'A2Cal1' - 0 - cal1 U 'A2Cal2' - 0 - cal2 "
"U 'A2Cal1' - 0 '0' pede", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseConvert",1469,G__libLHCfFunction_270_0_9, 105, -1, -1, 0, 3, 1, 1, 0, 
"U 'A2Cal2' - 0 - cal2 U 'A2Cal1' - 0 - cal1 "
"U 'A2Cal1' - 0 '0' pede", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalculateADC",1110,G__libLHCfFunction_270_0_10, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Cal1' - 0 - cal1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckADCOverRange",1583,G__libLHCfFunction_270_0_11, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Cal1' - 0 - cal1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__libLHCfFunction_270_0_12, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Exit",410,G__libLHCfFunction_270_0_13, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Bor",291,G__libLHCfFunction_270_0_14, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Eor",294,G__libLHCfFunction_270_0_15, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Loop",410,G__libLHCfFunction_270_0_16, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfFunction_270_0_17, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&A2Cal1ToCal2::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfFunction_270_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Cal1ToCal2::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfFunction_270_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&A2Cal1ToCal2::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfFunction_270_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&A2Cal1ToCal2::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__libLHCfFunction_270_0_21, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__libLHCfFunction_270_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__libLHCfFunction_270_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfFunction_270_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfFunction_270_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Cal1ToCal2::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfFunction_270_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A2Cal1ToCal2::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfFunction_270_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Cal1ToCal2::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfFunction_270_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A2Cal1ToCal2::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("A2Cal1ToCal2", 953, G__libLHCfFunction_270_0_29, (int) ('i'), G__get_linked_tagnum(&G__libLHCfFunctionLN_A2Cal1ToCal2), -1, 0, 1, 1, 1, 0, "u 'A2Cal1ToCal2' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~A2Cal1ToCal2", 1079, G__libLHCfFunction_270_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfFunction_270_0_31, (int) ('u'), G__get_linked_tagnum(&G__libLHCfFunctionLN_A2Cal1ToCal2), -1, 1, 1, 1, 1, 0, "u 'A2Cal1ToCal2' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSiliconGain(void) {
   /* SiliconGain */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_SiliconGain));
   G__memfunc_setup("SiliconGain",1104,G__libLHCfFunction_271_0_1, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_SiliconGain), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__libLHCfFunction_271_0_2, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetType",706,G__libLHCfFunction_271_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetType",718,G__libLHCfFunction_271_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVersion",1030,G__libLHCfFunction_271_0_5, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVersion",1042,G__libLHCfFunction_271_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadTable",868,G__libLHCfFunction_271_0_7, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadTableType1",1335,G__libLHCfFunction_271_0_8, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteTable",1011,G__libLHCfFunction_271_0_9, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - t C - - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteTableType1",1478,G__libLHCfFunction_271_0_10, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGain",671,G__libLHCfFunction_271_0_11, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - il i - - 0 - ixy "
"i - - 0 - istrip i - - 0 '0' ihv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfFunction_271_0_12, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SiliconGain::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfFunction_271_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SiliconGain::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfFunction_271_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SiliconGain::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfFunction_271_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SiliconGain::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__libLHCfFunction_271_0_16, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__libLHCfFunction_271_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__libLHCfFunction_271_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfFunction_271_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfFunction_271_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SiliconGain::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfFunction_271_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SiliconGain::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfFunction_271_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SiliconGain::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfFunction_271_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SiliconGain::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("SiliconGain", 1104, G__libLHCfFunction_271_0_24, (int) ('i'), G__get_linked_tagnum(&G__libLHCfFunctionLN_SiliconGain), -1, 0, 1, 1, 1, 0, "u 'SiliconGain' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SiliconGain", 1230, G__libLHCfFunction_271_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfFunction_271_0_26, (int) ('u'), G__get_linked_tagnum(&G__libLHCfFunctionLN_SiliconGain), -1, 1, 1, 1, 1, 0, "u 'SiliconGain' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncA2GainCalibration(void) {
   /* A2GainCalibration */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_A2GainCalibration));
   G__memfunc_setup("A2GainCalibration",1626,G__libLHCfFunction_272_0_1, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_A2GainCalibration), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__libLHCfFunction_272_0_2, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPdefFactorPMT",1531,G__libLHCfFunction_272_0_3, 105, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPdefFactorSilicon",2011,G__libLHCfFunction_272_0_4, 105, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPdefFactorFC",1427,G__libLHCfFunction_272_0_5, 105, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPdefFactorPMT",1519,G__libLHCfFunction_272_0_6, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPdefFactorSilicon",1999,G__libLHCfFunction_272_0_7, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPdefFactorFC",1415,G__libLHCfFunction_272_0_8, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadParticleDefineTable",2275,G__libLHCfFunction_272_0_9, 105, -1, -1, 0, 2, 1, 1, 0, 
"C - - 0 - file C - - 0 '\"ADC SILICON FC\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadPMTGainTable",1492,G__libLHCfFunction_272_0_10, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadSiliconGainTable",1972,G__libLHCfFunction_272_0_11, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - file", "not yet", (void*) NULL, 0);
   G__memfunc_setup("ReadFCGainTable",1388,G__libLHCfFunction_272_0_12, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticleDefineTable",2183,G__libLHCfFunction_272_0_13, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_ConParticleDefine), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPMTGainTable",1400,G__libLHCfFunction_272_0_14, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_PMTGain), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSiliconGainTable",1880,G__libLHCfFunction_272_0_15, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_SiliconGain), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFCGainTable",1296,G__libLHCfFunction_272_0_16, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_FCGain), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHV",458,G__libLHCfFunction_272_0_17, 105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSiliconHV",1179,G__libLHCfFunction_272_0_18, 105, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFCHV",595,G__libLHCfFunction_272_0_19, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - id d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHV",446,G__libLHCfFunction_272_0_20, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 - il", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSiliconHV",1167,G__libLHCfFunction_272_0_21, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFCHV",583,G__libLHCfFunction_272_0_22, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticleADC",1308,G__libLHCfFunction_272_0_23, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 - il", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadHVTable",1026,G__libLHCfFunction_272_0_24, 105, -1, -1, 0, 2, 1, 1, 0, 
"C - - 0 - file C - - 0 '\"ADC SILICON FC\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ShowHVTable",1063,G__libLHCfFunction_272_0_25, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ShowHVTable",1063,G__libLHCfFunction_272_0_26, 105, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 1 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Calculate",910,G__libLHCfFunction_272_0_27, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Cal2' - 0 - data", "Execute CalculatePMT,Silicon and FC.", (void*) NULL, 0);
   G__memfunc_setup("CalculatePMT",1151,G__libLHCfFunction_272_0_28, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Cal2' - 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalculateSilicon",1631,G__libLHCfFunction_272_0_29, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Cal2' - 0 - data", "not yet", (void*) NULL, 0);
   G__memfunc_setup("CalculateFC",1047,G__libLHCfFunction_272_0_30, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Cal2' - 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseCalculate",1642,G__libLHCfFunction_272_0_31, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Cal2' - 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseCalculatePMT",1883,G__libLHCfFunction_272_0_32, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Cal2' - 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseCalculateSilicon",2363,G__libLHCfFunction_272_0_33, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Cal2' - 0 - data", "not yet", (void*) NULL, 0);
   G__memfunc_setup("InverseCalculateFC",1779,G__libLHCfFunction_272_0_34, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Cal2' - 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__libLHCfFunction_272_0_35, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Exit",410,G__libLHCfFunction_272_0_36, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Bor",291,G__libLHCfFunction_272_0_37, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Eor",294,G__libLHCfFunction_272_0_38, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Loop",410,G__libLHCfFunction_272_0_39, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Cal2' - 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfFunction_272_0_40, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&A2GainCalibration::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfFunction_272_0_41, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2GainCalibration::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfFunction_272_0_42, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&A2GainCalibration::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfFunction_272_0_43, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&A2GainCalibration::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__libLHCfFunction_272_0_44, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__libLHCfFunction_272_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__libLHCfFunction_272_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfFunction_272_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfFunction_272_0_48, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2GainCalibration::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfFunction_272_0_49, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A2GainCalibration::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfFunction_272_0_50, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2GainCalibration::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfFunction_272_0_51, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A2GainCalibration::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("A2GainCalibration", 1626, G__libLHCfFunction_272_0_52, (int) ('i'), G__get_linked_tagnum(&G__libLHCfFunctionLN_A2GainCalibration), -1, 0, 1, 1, 1, 0, "u 'A2GainCalibration' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~A2GainCalibration", 1752, G__libLHCfFunction_272_0_53, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfFunction_272_0_54, (int) ('u'), G__get_linked_tagnum(&G__libLHCfFunctionLN_A2GainCalibration), -1, 1, 1, 1, 1, 0, "u 'A2GainCalibration' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncA2PedeSubtract(void) {
   /* A2PedeSubtract */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_A2PedeSubtract));
   G__memfunc_setup("A2PedeSubtract",1337,G__libLHCfFunction_273_0_1, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_A2PedeSubtract), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__libLHCfFunction_273_0_2, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPedestal",1118,G__libLHCfFunction_273_0_3, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Cal1' - 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAccumNEvent",1381,G__libLHCfFunction_273_0_4, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AccumClear",976,G__libLHCfFunction_273_0_5, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillPedeEvent",1287,G__libLHCfFunction_273_0_6, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Cal1' - 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalPedestal",1090,G__libLHCfFunction_273_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Subtract",840,G__libLHCfFunction_273_0_8, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A2Cal1' - 0 - data U 'A2Cal1' - 0 '0' pede", "Subtraction including cal. of pedestal.   ", (void*) NULL, 0);
   G__memfunc_setup("Subtraction",1166,G__libLHCfFunction_273_0_9, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Cal1' - 0 - data", "Only subtraction", (void*) NULL, 0);
   G__memfunc_setup("Subtraction1",1215,G__libLHCfFunction_273_0_10, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A2Cal1' - 0 - data i - - 0 '0' op", "op : for internal use. ", (void*) NULL, 0);
   G__memfunc_setup("Subtraction2",1216,G__libLHCfFunction_273_0_11, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Cal1' - 0 - data", "Offset subtraction", (void*) NULL, 0);
   G__memfunc_setup("SetOffsetSubtraction",2081,G__libLHCfFunction_273_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'true' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOffsetSubtraction",2069,G__libLHCfFunction_273_0_13, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteFile",907,G__libLHCfFunction_273_0_14, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 0 '\"\"' filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadFile",764,G__libLHCfFunction_273_0_15, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 0 '\"\"' filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPedestal",1106,G__libLHCfFunction_273_0_16, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_A2Cal1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPedesigma",1199,G__libLHCfFunction_273_0_17, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_A2Cal1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPedestal2",1156,G__libLHCfFunction_273_0_18, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_A2Cal1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPedesigma2",1249,G__libLHCfFunction_273_0_19, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_A2Cal1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddSqare",773,G__libLHCfFunction_273_0_20, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Cal1' - 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddSqare2",823,G__libLHCfFunction_273_0_21, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Cal1' - 0 - data", "After subtraction od delayed gate", (void*) NULL, 0);
   G__memfunc_setup("CalSigma",769,G__libLHCfFunction_273_0_22, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalSigma2",819,G__libLHCfFunction_273_0_23, 105, -1, -1, 0, 0, 1, 1, 0, "", "After subtraction od delayed gate", (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__libLHCfFunction_273_0_24, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Cal1' - 0 '0' pede", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Exit",410,G__libLHCfFunction_273_0_25, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Bor",291,G__libLHCfFunction_273_0_26, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Eor",294,G__libLHCfFunction_273_0_27, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Loop",410,G__libLHCfFunction_273_0_28, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A2Cal1' - 0 - data U 'A2Cal1' - 0 - pede", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfFunction_273_0_29, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&A2PedeSubtract::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfFunction_273_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2PedeSubtract::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfFunction_273_0_31, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&A2PedeSubtract::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfFunction_273_0_32, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&A2PedeSubtract::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__libLHCfFunction_273_0_33, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__libLHCfFunction_273_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__libLHCfFunction_273_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfFunction_273_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfFunction_273_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2PedeSubtract::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfFunction_273_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A2PedeSubtract::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfFunction_273_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2PedeSubtract::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfFunction_273_0_40, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A2PedeSubtract::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("A2PedeSubtract", 1337, G__libLHCfFunction_273_0_41, (int) ('i'), G__get_linked_tagnum(&G__libLHCfFunctionLN_A2PedeSubtract), -1, 0, 1, 1, 1, 0, "u 'A2PedeSubtract' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~A2PedeSubtract", 1463, G__libLHCfFunction_273_0_42, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfFunction_273_0_43, (int) ('u'), G__get_linked_tagnum(&G__libLHCfFunctionLN_A2PedeSubtract), -1, 1, 1, 1, 1, 0, "u 'A2PedeSubtract' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncA2RawToCal1(void) {
   /* A2RawToCal1 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_A2RawToCal1));
   G__memfunc_setup("A2RawToCal1",929,G__libLHCfFunction_282_0_1, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_A2RawToCal1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__libLHCfFunction_282_0_2, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Convert",737,G__libLHCfFunction_282_0_3, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'TObject' - 0 - raw_input U 'A2Cal1' - 0 - cal1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Convert_OP2009",1194,G__libLHCfFunction_282_0_4, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A2Raw' - 0 - raw U 'A2Cal1' - 0 - cal1", "for data in 2009", (void*) NULL, 0);
   G__memfunc_setup("Convert_OP2010",1186,G__libLHCfFunction_282_0_5, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A2Raw' - 0 - raw U 'A2Cal1' - 0 - cal1", "for data in 2010", (void*) NULL, 0);
   G__memfunc_setup("Convert_SPS2010",1273,G__libLHCfFunction_282_0_6, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A2Raw' - 0 - raw U 'A2Cal1' - 0 - cal1", "for data of the beam test in 2010  ", (void*) NULL, 0);
   G__memfunc_setup("Convert_pPb2013",1320,G__libLHCfFunction_282_0_7, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A2Raw_pPb2013' - 0 - raw U 'A2Cal1' - 0 - cal1", "For data of pPb 2013", (void*) NULL, 0);
   G__memfunc_setup("Convert_OP2015",1191,G__libLHCfFunction_282_0_8, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A2Raw_pp2015' - 0 - raw U 'A2Cal1' - 0 - cal1", "For data taken in 2015 ", (void*) NULL, 0);
   G__memfunc_setup("Convert_pPb2016",1323,G__libLHCfFunction_282_0_9, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A2Raw_pPb2016' - 0 - raw U 'A2Cal1' - 0 - cal1", "For data taken in 2015 ", (void*) NULL, 0);
   G__memfunc_setup("InverseConvert",1469,G__libLHCfFunction_282_0_10, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A2Cal1' - 0 - cal1 U 'A2Raw' - 0 - raw", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseConvert_OP2009",1926,G__libLHCfFunction_282_0_11, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A2Cal1' - 0 - cal1 U 'A2Raw' - 0 - raw", "for data in 2009 ", (void*) NULL, 0);
   G__memfunc_setup("InverseConvert_OP2010",1918,G__libLHCfFunction_282_0_12, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A2Cal1' - 0 - cal1 U 'A2Raw' - 0 - raw", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseConvert_OP2015",1923,G__libLHCfFunction_282_0_13, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A2Cal1' - 0 - cal1 U 'A2Raw' - 0 - raw", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFormat",905,G__libLHCfFunction_282_0_14, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFormat",917,G__libLHCfFunction_282_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SerFormatOp2009",1309,G__libLHCfFunction_282_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SerFormatOp2010",1301,G__libLHCfFunction_282_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SerFormatSPS2010",1356,G__libLHCfFunction_282_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SerFormatOp2015",1306,G__libLHCfFunction_282_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CounterFilter",1350,G__libLHCfFunction_282_0_20, 104, -1, -1, 0, 3, 1, 1, 0, 
"h - - 0 - val i - - 0 - mask "
"i - - 0 '0' offset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CounterCombine",1437,G__libLHCfFunction_282_0_21, 104, -1, -1, 0, 1, 1, 1, 0, "H - - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__libLHCfFunction_282_0_22, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Exit",410,G__libLHCfFunction_282_0_23, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Bor",291,G__libLHCfFunction_282_0_24, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Eor",294,G__libLHCfFunction_282_0_25, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Loop",410,G__libLHCfFunction_282_0_26, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfFunction_282_0_27, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&A2RawToCal1::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfFunction_282_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2RawToCal1::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfFunction_282_0_29, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&A2RawToCal1::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfFunction_282_0_30, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&A2RawToCal1::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__libLHCfFunction_282_0_31, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__libLHCfFunction_282_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__libLHCfFunction_282_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfFunction_282_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfFunction_282_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2RawToCal1::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfFunction_282_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A2RawToCal1::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfFunction_282_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2RawToCal1::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfFunction_282_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A2RawToCal1::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("A2RawToCal1", 929, G__libLHCfFunction_282_0_39, (int) ('i'), G__get_linked_tagnum(&G__libLHCfFunctionLN_A2RawToCal1), -1, 0, 1, 1, 1, 0, "u 'A2RawToCal1' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~A2RawToCal1", 1055, G__libLHCfFunction_282_0_40, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfFunction_282_0_41, (int) ('u'), G__get_linked_tagnum(&G__libLHCfFunctionLN_A2RawToCal1), -1, 1, 1, 1, 1, 0, "u 'A2RawToCal1' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncA2RawToCal1Silicon(void) {
   /* A2RawToCal1Silicon */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_A2RawToCal1Silicon));
   G__memfunc_setup("A2RawToCal1Silicon",1650,G__libLHCfFunction_318_0_1, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_A2RawToCal1Silicon), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__libLHCfFunction_318_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Convert",737,G__libLHCfFunction_318_0_3, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'TObject' - 0 - raw_intput U 'A2Cal1' - 0 - cal1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Convert_pp2010",1251,G__libLHCfFunction_318_0_4, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A2Raw' - 0 - raw U 'A2Cal1' - 0 - cal1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Convert_pPb2013",1320,G__libLHCfFunction_318_0_5, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A2Raw_pPb2013' - 0 - raw U 'A2Cal1' - 0 - cal1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Convert_pp2015",1256,G__libLHCfFunction_318_0_6, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A2Raw_pp2015' - 0 - raw U 'A2Cal1' - 0 - cal1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Convert_pPb2016",1323,G__libLHCfFunction_318_0_7, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A2Raw_pPb2016' - 0 - raw U 'A2Cal1' - 0 - cal1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hyb_seq_decode",1454,G__libLHCfFunction_318_0_8, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - - i - - 0 - - "
"I - - 0 - - I - - 0 - - "
"I - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("define_hyb_seq",1461,G__libLHCfFunction_318_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("define_hyb_seq_pp2015",1980,G__libLHCfFunction_318_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("read_hyb_seq",1254,G__libLHCfFunction_318_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 '\"\"' file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ExtractData",1109,G__libLHCfFunction_318_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EventChk",792,G__libLHCfFunction_318_0_13, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("checkSR",675,G__libLHCfFunction_318_0_14, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Check_id_board",1393,G__libLHCfFunction_318_0_15, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CRC8_InitChecksum",1590,G__libLHCfFunction_318_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "B - - 0 - crcvalue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CRC8_Update",978,G__libLHCfFunction_318_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"B - - 0 - crcvalue b - - 10 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CRC8_UpdateChecksum",1797,G__libLHCfFunction_318_0_18, 121, -1, -1, 0, 3, 1, 1, 0, 
"B - - 0 - crcvalue Y - - 10 - data "
"i - - 0 - length", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CRC8_FinishChecksum",1795,G__libLHCfFunction_318_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "B - - 0 - crcvalue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CRC8_BlockChecksum",1677,G__libLHCfFunction_318_0_20, 98, -1, -1, 0, 2, 1, 1, 0, 
"Y - - 10 - data i - - 0 - length", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ErrorDecode",1102,G__libLHCfFunction_318_0_21, 117, G__get_linked_tagnum(&G__libLHCfFunctionLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfFunction_318_0_22, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&A2RawToCal1Silicon::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfFunction_318_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2RawToCal1Silicon::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfFunction_318_0_24, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&A2RawToCal1Silicon::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfFunction_318_0_25, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&A2RawToCal1Silicon::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__libLHCfFunction_318_0_26, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__libLHCfFunction_318_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__libLHCfFunction_318_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfFunction_318_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfFunction_318_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2RawToCal1Silicon::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfFunction_318_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A2RawToCal1Silicon::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfFunction_318_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2RawToCal1Silicon::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfFunction_318_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A2RawToCal1Silicon::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("A2RawToCal1Silicon", 1650, G__libLHCfFunction_318_0_34, (int) ('i'), G__get_linked_tagnum(&G__libLHCfFunctionLN_A2RawToCal1Silicon), -1, 0, 1, 1, 1, 0, "u 'A2RawToCal1Silicon' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~A2RawToCal1Silicon", 1776, G__libLHCfFunction_318_0_35, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfFunction_318_0_36, (int) ('u'), G__get_linked_tagnum(&G__libLHCfFunctionLN_A2RawToCal1Silicon), -1, 1, 1, 1, 1, 0, "u 'A2RawToCal1Silicon' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncArm2Hit(void) {
   /* Arm2Hit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_Arm2Hit));
   // automatic default constructor
   G__memfunc_setup("Arm2Hit", 631, G__libLHCfFunction_319_0_1, (int) ('i'), G__get_linked_tagnum(&G__libLHCfFunctionLN_Arm2Hit), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Arm2Hit", 631, G__libLHCfFunction_319_0_2, (int) ('i'), G__get_linked_tagnum(&G__libLHCfFunctionLN_Arm2Hit), -1, 0, 1, 1, 1, 0, "u 'Arm2Hit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Arm2Hit", 757, G__libLHCfFunction_319_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfFunction_319_0_4, (int) ('u'), G__get_linked_tagnum(&G__libLHCfFunctionLN_Arm2Hit), -1, 1, 1, 1, 1, 0, "u 'Arm2Hit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncArm2Alignment(void) {
   /* Arm2Alignment */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_Arm2Alignment));
   G__memfunc_setup("Arm2Alignment",1265,G__libLHCfFunction_320_0_1, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_Arm2Alignment), -1, 0, 1, 1, 1, 0, "d - - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Arm2Alignment",1265,G__libLHCfFunction_320_0_2, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_Arm2Alignment), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__libLHCfFunction_320_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", "Do some initialization for Arm2 geometric parameter", (void*) NULL, 0);
   G__memfunc_setup("ClearHit",780,G__libLHCfFunction_320_0_4, 105, -1, -1, 0, 0, 1, 1, 0, "", "Reset all hit structure apart the manipulator position", (void*) NULL, 0);
   G__memfunc_setup("SetRawHit",891,G__libLHCfFunction_320_0_5, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - mod D - - 0 - x", "Set the hit expressed in readout strip number (0...383)", (void*) NULL, 0);
   G__memfunc_setup("SetRawHit",891,G__libLHCfFunction_320_0_6, 105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - mod d - - 0 - x "
"d - - 0 - y", "Alias to SetRawHit(int, double[2]);", (void*) NULL, 0);
   G__memfunc_setup("SetPos",606,G__libLHCfFunction_320_0_7, 105, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - position", "Set manipulator position (distance from GARAGE, in mm)", (void*) NULL, 0);
   G__memfunc_setup("GetPos",594,G__libLHCfFunction_320_0_8, 100, -1, -1, 0, 0, 1, 1, 0, "", "Return manipulator position (distance from GARAGE, in mm)", (void*) NULL, 0);
   G__memfunc_setup("GetHit",581,G__libLHCfFunction_320_0_9, 117, G__get_linked_tagnum(&G__libLHCfFunctionLN_Arm2Hit), -1, 0, 0, 1, 1, 0, "", "Get structure with all stored hit info", (void*) NULL, 0);
   G__memfunc_setup("Strip2Coord",1083,G__libLHCfFunction_320_0_10, 117, G__get_linked_tagnum(&G__libLHCfFunctionLN_Arm2Hit), -1, 0, 0, 1, 1, 0, "", "Convert hit raw data to cartesian coords and return resut structure", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfFunction_320_0_11, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Arm2Alignment::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfFunction_320_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Arm2Alignment::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfFunction_320_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Arm2Alignment::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfFunction_320_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Arm2Alignment::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__libLHCfFunction_320_0_15, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__libLHCfFunction_320_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__libLHCfFunction_320_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfFunction_320_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfFunction_320_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Arm2Alignment::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfFunction_320_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Arm2Alignment::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfFunction_320_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Arm2Alignment::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfFunction_320_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Arm2Alignment::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Arm2Alignment", 1265, G__libLHCfFunction_320_0_23, (int) ('i'), G__get_linked_tagnum(&G__libLHCfFunctionLN_Arm2Alignment), -1, 0, 1, 1, 1, 0, "u 'Arm2Alignment' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Arm2Alignment", 1391, G__libLHCfFunction_320_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfFunction_320_0_25, (int) ('u'), G__get_linked_tagnum(&G__libLHCfFunctionLN_Arm2Alignment), -1, 1, 1, 1, 1, 0, "u 'Arm2Alignment' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMyFilePath(void) {
   /* MyFilePath */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_MyFilePath));
   G__memfunc_setup("MyFilePath",979,G__libLHCfFunction_321_0_1, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_MyFilePath), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MyFilePath",979,G__libLHCfFunction_321_0_2, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_MyFilePath), -1, 0, 1, 1, 1, 0, "C - - 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBase",679,G__libLHCfFunction_321_0_3, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDirectory",1249,G__libLHCfFunction_321_0_4, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPath",685,G__libLHCfFunction_321_0_5, 67, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - b", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MyFilePath", 979, G__libLHCfFunction_321_0_6, (int) ('i'), G__get_linked_tagnum(&G__libLHCfFunctionLN_MyFilePath), -1, 0, 1, 1, 1, 0, "u 'MyFilePath' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MyFilePath", 1105, G__libLHCfFunction_321_0_7, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfFunction_321_0_8, (int) ('u'), G__get_linked_tagnum(&G__libLHCfFunctionLN_MyFilePath), -1, 1, 1, 1, 1, 0, "u 'MyFilePath' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSimpleList(void) {
   /* SimpleList */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_SimpleList));
   G__memfunc_setup("SimpleList",1030,G__libLHCfFunction_322_0_1, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_SimpleList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SimpleList",1030,G__libLHCfFunction_322_0_2, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_SimpleList), -1, 0, 1, 1, 1, 0, "C - - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Open",402,G__libLHCfFunction_322_0_3, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get",288,G__libLHCfFunction_322_0_4, 67, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNlist",810,G__libLHCfFunction_322_0_5, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("SimpleList", 1030, G__libLHCfFunction_322_0_6, (int) ('i'), G__get_linked_tagnum(&G__libLHCfFunctionLN_SimpleList), -1, 0, 1, 1, 1, 0, "u 'SimpleList' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SimpleList", 1156, G__libLHCfFunction_322_0_7, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfFunction_322_0_8, (int) ('u'), G__get_linked_tagnum(&G__libLHCfFunctionLN_SimpleList), -1, 1, 1, 1, 1, 0, "u 'SimpleList' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStructFiberPos(void) {
   /* StructFiberPos */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_StructFiberPos));
   G__memfunc_setup("StructFiberPos",1439,G__libLHCfFunction_323_0_1, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_StructFiberPos), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfFunction_323_0_2, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&StructFiberPos::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfFunction_323_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StructFiberPos::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfFunction_323_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&StructFiberPos::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfFunction_323_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&StructFiberPos::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__libLHCfFunction_323_0_6, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__libLHCfFunction_323_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__libLHCfFunction_323_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfFunction_323_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfFunction_323_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StructFiberPos::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfFunction_323_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StructFiberPos::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfFunction_323_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&StructFiberPos::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfFunction_323_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&StructFiberPos::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("StructFiberPos", 1439, G__libLHCfFunction_323_0_14, (int) ('i'), G__get_linked_tagnum(&G__libLHCfFunctionLN_StructFiberPos), -1, 0, 1, 1, 1, 0, "u 'StructFiberPos' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StructFiberPos", 1565, G__libLHCfFunction_323_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfFunction_323_0_16, (int) ('u'), G__get_linked_tagnum(&G__libLHCfFunctionLN_StructFiberPos), -1, 1, 1, 1, 1, 0, "u 'StructFiberPos' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncConScifiPosition(void) {
   /* ConScifiPosition */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_ConScifiPosition));
   G__memfunc_setup("ConScifiPosition",1635,G__libLHCfFunction_324_0_1, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_ConScifiPosition), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConScifiPosition",1635,G__libLHCfFunction_324_0_2, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_ConScifiPosition), -1, 0, 1, 1, 1, 0, "C - - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__libLHCfFunction_324_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadFile",764,G__libLHCfFunction_324_0_4, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteFile",907,G__libLHCfFunction_324_0_5, 105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - t C - - 0 - file "
"C - - 0 '\"\"' comment", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFiberOriginX",1480,G__libLHCfFunction_324_0_6, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - is", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFiberOriginY",1481,G__libLHCfFunction_324_0_7, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - is", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFiberWidth",1288,G__libLHCfFunction_324_0_8, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - is", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFiberLength",1386,G__libLHCfFunction_324_0_9, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - is", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFiberDirection",1705,G__libLHCfFunction_324_0_10, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - is", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCenterPosition",1750,G__libLHCfFunction_324_0_11, 100, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - is "
"d - - 0 '-10.' ap", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalPos2FiberPosX",1510,G__libLHCfFunction_324_0_12, 100, -1, -1, 0, 6, 1, 1, 0, 
"d - - 0 - cx d - - 0 - cy "
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - is", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalPos2FiberPosY",1511,G__libLHCfFunction_324_0_13, 100, -1, -1, 0, 6, 1, 1, 0, 
"d - - 0 - cx d - - 0 - cy "
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - is", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalPos2FiberPos",1422,G__libLHCfFunction_324_0_14, 105, -1, -1, 0, 8, 1, 1, 0, 
"d - - 0 - cx d - - 0 - cy "
"d - - 1 - lx d - - 1 - ly "
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - is", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FiberPos2CalPosX",1510,G__libLHCfFunction_324_0_15, 100, -1, -1, 0, 6, 1, 1, 0, 
"d - - 0 - lx d - - 0 - ly "
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - is", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FiberPos2CalPosY",1511,G__libLHCfFunction_324_0_16, 100, -1, -1, 0, 6, 1, 1, 0, 
"d - - 0 - lx d - - 0 - ly "
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - is", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FiberPos2CalPos",1422,G__libLHCfFunction_324_0_17, 105, -1, -1, 0, 8, 1, 1, 0, 
"d - - 0 - lx d - - 0 - ly "
"d - - 1 - cx d - - 1 - cy "
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - is", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindFiber",873,G__libLHCfFunction_324_0_18, 105, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy d - - 0 - x "
"d - - 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("it2size",714,G__libLHCfFunction_324_0_19, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfFunction_324_0_20, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ConScifiPosition::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfFunction_324_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ConScifiPosition::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfFunction_324_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ConScifiPosition::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfFunction_324_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ConScifiPosition::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__libLHCfFunction_324_0_24, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__libLHCfFunction_324_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__libLHCfFunction_324_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfFunction_324_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfFunction_324_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ConScifiPosition::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfFunction_324_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ConScifiPosition::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfFunction_324_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ConScifiPosition::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfFunction_324_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ConScifiPosition::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ConScifiPosition", 1635, G__libLHCfFunction_324_0_32, (int) ('i'), G__get_linked_tagnum(&G__libLHCfFunctionLN_ConScifiPosition), -1, 0, 1, 1, 1, 0, "u 'ConScifiPosition' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ConScifiPosition", 1761, G__libLHCfFunction_324_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfFunction_324_0_34, (int) ('u'), G__get_linked_tagnum(&G__libLHCfFunctionLN_ConScifiPosition), -1, 1, 1, 1, 1, 0, "u 'ConScifiPosition' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncConShowerLeakage(void) {
   /* ConShowerLeakage */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_ConShowerLeakage));
   G__memfunc_setup("ConShowerLeakage",1602,G__libLHCfFunction_332_0_1, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_ConShowerLeakage), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ConShowerLeakage",1602,G__libLHCfFunction_332_0_2, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_ConShowerLeakage), -1, 0, 2, 1, 1, 0, 
"C - - 0 - file C - - 0 '\"All\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__libLHCfFunction_332_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadROOTFile",1088,G__libLHCfFunction_332_0_4, 105, -1, -1, 0, 2, 1, 1, 0, 
"C - - 0 - file C - - 0 '\"All\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteROOTFile",1231,G__libLHCfFunction_332_0_5, 105, -1, -1, 0, 2, 1, 1, 0, 
"C - - 0 - file C - - 0 '\"All\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetH2map20",826,G__libLHCfFunction_332_0_6, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TH2F), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetH2map40",828,G__libLHCfFunction_332_0_7, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TH2F), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetH2map25",831,G__libLHCfFunction_332_0_8, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TH2F), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetH2map32",829,G__libLHCfFunction_332_0_9, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TH2F), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetH2map20Leakin",1422,G__libLHCfFunction_332_0_10, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TH2F), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetH2map40Leakin",1424,G__libLHCfFunction_332_0_11, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TH2F), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetH2map25Leakin",1427,G__libLHCfFunction_332_0_12, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TH2F), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetH2map32Leakin",1425,G__libLHCfFunction_332_0_13, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TH2F), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetH2param20Leakin",1633,G__libLHCfFunction_332_0_14, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TH2F), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetH2param40Leakin",1635,G__libLHCfFunction_332_0_15, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TH2F), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetH2param25Leakin",1638,G__libLHCfFunction_332_0_16, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TH2F), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetH2param32Leakin",1636,G__libLHCfFunction_332_0_17, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TH2F), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetH2map20",838,G__libLHCfFunction_332_0_18, 105, -1, -1, 0, 1, 1, 1, 0, "U 'TH2F' - 0 - h2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetH2map40",840,G__libLHCfFunction_332_0_19, 105, -1, -1, 0, 1, 1, 1, 0, "U 'TH2F' - 0 - h2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetH2map25",843,G__libLHCfFunction_332_0_20, 105, -1, -1, 0, 1, 1, 1, 0, "U 'TH2F' - 0 - h2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetH2map32",841,G__libLHCfFunction_332_0_21, 105, -1, -1, 0, 1, 1, 1, 0, "U 'TH2F' - 0 - h2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetH2map20Leakin",1434,G__libLHCfFunction_332_0_22, 105, -1, -1, 0, 1, 1, 1, 0, "U 'TH2F' - 0 - h2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetH2map40Leakin",1436,G__libLHCfFunction_332_0_23, 105, -1, -1, 0, 1, 1, 1, 0, "U 'TH2F' - 0 - h2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetH2map25Leakin",1439,G__libLHCfFunction_332_0_24, 105, -1, -1, 0, 1, 1, 1, 0, "U 'TH2F' - 0 - h2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetH2map32Leakin",1437,G__libLHCfFunction_332_0_25, 105, -1, -1, 0, 1, 1, 1, 0, "U 'TH2F' - 0 - h2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetH2param20Leakin",1645,G__libLHCfFunction_332_0_26, 105, -1, -1, 0, 1, 1, 1, 0, "U 'TH2F' - 0 - h2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetH2param40Leakin",1647,G__libLHCfFunction_332_0_27, 105, -1, -1, 0, 1, 1, 1, 0, "U 'TH2F' - 0 - h2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetH2param25Leakin",1650,G__libLHCfFunction_332_0_28, 105, -1, -1, 0, 1, 1, 1, 0, "U 'TH2F' - 0 - h2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetH2param32Leakin",1648,G__libLHCfFunction_332_0_29, 105, -1, -1, 0, 1, 1, 1, 0, "U 'TH2F' - 0 - h2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFactor",895,G__libLHCfFunction_332_0_30, 100, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - id i - - 0 - it "
"d - - 0 - x d - - 0 - y "
"C - - 0 '\"\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLeakFactor",1276,G__libLHCfFunction_332_0_31, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - id i - - 0 - it "
"d - - 0 - x d - - 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLeakinFactor",1491,G__libLHCfFunction_332_0_32, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - id i - - 0 - it "
"d - - 0 - x d - - 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLeakinParam",1381,G__libLHCfFunction_332_0_33, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - id i - - 0 - it "
"d - - 0 - x d - - 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Draw",398,G__libLHCfFunction_332_0_34, 105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - id i - - 0 - it "
"C - - 0 '\"\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawAll",679,G__libLHCfFunction_332_0_35, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("it2size",714,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 1, 1, 2, 0, "i - - 0 - it", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfFunction_332_0_37, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ConShowerLeakage::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfFunction_332_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ConShowerLeakage::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfFunction_332_0_39, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ConShowerLeakage::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfFunction_332_0_40, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ConShowerLeakage::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__libLHCfFunction_332_0_41, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__libLHCfFunction_332_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__libLHCfFunction_332_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfFunction_332_0_44, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfFunction_332_0_45, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ConShowerLeakage::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfFunction_332_0_46, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ConShowerLeakage::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfFunction_332_0_47, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ConShowerLeakage::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfFunction_332_0_48, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ConShowerLeakage::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ConShowerLeakage", 1602, G__libLHCfFunction_332_0_49, (int) ('i'), G__get_linked_tagnum(&G__libLHCfFunctionLN_ConShowerLeakage), -1, 0, 1, 1, 1, 0, "u 'ConShowerLeakage' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ConShowerLeakage", 1728, G__libLHCfFunction_332_0_50, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfFunction_332_0_51, (int) ('u'), G__get_linked_tagnum(&G__libLHCfFunctionLN_ConShowerLeakage), -1, 1, 1, 1, 1, 0, "u 'ConShowerLeakage' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncLHCfRunInfo(void) {
   /* LHCfRunInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_LHCfRunInfo));
   G__memfunc_setup("LHCfRunInfo",1022,G__libLHCfFunction_333_0_1, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_LHCfRunInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__libLHCfFunction_333_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear_general",1348,G__libLHCfFunction_333_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 '\"\"' op", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear_daq",924,G__libLHCfFunction_333_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 '\"\"' op", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear_nevents",1385,G__libLHCfFunction_333_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 '\"\"' op", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear_beam",1019,G__libLHCfFunction_333_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 '\"\"' op", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear_analysis",1482,G__libLHCfFunction_333_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 '\"\"' op", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteFile",907,G__libLHCfFunction_333_0_8, 105, -1, -1, 0, 2, 1, 1, 0, 
"C - - 0 - filename i - - 0 '1' format", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__libLHCfFunction_333_0_9, 105, -1, -1, 0, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'std::cout' out i - - 0 '-1' format", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintGeneral",1227,G__libLHCfFunction_333_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'std::cout' out i - - 0 '-1' format", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintDAQ",739,G__libLHCfFunction_333_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'std::cout' out i - - 0 '-1' format", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintNEvents",1232,G__libLHCfFunction_333_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'std::cout' out i - - 0 '-1' format", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintBeam",898,G__libLHCfFunction_333_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'std::cout' out i - - 0 '-1' format", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintAnalysis",1361,G__libLHCfFunction_333_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'std::cout' out i - - 0 '-1' format", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Read",380,G__libLHCfFunction_333_0_15, 105, -1, -1, 0, 1, 1, 1, 0, "u 'basic_istream<char,char_traits<char> >' 'istream' 1 - in", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadFile",764,G__libLHCfFunction_333_0_16, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - filename", "Read the file with ASCII format.", (void*) NULL, 0);
   G__memfunc_setup("removespace",1178,G__libLHCfFunction_333_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 1 - s", "internal function.", (void*) NULL, 0);
   G__memfunc_setup("IndexToBunch",1195,G__libLHCfFunction_333_0_18, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - beam i - - 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BunchToIndex",1195,G__libLHCfFunction_333_0_19, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - beam i - - 0 - bunch", "beam: 1 or 2", (void*) NULL, 0);
   G__memfunc_setup("CountBCtoBunch",1377,G__libLHCfFunction_333_0_20, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - beam i - - 0 - count", "BC counts to #Bunch", (void*) NULL, 0);
   G__memfunc_setup("CountBCtoIndex",1385,G__libLHCfFunction_333_0_21, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - beam i - - 0 - count", "BC counts to Index ", (void*) NULL, 0);
   G__memfunc_setup("GetBunchTagByIndex",1759,G__libLHCfFunction_333_0_22, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - beam i - - 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBunchTag",1068,G__libLHCfFunction_333_0_23, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - beam i - - 0 - bunch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBunchTagByCountBC",1909,G__libLHCfFunction_333_0_24, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - beam i - - 0 - bunch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBunchTag",1068,G__libLHCfFunction_333_0_25, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Cal1' - 0 - cal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBunchTag",1068,G__libLHCfFunction_333_0_26, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Cal1' - 0 - cal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckTime",877,G__libLHCfFunction_333_0_27, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - t", "if t is in time window of physics analysis, return 1. if not, return 0.  ", (void*) NULL, 0);
   G__memfunc_setup("CheckTime",877,G__libLHCfFunction_333_0_28, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Cal1' - 0 - cal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckTime",877,G__libLHCfFunction_333_0_29, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Cal2' - 0 - cal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckTime",877,G__libLHCfFunction_333_0_30, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Cal1' - 0 - cal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckTime",877,G__libLHCfFunction_333_0_31, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Cal2' - 0 - cal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckBunchQuality",1719,G__libLHCfFunction_333_0_32, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Cal1' - 0 - cal", "if bunch quality is good, return 1. if not, return 0.", (void*) NULL, 0);
   G__memfunc_setup("CheckBunchQuality",1719,G__libLHCfFunction_333_0_33, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Cal1' - 0 - cal", "if bunch quality is good, return 1. if not, return 0.", (void*) NULL, 0);
   G__memfunc_setup("CutdownGPIOSetup",1572,G__libLHCfFunction_333_0_34, 117, G__get_linked_tagnum(&G__libLHCfFunctionLN_string), -1, 0, 1, 1, 1, 0, "C - - 0 - csetup", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfFunction_333_0_35, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&LHCfRunInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfFunction_333_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LHCfRunInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfFunction_333_0_37, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&LHCfRunInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfFunction_333_0_38, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&LHCfRunInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__libLHCfFunction_333_0_39, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__libLHCfFunction_333_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__libLHCfFunction_333_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfFunction_333_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfFunction_333_0_43, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LHCfRunInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfFunction_333_0_44, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LHCfRunInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfFunction_333_0_45, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LHCfRunInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfFunction_333_0_46, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LHCfRunInfo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("LHCfRunInfo", 1022, G__libLHCfFunction_333_0_47, (int) ('i'), G__get_linked_tagnum(&G__libLHCfFunctionLN_LHCfRunInfo), -1, 0, 1, 1, 1, 0, "u 'LHCfRunInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~LHCfRunInfo", 1148, G__libLHCfFunction_333_0_48, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfFunction_333_0_49, (int) ('u'), G__get_linked_tagnum(&G__libLHCfFunctionLN_LHCfRunInfo), -1, 1, 1, 1, 1, 0, "u 'LHCfRunInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncLHCfRunInfoTable(void) {
   /* LHCfRunInfoTable */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_LHCfRunInfoTable));
   G__memfunc_setup("LHCfRunInfoTable",1510,G__libLHCfFunction_335_0_1, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_LHCfRunInfoTable), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LHCfRunInfoTable",1510,G__libLHCfFunction_335_0_2, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_LHCfRunInfoTable), -1, 0, 2, 1, 1, 0, 
"C - - 0 - filename i - - 0 '-1' format", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__libLHCfFunction_335_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadTable",868,G__libLHCfFunction_335_0_4, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteTable",1011,G__libLHCfFunction_335_0_5, 105, -1, -1, 0, 2, 1, 1, 0, 
"C - - 0 - filename i - - 0 '-1' format", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNinfo",794,G__libLHCfFunction_335_0_6, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRun",609,G__libLHCfFunction_335_0_7, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_LHCfRunInfo), -1, 0, 1, 1, 1, 0, "i - - 0 - run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunInfo",993,G__libLHCfFunction_335_0_8, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_LHCfRunInfo), -1, 0, 1, 1, 1, 0, "i - - 0 - run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get",288,G__libLHCfFunction_335_0_9, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_LHCfRunInfo), -1, 0, 1, 1, 1, 0, "i - - 0 - run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIinfo",789,G__libLHCfFunction_335_0_10, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_LHCfRunInfo), -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateInfo",992,G__libLHCfFunction_335_0_11, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_LHCfRunInfo), -1, 0, 0, 1, 1, 0, "", "Create new RunInfo   ", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfFunction_335_0_12, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&LHCfRunInfoTable::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfFunction_335_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LHCfRunInfoTable::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfFunction_335_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&LHCfRunInfoTable::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfFunction_335_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&LHCfRunInfoTable::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__libLHCfFunction_335_0_16, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__libLHCfFunction_335_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__libLHCfFunction_335_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfFunction_335_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfFunction_335_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LHCfRunInfoTable::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfFunction_335_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LHCfRunInfoTable::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfFunction_335_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LHCfRunInfoTable::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfFunction_335_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LHCfRunInfoTable::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("LHCfRunInfoTable", 1510, G__libLHCfFunction_335_0_24, (int) ('i'), G__get_linked_tagnum(&G__libLHCfFunctionLN_LHCfRunInfoTable), -1, 0, 1, 1, 1, 0, "u 'LHCfRunInfoTable' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~LHCfRunInfoTable", 1636, G__libLHCfFunction_335_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfFunction_335_0_26, (int) ('u'), G__get_linked_tagnum(&G__libLHCfFunctionLN_LHCfRunInfoTable), -1, 1, 1, 1, 1, 0, "u 'LHCfRunInfoTable' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPMTSatu(void) {
   /* PMTSatu */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_PMTSatu));
   G__memfunc_setup("PMTSatu",654,G__libLHCfFunction_340_0_1, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_PMTSatu), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PMTSatu",654,G__libLHCfFunction_340_0_2, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_PMTSatu), -1, 0, 2, 1, 1, 0, 
"C - - 0 - tpath C - - 0 - fname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__libLHCfFunction_340_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 0 - tpath C - - 0 - fname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillPMTTable",1120,G__libLHCfFunction_340_0_4, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillParamTable",1376,G__libLHCfFunction_340_0_5, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindPMT",626,G__libLHCfFunction_340_0_6, 105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - arm i - - 0 - tower "
"i - - 0 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParam",785,G__libLHCfFunction_340_0_7, 105, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - setpmt i - - 0 - arm "
"i - - 0 - tower i - - 0 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIHV",519,G__libLHCfFunction_340_0_8, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - hv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ADC2ADC",450,G__libLHCfFunction_340_0_9, 100, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - arm i - - 0 - tower "
"i - - 0 - ch i - - 0 - hv "
"d - - 0 - adc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvADC2ADC",751,G__libLHCfFunction_340_0_10, 100, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - arm i - - 0 - tower "
"i - - 0 - ch i - - 0 - hv "
"d - - 0 - adc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParamSpoint",1422,G__libLHCfFunction_340_0_11, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - arm i - - 0 - tower "
"i - - 0 - ch i - - 0 - hv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParamSlope",1300,G__libLHCfFunction_340_0_12, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - arm i - - 0 - tower "
"i - - 0 - ch i - - 0 - hv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParamCoef2nd",1426,G__libLHCfFunction_340_0_13, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - arm i - - 0 - tower "
"i - - 0 - ch i - - 0 - hv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfFunction_340_0_14, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&PMTSatu::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfFunction_340_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PMTSatu::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfFunction_340_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&PMTSatu::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfFunction_340_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&PMTSatu::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__libLHCfFunction_340_0_18, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__libLHCfFunction_340_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__libLHCfFunction_340_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfFunction_340_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfFunction_340_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PMTSatu::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfFunction_340_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PMTSatu::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfFunction_340_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PMTSatu::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfFunction_340_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PMTSatu::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("PMTSatu", 654, G__libLHCfFunction_340_0_26, (int) ('i'), G__get_linked_tagnum(&G__libLHCfFunctionLN_PMTSatu), -1, 0, 1, 1, 1, 0, "u 'PMTSatu' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~PMTSatu", 780, G__libLHCfFunction_340_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfFunction_340_0_28, (int) ('u'), G__get_linked_tagnum(&G__libLHCfFunctionLN_PMTSatu), -1, 1, 1, 1, 1, 0, "u 'PMTSatu' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPMTSatuCorrection(void) {
   /* PMTSatuCorrection */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_PMTSatuCorrection));
   G__memfunc_setup("PMTSatuCorrection",1702,G__libLHCfFunction_342_0_1, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_PMTSatuCorrection), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PMTSatuCorrection",1702,G__libLHCfFunction_342_0_2, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_PMTSatuCorrection), -1, 0, 2, 1, 1, 0, 
"C - - 0 - tpath C - - 0 - fname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__libLHCfFunction_342_0_3, 105, -1, -1, 0, 2, 1, 1, 0, 
"C - - 0 '\"\"' tpath C - - 0 '\"\"' fname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadHVTable",1026,G__libLHCfFunction_342_0_4, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1GainCalibration' - 0 - gain", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadHVTable",1026,G__libLHCfFunction_342_0_5, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2GainCalibration' - 0 - gain", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadHVTable",1026,G__libLHCfFunction_342_0_6, 105, -1, -1, 0, 2, 1, 1, 0, 
"C - - 0 - filename i - - 0 '-1' arm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Calculate",910,G__libLHCfFunction_342_0_7, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Cal1' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Calculate",910,G__libLHCfFunction_342_0_8, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Cal1' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Calculate",910,G__libLHCfFunction_342_0_9, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Cal2' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Calculate",910,G__libLHCfFunction_342_0_10, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Cal2' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Correct",722,G__libLHCfFunction_342_0_11, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Cal1' - 0 - cal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Correct",722,G__libLHCfFunction_342_0_12, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Cal1' - 0 - cal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Correct",722,G__libLHCfFunction_342_0_13, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Cal2' - 0 - cal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Correct",722,G__libLHCfFunction_342_0_14, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Cal2' - 0 - cal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvCalculate",1211,G__libLHCfFunction_342_0_15, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Cal1' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvCalculate",1211,G__libLHCfFunction_342_0_16, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Cal1' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvCalculate",1211,G__libLHCfFunction_342_0_17, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Cal2' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InvCalculate",1211,G__libLHCfFunction_342_0_18, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Cal2' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfFunction_342_0_19, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&PMTSatuCorrection::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfFunction_342_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PMTSatuCorrection::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfFunction_342_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&PMTSatuCorrection::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfFunction_342_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&PMTSatuCorrection::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfFunction_342_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfFunction_342_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PMTSatuCorrection::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfFunction_342_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PMTSatuCorrection::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfFunction_342_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PMTSatuCorrection::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfFunction_342_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PMTSatuCorrection::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("PMTSatuCorrection", 1702, G__libLHCfFunction_342_0_31, (int) ('i'), G__get_linked_tagnum(&G__libLHCfFunctionLN_PMTSatuCorrection), -1, 0, 1, 1, 1, 0, "u 'PMTSatuCorrection' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~PMTSatuCorrection", 1828, G__libLHCfFunction_342_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfFunction_342_0_33, (int) ('u'), G__get_linked_tagnum(&G__libLHCfFunctionLN_PMTSatuCorrection), -1, 1, 1, 1, 1, 0, "u 'PMTSatuCorrection' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncParticleID01(void) {
   /* ParticleID01 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_ParticleID01));
   G__memfunc_setup("ParticleID01",1058,G__libLHCfFunction_343_0_1, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_ParticleID01), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__libLHCfFunction_343_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Calculate",910,G__libLHCfFunction_343_0_3, 100, -1, -1, 0, 2, 1, 1, 0, 
"D - - 0 - d i - - 0 - it", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Calculate",910,G__libLHCfFunction_343_0_4, 100, -1, -1, 0, 2, 1, 1, 0, 
"U 'A1Cal2' - 0 - d i - - 0 - it", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Calculate",910,G__libLHCfFunction_343_0_5, 100, -1, -1, 0, 2, 1, 1, 0, 
"U 'A2Cal2' - 0 - d i - - 0 - it", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetL20",462,G__libLHCfFunction_343_0_6, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetL95",474,G__libLHCfFunction_343_0_7, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetL90",469,G__libLHCfFunction_343_0_8, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetShowerLength",1530,G__libLHCfFunction_343_0_9, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LayerToX",792,G__libLHCfFunction_343_0_10, 100, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - lp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSum",597,G__libLHCfFunction_343_0_11, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfFunction_343_0_12, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ParticleID01::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfFunction_343_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ParticleID01::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfFunction_343_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ParticleID01::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfFunction_343_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ParticleID01::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__libLHCfFunction_343_0_16, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__libLHCfFunction_343_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__libLHCfFunction_343_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfFunction_343_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfFunction_343_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ParticleID01::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfFunction_343_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ParticleID01::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfFunction_343_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ParticleID01::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfFunction_343_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ParticleID01::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ParticleID01", 1058, G__libLHCfFunction_343_0_24, (int) ('i'), G__get_linked_tagnum(&G__libLHCfFunctionLN_ParticleID01), -1, 0, 1, 1, 1, 0, "u 'ParticleID01' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ParticleID01", 1184, G__libLHCfFunction_343_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfFunction_343_0_26, (int) ('u'), G__get_linked_tagnum(&G__libLHCfFunctionLN_ParticleID01), -1, 1, 1, 1, 1, 0, "u 'ParticleID01' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncParticleID02(void) {
   /* ParticleID02 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_ParticleID02));
   G__memfunc_setup("ParticleID02",1059,G__libLHCfFunction_344_0_1, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_ParticleID02), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Calculate",910,(G__InterfaceMethod) NULL,100, -1, -1, 0, 2, 1, 1, 0, 
"D - - 0 - d i - - 0 - it", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetL20",462,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetL95",474,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetL90",469,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Cal2SumLayer",1140,G__libLHCfFunction_344_0_6, 100, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - de0 d - - 0 - de1 "
"d - - 0 - step", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Cal2PosdE",797,G__libLHCfFunction_344_0_7, 100, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - de0 d - - 0 - de1 "
"d - - 0 - step d - - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalPosition",1125,G__libLHCfFunction_344_0_8, 100, -1, -1, 0, 3, 1, 1, 0, 
"D - - 0 - d d - - 0 - sum "
"d - - 0 - ratio", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfFunction_344_0_9, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ParticleID02::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfFunction_344_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ParticleID02::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfFunction_344_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ParticleID02::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfFunction_344_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ParticleID02::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfFunction_344_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfFunction_344_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ParticleID02::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfFunction_344_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ParticleID02::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfFunction_344_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ParticleID02::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfFunction_344_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ParticleID02::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ParticleID02", 1059, G__libLHCfFunction_344_0_21, (int) ('i'), G__get_linked_tagnum(&G__libLHCfFunctionLN_ParticleID02), -1, 0, 1, 1, 1, 0, "u 'ParticleID02' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ParticleID02", 1185, G__libLHCfFunction_344_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfFunction_344_0_23, (int) ('u'), G__get_linked_tagnum(&G__libLHCfFunctionLN_ParticleID02), -1, 1, 1, 1, 1, 0, "u 'ParticleID02' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSciFiPosCalculation(void) {
   /* SciFiPosCalculation */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_SciFiPosCalculation));
   G__memfunc_setup("SciFiPosCalculation",1903,G__libLHCfFunction_346_0_1, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_SciFiPosCalculation), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__libLHCfFunction_346_0_2, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalPosition",1125,G__libLHCfFunction_346_0_3, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A1Cal2' - 0 - a1cal2 U 'A1Phys' - 0 - a1phys", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadGSObarPosTable",1716,G__libLHCfFunction_346_0_4, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize_op2015",1560,G__libLHCfFunction_346_0_5, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__libLHCfFunction_346_0_6, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("scifi_gaincalibration",2196,G__libLHCfFunction_346_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "U 'A1Cal2' - 0 - a1cal2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("scifipos_read",1371,G__libLHCfFunction_346_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "U 'A1Cal2' - 0 - a1cal2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("scifipos_fill",1382,G__libLHCfFunction_346_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "U 'A1Phys' - 0 - a1phys", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfFunction_346_0_10, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SciFiPosCalculation::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfFunction_346_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SciFiPosCalculation::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfFunction_346_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SciFiPosCalculation::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfFunction_346_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SciFiPosCalculation::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__libLHCfFunction_346_0_14, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__libLHCfFunction_346_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__libLHCfFunction_346_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfFunction_346_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfFunction_346_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SciFiPosCalculation::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfFunction_346_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SciFiPosCalculation::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfFunction_346_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SciFiPosCalculation::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfFunction_346_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SciFiPosCalculation::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("SciFiPosCalculation", 1903, G__libLHCfFunction_346_0_22, (int) ('i'), G__get_linked_tagnum(&G__libLHCfFunctionLN_SciFiPosCalculation), -1, 0, 1, 1, 1, 0, "u 'SciFiPosCalculation' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SciFiPosCalculation", 2029, G__libLHCfFunction_346_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfFunction_346_0_24, (int) ('u'), G__get_linked_tagnum(&G__libLHCfFunctionLN_SciFiPosCalculation), -1, 1, 1, 1, 1, 0, "u 'SciFiPosCalculation' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncScifiIncidentPosition02(void) {
   /* ScifiIncidentPosition02 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_ScifiIncidentPosition02));
   G__memfunc_setup("ScifiIncidentPosition02",2259,G__libLHCfFunction_424_0_1, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_ScifiIncidentPosition02), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ScifiIncidentPosition02",2259,G__libLHCfFunction_424_0_2, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_ScifiIncidentPosition02), -1, 0, 1, 1, 1, 0, "C - - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__libLHCfFunction_424_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__libLHCfFunction_424_0_4, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadScifiPisition",1721,G__libLHCfFunction_424_0_5, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetConScifiPosition",1935,G__libLHCfFunction_424_0_6, 105, -1, -1, 0, 1, 1, 1, 0, "U 'ConScifiPosition' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Calculate",910,G__libLHCfFunction_424_0_7, 105, -1, -1, 0, 4, 1, 1, 0, 
"U 'A1Cal2' - 0 - c2data i - - 0 - it "
"i - - 0 - il i - - 0 - ixy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Calculate",910,G__libLHCfFunction_424_0_8, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A1Cal2' - 0 - c2data i - - 0 - it", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPos",594,G__libLHCfFunction_424_0_9, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 '0' it i - - 0 '0' il "
"i - - 0 '0' ixy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPosX",682,G__libLHCfFunction_424_0_10, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 '-1' il", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPosY",683,G__libLHCfFunction_424_0_11, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 '-1' il", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQParam",866,G__libLHCfFunction_424_0_12, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 '0' it i - - 0 '0' il "
"i - - 0 '0' ixy i - - 0 '0' ip", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQParam",878,G__libLHCfFunction_424_0_13, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - ip "
"d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBaseFluctuation",1833,G__libLHCfFunction_424_0_14, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 '-1' it i - - 0 '-1' il "
"i - - 0 '-1' ixy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBaseFluctuation",1845,G__libLHCfFunction_424_0_15, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBaseFluctuation",1845,G__libLHCfFunction_424_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFunction",1126,G__libLHCfFunction_424_0_17, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TF1), -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGraph",798,G__libLHCfFunction_424_0_18, 105, -1, -1, 0, 4, 1, 1, 0, 
"U 'A1Cal2' - 0 - c2data i - - 0 - it "
"i - - 0 - il i - - 0 - ixy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Draw",398,G__libLHCfFunction_424_0_19, 105, -1, -1, 0, 4, 1, 1, 0, 
"U 'A1Cal2' - 0 - c2data i - - 0 - it "
"i - - 0 - il i - - 0 - ixy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfFunction_424_0_20, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ScifiIncidentPosition02::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfFunction_424_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ScifiIncidentPosition02::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfFunction_424_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ScifiIncidentPosition02::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfFunction_424_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ScifiIncidentPosition02::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__libLHCfFunction_424_0_24, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__libLHCfFunction_424_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__libLHCfFunction_424_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfFunction_424_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfFunction_424_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ScifiIncidentPosition02::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfFunction_424_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ScifiIncidentPosition02::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfFunction_424_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ScifiIncidentPosition02::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfFunction_424_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ScifiIncidentPosition02::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ScifiIncidentPosition02", 2259, G__libLHCfFunction_424_0_32, (int) ('i'), 
G__get_linked_tagnum(&G__libLHCfFunctionLN_ScifiIncidentPosition02), -1, 0, 1, 1, 1, 0, "u 'ScifiIncidentPosition02' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ScifiIncidentPosition02", 2385, G__libLHCfFunction_424_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfFunction_424_0_34, (int) ('u'), G__get_linked_tagnum(&G__libLHCfFunctionLN_ScifiIncidentPosition02), -1, 1, 1, 1, 1, 0, "u 'ScifiIncidentPosition02' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncScintiPosDependence(void) {
   /* ScintiPosDependence */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_ScintiPosDependence));
   G__memfunc_setup("ScintiPosDependence",1927,G__libLHCfFunction_425_0_1, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_ScintiPosDependence), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ScintiPosDependence",1927,G__libLHCfFunction_425_0_2, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_ScintiPosDependence), -1, 0, 1, 1, 1, 0, "C - - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__libLHCfFunction_425_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadFile",764,G__libLHCfFunction_425_0_4, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFunctionFactor",1733,G__libLHCfFunction_425_0_5, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - ssn i - - 0 - sn "
"i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFunctionFactor",1733,G__libLHCfFunction_425_0_6, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - ideterctor i - - 0 - itower "
"i - - 0 - sn i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFunctionFactor",1745,G__libLHCfFunction_425_0_7, 105, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - ssn i - - 0 - sn "
"i - - 0 - i d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFunctionFactor",1745,G__libLHCfFunction_425_0_8, 105, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - ideterctor i - - 0 - itower "
"i - - 0 - sn i - - 0 - i "
"d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEfficiency",1301,G__libLHCfFunction_425_0_9, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - ssn i - - 0 - sn "
"d - - 0 - x d - - 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEfficiency",1301,G__libLHCfFunction_425_0_10, 100, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - ideterctor i - - 0 - itower "
"i - - 0 - sn d - - 0 - x "
"d - - 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Calibration",1128,G__libLHCfFunction_425_0_11, 105, -1, -1, 0, 4, 1, 1, 0, 
"U 'A1Cal2' - 0 - d i - - 0 - it "
"d - - 0 - x d - - 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Calibration",1128,G__libLHCfFunction_425_0_12, 105, -1, -1, 0, 4, 1, 1, 0, 
"U 'A2Cal2' - 0 - d i - - 0 - it "
"d - - 0 - x d - - 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfFunction_425_0_13, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ScintiPosDependence::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfFunction_425_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ScintiPosDependence::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfFunction_425_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ScintiPosDependence::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfFunction_425_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ScintiPosDependence::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__libLHCfFunction_425_0_17, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__libLHCfFunction_425_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__libLHCfFunction_425_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfFunction_425_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfFunction_425_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ScintiPosDependence::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfFunction_425_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ScintiPosDependence::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfFunction_425_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ScintiPosDependence::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfFunction_425_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ScintiPosDependence::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ScintiPosDependence", 1927, G__libLHCfFunction_425_0_25, (int) ('i'), G__get_linked_tagnum(&G__libLHCfFunctionLN_ScintiPosDependence), -1, 0, 1, 1, 1, 0, "u 'ScintiPosDependence' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ScintiPosDependence", 2053, G__libLHCfFunction_425_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfFunction_425_0_27, (int) ('u'), G__get_linked_tagnum(&G__libLHCfFunctionLN_ScintiPosDependence), -1, 1, 1, 1, 1, 0, "u 'ScintiPosDependence' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSPSAdamoPedeSubtract(void) {
   /* SPSAdamoPedeSubtract */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_SPSAdamoPedeSubtract));
   G__memfunc_setup("SPSAdamoPedeSubtract",1950,G__libLHCfFunction_427_0_1, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_SPSAdamoPedeSubtract), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__libLHCfFunction_427_0_2, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SubtractPedeAverage",1921,G__libLHCfFunction_427_0_3, 105, -1, -1, 0, 1, 1, 1, 0, "U 'SPSAdamo' - 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SubtractCommonNoise",1967,G__libLHCfFunction_427_0_4, 105, -1, -1, 0, 1, 1, 1, 0, "U 'SPSAdamo' - 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillPedeEvent",1287,G__libLHCfFunction_427_0_5, 105, -1, -1, 0, 1, 1, 1, 0, "U 'SPSAdamo' - 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AccumClear",976,G__libLHCfFunction_427_0_6, 105, -1, -1, 0, 0, 1, 1, 0, "", "Clear the buffers ", (void*) NULL, 0);
   G__memfunc_setup("CalPedestal",1090,G__libLHCfFunction_427_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", "Calculate Average and RMS from the buffers", (void*) NULL, 0);
   G__memfunc_setup("WriteFile",907,G__libLHCfFunction_427_0_8, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 0 '\"\"' filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadFile",764,G__libLHCfFunction_427_0_9, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 0 '\"\"' filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPedestal",1106,G__libLHCfFunction_427_0_10, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_SPSAdamo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPedesigma",1199,G__libLHCfFunction_427_0_11, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_SPSAdamo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPedestal2",1156,G__libLHCfFunction_427_0_12, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_SPSAdamo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPedesigma2",1249,G__libLHCfFunction_427_0_13, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_SPSAdamo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfFunction_427_0_14, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SPSAdamoPedeSubtract::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfFunction_427_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SPSAdamoPedeSubtract::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfFunction_427_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SPSAdamoPedeSubtract::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfFunction_427_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SPSAdamoPedeSubtract::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__libLHCfFunction_427_0_18, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__libLHCfFunction_427_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__libLHCfFunction_427_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfFunction_427_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfFunction_427_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SPSAdamoPedeSubtract::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfFunction_427_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SPSAdamoPedeSubtract::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfFunction_427_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SPSAdamoPedeSubtract::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfFunction_427_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SPSAdamoPedeSubtract::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("SPSAdamoPedeSubtract", 1950, G__libLHCfFunction_427_0_26, (int) ('i'), G__get_linked_tagnum(&G__libLHCfFunctionLN_SPSAdamoPedeSubtract), -1, 0, 1, 1, 1, 0, "u 'SPSAdamoPedeSubtract' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SPSAdamoPedeSubtract", 2076, G__libLHCfFunction_427_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfFunction_427_0_28, (int) ('u'), G__get_linked_tagnum(&G__libLHCfFunctionLN_SPSAdamoPedeSubtract), -1, 1, 1, 1, 1, 0, "u 'SPSAdamoPedeSubtract' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTransitionFit(void) {
   /* TransitionFit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_TransitionFit));
   G__memfunc_setup("TransitionFit",1358,G__libLHCfFunction_428_0_1, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_TransitionFit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TransitionFit",1358,G__libLHCfFunction_428_0_2, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_TransitionFit), -1, 0, 2, 1, 1, 0, 
"C - - 0 - tname C - - 0 '\"\"' ttitle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__libLHCfFunction_428_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillToGraph",1084,G__libLHCfFunction_428_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - tower U 'A1Cal2' - 0 - cal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillToGraph",1084,G__libLHCfFunction_428_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - tower U 'A2Cal2' - 0 - cal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillToGraphMod",1372,G__libLHCfFunction_428_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - tower U 'A2Cal2' - 0 - cal", "except layer 5", (void*) NULL, 0);
   G__memfunc_setup("Fit",291,G__libLHCfFunction_428_0_7, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fit",291,G__libLHCfFunction_428_0_8, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - tower U 'A1Cal2' - 0 - cal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fit",291,G__libLHCfFunction_428_0_9, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - tower U 'A2Cal2' - 0 - cal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGraph",786,G__libLHCfFunction_428_0_10, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TGraphErrors), -1, 0, 1, 1, 1, 0, "i - - 0 - tower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFunction",1126,G__libLHCfFunction_428_0_11, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TF1), -1, 0, 1, 1, 1, 0, "i - - 0 - tower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParameter",1217,G__libLHCfFunction_428_0_12, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - tower i - - 0 - iparam", "iparam<4", (void*) NULL, 0);
   G__memfunc_setup("SetParameter",1229,G__libLHCfFunction_428_0_13, 105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - tower i - - 0 - iparam "
"d - - 0 - value", "iparam<4", (void*) NULL, 0);
   G__memfunc_setup("GetParameters",1332,G__libLHCfFunction_428_0_14, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - tower D - - 0 - val", "Get all(4) parameters and fill to the array", (void*) NULL, 0);
   G__memfunc_setup("SetParameters",1344,G__libLHCfFunction_428_0_15, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - tower D - - 0 - val", "Set all(4) parameters from the array.", (void*) NULL, 0);
   G__memfunc_setup("GetParError",1101,G__libLHCfFunction_428_0_16, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - tower i - - 0 - iparam", "iparam<4", (void*) NULL, 0);
   G__memfunc_setup("GetChisquare",1221,G__libLHCfFunction_428_0_17, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetShowerMax",1214,G__libLHCfFunction_428_0_18, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFitRange",1072,G__libLHCfFunction_428_0_19, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - tower d - - 1 - min "
"d - - 1 - max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFitRangeMax",1366,G__libLHCfFunction_428_0_20, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFitRangeMin",1364,G__libLHCfFunction_428_0_21, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFitRange",1084,G__libLHCfFunction_428_0_22, 105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - tower d - - 0 '0' min "
"d - - 0 '45' max", "[r.l.]", (void*) NULL, 0);
   G__memfunc_setup("SetFitRangeLayer",1593,G__libLHCfFunction_428_0_23, 105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - tower i - - 0 '0' min "
"i - - 0 '15' max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBaseFluctuation",1833,G__libLHCfFunction_428_0_24, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBaseFluctuation",1845,G__libLHCfFunction_428_0_25, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - tower d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Eval",392,G__libLHCfFunction_428_0_26, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - tower d - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EvalAtLayer",1082,G__libLHCfFunction_428_0_27, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - tower i - - 0 - layer", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Subtract",840,G__libLHCfFunction_428_0_28, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - tower U 'A1Cal2' - 0 - cal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Subtract",840,G__libLHCfFunction_428_0_29, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - tower U 'A2Cal2' - 0 - cal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FittingFunction",1563,G__libLHCfFunction_428_0_30, 100, -1, -1, 0, 2, 1, 1, 0, 
"D - - 0 - - D - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfFunction_428_0_31, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TransitionFit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfFunction_428_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TransitionFit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfFunction_428_0_33, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TransitionFit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfFunction_428_0_34, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TransitionFit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__libLHCfFunction_428_0_35, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__libLHCfFunction_428_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__libLHCfFunction_428_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfFunction_428_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfFunction_428_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TransitionFit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfFunction_428_0_40, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TransitionFit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfFunction_428_0_41, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TransitionFit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfFunction_428_0_42, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TransitionFit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TransitionFit", 1358, G__libLHCfFunction_428_0_43, (int) ('i'), G__get_linked_tagnum(&G__libLHCfFunctionLN_TransitionFit), -1, 0, 1, 1, 1, 0, "u 'TransitionFit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TransitionFit", 1484, G__libLHCfFunction_428_0_44, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfFunction_428_0_45, (int) ('u'), G__get_linked_tagnum(&G__libLHCfFunctionLN_TransitionFit), -1, 1, 1, 1, 1, 0, "u 'TransitionFit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRHICfRunInfo(void) {
   /* RHICfRunInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_RHICfRunInfo));
   G__memfunc_setup("RHICfRunInfo",1101,G__libLHCfFunction_429_0_1, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_RHICfRunInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__libLHCfFunction_429_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear_general",1348,G__libLHCfFunction_429_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 '\"\"' op", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear_daq",924,G__libLHCfFunction_429_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 '\"\"' op", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear_nevents",1385,G__libLHCfFunction_429_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 '\"\"' op", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear_beam",1019,G__libLHCfFunction_429_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 '\"\"' op", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear_analysis",1482,G__libLHCfFunction_429_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 '\"\"' op", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteFile",907,G__libLHCfFunction_429_0_8, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 0 - filename i - 'Int_t' 0 '1' format", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__libLHCfFunction_429_0_9, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'std::cout' out i - 'Int_t' 0 '-1' format", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintGeneral",1227,G__libLHCfFunction_429_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'std::cout' out i - 'Int_t' 0 '-1' format", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintDAQ",739,G__libLHCfFunction_429_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'std::cout' out i - 'Int_t' 0 '-1' format", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintNEvents",1232,G__libLHCfFunction_429_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'std::cout' out i - 'Int_t' 0 '-1' format", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintBeam",898,G__libLHCfFunction_429_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'std::cout' out i - 'Int_t' 0 '-1' format", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintAnalysis",1361,G__libLHCfFunction_429_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'std::cout' out i - 'Int_t' 0 '-1' format", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Read",380,G__libLHCfFunction_429_0_15, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'basic_istream<char,char_traits<char> >' 'istream' 1 - in", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadFile",764,G__libLHCfFunction_429_0_16, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - - 0 - filename", "Read the file with ASCII format.", (void*) NULL, 0);
   G__memfunc_setup("removespace",1178,G__libLHCfFunction_429_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 1 - s", "internal function.", (void*) NULL, 0);
   G__memfunc_setup("IndexToBunch",1195,G__libLHCfFunction_429_0_18, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - beam i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BunchToIndex",1195,G__libLHCfFunction_429_0_19, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - beam i - 'Int_t' 0 - bunch", "beam: 1 or 2", (void*) NULL, 0);
   G__memfunc_setup("CountBCtoBunch",1377,G__libLHCfFunction_429_0_20, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - beam i - 'Int_t' 0 - count", "BC counts to #Bunch", (void*) NULL, 0);
   G__memfunc_setup("CountBCtoIndex",1385,G__libLHCfFunction_429_0_21, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - beam i - 'Int_t' 0 - count", "BC counts to Index ", (void*) NULL, 0);
   G__memfunc_setup("GetBunchTagByIndex",1759,G__libLHCfFunction_429_0_22, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - beam i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBunchTag",1068,G__libLHCfFunction_429_0_23, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - beam i - 'Int_t' 0 - bunch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBunchTagByCountBC",1909,G__libLHCfFunction_429_0_24, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - beam i - 'Int_t' 0 - bunch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBunchTag",1068,G__libLHCfFunction_429_0_25, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'A1Cal1' - 0 - cal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckTime",877,G__libLHCfFunction_429_0_26, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - t", "if t is in time window of physics analysis, return 1. if not, return 0.  ", (void*) NULL, 0);
   G__memfunc_setup("CheckTime",877,G__libLHCfFunction_429_0_27, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'A1Cal1' - 0 - cal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckBunchQuality",1719,G__libLHCfFunction_429_0_28, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'A1Cal1' - 0 - cal", "if bunch quality is good, return 1. if not, return 0.", (void*) NULL, 0);
   G__memfunc_setup("CutdownGPIOSetup",1572,G__libLHCfFunction_429_0_29, 117, G__get_linked_tagnum(&G__libLHCfFunctionLN_string), -1, 0, 1, 1, 1, 0, "C - - 0 - csetup", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfFunction_429_0_30, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RHICfRunInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfFunction_429_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RHICfRunInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfFunction_429_0_32, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RHICfRunInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfFunction_429_0_33, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RHICfRunInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__libLHCfFunction_429_0_34, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__libLHCfFunction_429_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__libLHCfFunction_429_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfFunction_429_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfFunction_429_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RHICfRunInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfFunction_429_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RHICfRunInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfFunction_429_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RHICfRunInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfFunction_429_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RHICfRunInfo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RHICfRunInfo", 1101, G__libLHCfFunction_429_0_42, (int) ('i'), G__get_linked_tagnum(&G__libLHCfFunctionLN_RHICfRunInfo), -1, 0, 1, 1, 1, 0, "u 'RHICfRunInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RHICfRunInfo", 1227, G__libLHCfFunction_429_0_43, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfFunction_429_0_44, (int) ('u'), G__get_linked_tagnum(&G__libLHCfFunctionLN_RHICfRunInfo), -1, 1, 1, 1, 1, 0, "u 'RHICfRunInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRHICfRunInfoTable(void) {
   /* RHICfRunInfoTable */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfFunctionLN_RHICfRunInfoTable));
   G__memfunc_setup("RHICfRunInfoTable",1589,G__libLHCfFunction_431_0_1, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_RHICfRunInfoTable), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RHICfRunInfoTable",1589,G__libLHCfFunction_431_0_2, 105, G__get_linked_tagnum(&G__libLHCfFunctionLN_RHICfRunInfoTable), -1, 0, 2, 1, 1, 0, 
"C - - 0 - filename i - 'Int_t' 0 '-1' format", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__libLHCfFunction_431_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadTable",868,G__libLHCfFunction_431_0_4, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - - 0 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteTable",1011,G__libLHCfFunction_431_0_5, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - - 0 - filename i - 'Int_t' 0 '-1' format", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNinfo",794,G__libLHCfFunction_431_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRun",609,G__libLHCfFunction_431_0_7, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_RHICfRunInfo), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunInfo",993,G__libLHCfFunction_431_0_8, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_RHICfRunInfo), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get",288,G__libLHCfFunction_431_0_9, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_RHICfRunInfo), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIinfo",789,G__libLHCfFunction_431_0_10, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_RHICfRunInfo), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateInfo",992,G__libLHCfFunction_431_0_11, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_RHICfRunInfo), -1, 0, 0, 1, 1, 0, "", "Create new RunInfo   ", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfFunction_431_0_12, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RHICfRunInfoTable::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfFunction_431_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RHICfRunInfoTable::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfFunction_431_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RHICfRunInfoTable::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfFunction_431_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RHICfRunInfoTable::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__libLHCfFunction_431_0_16, 85, G__get_linked_tagnum(&G__libLHCfFunctionLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__libLHCfFunction_431_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__libLHCfFunction_431_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfFunction_431_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfFunction_431_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RHICfRunInfoTable::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfFunction_431_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RHICfRunInfoTable::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfFunction_431_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RHICfRunInfoTable::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfFunction_431_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RHICfRunInfoTable::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RHICfRunInfoTable", 1589, G__libLHCfFunction_431_0_24, (int) ('i'), G__get_linked_tagnum(&G__libLHCfFunctionLN_RHICfRunInfoTable), -1, 0, 1, 1, 1, 0, "u 'RHICfRunInfoTable' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RHICfRunInfoTable", 1715, G__libLHCfFunction_431_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfFunction_431_0_26, (int) ('u'), G__get_linked_tagnum(&G__libLHCfFunctionLN_RHICfRunInfoTable), -1, 1, 1, 1, 1, 0, "u 'RHICfRunInfoTable' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfunclibLHCfFunction() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {
}

static void G__cpp_setup_global7() {
}

static void G__cpp_setup_global8() {
}

static void G__cpp_setup_global9() {
}

static void G__cpp_setup_global10() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globallibLHCfFunction() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
  G__cpp_setup_global7();
  G__cpp_setup_global8();
  G__cpp_setup_global9();
  G__cpp_setup_global10();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
   G__memfunc_setup("PosShift", 816, G__libLHCfFunction__0_414, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - - 1 - ix d - - 1 - iy "
"d - - 0 - sx d - - 0 - sy", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("PosRotate", 929, G__libLHCfFunction__0_415, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 1 - ix d - - 1 - iy "
"d - - 0 - theta", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("PosReflect", 1015, G__libLHCfFunction__0_416, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 1 - ix d - - 1 - iy", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("MyMax", 492, G__libLHCfFunction__0_417, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - n I - - 0 - x", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("MyMax", 492, G__libLHCfFunction__0_418, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - n D - - 0 - x", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("MyMin", 490, G__libLHCfFunction__0_419, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - n I - - 0 - x", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("MyMin", 490, G__libLHCfFunction__0_420, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - n D - - 0 - x", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("Chi2", 326, G__libLHCfFunction__0_421, 100, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - n D - - 0 - d1 "
"D - - 0 - d1_e D - - 0 - d2 "
"D - - 0 - d2_e", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("MySum", 507, G__libLHCfFunction__0_422, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - n I - - 0 - d", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("MySum", 507, G__libLHCfFunction__0_423, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - n D - - 0 - d", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("MyAverage", 897, G__libLHCfFunction__0_424, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - n I - - 0 - d", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("MyAverage", 897, G__libLHCfFunction__0_425, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - n D - - 0 - d", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("MyRMS", 440, G__libLHCfFunction__0_426, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - n d - - 0 - mean "
"D - - 0 - d", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("MyFitFirstLinear", 1612, G__libLHCfFunction__0_427, 105, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - n D - - 0 - X "
"D - - 0 - Y d - - 1 - a "
"d - - 1 - b", (char*) NULL
, (void*) NULL, 0);
   G__memfunc_setup("CalPi0Mass", 909, G__libLHCfFunction__0_458, 100, -1, -1, 0, 6, 1, 1, 0, 
"d - - 0 - energy1 d - - 0 - x1 "
"d - - 0 - y1 d - - 0 - energy2 "
"d - - 0 - x2 d - - 0 - y2", (char*) NULL
, (void*) NULL, 0);
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funclibLHCfFunction() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__libLHCfFunctionLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_TDirectory = { "TDirectory" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_basic_istreamlEcharcOchar_traitslEchargRsPgR = { "basic_istream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR = { "basic_ifstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_A1Cal1 = { "A1Cal1" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_A1Cal2 = { "A1Cal2" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_ADCRange = { "ADCRange" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_A1Cal1ToCal2 = { "A1Cal1ToCal2" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_ConParticleDefine = { "ConParticleDefine" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_PMTGain = { "PMTGain" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_ScifiGain = { "ScifiGain" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_FCGain = { "FCGain" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_A1GainCalibration = { "A1GainCalibration" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_A1PedeSubtract = { "A1PedeSubtract" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_A1Raw = { "A1Raw" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_A1Raw_pp2015 = { "A1Raw_pp2015" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_RHICfRaw_Op2017 = { "RHICfRaw_Op2017" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_ScifiPosTable = { "ScifiPosTable" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_A1RawToCal1 = { "A1RawToCal1" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_A1RawToCal1cLcLRAWTOCAL_FORMAT = { "A1RawToCal1::RAWTOCAL_FORMAT" , 101 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_TElementActionTlEdoublegR = { "TElementActionT<double>" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_TElementPosActionTlEdoublegR = { "TElementPosActionT<double>" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_TMatrixTSymlEdoublegR = { "TMatrixTSym<double>" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_TMatrixTSparselEdoublegR = { "TMatrixTSparse<double>" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_TMatrixTRow_constlEdoublegR = { "TMatrixTRow_const<double>" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_TMatrixTRowlEdoublegR = { "TMatrixTRow<double>" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_TMatrixTDiag_constlEdoublegR = { "TMatrixTDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_TMatrixTColumn_constlEdoublegR = { "TMatrixTColumn_const<double>" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_TMatrixTFlat_constlEdoublegR = { "TMatrixTFlat_const<double>" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_TMatrixTSub_constlEdoublegR = { "TMatrixTSub_const<double>" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_TMatrixTSparseRow_constlEdoublegR = { "TMatrixTSparseRow_const<double>" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_TMatrixTSparseDiag_constlEdoublegR = { "TMatrixTSparseDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_TMatrixTColumnlEdoublegR = { "TMatrixTColumn<double>" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_TMatrixTDiaglEdoublegR = { "TMatrixTDiag<double>" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_TMatrixTFlatlEdoublegR = { "TMatrixTFlat<double>" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_TMatrixTSublEdoublegR = { "TMatrixTSub<double>" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_TMatrixTSparseRowlEdoublegR = { "TMatrixTSparseRow<double>" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_TMatrixTSparseDiaglEdoublegR = { "TMatrixTSparseDiag<double>" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_A1CrossTalk = { "A1CrossTalk" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_A1LHCCrossTalk = { "A1LHCCrossTalk" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_A2Cal2 = { "A2Cal2" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_A2Cal1 = { "A2Cal1" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_A2Cal1ToCal2 = { "A2Cal1ToCal2" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_SiliconGain = { "SiliconGain" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_A2GainCalibration = { "A2GainCalibration" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_A2PedeSubtract = { "A2PedeSubtract" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_A2Raw = { "A2Raw" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_A2Raw_pPb2013 = { "A2Raw_pPb2013" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_A2Raw_pp2015 = { "A2Raw_pp2015" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_A2Raw_pPb2016 = { "A2Raw_pPb2016" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_A2RawToCal1 = { "A2RawToCal1" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_A2RawToCal1cLcLRAWTOCAL_FORMAT = { "A2RawToCal1::RAWTOCAL_FORMAT" , 101 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_TF1 = { "TF1" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_SILICON_RAW = { "SILICON_RAW" , 115 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_A2RawToCal1Silicon = { "A2RawToCal1Silicon" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_Arm2Hit = { "Arm2Hit" , 115 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_Arm2Alignment = { "Arm2Alignment" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_MyFilePath = { "MyFilePath" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_SimpleList = { "SimpleList" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_StructFiberPos = { "StructFiberPos" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_ConScifiPosition = { "ConScifiPosition" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_TH2F = { "TH2F" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_ConShowerLeakage = { "ConShowerLeakage" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_LHCfRunInfo = { "LHCfRunInfo" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_LHCfRunInfocLcLDEF_BEAMTAG = { "LHCfRunInfo::DEF_BEAMTAG" , 101 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_LHCfRunInfoTable = { "LHCfRunInfoTable" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_vectorlELHCfRunInfomUcOallocatorlELHCfRunInfomUgRsPgR = { "vector<LHCfRunInfo*,allocator<LHCfRunInfo*> >" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_reverse_iteratorlEvectorlELHCfRunInfomUcOallocatorlELHCfRunInfomUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<LHCfRunInfo*,allocator<LHCfRunInfo*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_PMTSatu = { "PMTSatu" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_PMTSatucLcLPMTTable = { "PMTSatu::PMTTable" , 115 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_PMTSatuCorrection = { "PMTSatuCorrection" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_ParticleID01 = { "ParticleID01" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_ParticleID02 = { "ParticleID02" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_A1Phys = { "A1Phys" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_SciFiPosCalculation = { "SciFiPosCalculation" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_TGraphErrors = { "TGraphErrors" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_ScifiIncidentPosition02 = { "ScifiIncidentPosition02" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_ScintiPosDependence = { "ScintiPosDependence" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_SPSAdamo = { "SPSAdamo" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_SPSAdamoPedeSubtract = { "SPSAdamoPedeSubtract" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_TransitionFit = { "TransitionFit" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_RHICfRunInfo = { "RHICfRunInfo" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_RHICfRunInfocLcLDEF_BEAMTAG = { "RHICfRunInfo::DEF_BEAMTAG" , 101 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_RHICfRunInfoTable = { "RHICfRunInfoTable" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_vectorlERHICfRunInfomUcOallocatorlERHICfRunInfomUgRsPgR = { "vector<RHICfRunInfo*,allocator<RHICfRunInfo*> >" , 99 , -1 };
G__linked_taginfo G__libLHCfFunctionLN_reverse_iteratorlEvectorlERHICfRunInfomUcOallocatorlERHICfRunInfomUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RHICfRunInfo*,allocator<RHICfRunInfo*> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablelibLHCfFunction() {
  G__libLHCfFunctionLN_TClass.tagnum = -1 ;
  G__libLHCfFunctionLN_TBuffer.tagnum = -1 ;
  G__libLHCfFunctionLN_TDirectory.tagnum = -1 ;
  G__libLHCfFunctionLN_TMemberInspector.tagnum = -1 ;
  G__libLHCfFunctionLN_TObject.tagnum = -1 ;
  G__libLHCfFunctionLN_basic_istreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__libLHCfFunctionLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__libLHCfFunctionLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__libLHCfFunctionLN_string.tagnum = -1 ;
  G__libLHCfFunctionLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__libLHCfFunctionLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__libLHCfFunctionLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__libLHCfFunctionLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__libLHCfFunctionLN_A1Cal1.tagnum = -1 ;
  G__libLHCfFunctionLN_A1Cal2.tagnum = -1 ;
  G__libLHCfFunctionLN_ADCRange.tagnum = -1 ;
  G__libLHCfFunctionLN_A1Cal1ToCal2.tagnum = -1 ;
  G__libLHCfFunctionLN_ConParticleDefine.tagnum = -1 ;
  G__libLHCfFunctionLN_PMTGain.tagnum = -1 ;
  G__libLHCfFunctionLN_ScifiGain.tagnum = -1 ;
  G__libLHCfFunctionLN_FCGain.tagnum = -1 ;
  G__libLHCfFunctionLN_A1GainCalibration.tagnum = -1 ;
  G__libLHCfFunctionLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__libLHCfFunctionLN_A1PedeSubtract.tagnum = -1 ;
  G__libLHCfFunctionLN_A1Raw.tagnum = -1 ;
  G__libLHCfFunctionLN_A1Raw_pp2015.tagnum = -1 ;
  G__libLHCfFunctionLN_RHICfRaw_Op2017.tagnum = -1 ;
  G__libLHCfFunctionLN_ScifiPosTable.tagnum = -1 ;
  G__libLHCfFunctionLN_A1RawToCal1.tagnum = -1 ;
  G__libLHCfFunctionLN_A1RawToCal1cLcLRAWTOCAL_FORMAT.tagnum = -1 ;
  G__libLHCfFunctionLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__libLHCfFunctionLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__libLHCfFunctionLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__libLHCfFunctionLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__libLHCfFunctionLN_TElementActionTlEdoublegR.tagnum = -1 ;
  G__libLHCfFunctionLN_TElementPosActionTlEdoublegR.tagnum = -1 ;
  G__libLHCfFunctionLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G__libLHCfFunctionLN_TMatrixTSymlEdoublegR.tagnum = -1 ;
  G__libLHCfFunctionLN_TMatrixTSparselEdoublegR.tagnum = -1 ;
  G__libLHCfFunctionLN_TMatrixTRow_constlEdoublegR.tagnum = -1 ;
  G__libLHCfFunctionLN_TMatrixTRowlEdoublegR.tagnum = -1 ;
  G__libLHCfFunctionLN_TMatrixTDiag_constlEdoublegR.tagnum = -1 ;
  G__libLHCfFunctionLN_TMatrixTColumn_constlEdoublegR.tagnum = -1 ;
  G__libLHCfFunctionLN_TMatrixTFlat_constlEdoublegR.tagnum = -1 ;
  G__libLHCfFunctionLN_TMatrixTSub_constlEdoublegR.tagnum = -1 ;
  G__libLHCfFunctionLN_TMatrixTSparseRow_constlEdoublegR.tagnum = -1 ;
  G__libLHCfFunctionLN_TMatrixTSparseDiag_constlEdoublegR.tagnum = -1 ;
  G__libLHCfFunctionLN_TMatrixTColumnlEdoublegR.tagnum = -1 ;
  G__libLHCfFunctionLN_TMatrixTDiaglEdoublegR.tagnum = -1 ;
  G__libLHCfFunctionLN_TMatrixTFlatlEdoublegR.tagnum = -1 ;
  G__libLHCfFunctionLN_TMatrixTSublEdoublegR.tagnum = -1 ;
  G__libLHCfFunctionLN_TMatrixTSparseRowlEdoublegR.tagnum = -1 ;
  G__libLHCfFunctionLN_TMatrixTSparseDiaglEdoublegR.tagnum = -1 ;
  G__libLHCfFunctionLN_A1CrossTalk.tagnum = -1 ;
  G__libLHCfFunctionLN_A1LHCCrossTalk.tagnum = -1 ;
  G__libLHCfFunctionLN_A2Cal2.tagnum = -1 ;
  G__libLHCfFunctionLN_A2Cal1.tagnum = -1 ;
  G__libLHCfFunctionLN_A2Cal1ToCal2.tagnum = -1 ;
  G__libLHCfFunctionLN_SiliconGain.tagnum = -1 ;
  G__libLHCfFunctionLN_A2GainCalibration.tagnum = -1 ;
  G__libLHCfFunctionLN_A2PedeSubtract.tagnum = -1 ;
  G__libLHCfFunctionLN_A2Raw.tagnum = -1 ;
  G__libLHCfFunctionLN_A2Raw_pPb2013.tagnum = -1 ;
  G__libLHCfFunctionLN_A2Raw_pp2015.tagnum = -1 ;
  G__libLHCfFunctionLN_A2Raw_pPb2016.tagnum = -1 ;
  G__libLHCfFunctionLN_A2RawToCal1.tagnum = -1 ;
  G__libLHCfFunctionLN_A2RawToCal1cLcLRAWTOCAL_FORMAT.tagnum = -1 ;
  G__libLHCfFunctionLN_TF1.tagnum = -1 ;
  G__libLHCfFunctionLN_TH1F.tagnum = -1 ;
  G__libLHCfFunctionLN_SILICON_RAW.tagnum = -1 ;
  G__libLHCfFunctionLN_A2RawToCal1Silicon.tagnum = -1 ;
  G__libLHCfFunctionLN_Arm2Hit.tagnum = -1 ;
  G__libLHCfFunctionLN_Arm2Alignment.tagnum = -1 ;
  G__libLHCfFunctionLN_MyFilePath.tagnum = -1 ;
  G__libLHCfFunctionLN_SimpleList.tagnum = -1 ;
  G__libLHCfFunctionLN_StructFiberPos.tagnum = -1 ;
  G__libLHCfFunctionLN_ConScifiPosition.tagnum = -1 ;
  G__libLHCfFunctionLN_TH2F.tagnum = -1 ;
  G__libLHCfFunctionLN_ConShowerLeakage.tagnum = -1 ;
  G__libLHCfFunctionLN_LHCfRunInfo.tagnum = -1 ;
  G__libLHCfFunctionLN_LHCfRunInfocLcLDEF_BEAMTAG.tagnum = -1 ;
  G__libLHCfFunctionLN_LHCfRunInfoTable.tagnum = -1 ;
  G__libLHCfFunctionLN_vectorlELHCfRunInfomUcOallocatorlELHCfRunInfomUgRsPgR.tagnum = -1 ;
  G__libLHCfFunctionLN_reverse_iteratorlEvectorlELHCfRunInfomUcOallocatorlELHCfRunInfomUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__libLHCfFunctionLN_PMTSatu.tagnum = -1 ;
  G__libLHCfFunctionLN_PMTSatucLcLPMTTable.tagnum = -1 ;
  G__libLHCfFunctionLN_PMTSatuCorrection.tagnum = -1 ;
  G__libLHCfFunctionLN_ParticleID01.tagnum = -1 ;
  G__libLHCfFunctionLN_ParticleID02.tagnum = -1 ;
  G__libLHCfFunctionLN_A1Phys.tagnum = -1 ;
  G__libLHCfFunctionLN_SciFiPosCalculation.tagnum = -1 ;
  G__libLHCfFunctionLN_TGraphErrors.tagnum = -1 ;
  G__libLHCfFunctionLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__libLHCfFunctionLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__libLHCfFunctionLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__libLHCfFunctionLN_ScifiIncidentPosition02.tagnum = -1 ;
  G__libLHCfFunctionLN_ScintiPosDependence.tagnum = -1 ;
  G__libLHCfFunctionLN_SPSAdamo.tagnum = -1 ;
  G__libLHCfFunctionLN_SPSAdamoPedeSubtract.tagnum = -1 ;
  G__libLHCfFunctionLN_TransitionFit.tagnum = -1 ;
  G__libLHCfFunctionLN_RHICfRunInfo.tagnum = -1 ;
  G__libLHCfFunctionLN_RHICfRunInfocLcLDEF_BEAMTAG.tagnum = -1 ;
  G__libLHCfFunctionLN_RHICfRunInfoTable.tagnum = -1 ;
  G__libLHCfFunctionLN_vectorlERHICfRunInfomUcOallocatorlERHICfRunInfomUgRsPgR.tagnum = -1 ;
  G__libLHCfFunctionLN_reverse_iteratorlEvectorlERHICfRunInfomUcOallocatorlERHICfRunInfomUgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtablelibLHCfFunction() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_TClass);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_TDirectory);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_TObject);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_basic_istreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_string);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_A1Cal1);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_A1Cal2);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_ADCRange),sizeof(ADCRange),-1,34048,"Conbine the dual range of ADC CAEN V965.",G__setup_memvarADCRange,G__setup_memfuncADCRange);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_A1Cal1ToCal2),sizeof(A1Cal1ToCal2),-1,1280,"Format conversion from A1Cal1 to A1Cal2.",G__setup_memvarA1Cal1ToCal2,G__setup_memfuncA1Cal1ToCal2);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_ConParticleDefine),sizeof(ConParticleDefine),-1,34048,"Control the table of partcile definitions for Arm1 and Arm2 ",G__setup_memvarConParticleDefine,G__setup_memfuncConParticleDefine);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_PMTGain),sizeof(PMTGain),-1,34048,"Control the gain table of all PMTs.",G__setup_memvarPMTGain,G__setup_memfuncPMTGain);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_ScifiGain),sizeof(ScifiGain),-1,34048,"Control the gain table of SciFi",G__setup_memvarScifiGain,G__setup_memfuncScifiGain);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_FCGain),sizeof(FCGain),-1,34048,"Control the gain table of F.C. ",G__setup_memvarFCGain,G__setup_memfuncFCGain);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_A1GainCalibration),sizeof(A1GainCalibration),-1,1280,"Gain Calibration of Arm1.",G__setup_memvarA1GainCalibration,G__setup_memfuncA1GainCalibration);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_A1PedeSubtract),sizeof(A1PedeSubtract),-1,1280,"Pedestal subtraction for Arm1",G__setup_memvarA1PedeSubtract,G__setup_memfuncA1PedeSubtract);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_A1Raw);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_A1Raw_pp2015);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_RHICfRaw_Op2017);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_ScifiPosTable),sizeof(ScifiPosTable),-1,34048,"Control the parameters of SciFi raw format.",G__setup_memvarScifiPosTable,G__setup_memfuncScifiPosTable);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_A1RawToCal1),sizeof(A1RawToCal1),-1,1280,"Format conversion from A1Raw to A1Cal1",G__setup_memvarA1RawToCal1,G__setup_memfuncA1RawToCal1);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_A1RawToCal1cLcLRAWTOCAL_FORMAT);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_TElementActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_TElementPosActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_TMatrixTSymlEdoublegR);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_TMatrixTSparselEdoublegR);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_TMatrixTRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_TMatrixTRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_TMatrixTDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_TMatrixTColumn_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_TMatrixTFlat_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_TMatrixTSub_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_TMatrixTSparseRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_TMatrixTSparseDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_TMatrixTColumnlEdoublegR);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_TMatrixTDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_TMatrixTFlatlEdoublegR);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_TMatrixTSublEdoublegR);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_TMatrixTSparseRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_TMatrixTSparseDiaglEdoublegR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_A1CrossTalk),sizeof(A1CrossTalk),-1,1280,"Cross talk calibration for SciFi. GSO-bar!",G__setup_memvarA1CrossTalk,G__setup_memfuncA1CrossTalk);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_A1LHCCrossTalk),sizeof(A1LHCCrossTalk),-1,1280,"Cross talk calibration for SciFi in A1Cal2 ",G__setup_memvarA1LHCCrossTalk,G__setup_memfuncA1LHCCrossTalk);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_A2Cal2);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_A2Cal1);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_A2Cal1ToCal2),sizeof(A2Cal1ToCal2),-1,1280,"Format conversion from A2Cal1 to A2Cal2",G__setup_memvarA2Cal1ToCal2,G__setup_memfuncA2Cal1ToCal2);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_SiliconGain),sizeof(SiliconGain),-1,1280,"Control the gain table of silicon (Dummy)",G__setup_memvarSiliconGain,G__setup_memfuncSiliconGain);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_A2GainCalibration),sizeof(A2GainCalibration),-1,1280,"Gain Calibration of Arm2.",G__setup_memvarA2GainCalibration,G__setup_memfuncA2GainCalibration);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_A2PedeSubtract),sizeof(A2PedeSubtract),-1,1280,"Pedestal subtraction for Arm2",G__setup_memvarA2PedeSubtract,G__setup_memfuncA2PedeSubtract);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_A2Raw);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_A2Raw_pPb2013);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_A2Raw_pp2015);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_A2Raw_pPb2016);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_A2RawToCal1),sizeof(A2RawToCal1),-1,1280,"Format conversion from A2Raw to A2Cal1",G__setup_memvarA2RawToCal1,G__setup_memfuncA2RawToCal1);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_A2RawToCal1cLcLRAWTOCAL_FORMAT);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_TF1);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_TH1F);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_SILICON_RAW);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_A2RawToCal1Silicon),sizeof(A2RawToCal1Silicon),-1,1280,"Format conversion for silicon from A2Raw to A2Cal1",G__setup_memvarA2RawToCal1Silicon,G__setup_memfuncA2RawToCal1Silicon);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_Arm2Hit),sizeof(Arm2Hit),-1,262144,(char*)NULL,G__setup_memvarArm2Hit,G__setup_memfuncArm2Hit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_Arm2Alignment),sizeof(Arm2Alignment),-1,34048,"Alignment of the Arm2 detector",G__setup_memvarArm2Alignment,G__setup_memfuncArm2Alignment);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_MyFilePath),sizeof(MyFilePath),-1,296192,(char*)NULL,G__setup_memvarMyFilePath,G__setup_memfuncMyFilePath);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_SimpleList),sizeof(SimpleList),-1,295168,(char*)NULL,G__setup_memvarSimpleList,G__setup_memfuncSimpleList);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_StructFiberPos),sizeof(StructFiberPos),-1,1280,(char*)NULL,G__setup_memvarStructFiberPos,G__setup_memfuncStructFiberPos);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_ConScifiPosition),sizeof(ConScifiPosition),-1,34048,"Control the parameter table for positions of each fiber ",G__setup_memvarConScifiPosition,G__setup_memfuncConScifiPosition);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_TH2F);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_ConShowerLeakage),sizeof(ConShowerLeakage),-1,34048,"Control the table for shower leakage functions.",G__setup_memvarConShowerLeakage,G__setup_memfuncConShowerLeakage);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_LHCfRunInfo),sizeof(LHCfRunInfo),-1,1280,"Run information",G__setup_memvarLHCfRunInfo,G__setup_memfuncLHCfRunInfo);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_LHCfRunInfocLcLDEF_BEAMTAG);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_LHCfRunInfoTable),sizeof(LHCfRunInfoTable),-1,34048,"Run information table",G__setup_memvarLHCfRunInfoTable,G__setup_memfuncLHCfRunInfoTable);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_vectorlELHCfRunInfomUcOallocatorlELHCfRunInfomUgRsPgR);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_reverse_iteratorlEvectorlELHCfRunInfomUcOallocatorlELHCfRunInfomUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_PMTSatu),sizeof(PMTSatu),-1,34048,"Correction of PMT saturation.",G__setup_memvarPMTSatu,G__setup_memfuncPMTSatu);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_PMTSatucLcLPMTTable);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_PMTSatuCorrection),sizeof(PMTSatuCorrection),-1,34048,(char*)NULL,G__setup_memvarPMTSatuCorrection,G__setup_memfuncPMTSatuCorrection);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_ParticleID01),sizeof(ParticleID01),-1,1280,"Calculate L20 and L90 for PID",G__setup_memvarParticleID01,G__setup_memfuncParticleID01);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_ParticleID02),sizeof(ParticleID02),-1,1280,"Calculate L20 and L90 for PID",G__setup_memvarParticleID02,G__setup_memfuncParticleID02);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_A1Phys);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_SciFiPosCalculation),sizeof(SciFiPosCalculation),-1,1280,"Hit position search by SciFi (ver. Mizuishi)",G__setup_memvarSciFiPosCalculation,G__setup_memfuncSciFiPosCalculation);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_TGraphErrors);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_ScifiIncidentPosition02),sizeof(ScifiIncidentPosition02),-1,34048,"Hit position search of SciFi (ver. MENJO)",G__setup_memvarScifiIncidentPosition02,G__setup_memfuncScifiIncidentPosition02);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_ScintiPosDependence),sizeof(ScintiPosDependence),-1,34048,"Control the parameter table of position dependence of light yield on each scintillator.",G__setup_memvarScintiPosDependence,G__setup_memfuncScintiPosDependence);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_SPSAdamo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_SPSAdamoPedeSubtract),sizeof(SPSAdamoPedeSubtract),-1,1280,"Pedestal subtraction for Adamo",G__setup_memvarSPSAdamoPedeSubtract,G__setup_memfuncSPSAdamoPedeSubtract);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_TransitionFit),sizeof(TransitionFit),-1,34048,"Fit transition curves of the calorimeters. ",G__setup_memvarTransitionFit,G__setup_memfuncTransitionFit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_RHICfRunInfo),sizeof(RHICfRunInfo),-1,1280,"Run information",G__setup_memvarRHICfRunInfo,G__setup_memfuncRHICfRunInfo);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_RHICfRunInfocLcLDEF_BEAMTAG);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_RHICfRunInfoTable),sizeof(RHICfRunInfoTable),-1,34048,"Run information table",G__setup_memvarRHICfRunInfoTable,G__setup_memfuncRHICfRunInfoTable);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_vectorlERHICfRunInfomUcOallocatorlERHICfRunInfomUgRsPgR);
   G__get_linked_tagnum_fwd(&G__libLHCfFunctionLN_reverse_iteratorlEvectorlERHICfRunInfomUcOallocatorlERHICfRunInfomUgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setuplibLHCfFunction(void) {
  G__check_setup_version(30051515,"G__cpp_setuplibLHCfFunction()");
  G__set_cpp_environmentlibLHCfFunction();
  G__cpp_setup_tagtablelibLHCfFunction();

  G__cpp_setup_inheritancelibLHCfFunction();

  G__cpp_setup_typetablelibLHCfFunction();

  G__cpp_setup_memvarlibLHCfFunction();

  G__cpp_setup_memfunclibLHCfFunction();
  G__cpp_setup_globallibLHCfFunction();
  G__cpp_setup_funclibLHCfFunction();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfunclibLHCfFunction();
  return;
}
class G__cpp_setup_initlibLHCfFunction {
  public:
    G__cpp_setup_initlibLHCfFunction() { G__add_setup_func("libLHCfFunction",(G__incsetup)(&G__cpp_setuplibLHCfFunction)); G__call_setup_funcs(); }
   ~G__cpp_setup_initlibLHCfFunction() { G__remove_setup_func("libLHCfFunction"); }
};
G__cpp_setup_initlibLHCfFunction G__cpp_setup_initializerlibLHCfFunction;

