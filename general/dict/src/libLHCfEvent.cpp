//
// File generated by rootcint at Wed Aug 21 17:08:56 2019

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME libLHCfEvent
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "libLHCfEvent.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void A1Raw_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_A1Raw(void *p = 0);
   static void *newArray_A1Raw(Long_t size, void *p);
   static void delete_A1Raw(void *p);
   static void deleteArray_A1Raw(void *p);
   static void destruct_A1Raw(void *p);
   static void streamer_A1Raw(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::A1Raw*)
   {
      ::A1Raw *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::A1Raw >(0);
      static ::ROOT::TGenericClassInfo 
         instance("A1Raw", ::A1Raw::Class_Version(), "./include/A1Raw.h", 95,
                  typeid(::A1Raw), ::ROOT::DefineBehavior(ptr, ptr),
                  &::A1Raw::Dictionary, isa_proxy, 0,
                  sizeof(::A1Raw) );
      instance.SetNew(&new_A1Raw);
      instance.SetNewArray(&newArray_A1Raw);
      instance.SetDelete(&delete_A1Raw);
      instance.SetDeleteArray(&deleteArray_A1Raw);
      instance.SetDestructor(&destruct_A1Raw);
      instance.SetStreamerFunc(&streamer_A1Raw);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::A1Raw*)
   {
      return GenerateInitInstanceLocal((::A1Raw*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::A1Raw*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void A1Cal1_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_A1Cal1(void *p = 0);
   static void *newArray_A1Cal1(Long_t size, void *p);
   static void delete_A1Cal1(void *p);
   static void deleteArray_A1Cal1(void *p);
   static void destruct_A1Cal1(void *p);
   static void streamer_A1Cal1(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::A1Cal1*)
   {
      ::A1Cal1 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::A1Cal1 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("A1Cal1", ::A1Cal1::Class_Version(), "./include/A1Cal1.h", 15,
                  typeid(::A1Cal1), ::ROOT::DefineBehavior(ptr, ptr),
                  &::A1Cal1::Dictionary, isa_proxy, 0,
                  sizeof(::A1Cal1) );
      instance.SetNew(&new_A1Cal1);
      instance.SetNewArray(&newArray_A1Cal1);
      instance.SetDelete(&delete_A1Cal1);
      instance.SetDeleteArray(&deleteArray_A1Cal1);
      instance.SetDestructor(&destruct_A1Cal1);
      instance.SetStreamerFunc(&streamer_A1Cal1);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::A1Cal1*)
   {
      return GenerateInitInstanceLocal((::A1Cal1*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::A1Cal1*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void A1Cal2_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_A1Cal2(void *p = 0);
   static void *newArray_A1Cal2(Long_t size, void *p);
   static void delete_A1Cal2(void *p);
   static void deleteArray_A1Cal2(void *p);
   static void destruct_A1Cal2(void *p);
   static void streamer_A1Cal2(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::A1Cal2*)
   {
      ::A1Cal2 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::A1Cal2 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("A1Cal2", ::A1Cal2::Class_Version(), "./include/A1Cal2.h", 12,
                  typeid(::A1Cal2), ::ROOT::DefineBehavior(ptr, ptr),
                  &::A1Cal2::Dictionary, isa_proxy, 0,
                  sizeof(::A1Cal2) );
      instance.SetNew(&new_A1Cal2);
      instance.SetNewArray(&newArray_A1Cal2);
      instance.SetDelete(&delete_A1Cal2);
      instance.SetDeleteArray(&deleteArray_A1Cal2);
      instance.SetDestructor(&destruct_A1Cal2);
      instance.SetStreamerFunc(&streamer_A1Cal2);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::A1Cal2*)
   {
      return GenerateInitInstanceLocal((::A1Cal2*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::A1Cal2*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void A1Phys_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_A1Phys(void *p = 0);
   static void *newArray_A1Phys(Long_t size, void *p);
   static void delete_A1Phys(void *p);
   static void deleteArray_A1Phys(void *p);
   static void destruct_A1Phys(void *p);
   static void streamer_A1Phys(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::A1Phys*)
   {
      ::A1Phys *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::A1Phys >(0);
      static ::ROOT::TGenericClassInfo 
         instance("A1Phys", ::A1Phys::Class_Version(), "./include/A1Phys.h", 12,
                  typeid(::A1Phys), ::ROOT::DefineBehavior(ptr, ptr),
                  &::A1Phys::Dictionary, isa_proxy, 0,
                  sizeof(::A1Phys) );
      instance.SetNew(&new_A1Phys);
      instance.SetNewArray(&newArray_A1Phys);
      instance.SetDelete(&delete_A1Phys);
      instance.SetDeleteArray(&deleteArray_A1Phys);
      instance.SetDestructor(&destruct_A1Phys);
      instance.SetStreamerFunc(&streamer_A1Phys);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::A1Phys*)
   {
      return GenerateInitInstanceLocal((::A1Phys*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::A1Phys*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void A1Info_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_A1Info(void *p = 0);
   static void *newArray_A1Info(Long_t size, void *p);
   static void delete_A1Info(void *p);
   static void deleteArray_A1Info(void *p);
   static void destruct_A1Info(void *p);
   static void streamer_A1Info(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::A1Info*)
   {
      ::A1Info *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::A1Info >(0);
      static ::ROOT::TGenericClassInfo 
         instance("A1Info", ::A1Info::Class_Version(), "./include/A1Info.h", 7,
                  typeid(::A1Info), ::ROOT::DefineBehavior(ptr, ptr),
                  &::A1Info::Dictionary, isa_proxy, 0,
                  sizeof(::A1Info) );
      instance.SetNew(&new_A1Info);
      instance.SetNewArray(&newArray_A1Info);
      instance.SetDelete(&delete_A1Info);
      instance.SetDeleteArray(&deleteArray_A1Info);
      instance.SetDestructor(&destruct_A1Info);
      instance.SetStreamerFunc(&streamer_A1Info);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::A1Info*)
   {
      return GenerateInitInstanceLocal((::A1Info*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::A1Info*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void A1Scl_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_A1Scl(void *p = 0);
   static void *newArray_A1Scl(Long_t size, void *p);
   static void delete_A1Scl(void *p);
   static void deleteArray_A1Scl(void *p);
   static void destruct_A1Scl(void *p);
   static void streamer_A1Scl(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::A1Scl*)
   {
      ::A1Scl *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::A1Scl >(0);
      static ::ROOT::TGenericClassInfo 
         instance("A1Scl", ::A1Scl::Class_Version(), "./include/A1Scl.h", 12,
                  typeid(::A1Scl), ::ROOT::DefineBehavior(ptr, ptr),
                  &::A1Scl::Dictionary, isa_proxy, 0,
                  sizeof(::A1Scl) );
      instance.SetNew(&new_A1Scl);
      instance.SetNewArray(&newArray_A1Scl);
      instance.SetDelete(&delete_A1Scl);
      instance.SetDeleteArray(&deleteArray_A1Scl);
      instance.SetDestructor(&destruct_A1Scl);
      instance.SetStreamerFunc(&streamer_A1Scl);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::A1Scl*)
   {
      return GenerateInitInstanceLocal((::A1Scl*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::A1Scl*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void A2Raw_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_A2Raw(void *p = 0);
   static void *newArray_A2Raw(Long_t size, void *p);
   static void delete_A2Raw(void *p);
   static void deleteArray_A2Raw(void *p);
   static void destruct_A2Raw(void *p);
   static void streamer_A2Raw(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::A2Raw*)
   {
      ::A2Raw *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::A2Raw >(0);
      static ::ROOT::TGenericClassInfo 
         instance("A2Raw", ::A2Raw::Class_Version(), "./include/A2Raw.h", 95,
                  typeid(::A2Raw), ::ROOT::DefineBehavior(ptr, ptr),
                  &::A2Raw::Dictionary, isa_proxy, 0,
                  sizeof(::A2Raw) );
      instance.SetNew(&new_A2Raw);
      instance.SetNewArray(&newArray_A2Raw);
      instance.SetDelete(&delete_A2Raw);
      instance.SetDeleteArray(&deleteArray_A2Raw);
      instance.SetDestructor(&destruct_A2Raw);
      instance.SetStreamerFunc(&streamer_A2Raw);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::A2Raw*)
   {
      return GenerateInitInstanceLocal((::A2Raw*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::A2Raw*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void A2Cal2_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_A2Cal2(void *p = 0);
   static void *newArray_A2Cal2(Long_t size, void *p);
   static void delete_A2Cal2(void *p);
   static void deleteArray_A2Cal2(void *p);
   static void destruct_A2Cal2(void *p);
   static void streamer_A2Cal2(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::A2Cal2*)
   {
      ::A2Cal2 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::A2Cal2 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("A2Cal2", ::A2Cal2::Class_Version(), "./include/A2Cal2.h", 14,
                  typeid(::A2Cal2), ::ROOT::DefineBehavior(ptr, ptr),
                  &::A2Cal2::Dictionary, isa_proxy, 0,
                  sizeof(::A2Cal2) );
      instance.SetNew(&new_A2Cal2);
      instance.SetNewArray(&newArray_A2Cal2);
      instance.SetDelete(&delete_A2Cal2);
      instance.SetDeleteArray(&deleteArray_A2Cal2);
      instance.SetDestructor(&destruct_A2Cal2);
      instance.SetStreamerFunc(&streamer_A2Cal2);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::A2Cal2*)
   {
      return GenerateInitInstanceLocal((::A2Cal2*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::A2Cal2*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void A2Cal1_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_A2Cal1(void *p = 0);
   static void *newArray_A2Cal1(Long_t size, void *p);
   static void delete_A2Cal1(void *p);
   static void deleteArray_A2Cal1(void *p);
   static void destruct_A2Cal1(void *p);
   static void streamer_A2Cal1(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::A2Cal1*)
   {
      ::A2Cal1 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::A2Cal1 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("A2Cal1", ::A2Cal1::Class_Version(), "./include/A2Cal1.h", 14,
                  typeid(::A2Cal1), ::ROOT::DefineBehavior(ptr, ptr),
                  &::A2Cal1::Dictionary, isa_proxy, 0,
                  sizeof(::A2Cal1) );
      instance.SetNew(&new_A2Cal1);
      instance.SetNewArray(&newArray_A2Cal1);
      instance.SetDelete(&delete_A2Cal1);
      instance.SetDeleteArray(&deleteArray_A2Cal1);
      instance.SetDestructor(&destruct_A2Cal1);
      instance.SetStreamerFunc(&streamer_A2Cal1);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::A2Cal1*)
   {
      return GenerateInitInstanceLocal((::A2Cal1*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::A2Cal1*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void A2Phys_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_A2Phys(void *p = 0);
   static void *newArray_A2Phys(Long_t size, void *p);
   static void delete_A2Phys(void *p);
   static void deleteArray_A2Phys(void *p);
   static void destruct_A2Phys(void *p);
   static void streamer_A2Phys(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::A2Phys*)
   {
      ::A2Phys *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::A2Phys >(0);
      static ::ROOT::TGenericClassInfo 
         instance("A2Phys", ::A2Phys::Class_Version(), "./include/A2Phys.h", 12,
                  typeid(::A2Phys), ::ROOT::DefineBehavior(ptr, ptr),
                  &::A2Phys::Dictionary, isa_proxy, 0,
                  sizeof(::A2Phys) );
      instance.SetNew(&new_A2Phys);
      instance.SetNewArray(&newArray_A2Phys);
      instance.SetDelete(&delete_A2Phys);
      instance.SetDeleteArray(&deleteArray_A2Phys);
      instance.SetDestructor(&destruct_A2Phys);
      instance.SetStreamerFunc(&streamer_A2Phys);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::A2Phys*)
   {
      return GenerateInitInstanceLocal((::A2Phys*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::A2Phys*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void Rec0_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Rec0(void *p = 0);
   static void *newArray_Rec0(Long_t size, void *p);
   static void delete_Rec0(void *p);
   static void deleteArray_Rec0(void *p);
   static void destruct_Rec0(void *p);
   static void streamer_Rec0(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Rec0*)
   {
      ::Rec0 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Rec0 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Rec0", ::Rec0::Class_Version(), "./include/Rec0.h", 13,
                  typeid(::Rec0), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Rec0::Dictionary, isa_proxy, 0,
                  sizeof(::Rec0) );
      instance.SetNew(&new_Rec0);
      instance.SetNewArray(&newArray_Rec0);
      instance.SetDelete(&delete_Rec0);
      instance.SetDeleteArray(&deleteArray_Rec0);
      instance.SetDestructor(&destruct_Rec0);
      instance.SetStreamerFunc(&streamer_Rec0);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Rec0*)
   {
      return GenerateInitInstanceLocal((::Rec0*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Rec0*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void A2Cal2M_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_A2Cal2M(void *p = 0);
   static void *newArray_A2Cal2M(Long_t size, void *p);
   static void delete_A2Cal2M(void *p);
   static void deleteArray_A2Cal2M(void *p);
   static void destruct_A2Cal2M(void *p);
   static void streamer_A2Cal2M(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::A2Cal2M*)
   {
      ::A2Cal2M *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::A2Cal2M >(0);
      static ::ROOT::TGenericClassInfo 
         instance("A2Cal2M", ::A2Cal2M::Class_Version(), "./include/A2Cal2M.h", 13,
                  typeid(::A2Cal2M), ::ROOT::DefineBehavior(ptr, ptr),
                  &::A2Cal2M::Dictionary, isa_proxy, 0,
                  sizeof(::A2Cal2M) );
      instance.SetNew(&new_A2Cal2M);
      instance.SetNewArray(&newArray_A2Cal2M);
      instance.SetDelete(&delete_A2Cal2M);
      instance.SetDeleteArray(&deleteArray_A2Cal2M);
      instance.SetDestructor(&destruct_A2Cal2M);
      instance.SetStreamerFunc(&streamer_A2Cal2M);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::A2Cal2M*)
   {
      return GenerateInitInstanceLocal((::A2Cal2M*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::A2Cal2M*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void A2Info_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_A2Info(void *p = 0);
   static void *newArray_A2Info(Long_t size, void *p);
   static void delete_A2Info(void *p);
   static void deleteArray_A2Info(void *p);
   static void destruct_A2Info(void *p);
   static void streamer_A2Info(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::A2Info*)
   {
      ::A2Info *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::A2Info >(0);
      static ::ROOT::TGenericClassInfo 
         instance("A2Info", ::A2Info::Class_Version(), "./include/A2Info.h", 7,
                  typeid(::A2Info), ::ROOT::DefineBehavior(ptr, ptr),
                  &::A2Info::Dictionary, isa_proxy, 0,
                  sizeof(::A2Info) );
      instance.SetNew(&new_A2Info);
      instance.SetNewArray(&newArray_A2Info);
      instance.SetDelete(&delete_A2Info);
      instance.SetDeleteArray(&deleteArray_A2Info);
      instance.SetDestructor(&destruct_A2Info);
      instance.SetStreamerFunc(&streamer_A2Info);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::A2Info*)
   {
      return GenerateInitInstanceLocal((::A2Info*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::A2Info*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void A2Scl_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_A2Scl(void *p = 0);
   static void *newArray_A2Scl(Long_t size, void *p);
   static void delete_A2Scl(void *p);
   static void deleteArray_A2Scl(void *p);
   static void destruct_A2Scl(void *p);
   static void streamer_A2Scl(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::A2Scl*)
   {
      ::A2Scl *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::A2Scl >(0);
      static ::ROOT::TGenericClassInfo 
         instance("A2Scl", ::A2Scl::Class_Version(), "./include/A2Scl.h", 12,
                  typeid(::A2Scl), ::ROOT::DefineBehavior(ptr, ptr),
                  &::A2Scl::Dictionary, isa_proxy, 0,
                  sizeof(::A2Scl) );
      instance.SetNew(&new_A2Scl);
      instance.SetNewArray(&newArray_A2Scl);
      instance.SetDelete(&delete_A2Scl);
      instance.SetDeleteArray(&deleteArray_A2Scl);
      instance.SetDestructor(&destruct_A2Scl);
      instance.SetStreamerFunc(&streamer_A2Scl);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::A2Scl*)
   {
      return GenerateInitInstanceLocal((::A2Scl*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::A2Scl*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RawL1T_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RawL1T(void *p = 0);
   static void *newArray_RawL1T(Long_t size, void *p);
   static void delete_RawL1T(void *p);
   static void deleteArray_RawL1T(void *p);
   static void destruct_RawL1T(void *p);
   static void streamer_RawL1T(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RawL1T*)
   {
      ::RawL1T *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RawL1T >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RawL1T", ::RawL1T::Class_Version(), "./include/RawL1T.h", 12,
                  typeid(::RawL1T), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RawL1T::Dictionary, isa_proxy, 0,
                  sizeof(::RawL1T) );
      instance.SetNew(&new_RawL1T);
      instance.SetNewArray(&newArray_RawL1T);
      instance.SetDelete(&delete_RawL1T);
      instance.SetDeleteArray(&deleteArray_RawL1T);
      instance.SetDestructor(&destruct_RawL1T);
      instance.SetStreamerFunc(&streamer_RawL1T);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RawL1T*)
   {
      return GenerateInitInstanceLocal((::RawL1T*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RawL1T*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void SclL1T_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_SclL1T(void *p = 0);
   static void *newArray_SclL1T(Long_t size, void *p);
   static void delete_SclL1T(void *p);
   static void deleteArray_SclL1T(void *p);
   static void destruct_SclL1T(void *p);
   static void streamer_SclL1T(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SclL1T*)
   {
      ::SclL1T *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SclL1T >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SclL1T", ::SclL1T::Class_Version(), "./include/SclL1T.h", 12,
                  typeid(::SclL1T), ::ROOT::DefineBehavior(ptr, ptr),
                  &::SclL1T::Dictionary, isa_proxy, 0,
                  sizeof(::SclL1T) );
      instance.SetNew(&new_SclL1T);
      instance.SetNewArray(&newArray_SclL1T);
      instance.SetDelete(&delete_SclL1T);
      instance.SetDeleteArray(&deleteArray_SclL1T);
      instance.SetDestructor(&destruct_SclL1T);
      instance.SetStreamerFunc(&streamer_SclL1T);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SclL1T*)
   {
      return GenerateInitInstanceLocal((::SclL1T*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SclL1T*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void GParam_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_GParam(void *p = 0);
   static void *newArray_GParam(Long_t size, void *p);
   static void delete_GParam(void *p);
   static void deleteArray_GParam(void *p);
   static void destruct_GParam(void *p);
   static void streamer_GParam(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::GParam*)
   {
      ::GParam *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GParam >(0);
      static ::ROOT::TGenericClassInfo 
         instance("GParam", ::GParam::Class_Version(), "./include/GParam.h", 14,
                  typeid(::GParam), ::ROOT::DefineBehavior(ptr, ptr),
                  &::GParam::Dictionary, isa_proxy, 0,
                  sizeof(::GParam) );
      instance.SetNew(&new_GParam);
      instance.SetNewArray(&newArray_GParam);
      instance.SetDelete(&delete_GParam);
      instance.SetDeleteArray(&deleteArray_GParam);
      instance.SetDestructor(&destruct_GParam);
      instance.SetStreamerFunc(&streamer_GParam);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::GParam*)
   {
      return GenerateInitInstanceLocal((::GParam*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::GParam*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void GParamD64_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_GParamD64(void *p = 0);
   static void *newArray_GParamD64(Long_t size, void *p);
   static void delete_GParamD64(void *p);
   static void deleteArray_GParamD64(void *p);
   static void destruct_GParamD64(void *p);
   static void streamer_GParamD64(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::GParamD64*)
   {
      ::GParamD64 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GParamD64 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("GParamD64", ::GParamD64::Class_Version(), "./include/GParamD64.h", 15,
                  typeid(::GParamD64), ::ROOT::DefineBehavior(ptr, ptr),
                  &::GParamD64::Dictionary, isa_proxy, 0,
                  sizeof(::GParamD64) );
      instance.SetNew(&new_GParamD64);
      instance.SetNewArray(&newArray_GParamD64);
      instance.SetDelete(&delete_GParamD64);
      instance.SetDeleteArray(&deleteArray_GParamD64);
      instance.SetDestructor(&destruct_GParamD64);
      instance.SetStreamerFunc(&streamer_GParamD64);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::GParamD64*)
   {
      return GenerateInitInstanceLocal((::GParamD64*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::GParamD64*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void SPSAdamo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_SPSAdamo(void *p = 0);
   static void *newArray_SPSAdamo(Long_t size, void *p);
   static void delete_SPSAdamo(void *p);
   static void deleteArray_SPSAdamo(void *p);
   static void destruct_SPSAdamo(void *p);
   static void streamer_SPSAdamo(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SPSAdamo*)
   {
      ::SPSAdamo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SPSAdamo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SPSAdamo", ::SPSAdamo::Class_Version(), "./include/SPSAdamo.h", 12,
                  typeid(::SPSAdamo), ::ROOT::DefineBehavior(ptr, ptr),
                  &::SPSAdamo::Dictionary, isa_proxy, 0,
                  sizeof(::SPSAdamo) );
      instance.SetNew(&new_SPSAdamo);
      instance.SetNewArray(&newArray_SPSAdamo);
      instance.SetDelete(&delete_SPSAdamo);
      instance.SetDeleteArray(&deleteArray_SPSAdamo);
      instance.SetDestructor(&destruct_SPSAdamo);
      instance.SetStreamerFunc(&streamer_SPSAdamo);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SPSAdamo*)
   {
      return GenerateInitInstanceLocal((::SPSAdamo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SPSAdamo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RHICfSinglePar_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RHICfSinglePar(void *p = 0);
   static void *newArray_RHICfSinglePar(Long_t size, void *p);
   static void delete_RHICfSinglePar(void *p);
   static void deleteArray_RHICfSinglePar(void *p);
   static void destruct_RHICfSinglePar(void *p);
   static void streamer_RHICfSinglePar(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RHICfSinglePar*)
   {
      ::RHICfSinglePar *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RHICfSinglePar >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RHICfSinglePar", ::RHICfSinglePar::Class_Version(), "./include/RHICfSinglePar.h", 11,
                  typeid(::RHICfSinglePar), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RHICfSinglePar::Dictionary, isa_proxy, 0,
                  sizeof(::RHICfSinglePar) );
      instance.SetNew(&new_RHICfSinglePar);
      instance.SetNewArray(&newArray_RHICfSinglePar);
      instance.SetDelete(&delete_RHICfSinglePar);
      instance.SetDeleteArray(&deleteArray_RHICfSinglePar);
      instance.SetDestructor(&destruct_RHICfSinglePar);
      instance.SetStreamerFunc(&streamer_RHICfSinglePar);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RHICfSinglePar*)
   {
      return GenerateInitInstanceLocal((::RHICfSinglePar*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RHICfSinglePar*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RHICfPhotonPair_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RHICfPhotonPair(void *p = 0);
   static void *newArray_RHICfPhotonPair(Long_t size, void *p);
   static void delete_RHICfPhotonPair(void *p);
   static void deleteArray_RHICfPhotonPair(void *p);
   static void destruct_RHICfPhotonPair(void *p);
   static void streamer_RHICfPhotonPair(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RHICfPhotonPair*)
   {
      ::RHICfPhotonPair *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RHICfPhotonPair >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RHICfPhotonPair", ::RHICfPhotonPair::Class_Version(), "./include/RHICfPhotonPair.h", 13,
                  typeid(::RHICfPhotonPair), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RHICfPhotonPair::Dictionary, isa_proxy, 0,
                  sizeof(::RHICfPhotonPair) );
      instance.SetNew(&new_RHICfPhotonPair);
      instance.SetNewArray(&newArray_RHICfPhotonPair);
      instance.SetDelete(&delete_RHICfPhotonPair);
      instance.SetDeleteArray(&deleteArray_RHICfPhotonPair);
      instance.SetDestructor(&destruct_RHICfPhotonPair);
      instance.SetStreamerFunc(&streamer_RHICfPhotonPair);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RHICfPhotonPair*)
   {
      return GenerateInitInstanceLocal((::RHICfPhotonPair*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RHICfPhotonPair*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void A1Rec1_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_A1Rec1(void *p = 0);
   static void *newArray_A1Rec1(Long_t size, void *p);
   static void delete_A1Rec1(void *p);
   static void deleteArray_A1Rec1(void *p);
   static void destruct_A1Rec1(void *p);
   static void streamer_A1Rec1(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::A1Rec1*)
   {
      ::A1Rec1 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::A1Rec1 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("A1Rec1", ::A1Rec1::Class_Version(), "./include/A1Rec1.h", 6,
                  typeid(::A1Rec1), ::ROOT::DefineBehavior(ptr, ptr),
                  &::A1Rec1::Dictionary, isa_proxy, 0,
                  sizeof(::A1Rec1) );
      instance.SetNew(&new_A1Rec1);
      instance.SetNewArray(&newArray_A1Rec1);
      instance.SetDelete(&delete_A1Rec1);
      instance.SetDeleteArray(&deleteArray_A1Rec1);
      instance.SetDestructor(&destruct_A1Rec1);
      instance.SetStreamerFunc(&streamer_A1Rec1);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::A1Rec1*)
   {
      return GenerateInitInstanceLocal((::A1Rec1*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::A1Rec1*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RHICfCollection_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RHICfCollection(void *p = 0);
   static void *newArray_RHICfCollection(Long_t size, void *p);
   static void delete_RHICfCollection(void *p);
   static void deleteArray_RHICfCollection(void *p);
   static void destruct_RHICfCollection(void *p);
   static void streamer_RHICfCollection(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RHICfCollection*)
   {
      ::RHICfCollection *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RHICfCollection >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RHICfCollection", ::RHICfCollection::Class_Version(), "./include/RHICfCollection.h", 19,
                  typeid(::RHICfCollection), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RHICfCollection::Dictionary, isa_proxy, 0,
                  sizeof(::RHICfCollection) );
      instance.SetNew(&new_RHICfCollection);
      instance.SetNewArray(&newArray_RHICfCollection);
      instance.SetDelete(&delete_RHICfCollection);
      instance.SetDeleteArray(&deleteArray_RHICfCollection);
      instance.SetDestructor(&destruct_RHICfCollection);
      instance.SetStreamerFunc(&streamer_RHICfCollection);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RHICfCollection*)
   {
      return GenerateInitInstanceLocal((::RHICfCollection*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RHICfCollection*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void A1Raw_pp2015_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_A1Raw_pp2015(void *p = 0);
   static void *newArray_A1Raw_pp2015(Long_t size, void *p);
   static void delete_A1Raw_pp2015(void *p);
   static void deleteArray_A1Raw_pp2015(void *p);
   static void destruct_A1Raw_pp2015(void *p);
   static void streamer_A1Raw_pp2015(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::A1Raw_pp2015*)
   {
      ::A1Raw_pp2015 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::A1Raw_pp2015 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("A1Raw_pp2015", ::A1Raw_pp2015::Class_Version(), "./include/A1Raw_pp2015.h", 92,
                  typeid(::A1Raw_pp2015), ::ROOT::DefineBehavior(ptr, ptr),
                  &::A1Raw_pp2015::Dictionary, isa_proxy, 0,
                  sizeof(::A1Raw_pp2015) );
      instance.SetNew(&new_A1Raw_pp2015);
      instance.SetNewArray(&newArray_A1Raw_pp2015);
      instance.SetDelete(&delete_A1Raw_pp2015);
      instance.SetDeleteArray(&deleteArray_A1Raw_pp2015);
      instance.SetDestructor(&destruct_A1Raw_pp2015);
      instance.SetStreamerFunc(&streamer_A1Raw_pp2015);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::A1Raw_pp2015*)
   {
      return GenerateInitInstanceLocal((::A1Raw_pp2015*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::A1Raw_pp2015*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void A2Raw_pp2015_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_A2Raw_pp2015(void *p = 0);
   static void *newArray_A2Raw_pp2015(Long_t size, void *p);
   static void delete_A2Raw_pp2015(void *p);
   static void deleteArray_A2Raw_pp2015(void *p);
   static void destruct_A2Raw_pp2015(void *p);
   static void streamer_A2Raw_pp2015(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::A2Raw_pp2015*)
   {
      ::A2Raw_pp2015 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::A2Raw_pp2015 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("A2Raw_pp2015", ::A2Raw_pp2015::Class_Version(), "./include/A2Raw_pp2015.h", 89,
                  typeid(::A2Raw_pp2015), ::ROOT::DefineBehavior(ptr, ptr),
                  &::A2Raw_pp2015::Dictionary, isa_proxy, 0,
                  sizeof(::A2Raw_pp2015) );
      instance.SetNew(&new_A2Raw_pp2015);
      instance.SetNewArray(&newArray_A2Raw_pp2015);
      instance.SetDelete(&delete_A2Raw_pp2015);
      instance.SetDeleteArray(&deleteArray_A2Raw_pp2015);
      instance.SetDestructor(&destruct_A2Raw_pp2015);
      instance.SetStreamerFunc(&streamer_A2Raw_pp2015);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::A2Raw_pp2015*)
   {
      return GenerateInitInstanceLocal((::A2Raw_pp2015*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::A2Raw_pp2015*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void A1Scl_pp2015_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_A1Scl_pp2015(void *p = 0);
   static void *newArray_A1Scl_pp2015(Long_t size, void *p);
   static void delete_A1Scl_pp2015(void *p);
   static void deleteArray_A1Scl_pp2015(void *p);
   static void destruct_A1Scl_pp2015(void *p);
   static void streamer_A1Scl_pp2015(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::A1Scl_pp2015*)
   {
      ::A1Scl_pp2015 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::A1Scl_pp2015 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("A1Scl_pp2015", ::A1Scl_pp2015::Class_Version(), "./include/A1Scl_pp2015.h", 11,
                  typeid(::A1Scl_pp2015), ::ROOT::DefineBehavior(ptr, ptr),
                  &::A1Scl_pp2015::Dictionary, isa_proxy, 0,
                  sizeof(::A1Scl_pp2015) );
      instance.SetNew(&new_A1Scl_pp2015);
      instance.SetNewArray(&newArray_A1Scl_pp2015);
      instance.SetDelete(&delete_A1Scl_pp2015);
      instance.SetDeleteArray(&deleteArray_A1Scl_pp2015);
      instance.SetDestructor(&destruct_A1Scl_pp2015);
      instance.SetStreamerFunc(&streamer_A1Scl_pp2015);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::A1Scl_pp2015*)
   {
      return GenerateInitInstanceLocal((::A1Scl_pp2015*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::A1Scl_pp2015*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void A2Scl_pp2015_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_A2Scl_pp2015(void *p = 0);
   static void *newArray_A2Scl_pp2015(Long_t size, void *p);
   static void delete_A2Scl_pp2015(void *p);
   static void deleteArray_A2Scl_pp2015(void *p);
   static void destruct_A2Scl_pp2015(void *p);
   static void streamer_A2Scl_pp2015(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::A2Scl_pp2015*)
   {
      ::A2Scl_pp2015 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::A2Scl_pp2015 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("A2Scl_pp2015", ::A2Scl_pp2015::Class_Version(), "./include/A2Scl_pp2015.h", 11,
                  typeid(::A2Scl_pp2015), ::ROOT::DefineBehavior(ptr, ptr),
                  &::A2Scl_pp2015::Dictionary, isa_proxy, 0,
                  sizeof(::A2Scl_pp2015) );
      instance.SetNew(&new_A2Scl_pp2015);
      instance.SetNewArray(&newArray_A2Scl_pp2015);
      instance.SetDelete(&delete_A2Scl_pp2015);
      instance.SetDeleteArray(&deleteArray_A2Scl_pp2015);
      instance.SetDestructor(&destruct_A2Scl_pp2015);
      instance.SetStreamerFunc(&streamer_A2Scl_pp2015);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::A2Scl_pp2015*)
   {
      return GenerateInitInstanceLocal((::A2Scl_pp2015*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::A2Scl_pp2015*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void A2Raw_pPb2013_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_A2Raw_pPb2013(void *p = 0);
   static void *newArray_A2Raw_pPb2013(Long_t size, void *p);
   static void delete_A2Raw_pPb2013(void *p);
   static void deleteArray_A2Raw_pPb2013(void *p);
   static void destruct_A2Raw_pPb2013(void *p);
   static void streamer_A2Raw_pPb2013(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::A2Raw_pPb2013*)
   {
      ::A2Raw_pPb2013 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::A2Raw_pPb2013 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("A2Raw_pPb2013", ::A2Raw_pPb2013::Class_Version(), "./include/A2Raw_pPb2013.h", 94,
                  typeid(::A2Raw_pPb2013), ::ROOT::DefineBehavior(ptr, ptr),
                  &::A2Raw_pPb2013::Dictionary, isa_proxy, 0,
                  sizeof(::A2Raw_pPb2013) );
      instance.SetNew(&new_A2Raw_pPb2013);
      instance.SetNewArray(&newArray_A2Raw_pPb2013);
      instance.SetDelete(&delete_A2Raw_pPb2013);
      instance.SetDeleteArray(&deleteArray_A2Raw_pPb2013);
      instance.SetDestructor(&destruct_A2Raw_pPb2013);
      instance.SetStreamerFunc(&streamer_A2Raw_pPb2013);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::A2Raw_pPb2013*)
   {
      return GenerateInitInstanceLocal((::A2Raw_pPb2013*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::A2Raw_pPb2013*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void A2Raw_pPb2016_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_A2Raw_pPb2016(void *p = 0);
   static void *newArray_A2Raw_pPb2016(Long_t size, void *p);
   static void delete_A2Raw_pPb2016(void *p);
   static void deleteArray_A2Raw_pPb2016(void *p);
   static void destruct_A2Raw_pPb2016(void *p);
   static void streamer_A2Raw_pPb2016(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::A2Raw_pPb2016*)
   {
      ::A2Raw_pPb2016 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::A2Raw_pPb2016 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("A2Raw_pPb2016", ::A2Raw_pPb2016::Class_Version(), "./include/A2Raw_pPb2016.h", 11,
                  typeid(::A2Raw_pPb2016), ::ROOT::DefineBehavior(ptr, ptr),
                  &::A2Raw_pPb2016::Dictionary, isa_proxy, 0,
                  sizeof(::A2Raw_pPb2016) );
      instance.SetNew(&new_A2Raw_pPb2016);
      instance.SetNewArray(&newArray_A2Raw_pPb2016);
      instance.SetDelete(&delete_A2Raw_pPb2016);
      instance.SetDeleteArray(&deleteArray_A2Raw_pPb2016);
      instance.SetDestructor(&destruct_A2Raw_pPb2016);
      instance.SetStreamerFunc(&streamer_A2Raw_pPb2016);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::A2Raw_pPb2016*)
   {
      return GenerateInitInstanceLocal((::A2Raw_pPb2016*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::A2Raw_pPb2016*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RHICfRaw_Op2017_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RHICfRaw_Op2017(void *p = 0);
   static void *newArray_RHICfRaw_Op2017(Long_t size, void *p);
   static void delete_RHICfRaw_Op2017(void *p);
   static void deleteArray_RHICfRaw_Op2017(void *p);
   static void destruct_RHICfRaw_Op2017(void *p);
   static void streamer_RHICfRaw_Op2017(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RHICfRaw_Op2017*)
   {
      ::RHICfRaw_Op2017 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RHICfRaw_Op2017 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RHICfRaw_Op2017", ::RHICfRaw_Op2017::Class_Version(), "./include/RHICfRaw_Op2017.h", 90,
                  typeid(::RHICfRaw_Op2017), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RHICfRaw_Op2017::Dictionary, isa_proxy, 0,
                  sizeof(::RHICfRaw_Op2017) );
      instance.SetNew(&new_RHICfRaw_Op2017);
      instance.SetNewArray(&newArray_RHICfRaw_Op2017);
      instance.SetDelete(&delete_RHICfRaw_Op2017);
      instance.SetDeleteArray(&deleteArray_RHICfRaw_Op2017);
      instance.SetDestructor(&destruct_RHICfRaw_Op2017);
      instance.SetStreamerFunc(&streamer_RHICfRaw_Op2017);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RHICfRaw_Op2017*)
   {
      return GenerateInitInstanceLocal((::RHICfRaw_Op2017*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RHICfRaw_Op2017*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void LHCfEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_LHCfEvent(void *p = 0);
   static void *newArray_LHCfEvent(Long_t size, void *p);
   static void delete_LHCfEvent(void *p);
   static void deleteArray_LHCfEvent(void *p);
   static void destruct_LHCfEvent(void *p);
   static void streamer_LHCfEvent(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::LHCfEvent*)
   {
      ::LHCfEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::LHCfEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("LHCfEvent", ::LHCfEvent::Class_Version(), "./include/LHCfEvent.h", 38,
                  typeid(::LHCfEvent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::LHCfEvent::Dictionary, isa_proxy, 0,
                  sizeof(::LHCfEvent) );
      instance.SetNew(&new_LHCfEvent);
      instance.SetNewArray(&newArray_LHCfEvent);
      instance.SetDelete(&delete_LHCfEvent);
      instance.SetDeleteArray(&deleteArray_LHCfEvent);
      instance.SetDestructor(&destruct_LHCfEvent);
      instance.SetStreamerFunc(&streamer_LHCfEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::LHCfEvent*)
   {
      return GenerateInitInstanceLocal((::LHCfEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::LHCfEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace LHCfDef {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void LHCfDef_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("LHCfDef", 0 /*version*/, "./include/LHCfDef.h", 3,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &LHCfDef_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void LHCfDef_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace ROOTDict {
   void A1Cal2M_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_A1Cal2M(void *p = 0);
   static void *newArray_A1Cal2M(Long_t size, void *p);
   static void delete_A1Cal2M(void *p);
   static void deleteArray_A1Cal2M(void *p);
   static void destruct_A1Cal2M(void *p);
   static void streamer_A1Cal2M(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::A1Cal2M*)
   {
      ::A1Cal2M *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::A1Cal2M >(0);
      static ::ROOT::TGenericClassInfo 
         instance("A1Cal2M", ::A1Cal2M::Class_Version(), "./include/A1Cal2M.h", 13,
                  typeid(::A1Cal2M), ::ROOT::DefineBehavior(ptr, ptr),
                  &::A1Cal2M::Dictionary, isa_proxy, 0,
                  sizeof(::A1Cal2M) );
      instance.SetNew(&new_A1Cal2M);
      instance.SetNewArray(&newArray_A1Cal2M);
      instance.SetDelete(&delete_A1Cal2M);
      instance.SetDeleteArray(&deleteArray_A1Cal2M);
      instance.SetDestructor(&destruct_A1Cal2M);
      instance.SetStreamerFunc(&streamer_A1Cal2M);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::A1Cal2M*)
   {
      return GenerateInitInstanceLocal((::A1Cal2M*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::A1Cal2M*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void A1Rec2_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_A1Rec2(void *p = 0);
   static void *newArray_A1Rec2(Long_t size, void *p);
   static void delete_A1Rec2(void *p);
   static void deleteArray_A1Rec2(void *p);
   static void destruct_A1Rec2(void *p);
   static void streamer_A1Rec2(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::A1Rec2*)
   {
      ::A1Rec2 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::A1Rec2 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("A1Rec2", ::A1Rec2::Class_Version(), "./include/A1Rec2.h", 6,
                  typeid(::A1Rec2), ::ROOT::DefineBehavior(ptr, ptr),
                  &::A1Rec2::Dictionary, isa_proxy, 0,
                  sizeof(::A1Rec2) );
      instance.SetNew(&new_A1Rec2);
      instance.SetNewArray(&newArray_A1Rec2);
      instance.SetDelete(&delete_A1Rec2);
      instance.SetDeleteArray(&deleteArray_A1Rec2);
      instance.SetDestructor(&destruct_A1Rec2);
      instance.SetStreamerFunc(&streamer_A1Rec2);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::A1Rec2*)
   {
      return GenerateInitInstanceLocal((::A1Rec2*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::A1Rec2*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void A2Rec1_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_A2Rec1(void *p = 0);
   static void *newArray_A2Rec1(Long_t size, void *p);
   static void delete_A2Rec1(void *p);
   static void deleteArray_A2Rec1(void *p);
   static void destruct_A2Rec1(void *p);
   static void streamer_A2Rec1(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::A2Rec1*)
   {
      ::A2Rec1 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::A2Rec1 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("A2Rec1", ::A2Rec1::Class_Version(), "./include/A2Rec1.h", 6,
                  typeid(::A2Rec1), ::ROOT::DefineBehavior(ptr, ptr),
                  &::A2Rec1::Dictionary, isa_proxy, 0,
                  sizeof(::A2Rec1) );
      instance.SetNew(&new_A2Rec1);
      instance.SetNewArray(&newArray_A2Rec1);
      instance.SetDelete(&delete_A2Rec1);
      instance.SetDeleteArray(&deleteArray_A2Rec1);
      instance.SetDestructor(&destruct_A2Rec1);
      instance.SetStreamerFunc(&streamer_A2Rec1);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::A2Rec1*)
   {
      return GenerateInitInstanceLocal((::A2Rec1*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::A2Rec1*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void A2Rec2_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_A2Rec2(void *p = 0);
   static void *newArray_A2Rec2(Long_t size, void *p);
   static void delete_A2Rec2(void *p);
   static void deleteArray_A2Rec2(void *p);
   static void destruct_A2Rec2(void *p);
   static void streamer_A2Rec2(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::A2Rec2*)
   {
      ::A2Rec2 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::A2Rec2 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("A2Rec2", ::A2Rec2::Class_Version(), "./include/A2Rec2.h", 13,
                  typeid(::A2Rec2), ::ROOT::DefineBehavior(ptr, ptr),
                  &::A2Rec2::Dictionary, isa_proxy, 0,
                  sizeof(::A2Rec2) );
      instance.SetNew(&new_A2Rec2);
      instance.SetNewArray(&newArray_A2Rec2);
      instance.SetDelete(&delete_A2Rec2);
      instance.SetDeleteArray(&deleteArray_A2Rec2);
      instance.SetDestructor(&destruct_A2Rec2);
      instance.SetStreamerFunc(&streamer_A2Rec2);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::A2Rec2*)
   {
      return GenerateInitInstanceLocal((::A2Rec2*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::A2Rec2*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void A2Rec3_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_A2Rec3(void *p = 0);
   static void *newArray_A2Rec3(Long_t size, void *p);
   static void delete_A2Rec3(void *p);
   static void deleteArray_A2Rec3(void *p);
   static void destruct_A2Rec3(void *p);
   static void streamer_A2Rec3(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::A2Rec3*)
   {
      ::A2Rec3 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::A2Rec3 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("A2Rec3", ::A2Rec3::Class_Version(), "./include/A2Rec3.h", 13,
                  typeid(::A2Rec3), ::ROOT::DefineBehavior(ptr, ptr),
                  &::A2Rec3::Dictionary, isa_proxy, 0,
                  sizeof(::A2Rec3) );
      instance.SetNew(&new_A2Rec3);
      instance.SetNewArray(&newArray_A2Rec3);
      instance.SetDelete(&delete_A2Rec3);
      instance.SetDeleteArray(&deleteArray_A2Rec3);
      instance.SetDestructor(&destruct_A2Rec3);
      instance.SetStreamerFunc(&streamer_A2Rec3);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::A2Rec3*)
   {
      return GenerateInitInstanceLocal((::A2Rec3*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::A2Rec3*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RHICfScl_Op2017_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RHICfScl_Op2017(void *p = 0);
   static void *newArray_RHICfScl_Op2017(Long_t size, void *p);
   static void delete_RHICfScl_Op2017(void *p);
   static void deleteArray_RHICfScl_Op2017(void *p);
   static void destruct_RHICfScl_Op2017(void *p);
   static void streamer_RHICfScl_Op2017(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RHICfScl_Op2017*)
   {
      ::RHICfScl_Op2017 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RHICfScl_Op2017 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RHICfScl_Op2017", ::RHICfScl_Op2017::Class_Version(), "./include/RHICfScl_Op2017.h", 11,
                  typeid(::RHICfScl_Op2017), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RHICfScl_Op2017::Dictionary, isa_proxy, 0,
                  sizeof(::RHICfScl_Op2017) );
      instance.SetNew(&new_RHICfScl_Op2017);
      instance.SetNewArray(&newArray_RHICfScl_Op2017);
      instance.SetDelete(&delete_RHICfScl_Op2017);
      instance.SetDeleteArray(&deleteArray_RHICfScl_Op2017);
      instance.SetDestructor(&destruct_RHICfScl_Op2017);
      instance.SetStreamerFunc(&streamer_RHICfScl_Op2017);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RHICfScl_Op2017*)
   {
      return GenerateInitInstanceLocal((::RHICfScl_Op2017*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RHICfScl_Op2017*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void A1Cal1AccumHist_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_A1Cal1AccumHist(void *p = 0);
   static void *newArray_A1Cal1AccumHist(Long_t size, void *p);
   static void delete_A1Cal1AccumHist(void *p);
   static void deleteArray_A1Cal1AccumHist(void *p);
   static void destruct_A1Cal1AccumHist(void *p);
   static void streamer_A1Cal1AccumHist(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::A1Cal1AccumHist*)
   {
      ::A1Cal1AccumHist *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::A1Cal1AccumHist >(0);
      static ::ROOT::TGenericClassInfo 
         instance("A1Cal1AccumHist", ::A1Cal1AccumHist::Class_Version(), "./include/A1Cal1AccumHist.h", 18,
                  typeid(::A1Cal1AccumHist), ::ROOT::DefineBehavior(ptr, ptr),
                  &::A1Cal1AccumHist::Dictionary, isa_proxy, 0,
                  sizeof(::A1Cal1AccumHist) );
      instance.SetNew(&new_A1Cal1AccumHist);
      instance.SetNewArray(&newArray_A1Cal1AccumHist);
      instance.SetDelete(&delete_A1Cal1AccumHist);
      instance.SetDeleteArray(&deleteArray_A1Cal1AccumHist);
      instance.SetDestructor(&destruct_A1Cal1AccumHist);
      instance.SetStreamerFunc(&streamer_A1Cal1AccumHist);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::A1Cal1AccumHist*)
   {
      return GenerateInitInstanceLocal((::A1Cal1AccumHist*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::A1Cal1AccumHist*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void A2Cal1AccumHist_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_A2Cal1AccumHist(void *p = 0);
   static void *newArray_A2Cal1AccumHist(Long_t size, void *p);
   static void delete_A2Cal1AccumHist(void *p);
   static void deleteArray_A2Cal1AccumHist(void *p);
   static void destruct_A2Cal1AccumHist(void *p);
   static void streamer_A2Cal1AccumHist(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::A2Cal1AccumHist*)
   {
      ::A2Cal1AccumHist *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::A2Cal1AccumHist >(0);
      static ::ROOT::TGenericClassInfo 
         instance("A2Cal1AccumHist", ::A2Cal1AccumHist::Class_Version(), "./include/A2Cal1AccumHist.h", 18,
                  typeid(::A2Cal1AccumHist), ::ROOT::DefineBehavior(ptr, ptr),
                  &::A2Cal1AccumHist::Dictionary, isa_proxy, 0,
                  sizeof(::A2Cal1AccumHist) );
      instance.SetNew(&new_A2Cal1AccumHist);
      instance.SetNewArray(&newArray_A2Cal1AccumHist);
      instance.SetDelete(&delete_A2Cal1AccumHist);
      instance.SetDeleteArray(&deleteArray_A2Cal1AccumHist);
      instance.SetDestructor(&destruct_A2Cal1AccumHist);
      instance.SetStreamerFunc(&streamer_A2Cal1AccumHist);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::A2Cal1AccumHist*)
   {
      return GenerateInitInstanceLocal((::A2Cal1AccumHist*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::A2Cal1AccumHist*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void A1Cal2AccumHist_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_A1Cal2AccumHist(void *p = 0);
   static void *newArray_A1Cal2AccumHist(Long_t size, void *p);
   static void delete_A1Cal2AccumHist(void *p);
   static void deleteArray_A1Cal2AccumHist(void *p);
   static void destruct_A1Cal2AccumHist(void *p);
   static void streamer_A1Cal2AccumHist(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::A1Cal2AccumHist*)
   {
      ::A1Cal2AccumHist *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::A1Cal2AccumHist >(0);
      static ::ROOT::TGenericClassInfo 
         instance("A1Cal2AccumHist", ::A1Cal2AccumHist::Class_Version(), "./include/A1Cal2AccumHist.h", 17,
                  typeid(::A1Cal2AccumHist), ::ROOT::DefineBehavior(ptr, ptr),
                  &::A1Cal2AccumHist::Dictionary, isa_proxy, 0,
                  sizeof(::A1Cal2AccumHist) );
      instance.SetNew(&new_A1Cal2AccumHist);
      instance.SetNewArray(&newArray_A1Cal2AccumHist);
      instance.SetDelete(&delete_A1Cal2AccumHist);
      instance.SetDeleteArray(&deleteArray_A1Cal2AccumHist);
      instance.SetDestructor(&destruct_A1Cal2AccumHist);
      instance.SetStreamerFunc(&streamer_A1Cal2AccumHist);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::A1Cal2AccumHist*)
   {
      return GenerateInitInstanceLocal((::A1Cal2AccumHist*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::A1Cal2AccumHist*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void A2Cal2AccumHist_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_A2Cal2AccumHist(void *p = 0);
   static void *newArray_A2Cal2AccumHist(Long_t size, void *p);
   static void delete_A2Cal2AccumHist(void *p);
   static void deleteArray_A2Cal2AccumHist(void *p);
   static void destruct_A2Cal2AccumHist(void *p);
   static void streamer_A2Cal2AccumHist(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::A2Cal2AccumHist*)
   {
      ::A2Cal2AccumHist *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::A2Cal2AccumHist >(0);
      static ::ROOT::TGenericClassInfo 
         instance("A2Cal2AccumHist", ::A2Cal2AccumHist::Class_Version(), "./include/A2Cal2AccumHist.h", 16,
                  typeid(::A2Cal2AccumHist), ::ROOT::DefineBehavior(ptr, ptr),
                  &::A2Cal2AccumHist::Dictionary, isa_proxy, 0,
                  sizeof(::A2Cal2AccumHist) );
      instance.SetNew(&new_A2Cal2AccumHist);
      instance.SetNewArray(&newArray_A2Cal2AccumHist);
      instance.SetDelete(&delete_A2Cal2AccumHist);
      instance.SetDeleteArray(&deleteArray_A2Cal2AccumHist);
      instance.SetDestructor(&destruct_A2Cal2AccumHist);
      instance.SetStreamerFunc(&streamer_A2Cal2AccumHist);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::A2Cal2AccumHist*)
   {
      return GenerateInitInstanceLocal((::A2Cal2AccumHist*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::A2Cal2AccumHist*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void A1PhysAccumHist_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_A1PhysAccumHist(void *p = 0);
   static void *newArray_A1PhysAccumHist(Long_t size, void *p);
   static void delete_A1PhysAccumHist(void *p);
   static void deleteArray_A1PhysAccumHist(void *p);
   static void destruct_A1PhysAccumHist(void *p);
   static void streamer_A1PhysAccumHist(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::A1PhysAccumHist*)
   {
      ::A1PhysAccumHist *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::A1PhysAccumHist >(0);
      static ::ROOT::TGenericClassInfo 
         instance("A1PhysAccumHist", ::A1PhysAccumHist::Class_Version(), "./include/A1PhysAccumHist.h", 17,
                  typeid(::A1PhysAccumHist), ::ROOT::DefineBehavior(ptr, ptr),
                  &::A1PhysAccumHist::Dictionary, isa_proxy, 0,
                  sizeof(::A1PhysAccumHist) );
      instance.SetNew(&new_A1PhysAccumHist);
      instance.SetNewArray(&newArray_A1PhysAccumHist);
      instance.SetDelete(&delete_A1PhysAccumHist);
      instance.SetDeleteArray(&deleteArray_A1PhysAccumHist);
      instance.SetDestructor(&destruct_A1PhysAccumHist);
      instance.SetStreamerFunc(&streamer_A1PhysAccumHist);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::A1PhysAccumHist*)
   {
      return GenerateInitInstanceLocal((::A1PhysAccumHist*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::A1PhysAccumHist*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void A2PhysAccumHist_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_A2PhysAccumHist(void *p = 0);
   static void *newArray_A2PhysAccumHist(Long_t size, void *p);
   static void delete_A2PhysAccumHist(void *p);
   static void deleteArray_A2PhysAccumHist(void *p);
   static void destruct_A2PhysAccumHist(void *p);
   static void streamer_A2PhysAccumHist(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::A2PhysAccumHist*)
   {
      ::A2PhysAccumHist *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::A2PhysAccumHist >(0);
      static ::ROOT::TGenericClassInfo 
         instance("A2PhysAccumHist", ::A2PhysAccumHist::Class_Version(), "./include/A2PhysAccumHist.h", 17,
                  typeid(::A2PhysAccumHist), ::ROOT::DefineBehavior(ptr, ptr),
                  &::A2PhysAccumHist::Dictionary, isa_proxy, 0,
                  sizeof(::A2PhysAccumHist) );
      instance.SetNew(&new_A2PhysAccumHist);
      instance.SetNewArray(&newArray_A2PhysAccumHist);
      instance.SetDelete(&delete_A2PhysAccumHist);
      instance.SetDeleteArray(&deleteArray_A2PhysAccumHist);
      instance.SetDestructor(&destruct_A2PhysAccumHist);
      instance.SetStreamerFunc(&streamer_A2PhysAccumHist);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::A2PhysAccumHist*)
   {
      return GenerateInitInstanceLocal((::A2PhysAccumHist*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::A2PhysAccumHist*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void A1CountArray_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_A1CountArray(void *p = 0);
   static void *newArray_A1CountArray(Long_t size, void *p);
   static void delete_A1CountArray(void *p);
   static void deleteArray_A1CountArray(void *p);
   static void destruct_A1CountArray(void *p);
   static void streamer_A1CountArray(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::A1CountArray*)
   {
      ::A1CountArray *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::A1CountArray >(0);
      static ::ROOT::TGenericClassInfo 
         instance("A1CountArray", ::A1CountArray::Class_Version(), "./include/A1CountArray.h", 16,
                  typeid(::A1CountArray), ::ROOT::DefineBehavior(ptr, ptr),
                  &::A1CountArray::Dictionary, isa_proxy, 0,
                  sizeof(::A1CountArray) );
      instance.SetNew(&new_A1CountArray);
      instance.SetNewArray(&newArray_A1CountArray);
      instance.SetDelete(&delete_A1CountArray);
      instance.SetDeleteArray(&deleteArray_A1CountArray);
      instance.SetDestructor(&destruct_A1CountArray);
      instance.SetStreamerFunc(&streamer_A1CountArray);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::A1CountArray*)
   {
      return GenerateInitInstanceLocal((::A1CountArray*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::A1CountArray*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void A2CountArray_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_A2CountArray(void *p = 0);
   static void *newArray_A2CountArray(Long_t size, void *p);
   static void delete_A2CountArray(void *p);
   static void deleteArray_A2CountArray(void *p);
   static void destruct_A2CountArray(void *p);
   static void streamer_A2CountArray(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::A2CountArray*)
   {
      ::A2CountArray *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::A2CountArray >(0);
      static ::ROOT::TGenericClassInfo 
         instance("A2CountArray", ::A2CountArray::Class_Version(), "./include/A2CountArray.h", 16,
                  typeid(::A2CountArray), ::ROOT::DefineBehavior(ptr, ptr),
                  &::A2CountArray::Dictionary, isa_proxy, 0,
                  sizeof(::A2CountArray) );
      instance.SetNew(&new_A2CountArray);
      instance.SetNewArray(&newArray_A2CountArray);
      instance.SetDelete(&delete_A2CountArray);
      instance.SetDeleteArray(&deleteArray_A2CountArray);
      instance.SetDestructor(&destruct_A2CountArray);
      instance.SetStreamerFunc(&streamer_A2CountArray);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::A2CountArray*)
   {
      return GenerateInitInstanceLocal((::A2CountArray*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::A2CountArray*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void A1CalEventHist_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_A1CalEventHist(void *p = 0);
   static void *newArray_A1CalEventHist(Long_t size, void *p);
   static void delete_A1CalEventHist(void *p);
   static void deleteArray_A1CalEventHist(void *p);
   static void destruct_A1CalEventHist(void *p);
   static void streamer_A1CalEventHist(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::A1CalEventHist*)
   {
      ::A1CalEventHist *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::A1CalEventHist >(0);
      static ::ROOT::TGenericClassInfo 
         instance("A1CalEventHist", ::A1CalEventHist::Class_Version(), "./include/A1CalEventHist.h", 15,
                  typeid(::A1CalEventHist), ::ROOT::DefineBehavior(ptr, ptr),
                  &::A1CalEventHist::Dictionary, isa_proxy, 0,
                  sizeof(::A1CalEventHist) );
      instance.SetNew(&new_A1CalEventHist);
      instance.SetNewArray(&newArray_A1CalEventHist);
      instance.SetDelete(&delete_A1CalEventHist);
      instance.SetDeleteArray(&deleteArray_A1CalEventHist);
      instance.SetDestructor(&destruct_A1CalEventHist);
      instance.SetStreamerFunc(&streamer_A1CalEventHist);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::A1CalEventHist*)
   {
      return GenerateInitInstanceLocal((::A1CalEventHist*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::A1CalEventHist*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void A2CalEventHist_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_A2CalEventHist(void *p = 0);
   static void *newArray_A2CalEventHist(Long_t size, void *p);
   static void delete_A2CalEventHist(void *p);
   static void deleteArray_A2CalEventHist(void *p);
   static void destruct_A2CalEventHist(void *p);
   static void streamer_A2CalEventHist(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::A2CalEventHist*)
   {
      ::A2CalEventHist *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::A2CalEventHist >(0);
      static ::ROOT::TGenericClassInfo 
         instance("A2CalEventHist", ::A2CalEventHist::Class_Version(), "./include/A2CalEventHist.h", 15,
                  typeid(::A2CalEventHist), ::ROOT::DefineBehavior(ptr, ptr),
                  &::A2CalEventHist::Dictionary, isa_proxy, 0,
                  sizeof(::A2CalEventHist) );
      instance.SetNew(&new_A2CalEventHist);
      instance.SetNewArray(&newArray_A2CalEventHist);
      instance.SetDelete(&delete_A2CalEventHist);
      instance.SetDeleteArray(&deleteArray_A2CalEventHist);
      instance.SetDestructor(&destruct_A2CalEventHist);
      instance.SetStreamerFunc(&streamer_A2CalEventHist);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::A2CalEventHist*)
   {
      return GenerateInitInstanceLocal((::A2CalEventHist*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::A2CalEventHist*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void SimP_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_SimP(void *p = 0);
   static void *newArray_SimP(Long_t size, void *p);
   static void delete_SimP(void *p);
   static void deleteArray_SimP(void *p);
   static void destruct_SimP(void *p);
   static void streamer_SimP(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SimP*)
   {
      ::SimP *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SimP >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SimP", ::SimP::Class_Version(), "./include/SimP.h", 7,
                  typeid(::SimP), ::ROOT::DefineBehavior(ptr, ptr),
                  &::SimP::Dictionary, isa_proxy, 0,
                  sizeof(::SimP) );
      instance.SetNew(&new_SimP);
      instance.SetNewArray(&newArray_SimP);
      instance.SetDelete(&delete_SimP);
      instance.SetDeleteArray(&deleteArray_SimP);
      instance.SetDestructor(&destruct_SimP);
      instance.SetStreamerFunc(&streamer_SimP);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SimP*)
   {
      return GenerateInitInstanceLocal((::SimP*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SimP*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void SimIncidents_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_SimIncidents(void *p = 0);
   static void *newArray_SimIncidents(Long_t size, void *p);
   static void delete_SimIncidents(void *p);
   static void deleteArray_SimIncidents(void *p);
   static void destruct_SimIncidents(void *p);
   static void streamer_SimIncidents(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SimIncidents*)
   {
      ::SimIncidents *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SimIncidents >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SimIncidents", ::SimIncidents::Class_Version(), "./include/SimIncidents.h", 9,
                  typeid(::SimIncidents), ::ROOT::DefineBehavior(ptr, ptr),
                  &::SimIncidents::Dictionary, isa_proxy, 0,
                  sizeof(::SimIncidents) );
      instance.SetNew(&new_SimIncidents);
      instance.SetNewArray(&newArray_SimIncidents);
      instance.SetDelete(&delete_SimIncidents);
      instance.SetDeleteArray(&deleteArray_SimIncidents);
      instance.SetDestructor(&destruct_SimIncidents);
      instance.SetStreamerFunc(&streamer_SimIncidents);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SimIncidents*)
   {
      return GenerateInitInstanceLocal((::SimIncidents*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SimIncidents*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void SPSAdamoRec0_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_SPSAdamoRec0(void *p = 0);
   static void *newArray_SPSAdamoRec0(Long_t size, void *p);
   static void delete_SPSAdamoRec0(void *p);
   static void deleteArray_SPSAdamoRec0(void *p);
   static void destruct_SPSAdamoRec0(void *p);
   static void streamer_SPSAdamoRec0(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SPSAdamoRec0*)
   {
      ::SPSAdamoRec0 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SPSAdamoRec0 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SPSAdamoRec0", ::SPSAdamoRec0::Class_Version(), "./include/SPSAdamoRec0.h", 13,
                  typeid(::SPSAdamoRec0), ::ROOT::DefineBehavior(ptr, ptr),
                  &::SPSAdamoRec0::Dictionary, isa_proxy, 0,
                  sizeof(::SPSAdamoRec0) );
      instance.SetNew(&new_SPSAdamoRec0);
      instance.SetNewArray(&newArray_SPSAdamoRec0);
      instance.SetDelete(&delete_SPSAdamoRec0);
      instance.SetDeleteArray(&deleteArray_SPSAdamoRec0);
      instance.SetDestructor(&destruct_SPSAdamoRec0);
      instance.SetStreamerFunc(&streamer_SPSAdamoRec0);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SPSAdamoRec0*)
   {
      return GenerateInitInstanceLocal((::SPSAdamoRec0*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SPSAdamoRec0*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void SPSAdamoHist_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_SPSAdamoHist(void *p = 0);
   static void *newArray_SPSAdamoHist(Long_t size, void *p);
   static void delete_SPSAdamoHist(void *p);
   static void deleteArray_SPSAdamoHist(void *p);
   static void destruct_SPSAdamoHist(void *p);
   static void streamer_SPSAdamoHist(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::SPSAdamoHist*)
   {
      ::SPSAdamoHist *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SPSAdamoHist >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SPSAdamoHist", ::SPSAdamoHist::Class_Version(), "./include/SPSAdamoHist.h", 12,
                  typeid(::SPSAdamoHist), ::ROOT::DefineBehavior(ptr, ptr),
                  &::SPSAdamoHist::Dictionary, isa_proxy, 0,
                  sizeof(::SPSAdamoHist) );
      instance.SetNew(&new_SPSAdamoHist);
      instance.SetNewArray(&newArray_SPSAdamoHist);
      instance.SetDelete(&delete_SPSAdamoHist);
      instance.SetDeleteArray(&deleteArray_SPSAdamoHist);
      instance.SetDestructor(&destruct_SPSAdamoHist);
      instance.SetStreamerFunc(&streamer_SPSAdamoHist);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::SPSAdamoHist*)
   {
      return GenerateInitInstanceLocal((::SPSAdamoHist*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SPSAdamoHist*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr A1Raw::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *A1Raw::Class_Name()
{
   return "A1Raw";
}

//______________________________________________________________________________
const char *A1Raw::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A1Raw*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int A1Raw::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A1Raw*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void A1Raw::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A1Raw*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *A1Raw::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A1Raw*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr A1Cal1::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *A1Cal1::Class_Name()
{
   return "A1Cal1";
}

//______________________________________________________________________________
const char *A1Cal1::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A1Cal1*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int A1Cal1::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A1Cal1*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void A1Cal1::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A1Cal1*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *A1Cal1::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A1Cal1*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr A1Cal2::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *A1Cal2::Class_Name()
{
   return "A1Cal2";
}

//______________________________________________________________________________
const char *A1Cal2::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A1Cal2*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int A1Cal2::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A1Cal2*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void A1Cal2::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A1Cal2*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *A1Cal2::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A1Cal2*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr A1Phys::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *A1Phys::Class_Name()
{
   return "A1Phys";
}

//______________________________________________________________________________
const char *A1Phys::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A1Phys*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int A1Phys::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A1Phys*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void A1Phys::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A1Phys*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *A1Phys::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A1Phys*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr A1Info::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *A1Info::Class_Name()
{
   return "A1Info";
}

//______________________________________________________________________________
const char *A1Info::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A1Info*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int A1Info::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A1Info*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void A1Info::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A1Info*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *A1Info::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A1Info*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr A1Scl::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *A1Scl::Class_Name()
{
   return "A1Scl";
}

//______________________________________________________________________________
const char *A1Scl::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A1Scl*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int A1Scl::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A1Scl*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void A1Scl::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A1Scl*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *A1Scl::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A1Scl*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr A2Raw::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *A2Raw::Class_Name()
{
   return "A2Raw";
}

//______________________________________________________________________________
const char *A2Raw::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A2Raw*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int A2Raw::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A2Raw*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void A2Raw::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A2Raw*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *A2Raw::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A2Raw*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr A2Cal2::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *A2Cal2::Class_Name()
{
   return "A2Cal2";
}

//______________________________________________________________________________
const char *A2Cal2::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A2Cal2*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int A2Cal2::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A2Cal2*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void A2Cal2::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A2Cal2*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *A2Cal2::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A2Cal2*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr A2Cal1::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *A2Cal1::Class_Name()
{
   return "A2Cal1";
}

//______________________________________________________________________________
const char *A2Cal1::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A2Cal1*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int A2Cal1::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A2Cal1*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void A2Cal1::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A2Cal1*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *A2Cal1::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A2Cal1*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr A2Phys::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *A2Phys::Class_Name()
{
   return "A2Phys";
}

//______________________________________________________________________________
const char *A2Phys::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A2Phys*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int A2Phys::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A2Phys*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void A2Phys::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A2Phys*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *A2Phys::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A2Phys*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Rec0::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Rec0::Class_Name()
{
   return "Rec0";
}

//______________________________________________________________________________
const char *Rec0::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Rec0*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Rec0::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Rec0*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Rec0::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Rec0*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Rec0::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Rec0*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr A2Cal2M::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *A2Cal2M::Class_Name()
{
   return "A2Cal2M";
}

//______________________________________________________________________________
const char *A2Cal2M::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A2Cal2M*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int A2Cal2M::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A2Cal2M*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void A2Cal2M::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A2Cal2M*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *A2Cal2M::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A2Cal2M*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr A2Info::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *A2Info::Class_Name()
{
   return "A2Info";
}

//______________________________________________________________________________
const char *A2Info::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A2Info*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int A2Info::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A2Info*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void A2Info::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A2Info*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *A2Info::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A2Info*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr A2Scl::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *A2Scl::Class_Name()
{
   return "A2Scl";
}

//______________________________________________________________________________
const char *A2Scl::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A2Scl*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int A2Scl::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A2Scl*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void A2Scl::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A2Scl*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *A2Scl::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A2Scl*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr RawL1T::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RawL1T::Class_Name()
{
   return "RawL1T";
}

//______________________________________________________________________________
const char *RawL1T::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RawL1T*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RawL1T::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RawL1T*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RawL1T::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RawL1T*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RawL1T::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RawL1T*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr SclL1T::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *SclL1T::Class_Name()
{
   return "SclL1T";
}

//______________________________________________________________________________
const char *SclL1T::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SclL1T*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SclL1T::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SclL1T*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SclL1T::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SclL1T*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SclL1T::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SclL1T*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr GParam::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *GParam::Class_Name()
{
   return "GParam";
}

//______________________________________________________________________________
const char *GParam::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::GParam*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int GParam::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::GParam*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void GParam::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::GParam*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *GParam::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::GParam*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr GParamD64::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *GParamD64::Class_Name()
{
   return "GParamD64";
}

//______________________________________________________________________________
const char *GParamD64::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::GParamD64*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int GParamD64::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::GParamD64*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void GParamD64::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::GParamD64*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *GParamD64::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::GParamD64*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr SPSAdamo::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *SPSAdamo::Class_Name()
{
   return "SPSAdamo";
}

//______________________________________________________________________________
const char *SPSAdamo::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SPSAdamo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SPSAdamo::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SPSAdamo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SPSAdamo::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SPSAdamo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SPSAdamo::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SPSAdamo*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr RHICfSinglePar::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RHICfSinglePar::Class_Name()
{
   return "RHICfSinglePar";
}

//______________________________________________________________________________
const char *RHICfSinglePar::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfSinglePar*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RHICfSinglePar::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfSinglePar*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RHICfSinglePar::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfSinglePar*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RHICfSinglePar::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfSinglePar*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr RHICfPhotonPair::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RHICfPhotonPair::Class_Name()
{
   return "RHICfPhotonPair";
}

//______________________________________________________________________________
const char *RHICfPhotonPair::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfPhotonPair*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RHICfPhotonPair::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfPhotonPair*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RHICfPhotonPair::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfPhotonPair*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RHICfPhotonPair::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfPhotonPair*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr A1Rec1::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *A1Rec1::Class_Name()
{
   return "A1Rec1";
}

//______________________________________________________________________________
const char *A1Rec1::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A1Rec1*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int A1Rec1::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A1Rec1*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void A1Rec1::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A1Rec1*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *A1Rec1::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A1Rec1*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr RHICfCollection::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RHICfCollection::Class_Name()
{
   return "RHICfCollection";
}

//______________________________________________________________________________
const char *RHICfCollection::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfCollection*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RHICfCollection::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfCollection*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RHICfCollection::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfCollection*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RHICfCollection::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfCollection*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr A1Raw_pp2015::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *A1Raw_pp2015::Class_Name()
{
   return "A1Raw_pp2015";
}

//______________________________________________________________________________
const char *A1Raw_pp2015::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A1Raw_pp2015*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int A1Raw_pp2015::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A1Raw_pp2015*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void A1Raw_pp2015::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A1Raw_pp2015*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *A1Raw_pp2015::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A1Raw_pp2015*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr A2Raw_pp2015::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *A2Raw_pp2015::Class_Name()
{
   return "A2Raw_pp2015";
}

//______________________________________________________________________________
const char *A2Raw_pp2015::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A2Raw_pp2015*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int A2Raw_pp2015::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A2Raw_pp2015*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void A2Raw_pp2015::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A2Raw_pp2015*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *A2Raw_pp2015::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A2Raw_pp2015*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr A1Scl_pp2015::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *A1Scl_pp2015::Class_Name()
{
   return "A1Scl_pp2015";
}

//______________________________________________________________________________
const char *A1Scl_pp2015::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A1Scl_pp2015*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int A1Scl_pp2015::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A1Scl_pp2015*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void A1Scl_pp2015::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A1Scl_pp2015*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *A1Scl_pp2015::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A1Scl_pp2015*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr A2Scl_pp2015::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *A2Scl_pp2015::Class_Name()
{
   return "A2Scl_pp2015";
}

//______________________________________________________________________________
const char *A2Scl_pp2015::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A2Scl_pp2015*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int A2Scl_pp2015::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A2Scl_pp2015*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void A2Scl_pp2015::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A2Scl_pp2015*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *A2Scl_pp2015::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A2Scl_pp2015*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr A2Raw_pPb2013::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *A2Raw_pPb2013::Class_Name()
{
   return "A2Raw_pPb2013";
}

//______________________________________________________________________________
const char *A2Raw_pPb2013::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A2Raw_pPb2013*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int A2Raw_pPb2013::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A2Raw_pPb2013*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void A2Raw_pPb2013::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A2Raw_pPb2013*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *A2Raw_pPb2013::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A2Raw_pPb2013*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr A2Raw_pPb2016::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *A2Raw_pPb2016::Class_Name()
{
   return "A2Raw_pPb2016";
}

//______________________________________________________________________________
const char *A2Raw_pPb2016::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A2Raw_pPb2016*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int A2Raw_pPb2016::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A2Raw_pPb2016*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void A2Raw_pPb2016::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A2Raw_pPb2016*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *A2Raw_pPb2016::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A2Raw_pPb2016*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr RHICfRaw_Op2017::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RHICfRaw_Op2017::Class_Name()
{
   return "RHICfRaw_Op2017";
}

//______________________________________________________________________________
const char *RHICfRaw_Op2017::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfRaw_Op2017*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RHICfRaw_Op2017::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfRaw_Op2017*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RHICfRaw_Op2017::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfRaw_Op2017*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RHICfRaw_Op2017::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfRaw_Op2017*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr LHCfEvent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *LHCfEvent::Class_Name()
{
   return "LHCfEvent";
}

//______________________________________________________________________________
const char *LHCfEvent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::LHCfEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int LHCfEvent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::LHCfEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void LHCfEvent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::LHCfEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *LHCfEvent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::LHCfEvent*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr A1Cal2M::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *A1Cal2M::Class_Name()
{
   return "A1Cal2M";
}

//______________________________________________________________________________
const char *A1Cal2M::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A1Cal2M*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int A1Cal2M::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A1Cal2M*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void A1Cal2M::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A1Cal2M*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *A1Cal2M::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A1Cal2M*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr A1Rec2::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *A1Rec2::Class_Name()
{
   return "A1Rec2";
}

//______________________________________________________________________________
const char *A1Rec2::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A1Rec2*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int A1Rec2::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A1Rec2*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void A1Rec2::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A1Rec2*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *A1Rec2::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A1Rec2*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr A2Rec1::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *A2Rec1::Class_Name()
{
   return "A2Rec1";
}

//______________________________________________________________________________
const char *A2Rec1::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A2Rec1*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int A2Rec1::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A2Rec1*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void A2Rec1::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A2Rec1*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *A2Rec1::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A2Rec1*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr A2Rec2::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *A2Rec2::Class_Name()
{
   return "A2Rec2";
}

//______________________________________________________________________________
const char *A2Rec2::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A2Rec2*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int A2Rec2::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A2Rec2*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void A2Rec2::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A2Rec2*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *A2Rec2::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A2Rec2*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr A2Rec3::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *A2Rec3::Class_Name()
{
   return "A2Rec3";
}

//______________________________________________________________________________
const char *A2Rec3::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A2Rec3*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int A2Rec3::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A2Rec3*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void A2Rec3::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A2Rec3*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *A2Rec3::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A2Rec3*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr RHICfScl_Op2017::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RHICfScl_Op2017::Class_Name()
{
   return "RHICfScl_Op2017";
}

//______________________________________________________________________________
const char *RHICfScl_Op2017::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfScl_Op2017*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RHICfScl_Op2017::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfScl_Op2017*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RHICfScl_Op2017::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfScl_Op2017*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RHICfScl_Op2017::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfScl_Op2017*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr A1Cal1AccumHist::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *A1Cal1AccumHist::Class_Name()
{
   return "A1Cal1AccumHist";
}

//______________________________________________________________________________
const char *A1Cal1AccumHist::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A1Cal1AccumHist*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int A1Cal1AccumHist::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A1Cal1AccumHist*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void A1Cal1AccumHist::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A1Cal1AccumHist*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *A1Cal1AccumHist::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A1Cal1AccumHist*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr A2Cal1AccumHist::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *A2Cal1AccumHist::Class_Name()
{
   return "A2Cal1AccumHist";
}

//______________________________________________________________________________
const char *A2Cal1AccumHist::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A2Cal1AccumHist*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int A2Cal1AccumHist::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A2Cal1AccumHist*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void A2Cal1AccumHist::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A2Cal1AccumHist*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *A2Cal1AccumHist::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A2Cal1AccumHist*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr A1Cal2AccumHist::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *A1Cal2AccumHist::Class_Name()
{
   return "A1Cal2AccumHist";
}

//______________________________________________________________________________
const char *A1Cal2AccumHist::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A1Cal2AccumHist*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int A1Cal2AccumHist::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A1Cal2AccumHist*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void A1Cal2AccumHist::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A1Cal2AccumHist*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *A1Cal2AccumHist::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A1Cal2AccumHist*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr A2Cal2AccumHist::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *A2Cal2AccumHist::Class_Name()
{
   return "A2Cal2AccumHist";
}

//______________________________________________________________________________
const char *A2Cal2AccumHist::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A2Cal2AccumHist*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int A2Cal2AccumHist::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A2Cal2AccumHist*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void A2Cal2AccumHist::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A2Cal2AccumHist*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *A2Cal2AccumHist::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A2Cal2AccumHist*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr A1PhysAccumHist::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *A1PhysAccumHist::Class_Name()
{
   return "A1PhysAccumHist";
}

//______________________________________________________________________________
const char *A1PhysAccumHist::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A1PhysAccumHist*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int A1PhysAccumHist::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A1PhysAccumHist*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void A1PhysAccumHist::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A1PhysAccumHist*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *A1PhysAccumHist::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A1PhysAccumHist*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr A2PhysAccumHist::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *A2PhysAccumHist::Class_Name()
{
   return "A2PhysAccumHist";
}

//______________________________________________________________________________
const char *A2PhysAccumHist::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A2PhysAccumHist*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int A2PhysAccumHist::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A2PhysAccumHist*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void A2PhysAccumHist::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A2PhysAccumHist*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *A2PhysAccumHist::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A2PhysAccumHist*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr A1CountArray::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *A1CountArray::Class_Name()
{
   return "A1CountArray";
}

//______________________________________________________________________________
const char *A1CountArray::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A1CountArray*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int A1CountArray::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A1CountArray*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void A1CountArray::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A1CountArray*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *A1CountArray::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A1CountArray*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr A2CountArray::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *A2CountArray::Class_Name()
{
   return "A2CountArray";
}

//______________________________________________________________________________
const char *A2CountArray::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A2CountArray*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int A2CountArray::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A2CountArray*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void A2CountArray::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A2CountArray*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *A2CountArray::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A2CountArray*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr A1CalEventHist::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *A1CalEventHist::Class_Name()
{
   return "A1CalEventHist";
}

//______________________________________________________________________________
const char *A1CalEventHist::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A1CalEventHist*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int A1CalEventHist::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A1CalEventHist*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void A1CalEventHist::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A1CalEventHist*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *A1CalEventHist::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A1CalEventHist*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr A2CalEventHist::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *A2CalEventHist::Class_Name()
{
   return "A2CalEventHist";
}

//______________________________________________________________________________
const char *A2CalEventHist::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A2CalEventHist*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int A2CalEventHist::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::A2CalEventHist*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void A2CalEventHist::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A2CalEventHist*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *A2CalEventHist::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::A2CalEventHist*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr SimP::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *SimP::Class_Name()
{
   return "SimP";
}

//______________________________________________________________________________
const char *SimP::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SimP*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SimP::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SimP*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SimP::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SimP*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SimP::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SimP*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr SimIncidents::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *SimIncidents::Class_Name()
{
   return "SimIncidents";
}

//______________________________________________________________________________
const char *SimIncidents::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SimIncidents*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SimIncidents::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SimIncidents*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SimIncidents::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SimIncidents*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SimIncidents::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SimIncidents*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr SPSAdamoRec0::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *SPSAdamoRec0::Class_Name()
{
   return "SPSAdamoRec0";
}

//______________________________________________________________________________
const char *SPSAdamoRec0::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SPSAdamoRec0*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SPSAdamoRec0::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SPSAdamoRec0*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SPSAdamoRec0::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SPSAdamoRec0*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SPSAdamoRec0::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SPSAdamoRec0*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr SPSAdamoHist::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *SPSAdamoHist::Class_Name()
{
   return "SPSAdamoHist";
}

//______________________________________________________________________________
const char *SPSAdamoHist::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SPSAdamoHist*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SPSAdamoHist::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::SPSAdamoHist*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SPSAdamoHist::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SPSAdamoHist*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SPSAdamoHist::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::SPSAdamoHist*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void LHCfEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class LHCfEvent.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> run;
      R__b >> gnumber;
      R__b >> a1number;
      R__b >> a2number;
      R__b.ReadStaticArray((unsigned int*)a1flag);
      R__b.ReadStaticArray((unsigned int*)a2flag);
      R__b >> ifile;
      R__b >> tnumber;
      R__b >> tag;
      R__b >> tmp;
      objarray.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, LHCfEvent::IsA());
   } else {
      R__c = R__b.WriteVersion(LHCfEvent::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << run;
      R__b << gnumber;
      R__b << a1number;
      R__b << a2number;
      R__b.WriteArray(a1flag, 2);
      R__b.WriteArray(a2flag, 2);
      R__b << ifile;
      R__b << tnumber;
      R__b << tag;
      R__b << tmp;
      objarray.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void LHCfEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class LHCfEvent.
      TClass *R__cl = ::LHCfEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gnumber", &gnumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1number", &a1number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a2number", &a2number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1flag[2]", a1flag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a2flag[2]", a2flag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ifile", &ifile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tnumber", &tnumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tag", &tag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tmp", &tmp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "objarray", &objarray);
      R__insp.InspectMember(objarray, "objarray.");
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_LHCfEvent(void *p) {
      return  p ? new(p) ::LHCfEvent : new ::LHCfEvent;
   }
   static void *newArray_LHCfEvent(Long_t nElements, void *p) {
      return p ? new(p) ::LHCfEvent[nElements] : new ::LHCfEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_LHCfEvent(void *p) {
      delete ((::LHCfEvent*)p);
   }
   static void deleteArray_LHCfEvent(void *p) {
      delete [] ((::LHCfEvent*)p);
   }
   static void destruct_LHCfEvent(void *p) {
      typedef ::LHCfEvent current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_LHCfEvent(TBuffer &buf, void *obj) {
      ((::LHCfEvent*)obj)->::LHCfEvent::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::LHCfEvent

//______________________________________________________________________________
void RawL1T::Streamer(TBuffer &R__b)
{
   // Stream an object of class RawL1T.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> run;
      R__b >> number;
      R__b >> gnumber;
      R__b.ReadStaticArray((unsigned int*)time);
      R__b.ReadStaticArray((unsigned int*)gpio2);
      R__b.CheckByteCount(R__s, R__c, RawL1T::IsA());
   } else {
      R__c = R__b.WriteVersion(RawL1T::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << run;
      R__b << number;
      R__b << gnumber;
      R__b.WriteArray(time, 2);
      R__b.WriteArray(gpio2, 14);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RawL1T::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RawL1T.
      TClass *R__cl = ::RawL1T::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "number", &number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gnumber", &gnumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time[2]", time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gpio2[14]", gpio2);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RawL1T(void *p) {
      return  p ? new(p) ::RawL1T : new ::RawL1T;
   }
   static void *newArray_RawL1T(Long_t nElements, void *p) {
      return p ? new(p) ::RawL1T[nElements] : new ::RawL1T[nElements];
   }
   // Wrapper around operator delete
   static void delete_RawL1T(void *p) {
      delete ((::RawL1T*)p);
   }
   static void deleteArray_RawL1T(void *p) {
      delete [] ((::RawL1T*)p);
   }
   static void destruct_RawL1T(void *p) {
      typedef ::RawL1T current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RawL1T(TBuffer &buf, void *obj) {
      ((::RawL1T*)obj)->::RawL1T::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::RawL1T

//______________________________________________________________________________
void SclL1T::Streamer(TBuffer &R__b)
{
   // Stream an object of class SclL1T.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> run;
      R__b >> number;
      R__b.ReadStaticArray((unsigned int*)time);
      R__b.ReadStaticArray((unsigned int*)bcounters);
      R__b.CheckByteCount(R__s, R__c, SclL1T::IsA());
   } else {
      R__c = R__b.WriteVersion(SclL1T::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << run;
      R__b << number;
      R__b.WriteArray(time, 1);
      R__b.WriteArray(bcounters, 20);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void SclL1T::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class SclL1T.
      TClass *R__cl = ::SclL1T::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "number", &number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time[1]", time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bcounters[20]", bcounters);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_SclL1T(void *p) {
      return  p ? new(p) ::SclL1T : new ::SclL1T;
   }
   static void *newArray_SclL1T(Long_t nElements, void *p) {
      return p ? new(p) ::SclL1T[nElements] : new ::SclL1T[nElements];
   }
   // Wrapper around operator delete
   static void delete_SclL1T(void *p) {
      delete ((::SclL1T*)p);
   }
   static void deleteArray_SclL1T(void *p) {
      delete [] ((::SclL1T*)p);
   }
   static void destruct_SclL1T(void *p) {
      typedef ::SclL1T current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_SclL1T(TBuffer &buf, void *obj) {
      ((::SclL1T*)obj)->::SclL1T::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::SclL1T

//______________________________________________________________________________
void Rec0::Streamer(TBuffer &R__b)
{
   // Stream an object of class Rec0.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> run;
      R__b >> number;
      R__b >> gnumber;
      R__b.ReadStaticArray((double*)time);
      R__b >> format;
      {
         vector<int> &R__stl =  evinfo;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<unsigned int> &R__stl =  flags;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            unsigned int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<double> &R__stl =  rec;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<double> &R__stl =  cal;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<double> &R__stl =  pos;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<double> &R__stl =  pid;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<double> &R__stl =  tdc;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<double> &R__stl =  counter;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      R__b.CheckByteCount(R__s, R__c, Rec0::IsA());
   } else {
      R__c = R__b.WriteVersion(Rec0::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << run;
      R__b << number;
      R__b << gnumber;
      R__b.WriteArray(time, 2);
      R__b << format;
      {
         vector<int> &R__stl =  evinfo;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<int>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<unsigned int> &R__stl =  flags;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<unsigned int>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<double> &R__stl =  rec;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<double>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<double> &R__stl =  cal;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<double>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<double> &R__stl =  pos;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<double>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<double> &R__stl =  pid;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<double>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<double> &R__stl =  tdc;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<double>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<double> &R__stl =  counter;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<double>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void Rec0::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Rec0.
      TClass *R__cl = ::Rec0::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "number", &number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gnumber", &gnumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time[2]", time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "format", &format);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "evinfo", (void*)&evinfo);
      R__insp.InspectMember("vector<int>", (void*)&evinfo, "evinfo.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "flags", (void*)&flags);
      R__insp.InspectMember("vector<unsigned int>", (void*)&flags, "flags.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rec", (void*)&rec);
      R__insp.InspectMember("vector<double>", (void*)&rec, "rec.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cal", (void*)&cal);
      R__insp.InspectMember("vector<double>", (void*)&cal, "cal.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pos", (void*)&pos);
      R__insp.InspectMember("vector<double>", (void*)&pos, "pos.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pid", (void*)&pid);
      R__insp.InspectMember("vector<double>", (void*)&pid, "pid.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tdc", (void*)&tdc);
      R__insp.InspectMember("vector<double>", (void*)&tdc, "tdc.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "counter", (void*)&counter);
      R__insp.InspectMember("vector<double>", (void*)&counter, "counter.", false);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Rec0(void *p) {
      return  p ? new(p) ::Rec0 : new ::Rec0;
   }
   static void *newArray_Rec0(Long_t nElements, void *p) {
      return p ? new(p) ::Rec0[nElements] : new ::Rec0[nElements];
   }
   // Wrapper around operator delete
   static void delete_Rec0(void *p) {
      delete ((::Rec0*)p);
   }
   static void deleteArray_Rec0(void *p) {
      delete [] ((::Rec0*)p);
   }
   static void destruct_Rec0(void *p) {
      typedef ::Rec0 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_Rec0(TBuffer &buf, void *obj) {
      ((::Rec0*)obj)->::Rec0::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::Rec0

//______________________________________________________________________________
void A1Info::Streamer(TBuffer &R__b)
{
   // Stream an object of class A1Info.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> run;
      R__b >> runmode;
      R__b >> isrunning;
      R__b >> start_time;
      R__b >> end_time;
      R__b >> nev_trg;
      R__b >> nev_scl;
      R__b.CheckByteCount(R__s, R__c, A1Info::IsA());
   } else {
      R__c = R__b.WriteVersion(A1Info::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << run;
      R__b << runmode;
      R__b << isrunning;
      R__b << start_time;
      R__b << end_time;
      R__b << nev_trg;
      R__b << nev_scl;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void A1Info::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class A1Info.
      TClass *R__cl = ::A1Info::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runmode", &runmode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isrunning", &isrunning);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "start_time", &start_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "end_time", &end_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nev_trg", &nev_trg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nev_scl", &nev_scl);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_A1Info(void *p) {
      return  p ? new(p) ::A1Info : new ::A1Info;
   }
   static void *newArray_A1Info(Long_t nElements, void *p) {
      return p ? new(p) ::A1Info[nElements] : new ::A1Info[nElements];
   }
   // Wrapper around operator delete
   static void delete_A1Info(void *p) {
      delete ((::A1Info*)p);
   }
   static void deleteArray_A1Info(void *p) {
      delete [] ((::A1Info*)p);
   }
   static void destruct_A1Info(void *p) {
      typedef ::A1Info current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_A1Info(TBuffer &buf, void *obj) {
      ((::A1Info*)obj)->::A1Info::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::A1Info

//______________________________________________________________________________
void A1Scl::Streamer(TBuffer &R__b)
{
   // Stream an object of class A1Scl.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> run;
      R__b >> number;
      R__b.ReadStaticArray((unsigned int*)time);
      R__b.ReadStaticArray((unsigned int*)scl0);
      R__b.CheckByteCount(R__s, R__c, A1Scl::IsA());
   } else {
      R__c = R__b.WriteVersion(A1Scl::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << run;
      R__b << number;
      R__b.WriteArray(time, 1);
      R__b.WriteArray(scl0, 16);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void A1Scl::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class A1Scl.
      TClass *R__cl = ::A1Scl::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "number", &number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time[1]", time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scl0[16]", scl0);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_A1Scl(void *p) {
      return  p ? new(p) ::A1Scl : new ::A1Scl;
   }
   static void *newArray_A1Scl(Long_t nElements, void *p) {
      return p ? new(p) ::A1Scl[nElements] : new ::A1Scl[nElements];
   }
   // Wrapper around operator delete
   static void delete_A1Scl(void *p) {
      delete ((::A1Scl*)p);
   }
   static void deleteArray_A1Scl(void *p) {
      delete [] ((::A1Scl*)p);
   }
   static void destruct_A1Scl(void *p) {
      typedef ::A1Scl current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_A1Scl(TBuffer &buf, void *obj) {
      ((::A1Scl*)obj)->::A1Scl::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::A1Scl

//______________________________________________________________________________
void A1Raw::Streamer(TBuffer &R__b)
{
   // Stream an object of class A1Raw.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> run;
      R__b >> number;
      R__b >> gnumber;
      R__b.ReadStaticArray((unsigned int*)time);
      R__b.ReadStaticArray((unsigned short*)adc0);
      R__b.ReadStaticArray((unsigned short*)adc1);
      R__b.ReadStaticArray((unsigned short*)adc2);
      R__b.ReadStaticArray((unsigned short*)adc3);
      R__b.ReadStaticArray((unsigned short*)adc4);
      R__b.ReadStaticArray((unsigned int*)cadc0);
      R__b.ReadStaticArray((unsigned int*)cadc1);
      R__b.ReadStaticArray((unsigned short*)scifi);
      R__b.ReadStaticArray((unsigned int*)tdc0);
      R__b.ReadStaticArray((unsigned int*)scl0);
      R__b.ReadStaticArray((unsigned int*)gpio0);
      R__b.ReadStaticArray((unsigned int*)gpio1);
      R__b.CheckByteCount(R__s, R__c, A1Raw::IsA());
   } else {
      R__c = R__b.WriteVersion(A1Raw::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << run;
      R__b << number;
      R__b << gnumber;
      R__b.WriteArray(time, 2);
      R__b.WriteArray(adc0, 64);
      R__b.WriteArray(adc1, 64);
      R__b.WriteArray(adc2, 8);
      R__b.WriteArray(adc3, 16);
      R__b.WriteArray(adc4, 16);
      R__b.WriteArray(cadc0, 5);
      R__b.WriteArray(cadc1, 5);
      R__b.WriteArray(scifi, 512);
      R__b.WriteArray(tdc0, 160);
      R__b.WriteArray(scl0, 16);
      R__b.WriteArray(gpio0, 17);
      R__b.WriteArray(gpio1, 27);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void A1Raw::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class A1Raw.
      TClass *R__cl = ::A1Raw::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "number", &number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gnumber", &gnumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time[2]", time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adc0[64]", adc0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adc1[64]", adc1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adc2[8]", adc2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adc3[16]", adc3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adc4[16]", adc4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cadc0[5]", cadc0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cadc1[5]", cadc1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scifi[512]", scifi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tdc0[160]", tdc0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scl0[16]", scl0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gpio0[17]", gpio0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gpio1[27]", gpio1);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_A1Raw(void *p) {
      return  p ? new(p) ::A1Raw : new ::A1Raw;
   }
   static void *newArray_A1Raw(Long_t nElements, void *p) {
      return p ? new(p) ::A1Raw[nElements] : new ::A1Raw[nElements];
   }
   // Wrapper around operator delete
   static void delete_A1Raw(void *p) {
      delete ((::A1Raw*)p);
   }
   static void deleteArray_A1Raw(void *p) {
      delete [] ((::A1Raw*)p);
   }
   static void destruct_A1Raw(void *p) {
      typedef ::A1Raw current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_A1Raw(TBuffer &buf, void *obj) {
      ((::A1Raw*)obj)->::A1Raw::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::A1Raw

//______________________________________________________________________________
void A1Cal1::Streamer(TBuffer &R__b)
{
   // Stream an object of class A1Cal1.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> run;
      R__b >> number;
      R__b >> gnumber;
      R__b.ReadStaticArray((double*)time);
      R__b >> flag_beam;
      R__b >> flag_pede;
      R__b >> flag_laser;
      R__b.ReadStaticArray((double*)cal);
      R__b.ReadStaticArray((double*)cald);
      R__b.ReadStaticArray((double*)fc);
      R__b.ReadStaticArray((double*)fcd);
      R__b.ReadStaticArray((double*)laser);
      R__b.ReadStaticArray((double*)laserd);
      R__b.ReadStaticArray((double*)emptyadc);
      R__b.ReadStaticArray((double*)scifi0);
      R__b.ReadStaticArray((double*)scifi1);
      R__b.ReadStaticArray((double*)tdc0);
      R__b.ReadStaticArray((char*)tdc0flag);
      R__b.ReadStaticArray((double*)scl0);
      R__b.ReadStaticArray((unsigned int*)flag);
      R__b.ReadStaticArray((unsigned int*)counter);
      R__b.ReadStaticArray((unsigned int*)fifocounter);
      R__b.CheckByteCount(R__s, R__c, A1Cal1::IsA());
   } else {
      R__c = R__b.WriteVersion(A1Cal1::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << run;
      R__b << number;
      R__b << gnumber;
      R__b.WriteArray(time, 2);
      R__b << flag_beam;
      R__b << flag_pede;
      R__b << flag_laser;
      R__b.WriteArray((double*)cal, 64);
      R__b.WriteArray((double*)cald, 64);
      R__b.WriteArray((double*)fc, 8);
      R__b.WriteArray((double*)fcd, 8);
      R__b.WriteArray(laser, 2);
      R__b.WriteArray(laserd, 2);
      R__b.WriteArray(emptyadc, 8);
      R__b.WriteArray((double*)scifi0, 160);
      R__b.WriteArray((double*)scifi1, 320);
      R__b.WriteArray((double*)tdc0, 192);
      R__b.WriteArray((char*)tdc0flag, 192);
      R__b.WriteArray(scl0, 16);
      R__b.WriteArray(flag, 3);
      R__b.WriteArray(counter, 35);
      R__b.WriteArray((unsigned int*)fifocounter, 8);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void A1Cal1::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class A1Cal1.
      TClass *R__cl = ::A1Cal1::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "number", &number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gnumber", &gnumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time[2]", time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "flag_beam", &flag_beam);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "flag_pede", &flag_pede);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "flag_laser", &flag_laser);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cal[2][16][2]", cal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cald[2][16][2]", cald);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fc[2][4]", fc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fcd[2][4]", fcd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "laser[2]", laser);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "laserd[2]", laserd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "emptyadc[8]", emptyadc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scifi0[4][2][20]", scifi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scifi1[4][2][40]", scifi1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tdc0[12][16]", tdc0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tdc0flag[12][16]", tdc0flag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scl0[16]", scl0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "flag[3]", flag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "counter[35]", counter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fifocounter[2][4]", fifocounter);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_A1Cal1(void *p) {
      return  p ? new(p) ::A1Cal1 : new ::A1Cal1;
   }
   static void *newArray_A1Cal1(Long_t nElements, void *p) {
      return p ? new(p) ::A1Cal1[nElements] : new ::A1Cal1[nElements];
   }
   // Wrapper around operator delete
   static void delete_A1Cal1(void *p) {
      delete ((::A1Cal1*)p);
   }
   static void deleteArray_A1Cal1(void *p) {
      delete [] ((::A1Cal1*)p);
   }
   static void destruct_A1Cal1(void *p) {
      typedef ::A1Cal1 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_A1Cal1(TBuffer &buf, void *obj) {
      ((::A1Cal1*)obj)->::A1Cal1::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::A1Cal1

//______________________________________________________________________________
void A1Cal2::Streamer(TBuffer &R__b)
{
   // Stream an object of class A1Cal2.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> run;
      R__b >> number;
      R__b >> gnumber;
      R__b.ReadStaticArray((double*)time);
      R__b.ReadStaticArray((double*)cal);
      R__b.ReadStaticArray((double*)fc);
      R__b.ReadStaticArray((double*)scifi0);
      R__b.ReadStaticArray((double*)scifi1);
      R__b.ReadStaticArray((unsigned int*)flag);
      R__b.CheckByteCount(R__s, R__c, A1Cal2::IsA());
   } else {
      R__c = R__b.WriteVersion(A1Cal2::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << run;
      R__b << number;
      R__b << gnumber;
      R__b.WriteArray(time, 2);
      R__b.WriteArray((double*)cal, 32);
      R__b.WriteArray((double*)fc, 8);
      R__b.WriteArray((double*)scifi0, 160);
      R__b.WriteArray((double*)scifi1, 320);
      R__b.WriteArray(flag, 3);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void A1Cal2::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class A1Cal2.
      TClass *R__cl = ::A1Cal2::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "number", &number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gnumber", &gnumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time[2]", time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cal[2][16]", cal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fc[2][4]", fc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scifi0[4][2][20]", scifi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scifi1[4][2][40]", scifi1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "flag[3]", flag);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_A1Cal2(void *p) {
      return  p ? new(p) ::A1Cal2 : new ::A1Cal2;
   }
   static void *newArray_A1Cal2(Long_t nElements, void *p) {
      return p ? new(p) ::A1Cal2[nElements] : new ::A1Cal2[nElements];
   }
   // Wrapper around operator delete
   static void delete_A1Cal2(void *p) {
      delete ((::A1Cal2*)p);
   }
   static void deleteArray_A1Cal2(void *p) {
      delete [] ((::A1Cal2*)p);
   }
   static void destruct_A1Cal2(void *p) {
      typedef ::A1Cal2 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_A1Cal2(TBuffer &buf, void *obj) {
      ((::A1Cal2*)obj)->::A1Cal2::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::A1Cal2

//______________________________________________________________________________
void A1Cal2M::Streamer(TBuffer &R__b)
{
   // Stream an object of class A1Cal2M.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      A1Cal2::Streamer(R__b);
      R__b.ReadStaticArray((double*)tdc0);
      R__b.ReadStaticArray((char*)tdc0flag);
      R__b.ReadStaticArray((double*)scl0);
      R__b.ReadStaticArray((unsigned int*)counter);
      R__b.ReadStaticArray((unsigned int*)fifocounter);
      R__b.CheckByteCount(R__s, R__c, A1Cal2M::IsA());
   } else {
      R__c = R__b.WriteVersion(A1Cal2M::IsA(), kTRUE);
      A1Cal2::Streamer(R__b);
      R__b.WriteArray((double*)tdc0, 192);
      R__b.WriteArray((char*)tdc0flag, 192);
      R__b.WriteArray(scl0, 16);
      R__b.WriteArray(counter, 35);
      R__b.WriteArray((unsigned int*)fifocounter, 8);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void A1Cal2M::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class A1Cal2M.
      TClass *R__cl = ::A1Cal2M::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tdc0[12][16]", tdc0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tdc0flag[12][16]", tdc0flag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scl0[16]", scl0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "counter[35]", counter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fifocounter[2][4]", fifocounter);
      A1Cal2::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_A1Cal2M(void *p) {
      return  p ? new(p) ::A1Cal2M : new ::A1Cal2M;
   }
   static void *newArray_A1Cal2M(Long_t nElements, void *p) {
      return p ? new(p) ::A1Cal2M[nElements] : new ::A1Cal2M[nElements];
   }
   // Wrapper around operator delete
   static void delete_A1Cal2M(void *p) {
      delete ((::A1Cal2M*)p);
   }
   static void deleteArray_A1Cal2M(void *p) {
      delete [] ((::A1Cal2M*)p);
   }
   static void destruct_A1Cal2M(void *p) {
      typedef ::A1Cal2M current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_A1Cal2M(TBuffer &buf, void *obj) {
      ((::A1Cal2M*)obj)->::A1Cal2M::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::A1Cal2M

//______________________________________________________________________________
void A1Rec1::Streamer(TBuffer &R__b)
{
   // Stream an object of class A1Rec1.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      Rec0::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, A1Rec1::IsA());
   } else {
      R__c = R__b.WriteVersion(A1Rec1::IsA(), kTRUE);
      Rec0::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void A1Rec1::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class A1Rec1.
      TClass *R__cl = ::A1Rec1::IsA();
      if (R__cl || R__insp.IsA()) { }
      Rec0::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_A1Rec1(void *p) {
      return  p ? new(p) ::A1Rec1 : new ::A1Rec1;
   }
   static void *newArray_A1Rec1(Long_t nElements, void *p) {
      return p ? new(p) ::A1Rec1[nElements] : new ::A1Rec1[nElements];
   }
   // Wrapper around operator delete
   static void delete_A1Rec1(void *p) {
      delete ((::A1Rec1*)p);
   }
   static void deleteArray_A1Rec1(void *p) {
      delete [] ((::A1Rec1*)p);
   }
   static void destruct_A1Rec1(void *p) {
      typedef ::A1Rec1 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_A1Rec1(TBuffer &buf, void *obj) {
      ((::A1Rec1*)obj)->::A1Rec1::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::A1Rec1

//______________________________________________________________________________
void A1Rec2::Streamer(TBuffer &R__b)
{
   // Stream an object of class A1Rec2.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      Rec0::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, A1Rec2::IsA());
   } else {
      R__c = R__b.WriteVersion(A1Rec2::IsA(), kTRUE);
      Rec0::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void A1Rec2::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class A1Rec2.
      TClass *R__cl = ::A1Rec2::IsA();
      if (R__cl || R__insp.IsA()) { }
      Rec0::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_A1Rec2(void *p) {
      return  p ? new(p) ::A1Rec2 : new ::A1Rec2;
   }
   static void *newArray_A1Rec2(Long_t nElements, void *p) {
      return p ? new(p) ::A1Rec2[nElements] : new ::A1Rec2[nElements];
   }
   // Wrapper around operator delete
   static void delete_A1Rec2(void *p) {
      delete ((::A1Rec2*)p);
   }
   static void deleteArray_A1Rec2(void *p) {
      delete [] ((::A1Rec2*)p);
   }
   static void destruct_A1Rec2(void *p) {
      typedef ::A1Rec2 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_A1Rec2(TBuffer &buf, void *obj) {
      ((::A1Rec2*)obj)->::A1Rec2::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::A1Rec2

//______________________________________________________________________________
void A1Phys::Streamer(TBuffer &R__b)
{
   // Stream an object of class A1Phys.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> run;
      R__b >> number;
      R__b >> gnumber;
      R__b.ReadStaticArray((double*)time);
      R__b.ReadStaticArray((double*)energy);
      R__b.ReadStaticArray((double*)pos);
      R__b.ReadStaticArray((int*)pid);
      R__b.ReadStaticArray((int*)hits);
      R__b.ReadStaticArray((unsigned int*)flag);
      R__b.CheckByteCount(R__s, R__c, A1Phys::IsA());
   } else {
      R__c = R__b.WriteVersion(A1Phys::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << run;
      R__b << number;
      R__b << gnumber;
      R__b.WriteArray(time, 2);
      R__b.WriteArray(energy, 2);
      R__b.WriteArray((double*)pos, 4);
      R__b.WriteArray(pid, 2);
      R__b.WriteArray(hits, 2);
      R__b.WriteArray(flag, 3);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void A1Phys::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class A1Phys.
      TClass *R__cl = ::A1Phys::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "number", &number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gnumber", &gnumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time[2]", time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energy[2]", energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pos[2][2]", pos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pid[2]", pid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hits[2]", hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "flag[3]", flag);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_A1Phys(void *p) {
      return  p ? new(p) ::A1Phys : new ::A1Phys;
   }
   static void *newArray_A1Phys(Long_t nElements, void *p) {
      return p ? new(p) ::A1Phys[nElements] : new ::A1Phys[nElements];
   }
   // Wrapper around operator delete
   static void delete_A1Phys(void *p) {
      delete ((::A1Phys*)p);
   }
   static void deleteArray_A1Phys(void *p) {
      delete [] ((::A1Phys*)p);
   }
   static void destruct_A1Phys(void *p) {
      typedef ::A1Phys current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_A1Phys(TBuffer &buf, void *obj) {
      ((::A1Phys*)obj)->::A1Phys::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::A1Phys

//______________________________________________________________________________
void A2Info::Streamer(TBuffer &R__b)
{
   // Stream an object of class A2Info.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> run;
      R__b >> runmode;
      R__b >> isrunning;
      R__b >> start_time;
      R__b >> end_time;
      R__b >> nev_trg;
      R__b >> nev_scl;
      R__b.CheckByteCount(R__s, R__c, A2Info::IsA());
   } else {
      R__c = R__b.WriteVersion(A2Info::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << run;
      R__b << runmode;
      R__b << isrunning;
      R__b << start_time;
      R__b << end_time;
      R__b << nev_trg;
      R__b << nev_scl;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void A2Info::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class A2Info.
      TClass *R__cl = ::A2Info::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runmode", &runmode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isrunning", &isrunning);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "start_time", &start_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "end_time", &end_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nev_trg", &nev_trg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nev_scl", &nev_scl);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_A2Info(void *p) {
      return  p ? new(p) ::A2Info : new ::A2Info;
   }
   static void *newArray_A2Info(Long_t nElements, void *p) {
      return p ? new(p) ::A2Info[nElements] : new ::A2Info[nElements];
   }
   // Wrapper around operator delete
   static void delete_A2Info(void *p) {
      delete ((::A2Info*)p);
   }
   static void deleteArray_A2Info(void *p) {
      delete [] ((::A2Info*)p);
   }
   static void destruct_A2Info(void *p) {
      typedef ::A2Info current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_A2Info(TBuffer &buf, void *obj) {
      ((::A2Info*)obj)->::A2Info::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::A2Info

//______________________________________________________________________________
void A2Scl::Streamer(TBuffer &R__b)
{
   // Stream an object of class A2Scl.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> run;
      R__b >> number;
      R__b.ReadStaticArray((unsigned int*)time);
      R__b.ReadStaticArray((unsigned int*)scl0);
      R__b.CheckByteCount(R__s, R__c, A2Scl::IsA());
   } else {
      R__c = R__b.WriteVersion(A2Scl::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << run;
      R__b << number;
      R__b.WriteArray(time, 1);
      R__b.WriteArray(scl0, 16);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void A2Scl::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class A2Scl.
      TClass *R__cl = ::A2Scl::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "number", &number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time[1]", time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scl0[16]", scl0);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_A2Scl(void *p) {
      return  p ? new(p) ::A2Scl : new ::A2Scl;
   }
   static void *newArray_A2Scl(Long_t nElements, void *p) {
      return p ? new(p) ::A2Scl[nElements] : new ::A2Scl[nElements];
   }
   // Wrapper around operator delete
   static void delete_A2Scl(void *p) {
      delete ((::A2Scl*)p);
   }
   static void deleteArray_A2Scl(void *p) {
      delete [] ((::A2Scl*)p);
   }
   static void destruct_A2Scl(void *p) {
      typedef ::A2Scl current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_A2Scl(TBuffer &buf, void *obj) {
      ((::A2Scl*)obj)->::A2Scl::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::A2Scl

//______________________________________________________________________________
void A2Raw::Streamer(TBuffer &R__b)
{
   // Stream an object of class A2Raw.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> run;
      R__b >> number;
      R__b >> gnumber;
      R__b.ReadStaticArray((unsigned int*)time);
      R__b.ReadStaticArray((unsigned short*)adc0);
      R__b.ReadStaticArray((unsigned short*)adc1);
      R__b.ReadStaticArray((unsigned short*)adc2);
      R__b.ReadStaticArray((unsigned short*)adc3);
      R__b.ReadStaticArray((unsigned short*)adc4);
      R__b.ReadStaticArray((unsigned int*)cadc0);
      R__b.ReadStaticArray((unsigned int*)cadc1);
      R__b.ReadStaticArray((unsigned int*)tdc0);
      R__b.ReadStaticArray((unsigned int*)scl0);
      R__b.ReadStaticArray((unsigned int*)gpio0);
      R__b.ReadStaticArray((unsigned int*)gpio1);
      R__b.ReadStaticArray((char*)arm2);
      R__b.CheckByteCount(R__s, R__c, A2Raw::IsA());
   } else {
      R__c = R__b.WriteVersion(A2Raw::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << run;
      R__b << number;
      R__b << gnumber;
      R__b.WriteArray(time, 2);
      R__b.WriteArray(adc0, 64);
      R__b.WriteArray(adc1, 64);
      R__b.WriteArray(adc2, 8);
      R__b.WriteArray(adc3, 16);
      R__b.WriteArray(adc4, 16);
      R__b.WriteArray(cadc0, 5);
      R__b.WriteArray(cadc1, 5);
      R__b.WriteArray(tdc0, 128);
      R__b.WriteArray(scl0, 16);
      R__b.WriteArray(gpio0, 17);
      R__b.WriteArray(gpio1, 27);
      R__b.WriteArray(arm2, 14280);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void A2Raw::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class A2Raw.
      TClass *R__cl = ::A2Raw::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "number", &number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gnumber", &gnumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time[2]", time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adc0[64]", adc0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adc1[64]", adc1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adc2[8]", adc2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adc3[16]", adc3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adc4[16]", adc4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cadc0[5]", cadc0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cadc1[5]", cadc1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tdc0[128]", tdc0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scl0[16]", scl0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gpio0[17]", gpio0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gpio1[27]", gpio1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "arm2[14280]", arm2);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_A2Raw(void *p) {
      return  p ? new(p) ::A2Raw : new ::A2Raw;
   }
   static void *newArray_A2Raw(Long_t nElements, void *p) {
      return p ? new(p) ::A2Raw[nElements] : new ::A2Raw[nElements];
   }
   // Wrapper around operator delete
   static void delete_A2Raw(void *p) {
      delete ((::A2Raw*)p);
   }
   static void deleteArray_A2Raw(void *p) {
      delete [] ((::A2Raw*)p);
   }
   static void destruct_A2Raw(void *p) {
      typedef ::A2Raw current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_A2Raw(TBuffer &buf, void *obj) {
      ((::A2Raw*)obj)->::A2Raw::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::A2Raw

//______________________________________________________________________________
void A2Cal1::Streamer(TBuffer &R__b)
{
   // Stream an object of class A2Cal1.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> run;
      R__b >> number;
      R__b >> gnumber;
      R__b.ReadStaticArray((double*)time);
      R__b >> flag_beam;
      R__b >> flag_pede;
      R__b >> flag_laser;
      R__b.ReadStaticArray((double*)cal);
      R__b.ReadStaticArray((double*)cald);
      R__b.ReadStaticArray((double*)fc);
      R__b.ReadStaticArray((double*)fcd);
      R__b.ReadStaticArray((double*)laser);
      R__b.ReadStaticArray((double*)laserd);
      R__b.ReadStaticArray((double*)emptyadc);
      R__b.ReadStaticArray((double*)tdc0);
      R__b.ReadStaticArray((char*)tdc0flag);
      R__b.ReadStaticArray((double*)scl0);
      R__b.ReadStaticArray((float*)silicon);
      R__b.ReadStaticArray((unsigned int*)flag);
      R__b.ReadStaticArray((unsigned int*)counter);
      R__b.ReadStaticArray((unsigned int*)fifocounter);
      R__b.CheckByteCount(R__s, R__c, A2Cal1::IsA());
   } else {
      R__c = R__b.WriteVersion(A2Cal1::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << run;
      R__b << number;
      R__b << gnumber;
      R__b.WriteArray(time, 2);
      R__b << flag_beam;
      R__b << flag_pede;
      R__b << flag_laser;
      R__b.WriteArray((double*)cal, 64);
      R__b.WriteArray((double*)cald, 64);
      R__b.WriteArray((double*)fc, 8);
      R__b.WriteArray((double*)fcd, 8);
      R__b.WriteArray(laser, 2);
      R__b.WriteArray(laserd, 2);
      R__b.WriteArray(emptyadc, 8);
      R__b.WriteArray((double*)tdc0, 192);
      R__b.WriteArray((char*)tdc0flag, 192);
      R__b.WriteArray(scl0, 16);
      R__b.WriteArray((float*)silicon, 9216);
      R__b.WriteArray(flag, 3);
      R__b.WriteArray(counter, 35);
      R__b.WriteArray((unsigned int*)fifocounter, 8);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void A2Cal1::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class A2Cal1.
      TClass *R__cl = ::A2Cal1::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "number", &number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gnumber", &gnumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time[2]", time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "flag_beam", &flag_beam);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "flag_pede", &flag_pede);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "flag_laser", &flag_laser);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cal[2][16][2]", cal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cald[2][16][2]", cald);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fc[2][4]", fc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fcd[2][4]", fcd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "laser[2]", laser);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "laserd[2]", laserd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "emptyadc[8]", emptyadc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tdc0[12][16]", tdc0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tdc0flag[12][16]", tdc0flag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scl0[16]", scl0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "silicon[4][2][384][3]", silicon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "flag[3]", flag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "counter[35]", counter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fifocounter[2][4]", fifocounter);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_A2Cal1(void *p) {
      return  p ? new(p) ::A2Cal1 : new ::A2Cal1;
   }
   static void *newArray_A2Cal1(Long_t nElements, void *p) {
      return p ? new(p) ::A2Cal1[nElements] : new ::A2Cal1[nElements];
   }
   // Wrapper around operator delete
   static void delete_A2Cal1(void *p) {
      delete ((::A2Cal1*)p);
   }
   static void deleteArray_A2Cal1(void *p) {
      delete [] ((::A2Cal1*)p);
   }
   static void destruct_A2Cal1(void *p) {
      typedef ::A2Cal1 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_A2Cal1(TBuffer &buf, void *obj) {
      ((::A2Cal1*)obj)->::A2Cal1::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::A2Cal1

//______________________________________________________________________________
void A2Cal2::Streamer(TBuffer &R__b)
{
   // Stream an object of class A2Cal2.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> run;
      R__b >> number;
      R__b >> gnumber;
      R__b.ReadStaticArray((double*)time);
      R__b.ReadStaticArray((double*)cal);
      R__b.ReadStaticArray((double*)fc);
      R__b.ReadStaticArray((float*)silicon);
      R__b.ReadStaticArray((unsigned int*)flag);
      R__b.CheckByteCount(R__s, R__c, A2Cal2::IsA());
   } else {
      R__c = R__b.WriteVersion(A2Cal2::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << run;
      R__b << number;
      R__b << gnumber;
      R__b.WriteArray(time, 2);
      R__b.WriteArray((double*)cal, 32);
      R__b.WriteArray((double*)fc, 8);
      R__b.WriteArray((float*)silicon, 9216);
      R__b.WriteArray(flag, 3);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void A2Cal2::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class A2Cal2.
      TClass *R__cl = ::A2Cal2::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "number", &number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gnumber", &gnumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time[2]", time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cal[2][16]", cal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fc[2][4]", fc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "silicon[4][2][384][3]", silicon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "flag[3]", flag);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_A2Cal2(void *p) {
      return  p ? new(p) ::A2Cal2 : new ::A2Cal2;
   }
   static void *newArray_A2Cal2(Long_t nElements, void *p) {
      return p ? new(p) ::A2Cal2[nElements] : new ::A2Cal2[nElements];
   }
   // Wrapper around operator delete
   static void delete_A2Cal2(void *p) {
      delete ((::A2Cal2*)p);
   }
   static void deleteArray_A2Cal2(void *p) {
      delete [] ((::A2Cal2*)p);
   }
   static void destruct_A2Cal2(void *p) {
      typedef ::A2Cal2 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_A2Cal2(TBuffer &buf, void *obj) {
      ((::A2Cal2*)obj)->::A2Cal2::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::A2Cal2

//______________________________________________________________________________
void A2Cal2M::Streamer(TBuffer &R__b)
{
   // Stream an object of class A2Cal2M.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      A2Cal2::Streamer(R__b);
      R__b.ReadStaticArray((double*)tdc0);
      R__b.ReadStaticArray((char*)tdc0flag);
      R__b.ReadStaticArray((double*)scl0);
      R__b.ReadStaticArray((unsigned int*)counter);
      R__b.ReadStaticArray((unsigned int*)fifocounter);
      R__b.CheckByteCount(R__s, R__c, A2Cal2M::IsA());
   } else {
      R__c = R__b.WriteVersion(A2Cal2M::IsA(), kTRUE);
      A2Cal2::Streamer(R__b);
      R__b.WriteArray((double*)tdc0, 192);
      R__b.WriteArray((char*)tdc0flag, 192);
      R__b.WriteArray(scl0, 16);
      R__b.WriteArray(counter, 35);
      R__b.WriteArray((unsigned int*)fifocounter, 8);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void A2Cal2M::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class A2Cal2M.
      TClass *R__cl = ::A2Cal2M::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tdc0[12][16]", tdc0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tdc0flag[12][16]", tdc0flag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scl0[16]", scl0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "counter[35]", counter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fifocounter[2][4]", fifocounter);
      A2Cal2::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_A2Cal2M(void *p) {
      return  p ? new(p) ::A2Cal2M : new ::A2Cal2M;
   }
   static void *newArray_A2Cal2M(Long_t nElements, void *p) {
      return p ? new(p) ::A2Cal2M[nElements] : new ::A2Cal2M[nElements];
   }
   // Wrapper around operator delete
   static void delete_A2Cal2M(void *p) {
      delete ((::A2Cal2M*)p);
   }
   static void deleteArray_A2Cal2M(void *p) {
      delete [] ((::A2Cal2M*)p);
   }
   static void destruct_A2Cal2M(void *p) {
      typedef ::A2Cal2M current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_A2Cal2M(TBuffer &buf, void *obj) {
      ((::A2Cal2M*)obj)->::A2Cal2M::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::A2Cal2M

//______________________________________________________________________________
void A2Rec1::Streamer(TBuffer &R__b)
{
   // Stream an object of class A2Rec1.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      Rec0::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, A2Rec1::IsA());
   } else {
      R__c = R__b.WriteVersion(A2Rec1::IsA(), kTRUE);
      Rec0::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void A2Rec1::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class A2Rec1.
      TClass *R__cl = ::A2Rec1::IsA();
      if (R__cl || R__insp.IsA()) { }
      Rec0::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_A2Rec1(void *p) {
      return  p ? new(p) ::A2Rec1 : new ::A2Rec1;
   }
   static void *newArray_A2Rec1(Long_t nElements, void *p) {
      return p ? new(p) ::A2Rec1[nElements] : new ::A2Rec1[nElements];
   }
   // Wrapper around operator delete
   static void delete_A2Rec1(void *p) {
      delete ((::A2Rec1*)p);
   }
   static void deleteArray_A2Rec1(void *p) {
      delete [] ((::A2Rec1*)p);
   }
   static void destruct_A2Rec1(void *p) {
      typedef ::A2Rec1 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_A2Rec1(TBuffer &buf, void *obj) {
      ((::A2Rec1*)obj)->::A2Rec1::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::A2Rec1

//______________________________________________________________________________
void A2Rec2::Streamer(TBuffer &R__b)
{
   // Stream an object of class A2Rec2.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      A2Rec1::Streamer(R__b);
      {
         vector<double> &R__stl =  posmh;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      R__b.CheckByteCount(R__s, R__c, A2Rec2::IsA());
   } else {
      R__c = R__b.WriteVersion(A2Rec2::IsA(), kTRUE);
      A2Rec1::Streamer(R__b);
      {
         vector<double> &R__stl =  posmh;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<double>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void A2Rec2::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class A2Rec2.
      TClass *R__cl = ::A2Rec2::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "posmh", (void*)&posmh);
      R__insp.InspectMember("vector<double>", (void*)&posmh, "posmh.", false);
      A2Rec1::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_A2Rec2(void *p) {
      return  p ? new(p) ::A2Rec2 : new ::A2Rec2;
   }
   static void *newArray_A2Rec2(Long_t nElements, void *p) {
      return p ? new(p) ::A2Rec2[nElements] : new ::A2Rec2[nElements];
   }
   // Wrapper around operator delete
   static void delete_A2Rec2(void *p) {
      delete ((::A2Rec2*)p);
   }
   static void deleteArray_A2Rec2(void *p) {
      delete [] ((::A2Rec2*)p);
   }
   static void destruct_A2Rec2(void *p) {
      typedef ::A2Rec2 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_A2Rec2(TBuffer &buf, void *obj) {
      ((::A2Rec2*)obj)->::A2Rec2::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::A2Rec2

//______________________________________________________________________________
void A2Rec3::Streamer(TBuffer &R__b)
{
   // Stream an object of class A2Rec3.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      A2Rec2::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, A2Rec3::IsA());
   } else {
      R__c = R__b.WriteVersion(A2Rec3::IsA(), kTRUE);
      A2Rec2::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void A2Rec3::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class A2Rec3.
      TClass *R__cl = ::A2Rec3::IsA();
      if (R__cl || R__insp.IsA()) { }
      A2Rec2::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_A2Rec3(void *p) {
      return  p ? new(p) ::A2Rec3 : new ::A2Rec3;
   }
   static void *newArray_A2Rec3(Long_t nElements, void *p) {
      return p ? new(p) ::A2Rec3[nElements] : new ::A2Rec3[nElements];
   }
   // Wrapper around operator delete
   static void delete_A2Rec3(void *p) {
      delete ((::A2Rec3*)p);
   }
   static void deleteArray_A2Rec3(void *p) {
      delete [] ((::A2Rec3*)p);
   }
   static void destruct_A2Rec3(void *p) {
      typedef ::A2Rec3 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_A2Rec3(TBuffer &buf, void *obj) {
      ((::A2Rec3*)obj)->::A2Rec3::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::A2Rec3

//______________________________________________________________________________
void A2Phys::Streamer(TBuffer &R__b)
{
   // Stream an object of class A2Phys.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> run;
      R__b >> number;
      R__b >> gnumber;
      R__b.ReadStaticArray((double*)time);
      R__b.ReadStaticArray((double*)energy);
      R__b.ReadStaticArray((double*)pos);
      R__b.ReadStaticArray((double*)sideposit);
      R__b.ReadStaticArray((double*)sidepositsum);
      R__b.ReadStaticArray((int*)pid);
      R__b.ReadStaticArray((int*)hits);
      R__b.ReadStaticArray((unsigned int*)flag);
      R__b.CheckByteCount(R__s, R__c, A2Phys::IsA());
   } else {
      R__c = R__b.WriteVersion(A2Phys::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << run;
      R__b << number;
      R__b << gnumber;
      R__b.WriteArray(time, 2);
      R__b.WriteArray(energy, 2);
      R__b.WriteArray((double*)pos, 4);
      R__b.WriteArray((double*)sideposit, 48);
      R__b.WriteArray((double*)sidepositsum, 6);
      R__b.WriteArray(pid, 2);
      R__b.WriteArray(hits, 2);
      R__b.WriteArray(flag, 3);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void A2Phys::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class A2Phys.
      TClass *R__cl = ::A2Phys::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "number", &number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gnumber", &gnumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time[2]", time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energy[2]", energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pos[2][2]", pos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sideposit[2][4][2][3]", sideposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sidepositsum[2][3]", sidepositsum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pid[2]", pid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hits[2]", hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "flag[3]", flag);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_A2Phys(void *p) {
      return  p ? new(p) ::A2Phys : new ::A2Phys;
   }
   static void *newArray_A2Phys(Long_t nElements, void *p) {
      return p ? new(p) ::A2Phys[nElements] : new ::A2Phys[nElements];
   }
   // Wrapper around operator delete
   static void delete_A2Phys(void *p) {
      delete ((::A2Phys*)p);
   }
   static void deleteArray_A2Phys(void *p) {
      delete [] ((::A2Phys*)p);
   }
   static void destruct_A2Phys(void *p) {
      typedef ::A2Phys current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_A2Phys(TBuffer &buf, void *obj) {
      ((::A2Phys*)obj)->::A2Phys::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::A2Phys

//______________________________________________________________________________
void A2Raw_pPb2013::Streamer(TBuffer &R__b)
{
   // Stream an object of class A2Raw_pPb2013.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> run;
      R__b >> number;
      R__b >> gnumber;
      R__b.ReadStaticArray((unsigned int*)time);
      R__b.ReadStaticArray((unsigned short*)adc0);
      R__b.ReadStaticArray((unsigned short*)adc1);
      R__b.ReadStaticArray((unsigned short*)adc2);
      R__b.ReadStaticArray((unsigned short*)adc3);
      R__b.ReadStaticArray((unsigned short*)adc4);
      R__b.ReadStaticArray((unsigned int*)cadc0);
      R__b.ReadStaticArray((unsigned int*)cadc1);
      R__b.ReadStaticArray((unsigned int*)tdc0);
      R__b.ReadStaticArray((unsigned int*)scl0);
      R__b.ReadStaticArray((unsigned int*)gpio0);
      R__b.ReadStaticArray((unsigned int*)gpio1);
      R__b.ReadStaticArray((char*)arm2);
      R__b.CheckByteCount(R__s, R__c, A2Raw_pPb2013::IsA());
   } else {
      R__c = R__b.WriteVersion(A2Raw_pPb2013::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << run;
      R__b << number;
      R__b << gnumber;
      R__b.WriteArray(time, 2);
      R__b.WriteArray(adc0, 64);
      R__b.WriteArray(adc1, 64);
      R__b.WriteArray(adc2, 64);
      R__b.WriteArray(adc3, 0);
      R__b.WriteArray(adc4, 0);
      R__b.WriteArray(cadc0, 5);
      R__b.WriteArray(cadc1, 5);
      R__b.WriteArray(tdc0, 256);
      R__b.WriteArray(scl0, 16);
      R__b.WriteArray(gpio0, 17);
      R__b.WriteArray(gpio1, 27);
      R__b.WriteArray(arm2, 14280);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void A2Raw_pPb2013::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class A2Raw_pPb2013.
      TClass *R__cl = ::A2Raw_pPb2013::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "number", &number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gnumber", &gnumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time[2]", time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adc0[64]", adc0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adc1[64]", adc1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adc2[64]", adc2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adc3[0]", adc3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adc4[0]", adc4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cadc0[5]", cadc0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cadc1[5]", cadc1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tdc0[256]", tdc0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scl0[16]", scl0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gpio0[17]", gpio0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gpio1[27]", gpio1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "arm2[14280]", arm2);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_A2Raw_pPb2013(void *p) {
      return  p ? new(p) ::A2Raw_pPb2013 : new ::A2Raw_pPb2013;
   }
   static void *newArray_A2Raw_pPb2013(Long_t nElements, void *p) {
      return p ? new(p) ::A2Raw_pPb2013[nElements] : new ::A2Raw_pPb2013[nElements];
   }
   // Wrapper around operator delete
   static void delete_A2Raw_pPb2013(void *p) {
      delete ((::A2Raw_pPb2013*)p);
   }
   static void deleteArray_A2Raw_pPb2013(void *p) {
      delete [] ((::A2Raw_pPb2013*)p);
   }
   static void destruct_A2Raw_pPb2013(void *p) {
      typedef ::A2Raw_pPb2013 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_A2Raw_pPb2013(TBuffer &buf, void *obj) {
      ((::A2Raw_pPb2013*)obj)->::A2Raw_pPb2013::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::A2Raw_pPb2013

//______________________________________________________________________________
void A1Raw_pp2015::Streamer(TBuffer &R__b)
{
   // Stream an object of class A1Raw_pp2015.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> run;
      R__b >> number;
      R__b >> gnumber;
      R__b.ReadStaticArray((unsigned int*)time);
      R__b.ReadStaticArray((unsigned short*)adc0);
      R__b.ReadStaticArray((unsigned short*)adc1);
      R__b.ReadStaticArray((unsigned short*)adc2);
      R__b.ReadStaticArray((unsigned short*)adc3);
      R__b.ReadStaticArray((unsigned int*)cadc0);
      R__b.ReadStaticArray((unsigned int*)cadc1);
      R__b.ReadStaticArray((unsigned short*)scifi);
      R__b.ReadStaticArray((unsigned int*)tdc0);
      R__b.ReadStaticArray((unsigned int*)scl0);
      R__b.ReadStaticArray((unsigned int*)gpio0);
      R__b.CheckByteCount(R__s, R__c, A1Raw_pp2015::IsA());
   } else {
      R__c = R__b.WriteVersion(A1Raw_pp2015::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << run;
      R__b << number;
      R__b << gnumber;
      R__b.WriteArray(time, 2);
      R__b.WriteArray(adc0, 64);
      R__b.WriteArray(adc1, 64);
      R__b.WriteArray(adc2, 64);
      R__b.WriteArray(adc3, 4);
      R__b.WriteArray(cadc0, 5);
      R__b.WriteArray(cadc1, 5);
      R__b.WriteArray(scifi, 512);
      R__b.WriteArray(tdc0, 256);
      R__b.WriteArray(scl0, 16);
      R__b.WriteArray(gpio0, 50);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void A1Raw_pp2015::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class A1Raw_pp2015.
      TClass *R__cl = ::A1Raw_pp2015::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "number", &number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gnumber", &gnumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time[2]", time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adc0[64]", adc0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adc1[64]", adc1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adc2[64]", adc2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adc3[4]", adc3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cadc0[5]", cadc0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cadc1[5]", cadc1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scifi[512]", scifi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tdc0[256]", tdc0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scl0[16]", scl0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gpio0[50]", gpio0);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_A1Raw_pp2015(void *p) {
      return  p ? new(p) ::A1Raw_pp2015 : new ::A1Raw_pp2015;
   }
   static void *newArray_A1Raw_pp2015(Long_t nElements, void *p) {
      return p ? new(p) ::A1Raw_pp2015[nElements] : new ::A1Raw_pp2015[nElements];
   }
   // Wrapper around operator delete
   static void delete_A1Raw_pp2015(void *p) {
      delete ((::A1Raw_pp2015*)p);
   }
   static void deleteArray_A1Raw_pp2015(void *p) {
      delete [] ((::A1Raw_pp2015*)p);
   }
   static void destruct_A1Raw_pp2015(void *p) {
      typedef ::A1Raw_pp2015 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_A1Raw_pp2015(TBuffer &buf, void *obj) {
      ((::A1Raw_pp2015*)obj)->::A1Raw_pp2015::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::A1Raw_pp2015

//______________________________________________________________________________
void A2Raw_pp2015::Streamer(TBuffer &R__b)
{
   // Stream an object of class A2Raw_pp2015.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> run;
      R__b >> number;
      R__b >> gnumber;
      R__b.ReadStaticArray((unsigned int*)time);
      R__b.ReadStaticArray((unsigned short*)adc0);
      R__b.ReadStaticArray((unsigned short*)adc1);
      R__b.ReadStaticArray((unsigned short*)adc2);
      R__b.ReadStaticArray((unsigned short*)adc3);
      R__b.ReadStaticArray((unsigned int*)cadc0);
      R__b.ReadStaticArray((unsigned int*)cadc1);
      R__b.ReadStaticArray((unsigned int*)tdc0);
      R__b.ReadStaticArray((unsigned int*)scl0);
      R__b.ReadStaticArray((unsigned int*)gpio0);
      R__b.ReadStaticArray((char*)arm2);
      R__b.CheckByteCount(R__s, R__c, A2Raw_pp2015::IsA());
   } else {
      R__c = R__b.WriteVersion(A2Raw_pp2015::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << run;
      R__b << number;
      R__b << gnumber;
      R__b.WriteArray(time, 2);
      R__b.WriteArray(adc0, 64);
      R__b.WriteArray(adc1, 64);
      R__b.WriteArray(adc2, 64);
      R__b.WriteArray(adc3, 4);
      R__b.WriteArray(cadc0, 5);
      R__b.WriteArray(cadc1, 5);
      R__b.WriteArray(tdc0, 256);
      R__b.WriteArray(scl0, 16);
      R__b.WriteArray(gpio0, 50);
      R__b.WriteArray(arm2, 14280);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void A2Raw_pp2015::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class A2Raw_pp2015.
      TClass *R__cl = ::A2Raw_pp2015::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "number", &number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gnumber", &gnumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time[2]", time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adc0[64]", adc0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adc1[64]", adc1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adc2[64]", adc2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adc3[4]", adc3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cadc0[5]", cadc0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cadc1[5]", cadc1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tdc0[256]", tdc0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scl0[16]", scl0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gpio0[50]", gpio0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "arm2[14280]", arm2);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_A2Raw_pp2015(void *p) {
      return  p ? new(p) ::A2Raw_pp2015 : new ::A2Raw_pp2015;
   }
   static void *newArray_A2Raw_pp2015(Long_t nElements, void *p) {
      return p ? new(p) ::A2Raw_pp2015[nElements] : new ::A2Raw_pp2015[nElements];
   }
   // Wrapper around operator delete
   static void delete_A2Raw_pp2015(void *p) {
      delete ((::A2Raw_pp2015*)p);
   }
   static void deleteArray_A2Raw_pp2015(void *p) {
      delete [] ((::A2Raw_pp2015*)p);
   }
   static void destruct_A2Raw_pp2015(void *p) {
      typedef ::A2Raw_pp2015 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_A2Raw_pp2015(TBuffer &buf, void *obj) {
      ((::A2Raw_pp2015*)obj)->::A2Raw_pp2015::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::A2Raw_pp2015

//______________________________________________________________________________
void A1Scl_pp2015::Streamer(TBuffer &R__b)
{
   // Stream an object of class A1Scl_pp2015.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> run;
      R__b >> number;
      R__b.ReadStaticArray((unsigned int*)time);
      R__b.ReadStaticArray((unsigned int*)scl0);
      R__b.ReadStaticArray((unsigned int*)ramc);
      R__b.CheckByteCount(R__s, R__c, A1Scl_pp2015::IsA());
   } else {
      R__c = R__b.WriteVersion(A1Scl_pp2015::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << run;
      R__b << number;
      R__b.WriteArray(time, 2);
      R__b.WriteArray(scl0, 16);
      R__b.WriteArray(ramc, 256);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void A1Scl_pp2015::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class A1Scl_pp2015.
      TClass *R__cl = ::A1Scl_pp2015::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "number", &number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time[2]", time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scl0[16]", scl0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ramc[256]", ramc);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_A1Scl_pp2015(void *p) {
      return  p ? new(p) ::A1Scl_pp2015 : new ::A1Scl_pp2015;
   }
   static void *newArray_A1Scl_pp2015(Long_t nElements, void *p) {
      return p ? new(p) ::A1Scl_pp2015[nElements] : new ::A1Scl_pp2015[nElements];
   }
   // Wrapper around operator delete
   static void delete_A1Scl_pp2015(void *p) {
      delete ((::A1Scl_pp2015*)p);
   }
   static void deleteArray_A1Scl_pp2015(void *p) {
      delete [] ((::A1Scl_pp2015*)p);
   }
   static void destruct_A1Scl_pp2015(void *p) {
      typedef ::A1Scl_pp2015 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_A1Scl_pp2015(TBuffer &buf, void *obj) {
      ((::A1Scl_pp2015*)obj)->::A1Scl_pp2015::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::A1Scl_pp2015

//______________________________________________________________________________
void A2Scl_pp2015::Streamer(TBuffer &R__b)
{
   // Stream an object of class A2Scl_pp2015.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> run;
      R__b >> number;
      R__b.ReadStaticArray((unsigned int*)time);
      R__b.ReadStaticArray((unsigned int*)scl0);
      R__b.ReadStaticArray((unsigned int*)ramc);
      R__b.CheckByteCount(R__s, R__c, A2Scl_pp2015::IsA());
   } else {
      R__c = R__b.WriteVersion(A2Scl_pp2015::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << run;
      R__b << number;
      R__b.WriteArray(time, 2);
      R__b.WriteArray(scl0, 16);
      R__b.WriteArray(ramc, 256);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void A2Scl_pp2015::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class A2Scl_pp2015.
      TClass *R__cl = ::A2Scl_pp2015::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "number", &number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time[2]", time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scl0[16]", scl0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ramc[256]", ramc);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_A2Scl_pp2015(void *p) {
      return  p ? new(p) ::A2Scl_pp2015 : new ::A2Scl_pp2015;
   }
   static void *newArray_A2Scl_pp2015(Long_t nElements, void *p) {
      return p ? new(p) ::A2Scl_pp2015[nElements] : new ::A2Scl_pp2015[nElements];
   }
   // Wrapper around operator delete
   static void delete_A2Scl_pp2015(void *p) {
      delete ((::A2Scl_pp2015*)p);
   }
   static void deleteArray_A2Scl_pp2015(void *p) {
      delete [] ((::A2Scl_pp2015*)p);
   }
   static void destruct_A2Scl_pp2015(void *p) {
      typedef ::A2Scl_pp2015 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_A2Scl_pp2015(TBuffer &buf, void *obj) {
      ((::A2Scl_pp2015*)obj)->::A2Scl_pp2015::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::A2Scl_pp2015

//______________________________________________________________________________
void A2Raw_pPb2016::Streamer(TBuffer &R__b)
{
   // Stream an object of class A2Raw_pPb2016.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> run;
      R__b >> number;
      R__b >> gnumber;
      R__b.ReadStaticArray((unsigned int*)time);
      R__b.ReadStaticArray((unsigned short*)adc0);
      R__b.ReadStaticArray((unsigned short*)adc1);
      R__b.ReadStaticArray((unsigned short*)adc2);
      R__b.ReadStaticArray((unsigned short*)adc3);
      R__b.ReadStaticArray((unsigned short*)adc4);
      R__b.ReadStaticArray((unsigned int*)cadc0);
      R__b.ReadStaticArray((unsigned int*)cadc1);
      R__b.ReadStaticArray((unsigned int*)tdc0);
      R__b.ReadStaticArray((unsigned int*)scl0);
      R__b.ReadStaticArray((unsigned int*)gpio0);
      R__b.ReadStaticArray((unsigned int*)gpio1);
      R__b.ReadStaticArray((char*)arm2);
      R__b.CheckByteCount(R__s, R__c, A2Raw_pPb2016::IsA());
   } else {
      R__c = R__b.WriteVersion(A2Raw_pPb2016::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << run;
      R__b << number;
      R__b << gnumber;
      R__b.WriteArray(time, 2);
      R__b.WriteArray(adc0, 64);
      R__b.WriteArray(adc1, 64);
      R__b.WriteArray(adc2, 64);
      R__b.WriteArray(adc3, 4);
      R__b.WriteArray(adc4, 0);
      R__b.WriteArray(cadc0, 5);
      R__b.WriteArray(cadc1, 5);
      R__b.WriteArray(tdc0, 256);
      R__b.WriteArray(scl0, 16);
      R__b.WriteArray(gpio0, 17);
      R__b.WriteArray(gpio1, 27);
      R__b.WriteArray(arm2, 14280);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void A2Raw_pPb2016::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class A2Raw_pPb2016.
      TClass *R__cl = ::A2Raw_pPb2016::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "number", &number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gnumber", &gnumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time[2]", time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adc0[64]", adc0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adc1[64]", adc1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adc2[64]", adc2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adc3[4]", adc3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adc4[0]", adc4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cadc0[5]", cadc0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cadc1[5]", cadc1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tdc0[256]", tdc0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scl0[16]", scl0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gpio0[17]", gpio0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gpio1[27]", gpio1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "arm2[14280]", arm2);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_A2Raw_pPb2016(void *p) {
      return  p ? new(p) ::A2Raw_pPb2016 : new ::A2Raw_pPb2016;
   }
   static void *newArray_A2Raw_pPb2016(Long_t nElements, void *p) {
      return p ? new(p) ::A2Raw_pPb2016[nElements] : new ::A2Raw_pPb2016[nElements];
   }
   // Wrapper around operator delete
   static void delete_A2Raw_pPb2016(void *p) {
      delete ((::A2Raw_pPb2016*)p);
   }
   static void deleteArray_A2Raw_pPb2016(void *p) {
      delete [] ((::A2Raw_pPb2016*)p);
   }
   static void destruct_A2Raw_pPb2016(void *p) {
      typedef ::A2Raw_pPb2016 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_A2Raw_pPb2016(TBuffer &buf, void *obj) {
      ((::A2Raw_pPb2016*)obj)->::A2Raw_pPb2016::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::A2Raw_pPb2016

//______________________________________________________________________________
void RHICfRaw_Op2017::Streamer(TBuffer &R__b)
{
   // Stream an object of class RHICfRaw_Op2017.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> run;
      R__b >> number;
      R__b >> gnumber;
      R__b.ReadStaticArray((unsigned int*)time);
      R__b.ReadStaticArray((unsigned int*)trgm);
      R__b.ReadStaticArray((unsigned short*)adc0);
      R__b.ReadStaticArray((unsigned short*)adc1);
      R__b.ReadStaticArray((unsigned short*)adc2);
      R__b.ReadStaticArray((unsigned int*)cadc0);
      R__b.ReadStaticArray((unsigned int*)cadc1);
      R__b.ReadStaticArray((unsigned short*)scifi);
      R__b.ReadStaticArray((unsigned int*)tdc0);
      R__b.ReadStaticArray((unsigned int*)gpio0);
      R__b.ReadStaticArray((unsigned int*)gpio1);
      R__b.CheckByteCount(R__s, R__c, RHICfRaw_Op2017::IsA());
   } else {
      R__c = R__b.WriteVersion(RHICfRaw_Op2017::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << run;
      R__b << number;
      R__b << gnumber;
      R__b.WriteArray(time, 2);
      R__b.WriteArray(trgm, 1);
      R__b.WriteArray(adc0, 64);
      R__b.WriteArray(adc1, 64);
      R__b.WriteArray(adc2, 64);
      R__b.WriteArray(cadc0, 5);
      R__b.WriteArray(cadc1, 5);
      R__b.WriteArray(scifi, 512);
      R__b.WriteArray(tdc0, 256);
      R__b.WriteArray(gpio0, 19);
      R__b.WriteArray(gpio1, 17);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RHICfRaw_Op2017::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RHICfRaw_Op2017.
      TClass *R__cl = ::RHICfRaw_Op2017::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "number", &number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gnumber", &gnumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time[2]", time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trgm[1]", trgm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adc0[64]", adc0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adc1[64]", adc1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adc2[64]", adc2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cadc0[5]", cadc0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cadc1[5]", cadc1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scifi[512]", scifi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tdc0[256]", tdc0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gpio0[19]", gpio0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gpio1[17]", gpio1);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RHICfRaw_Op2017(void *p) {
      return  p ? new(p) ::RHICfRaw_Op2017 : new ::RHICfRaw_Op2017;
   }
   static void *newArray_RHICfRaw_Op2017(Long_t nElements, void *p) {
      return p ? new(p) ::RHICfRaw_Op2017[nElements] : new ::RHICfRaw_Op2017[nElements];
   }
   // Wrapper around operator delete
   static void delete_RHICfRaw_Op2017(void *p) {
      delete ((::RHICfRaw_Op2017*)p);
   }
   static void deleteArray_RHICfRaw_Op2017(void *p) {
      delete [] ((::RHICfRaw_Op2017*)p);
   }
   static void destruct_RHICfRaw_Op2017(void *p) {
      typedef ::RHICfRaw_Op2017 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RHICfRaw_Op2017(TBuffer &buf, void *obj) {
      ((::RHICfRaw_Op2017*)obj)->::RHICfRaw_Op2017::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::RHICfRaw_Op2017

//______________________________________________________________________________
void RHICfScl_Op2017::Streamer(TBuffer &R__b)
{
   // Stream an object of class RHICfScl_Op2017.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> run;
      R__b >> number;
      R__b.ReadStaticArray((unsigned int*)time);
      R__b.ReadStaticArray((unsigned int*)logic_counter);
      R__b.ReadStaticArray((unsigned int*)counter);
      R__b.CheckByteCount(R__s, R__c, RHICfScl_Op2017::IsA());
   } else {
      R__c = R__b.WriteVersion(RHICfScl_Op2017::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << run;
      R__b << number;
      R__b.WriteArray(time, 2);
      R__b.WriteArray(logic_counter, 12);
      R__b.WriteArray(counter, 120);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RHICfScl_Op2017::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RHICfScl_Op2017.
      TClass *R__cl = ::RHICfScl_Op2017::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "number", &number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time[2]", time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "logic_counter[12]", logic_counter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "counter[120]", counter);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RHICfScl_Op2017(void *p) {
      return  p ? new(p) ::RHICfScl_Op2017 : new ::RHICfScl_Op2017;
   }
   static void *newArray_RHICfScl_Op2017(Long_t nElements, void *p) {
      return p ? new(p) ::RHICfScl_Op2017[nElements] : new ::RHICfScl_Op2017[nElements];
   }
   // Wrapper around operator delete
   static void delete_RHICfScl_Op2017(void *p) {
      delete ((::RHICfScl_Op2017*)p);
   }
   static void deleteArray_RHICfScl_Op2017(void *p) {
      delete [] ((::RHICfScl_Op2017*)p);
   }
   static void destruct_RHICfScl_Op2017(void *p) {
      typedef ::RHICfScl_Op2017 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RHICfScl_Op2017(TBuffer &buf, void *obj) {
      ((::RHICfScl_Op2017*)obj)->::RHICfScl_Op2017::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::RHICfScl_Op2017

//______________________________________________________________________________
void RHICfSinglePar::Streamer(TBuffer &R__b)
{
   // Stream an object of class RHICfSinglePar.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> fIsInfiducial;
      R__b >> fIsBeamCenter;
      R__b >> fTower;
      R__b >> fId;
      fFourMomentum.Streamer(R__b);
      fPosition.Streamer(R__b);
      R__b >> fEnergy;
      fPid.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, RHICfSinglePar::IsA());
   } else {
      R__c = R__b.WriteVersion(RHICfSinglePar::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << fIsInfiducial;
      R__b << fIsBeamCenter;
      R__b << fTower;
      R__b << fId;
      fFourMomentum.Streamer(R__b);
      fPosition.Streamer(R__b);
      R__b << fEnergy;
      fPid.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RHICfSinglePar::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RHICfSinglePar.
      TClass *R__cl = ::RHICfSinglePar::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsInfiducial", &fIsInfiducial);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsBeamCenter", &fIsBeamCenter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTower", &fTower);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fId", &fId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFourMomentum", &fFourMomentum);
      R__insp.InspectMember(fFourMomentum, "fFourMomentum.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPosition", &fPosition);
      R__insp.InspectMember(fPosition, "fPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEnergy", &fEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPid", &fPid);
      R__insp.InspectMember(fPid, "fPid.");
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RHICfSinglePar(void *p) {
      return  p ? new(p) ::RHICfSinglePar : new ::RHICfSinglePar;
   }
   static void *newArray_RHICfSinglePar(Long_t nElements, void *p) {
      return p ? new(p) ::RHICfSinglePar[nElements] : new ::RHICfSinglePar[nElements];
   }
   // Wrapper around operator delete
   static void delete_RHICfSinglePar(void *p) {
      delete ((::RHICfSinglePar*)p);
   }
   static void deleteArray_RHICfSinglePar(void *p) {
      delete [] ((::RHICfSinglePar*)p);
   }
   static void destruct_RHICfSinglePar(void *p) {
      typedef ::RHICfSinglePar current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RHICfSinglePar(TBuffer &buf, void *obj) {
      ((::RHICfSinglePar*)obj)->::RHICfSinglePar::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::RHICfSinglePar

//______________________________________________________________________________
void RHICfPhotonPair::Streamer(TBuffer &R__b)
{
   // Stream an object of class RHICfPhotonPair.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> fIsBeamCenter;
      R__b >> fPi0Type;
      R__b >> fEnergy;
      fFourMomentum.Streamer(R__b);
      R__b >> fInvarMass;
      R__b >> fNumOfPars;
      R__b.ReadStaticArray((unsigned int*)fPhotonId);
      R__b.CheckByteCount(R__s, R__c, RHICfPhotonPair::IsA());
   } else {
      R__c = R__b.WriteVersion(RHICfPhotonPair::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << fIsBeamCenter;
      R__b << fPi0Type;
      R__b << fEnergy;
      fFourMomentum.Streamer(R__b);
      R__b << fInvarMass;
      R__b << fNumOfPars;
      R__b.WriteArray(fPhotonId, 2);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RHICfPhotonPair::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RHICfPhotonPair.
      TClass *R__cl = ::RHICfPhotonPair::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsBeamCenter", &fIsBeamCenter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPi0Type", &fPi0Type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEnergy", &fEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFourMomentum", &fFourMomentum);
      R__insp.InspectMember(fFourMomentum, "fFourMomentum.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInvarMass", &fInvarMass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumOfPars", &fNumOfPars);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhotonId[2]", fPhotonId);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RHICfPhotonPair(void *p) {
      return  p ? new(p) ::RHICfPhotonPair : new ::RHICfPhotonPair;
   }
   static void *newArray_RHICfPhotonPair(Long_t nElements, void *p) {
      return p ? new(p) ::RHICfPhotonPair[nElements] : new ::RHICfPhotonPair[nElements];
   }
   // Wrapper around operator delete
   static void delete_RHICfPhotonPair(void *p) {
      delete ((::RHICfPhotonPair*)p);
   }
   static void deleteArray_RHICfPhotonPair(void *p) {
      delete [] ((::RHICfPhotonPair*)p);
   }
   static void destruct_RHICfPhotonPair(void *p) {
      typedef ::RHICfPhotonPair current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RHICfPhotonPair(TBuffer &buf, void *obj) {
      ((::RHICfPhotonPair*)obj)->::RHICfPhotonPair::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::RHICfPhotonPair

//______________________________________________________________________________
void RHICfCollection::Streamer(TBuffer &R__b)
{
   // Stream an object of class RHICfCollection.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> fIsPhotonPair;
      fSinglePars.Streamer(R__b);
      fPhotonPairs.Streamer(R__b);
      R__b >> fEventInfo;
      R__b >> fNumOfPars;
      R__b >> fNumOfPairs;
      R__b >> fRunNumber;
      R__b >> fEventNumber;
      fTriggerType.Streamer(R__b);
      R__b >> fBunchId;
      fRunType.Streamer(R__b);
      fEventQuality.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, RHICfCollection::IsA());
   } else {
      R__c = R__b.WriteVersion(RHICfCollection::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << fIsPhotonPair;
      fSinglePars.Streamer(R__b);
      fPhotonPairs.Streamer(R__b);
      R__b << fEventInfo;
      R__b << fNumOfPars;
      R__b << fNumOfPairs;
      R__b << fRunNumber;
      R__b << fEventNumber;
      fTriggerType.Streamer(R__b);
      R__b << fBunchId;
      fRunType.Streamer(R__b);
      fEventQuality.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RHICfCollection::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RHICfCollection.
      TClass *R__cl = ::RHICfCollection::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsPhotonPair", &fIsPhotonPair);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSinglePars", &fSinglePars);
      R__insp.InspectMember(fSinglePars, "fSinglePars.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhotonPairs", &fPhotonPairs);
      R__insp.InspectMember(fPhotonPairs, "fPhotonPairs.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEventInfo", &fEventInfo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumOfPars", &fNumOfPars);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumOfPairs", &fNumOfPairs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunNumber", &fRunNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventNumber", &fEventNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTriggerType", &fTriggerType);
      R__insp.InspectMember(fTriggerType, "fTriggerType.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBunchId", &fBunchId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunType", &fRunType);
      R__insp.InspectMember(fRunType, "fRunType.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventQuality", &fEventQuality);
      R__insp.InspectMember(fEventQuality, "fEventQuality.");
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RHICfCollection(void *p) {
      return  p ? new(p) ::RHICfCollection : new ::RHICfCollection;
   }
   static void *newArray_RHICfCollection(Long_t nElements, void *p) {
      return p ? new(p) ::RHICfCollection[nElements] : new ::RHICfCollection[nElements];
   }
   // Wrapper around operator delete
   static void delete_RHICfCollection(void *p) {
      delete ((::RHICfCollection*)p);
   }
   static void deleteArray_RHICfCollection(void *p) {
      delete [] ((::RHICfCollection*)p);
   }
   static void destruct_RHICfCollection(void *p) {
      typedef ::RHICfCollection current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RHICfCollection(TBuffer &buf, void *obj) {
      ((::RHICfCollection*)obj)->::RHICfCollection::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::RHICfCollection

//______________________________________________________________________________
void A1Cal1AccumHist::Streamer(TBuffer &R__b)
{
   // Stream an object of class A1Cal1AccumHist.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      int R__i;
      for (R__i = 0; R__i < 64; R__i++)
         R__b >> hist_cal[0][0][R__i];
      for (R__i = 0; R__i < 8; R__i++)
         R__b >> hist_noise[R__i];
      for (R__i = 0; R__i < 8; R__i++)
         R__b >> hist_fc[0][R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b >> hist_laser[R__i];
      for (R__i = 0; R__i < 16; R__i++)
         R__b >> haccum_scifi[0][0][R__i];
      for (R__i = 0; R__i < 16; R__i++)
         R__b >> hist_scifi[0][0][R__i];
      for (R__i = 0; R__i < 3; R__i++)
         R__b >> hist_flag[R__i];
      for (R__i = 0; R__i < 7; R__i++)
         R__b >> hist_tdc[R__i];
      for (R__i = 0; R__i < 3; R__i++)
         R__b >> hist_scl[R__i];
      R__b >> hist_nbin;
      R__b >> hist_binmin;
      R__b >> hist_binmax;
      R__b >> hscifi_nbin;
      R__b >> hscifi_binmin;
      R__b >> hscifi_binmax;
      R__b >> hscifi_channel;
      void *ptr_f_DataVersion = (void*)&f_DataVersion;
      R__b >> *reinterpret_cast<Int_t*>(ptr_f_DataVersion);
      R__b.CheckByteCount(R__s, R__c, A1Cal1AccumHist::IsA());
   } else {
      R__c = R__b.WriteVersion(A1Cal1AccumHist::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      int R__i;
      for (R__i = 0; R__i < 64; R__i++)
         R__b << (TObject*)hist_cal[0][0][R__i];
      for (R__i = 0; R__i < 8; R__i++)
         R__b << (TObject*)hist_noise[R__i];
      for (R__i = 0; R__i < 8; R__i++)
         R__b << (TObject*)hist_fc[0][R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b << (TObject*)hist_laser[R__i];
      for (R__i = 0; R__i < 16; R__i++)
         R__b << (TObject*)haccum_scifi[0][0][R__i];
      for (R__i = 0; R__i < 16; R__i++)
         R__b << (TObject*)hist_scifi[0][0][R__i];
      for (R__i = 0; R__i < 3; R__i++)
         R__b << (TObject*)hist_flag[R__i];
      for (R__i = 0; R__i < 7; R__i++)
         R__b << (TObject*)hist_tdc[R__i];
      for (R__i = 0; R__i < 3; R__i++)
         R__b << (TObject*)hist_scl[R__i];
      R__b << hist_nbin;
      R__b << hist_binmin;
      R__b << hist_binmax;
      R__b << hscifi_nbin;
      R__b << hscifi_binmin;
      R__b << hscifi_binmax;
      R__b << hscifi_channel;
      R__b << (Int_t)f_DataVersion;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void A1Cal1AccumHist::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class A1Cal1AccumHist.
      TClass *R__cl = ::A1Cal1AccumHist::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hist_cal[2][16][2]", &hist_cal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hist_noise[8]", &hist_noise);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hist_fc[2][4]", &hist_fc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hist_laser[2]", &hist_laser);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*haccum_scifi[2][4][2]", &haccum_scifi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hist_scifi[2][4][2]", &hist_scifi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hist_flag[3]", &hist_flag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hist_tdc[7]", &hist_tdc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hist_scl[3]", &hist_scl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hist_nbin", &hist_nbin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hist_binmin", &hist_binmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hist_binmax", &hist_binmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hscifi_nbin", &hscifi_nbin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hscifi_binmin", &hscifi_binmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hscifi_binmax", &hscifi_binmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hscifi_channel", &hscifi_channel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c_cal0", &c_cal0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c_cal1", &c_cal1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c_adcs", &c_adcs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c_flag", &c_flag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c_tdc", &c_tdc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c_scifi", &c_scifi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "f_DataVersion", &f_DataVersion);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_A1Cal1AccumHist(void *p) {
      return  p ? new(p) ::A1Cal1AccumHist : new ::A1Cal1AccumHist;
   }
   static void *newArray_A1Cal1AccumHist(Long_t nElements, void *p) {
      return p ? new(p) ::A1Cal1AccumHist[nElements] : new ::A1Cal1AccumHist[nElements];
   }
   // Wrapper around operator delete
   static void delete_A1Cal1AccumHist(void *p) {
      delete ((::A1Cal1AccumHist*)p);
   }
   static void deleteArray_A1Cal1AccumHist(void *p) {
      delete [] ((::A1Cal1AccumHist*)p);
   }
   static void destruct_A1Cal1AccumHist(void *p) {
      typedef ::A1Cal1AccumHist current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_A1Cal1AccumHist(TBuffer &buf, void *obj) {
      ((::A1Cal1AccumHist*)obj)->::A1Cal1AccumHist::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::A1Cal1AccumHist

//______________________________________________________________________________
void A1Cal2AccumHist::Streamer(TBuffer &R__b)
{
   // Stream an object of class A1Cal2AccumHist.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      int R__i;
      for (R__i = 0; R__i < 32; R__i++)
         R__b >> hist_cal[0][R__i];
      for (R__i = 0; R__i < 16; R__i++)
         R__b >> haccum_scifi[0][0][R__i];
      R__b.CheckByteCount(R__s, R__c, A1Cal2AccumHist::IsA());
   } else {
      R__c = R__b.WriteVersion(A1Cal2AccumHist::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      int R__i;
      for (R__i = 0; R__i < 32; R__i++)
         R__b << (TObject*)hist_cal[0][R__i];
      for (R__i = 0; R__i < 16; R__i++)
         R__b << (TObject*)haccum_scifi[0][0][R__i];
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void A1Cal2AccumHist::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class A1Cal2AccumHist.
      TClass *R__cl = ::A1Cal2AccumHist::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hist_cal[2][16]", &hist_cal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*haccum_scifi[2][4][2]", &haccum_scifi);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_A1Cal2AccumHist(void *p) {
      return  p ? new(p) ::A1Cal2AccumHist : new ::A1Cal2AccumHist;
   }
   static void *newArray_A1Cal2AccumHist(Long_t nElements, void *p) {
      return p ? new(p) ::A1Cal2AccumHist[nElements] : new ::A1Cal2AccumHist[nElements];
   }
   // Wrapper around operator delete
   static void delete_A1Cal2AccumHist(void *p) {
      delete ((::A1Cal2AccumHist*)p);
   }
   static void deleteArray_A1Cal2AccumHist(void *p) {
      delete [] ((::A1Cal2AccumHist*)p);
   }
   static void destruct_A1Cal2AccumHist(void *p) {
      typedef ::A1Cal2AccumHist current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_A1Cal2AccumHist(TBuffer &buf, void *obj) {
      ((::A1Cal2AccumHist*)obj)->::A1Cal2AccumHist::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::A1Cal2AccumHist

//______________________________________________________________________________
void A1PhysAccumHist::Streamer(TBuffer &R__b)
{
   // Stream an object of class A1PhysAccumHist.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      int R__i;
      for (R__i = 0; R__i < 2; R__i++)
         R__b >> henergy[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b >> h2pos[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b >> h2flux[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b >> hpid[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b >> hhits[R__i];
      R__b.CheckByteCount(R__s, R__c, A1PhysAccumHist::IsA());
   } else {
      R__c = R__b.WriteVersion(A1PhysAccumHist::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      int R__i;
      for (R__i = 0; R__i < 2; R__i++)
         R__b << (TObject*)henergy[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b << (TObject*)h2pos[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b << (TObject*)h2flux[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b << (TObject*)hpid[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b << (TObject*)hhits[R__i];
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void A1PhysAccumHist::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class A1PhysAccumHist.
      TClass *R__cl = ::A1PhysAccumHist::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*henergy[2]", &henergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h2pos[2]", &h2pos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h2flux[2]", &h2flux);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hpid[2]", &hpid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hhits[2]", &hhits);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_A1PhysAccumHist(void *p) {
      return  p ? new(p) ::A1PhysAccumHist : new ::A1PhysAccumHist;
   }
   static void *newArray_A1PhysAccumHist(Long_t nElements, void *p) {
      return p ? new(p) ::A1PhysAccumHist[nElements] : new ::A1PhysAccumHist[nElements];
   }
   // Wrapper around operator delete
   static void delete_A1PhysAccumHist(void *p) {
      delete ((::A1PhysAccumHist*)p);
   }
   static void deleteArray_A1PhysAccumHist(void *p) {
      delete [] ((::A1PhysAccumHist*)p);
   }
   static void destruct_A1PhysAccumHist(void *p) {
      typedef ::A1PhysAccumHist current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_A1PhysAccumHist(TBuffer &buf, void *obj) {
      ((::A1PhysAccumHist*)obj)->::A1PhysAccumHist::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::A1PhysAccumHist

//______________________________________________________________________________
void A1CountArray::Streamer(TBuffer &R__b)
{
   // Stream an object of class A1CountArray.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> nchannel;
      R__b >> ndata;
      R__b >> idata;
      R__b.ReadStaticArray((double*)time);
      R__b.ReadStaticArray((float*)count);
      R__b.ReadStaticArray((float*)rate);
      R__b.CheckByteCount(R__s, R__c, A1CountArray::IsA());
   } else {
      R__c = R__b.WriteVersion(A1CountArray::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << nchannel;
      R__b << ndata;
      R__b << idata;
      R__b.WriteArray(time, 720);
      R__b.WriteArray((float*)count, 12960);
      R__b.WriteArray((float*)rate, 12960);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void A1CountArray::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class A1CountArray.
      TClass *R__cl = ::A1CountArray::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nchannel", &nchannel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ndata", &ndata);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "idata", &idata);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time[720]", time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "count[18][720]", count);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rate[18][720]", rate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1scl", &a1scl);
      R__insp.InspectMember(a1scl, "a1scl.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a1cal1", &a1cal1);
      R__insp.InspectMember(a1cal1, "a1cal1.");
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_A1CountArray(void *p) {
      return  p ? new(p) ::A1CountArray : new ::A1CountArray;
   }
   static void *newArray_A1CountArray(Long_t nElements, void *p) {
      return p ? new(p) ::A1CountArray[nElements] : new ::A1CountArray[nElements];
   }
   // Wrapper around operator delete
   static void delete_A1CountArray(void *p) {
      delete ((::A1CountArray*)p);
   }
   static void deleteArray_A1CountArray(void *p) {
      delete [] ((::A1CountArray*)p);
   }
   static void destruct_A1CountArray(void *p) {
      typedef ::A1CountArray current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_A1CountArray(TBuffer &buf, void *obj) {
      ((::A1CountArray*)obj)->::A1CountArray::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::A1CountArray

//______________________________________________________________________________
void A1CalEventHist::Streamer(TBuffer &R__b)
{
   // Stream an object of class A1CalEventHist.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      int R__i;
      for (R__i = 0; R__i < 4; R__i++)
         R__b >> hist_cal[0][R__i];
      for (R__i = 0; R__i < 4; R__i++)
         R__b >> hist_cald[0][R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b >> hist_fc[R__i];
      R__b >> hist_laser;
      R__b >> hist_noise;
      for (R__i = 0; R__i < 16; R__i++)
         R__b >> hist_scifi[0][0][R__i];
      R__b >> g_tdc;
      for (R__i = 0; R__i < 7; R__i++)
         R__b >> t_info[R__i];
      for (R__i = 0; R__i < 192; R__i++)
         R__b >> t_tdc[0][R__i];
      for (R__i = 0; R__i < 16; R__i++)
         R__b >> t_scl[R__i];
      for (R__i = 0; R__i < 96; R__i++)
         R__b >> t_flag[0][R__i];
      for (R__i = 0; R__i < 3; R__i++)
         R__b >> t_flagd[R__i];
      for (R__i = 0; R__i < 35; R__i++)
         R__b >> t_cnt[R__i];
      for (R__i = 0; R__i < 8; R__i++)
         R__b >> t_fifo[R__i];
      R__b.ReadStaticArray((char*)cname);
      R__b.ReadStaticArray((char*)ctitle);
      R__b.CheckByteCount(R__s, R__c, A1CalEventHist::IsA());
   } else {
      R__c = R__b.WriteVersion(A1CalEventHist::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      int R__i;
      for (R__i = 0; R__i < 4; R__i++)
         R__b << (TObject*)hist_cal[0][R__i];
      for (R__i = 0; R__i < 4; R__i++)
         R__b << (TObject*)hist_cald[0][R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b << (TObject*)hist_fc[R__i];
      R__b << (TObject*)hist_laser;
      R__b << (TObject*)hist_noise;
      for (R__i = 0; R__i < 16; R__i++)
         R__b << (TObject*)hist_scifi[0][0][R__i];
      R__b << g_tdc;
      for (R__i = 0; R__i < 7; R__i++)
         R__b << t_info[R__i];
      for (R__i = 0; R__i < 192; R__i++)
         R__b << t_tdc[0][R__i];
      for (R__i = 0; R__i < 16; R__i++)
         R__b << t_scl[R__i];
      for (R__i = 0; R__i < 96; R__i++)
         R__b << t_flag[0][R__i];
      for (R__i = 0; R__i < 3; R__i++)
         R__b << t_flagd[R__i];
      for (R__i = 0; R__i < 35; R__i++)
         R__b << t_cnt[R__i];
      for (R__i = 0; R__i < 8; R__i++)
         R__b << t_fifo[R__i];
      R__b.WriteArray(cname, 256);
      R__b.WriteArray(ctitle, 256);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void A1CalEventHist::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class A1CalEventHist.
      TClass *R__cl = ::A1CalEventHist::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hist_cal[2][2]", &hist_cal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hist_cald[2][2]", &hist_cald);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hist_fc[2]", &hist_fc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hist_laser", &hist_laser);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hist_noise", &hist_noise);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hist_scifi[2][4][2]", &hist_scifi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*g_tdc", &g_tdc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*t_info[7]", &t_info);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*t_tdc[12][16]", &t_tdc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*t_scl[16]", &t_scl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*t_flag[3][32]", &t_flag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*t_flagd[3]", &t_flagd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*t_cnt[35]", &t_cnt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*t_fifo[8]", &t_fifo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c1", &c1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c1pad1_1", &c1pad1_1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c1pad1_2", &c1pad1_2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c1pad1_3", &c1pad1_3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c1pad1_4", &c1pad1_4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c1pad2_1", &c1pad2_1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c1pad2_2", &c1pad2_2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c1pad3_1", &c1pad3_1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c1pad3_2", &c1pad3_2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c1pad4_1", &c1pad4_1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c1pad4_2", &c1pad4_2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c2", &c2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c2pad1", &c2pad1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c2pad2", &c2pad2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c2pad3", &c2pad3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c2pad4", &c2pad4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c3", &c3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c3pad[8]", &c3pad);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*l_cnt[35]", &l_cnt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*l_tdc[12]", &l_tdc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*l_scl[16]", &l_scl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*lf_0", &lf_0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*lf_1", &lf_1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*lf_2", &lf_2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gpioversion", &gpioversion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "f_DisplayVersion", &f_DisplayVersion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cname[256]", cname);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ctitle[256]", ctitle);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_A1CalEventHist(void *p) {
      return  p ? new(p) ::A1CalEventHist : new ::A1CalEventHist;
   }
   static void *newArray_A1CalEventHist(Long_t nElements, void *p) {
      return p ? new(p) ::A1CalEventHist[nElements] : new ::A1CalEventHist[nElements];
   }
   // Wrapper around operator delete
   static void delete_A1CalEventHist(void *p) {
      delete ((::A1CalEventHist*)p);
   }
   static void deleteArray_A1CalEventHist(void *p) {
      delete [] ((::A1CalEventHist*)p);
   }
   static void destruct_A1CalEventHist(void *p) {
      typedef ::A1CalEventHist current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_A1CalEventHist(TBuffer &buf, void *obj) {
      ((::A1CalEventHist*)obj)->::A1CalEventHist::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::A1CalEventHist

//______________________________________________________________________________
void A2Cal1AccumHist::Streamer(TBuffer &R__b)
{
   // Stream an object of class A2Cal1AccumHist.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      int R__i;
      for (R__i = 0; R__i < 64; R__i++)
         R__b >> hist_cal[0][0][R__i];
      for (R__i = 0; R__i < 8; R__i++)
         R__b >> hist_noise[R__i];
      for (R__i = 0; R__i < 8; R__i++)
         R__b >> hist_fc[0][R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b >> hist_laser[R__i];
      for (R__i = 0; R__i < 24; R__i++)
         R__b >> haccum_silicon[0][0][R__i];
      for (R__i = 0; R__i < 24; R__i++)
         R__b >> hist_silicon[0][0][R__i];
      for (R__i = 0; R__i < 3; R__i++)
         R__b >> hist_flag[R__i];
      for (R__i = 0; R__i < 7; R__i++)
         R__b >> hist_tdc[R__i];
      for (R__i = 0; R__i < 3; R__i++)
         R__b >> hist_scl[R__i];
      R__b >> hist_nbin;
      R__b >> hist_binmin;
      R__b >> hist_binmax;
      R__b >> hsilicon_nbin;
      R__b >> hsilicon_binmin;
      R__b >> hsilicon_binmax;
      R__b >> hsilicon_channel;
      R__b.CheckByteCount(R__s, R__c, A2Cal1AccumHist::IsA());
   } else {
      R__c = R__b.WriteVersion(A2Cal1AccumHist::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      int R__i;
      for (R__i = 0; R__i < 64; R__i++)
         R__b << (TObject*)hist_cal[0][0][R__i];
      for (R__i = 0; R__i < 8; R__i++)
         R__b << (TObject*)hist_noise[R__i];
      for (R__i = 0; R__i < 8; R__i++)
         R__b << (TObject*)hist_fc[0][R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b << (TObject*)hist_laser[R__i];
      for (R__i = 0; R__i < 24; R__i++)
         R__b << (TObject*)haccum_silicon[0][0][R__i];
      for (R__i = 0; R__i < 24; R__i++)
         R__b << (TObject*)hist_silicon[0][0][R__i];
      for (R__i = 0; R__i < 3; R__i++)
         R__b << (TObject*)hist_flag[R__i];
      for (R__i = 0; R__i < 7; R__i++)
         R__b << (TObject*)hist_tdc[R__i];
      for (R__i = 0; R__i < 3; R__i++)
         R__b << (TObject*)hist_scl[R__i];
      R__b << hist_nbin;
      R__b << hist_binmin;
      R__b << hist_binmax;
      R__b << hsilicon_nbin;
      R__b << hsilicon_binmin;
      R__b << hsilicon_binmax;
      R__b << hsilicon_channel;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void A2Cal1AccumHist::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class A2Cal1AccumHist.
      TClass *R__cl = ::A2Cal1AccumHist::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hist_cal[2][16][2]", &hist_cal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hist_noise[8]", &hist_noise);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hist_fc[2][4]", &hist_fc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hist_laser[2]", &hist_laser);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*haccum_silicon[4][2][3]", &haccum_silicon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hist_silicon[4][2][3]", &hist_silicon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hist_flag[3]", &hist_flag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hist_tdc[7]", &hist_tdc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hist_scl[3]", &hist_scl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hist_nbin", &hist_nbin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hist_binmin", &hist_binmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hist_binmax", &hist_binmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hsilicon_nbin", &hsilicon_nbin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hsilicon_binmin", &hsilicon_binmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hsilicon_binmax", &hsilicon_binmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hsilicon_channel", &hsilicon_channel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c_cal0", &c_cal0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c_cal1", &c_cal1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c_adcs", &c_adcs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c_flag", &c_flag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c_tdc", &c_tdc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c_si", &c_si);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_A2Cal1AccumHist(void *p) {
      return  p ? new(p) ::A2Cal1AccumHist : new ::A2Cal1AccumHist;
   }
   static void *newArray_A2Cal1AccumHist(Long_t nElements, void *p) {
      return p ? new(p) ::A2Cal1AccumHist[nElements] : new ::A2Cal1AccumHist[nElements];
   }
   // Wrapper around operator delete
   static void delete_A2Cal1AccumHist(void *p) {
      delete ((::A2Cal1AccumHist*)p);
   }
   static void deleteArray_A2Cal1AccumHist(void *p) {
      delete [] ((::A2Cal1AccumHist*)p);
   }
   static void destruct_A2Cal1AccumHist(void *p) {
      typedef ::A2Cal1AccumHist current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_A2Cal1AccumHist(TBuffer &buf, void *obj) {
      ((::A2Cal1AccumHist*)obj)->::A2Cal1AccumHist::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::A2Cal1AccumHist

//______________________________________________________________________________
void A2Cal2AccumHist::Streamer(TBuffer &R__b)
{
   // Stream an object of class A2Cal2AccumHist.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      int R__i;
      for (R__i = 0; R__i < 32; R__i++)
         R__b >> hist_cal[0][R__i];
      R__b.CheckByteCount(R__s, R__c, A2Cal2AccumHist::IsA());
   } else {
      R__c = R__b.WriteVersion(A2Cal2AccumHist::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      int R__i;
      for (R__i = 0; R__i < 32; R__i++)
         R__b << (TObject*)hist_cal[0][R__i];
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void A2Cal2AccumHist::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class A2Cal2AccumHist.
      TClass *R__cl = ::A2Cal2AccumHist::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hist_cal[2][16]", &hist_cal);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_A2Cal2AccumHist(void *p) {
      return  p ? new(p) ::A2Cal2AccumHist : new ::A2Cal2AccumHist;
   }
   static void *newArray_A2Cal2AccumHist(Long_t nElements, void *p) {
      return p ? new(p) ::A2Cal2AccumHist[nElements] : new ::A2Cal2AccumHist[nElements];
   }
   // Wrapper around operator delete
   static void delete_A2Cal2AccumHist(void *p) {
      delete ((::A2Cal2AccumHist*)p);
   }
   static void deleteArray_A2Cal2AccumHist(void *p) {
      delete [] ((::A2Cal2AccumHist*)p);
   }
   static void destruct_A2Cal2AccumHist(void *p) {
      typedef ::A2Cal2AccumHist current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_A2Cal2AccumHist(TBuffer &buf, void *obj) {
      ((::A2Cal2AccumHist*)obj)->::A2Cal2AccumHist::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::A2Cal2AccumHist

//______________________________________________________________________________
void A2PhysAccumHist::Streamer(TBuffer &R__b)
{
   // Stream an object of class A2PhysAccumHist.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      int R__i;
      for (R__i = 0; R__i < 2; R__i++)
         R__b >> henergy[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b >> h2pos[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b >> h2flux[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b >> hpid[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b >> hhits[R__i];
      for (R__i = 0; R__i < 16; R__i++)
         R__b >> hsideposit[0][0][R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b >> hsidepositsum[R__i];
      R__b.CheckByteCount(R__s, R__c, A2PhysAccumHist::IsA());
   } else {
      R__c = R__b.WriteVersion(A2PhysAccumHist::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      int R__i;
      for (R__i = 0; R__i < 2; R__i++)
         R__b << (TObject*)henergy[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b << (TObject*)h2pos[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b << (TObject*)h2flux[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b << (TObject*)hpid[R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b << (TObject*)hhits[R__i];
      for (R__i = 0; R__i < 16; R__i++)
         R__b << (TObject*)hsideposit[0][0][R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b << (TObject*)hsidepositsum[R__i];
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void A2PhysAccumHist::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class A2PhysAccumHist.
      TClass *R__cl = ::A2PhysAccumHist::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*henergy[2]", &henergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h2pos[2]", &h2pos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h2flux[2]", &h2flux);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hpid[2]", &hpid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hhits[2]", &hhits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hsideposit[2][4][2]", &hsideposit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hsidepositsum[2]", &hsidepositsum);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_A2PhysAccumHist(void *p) {
      return  p ? new(p) ::A2PhysAccumHist : new ::A2PhysAccumHist;
   }
   static void *newArray_A2PhysAccumHist(Long_t nElements, void *p) {
      return p ? new(p) ::A2PhysAccumHist[nElements] : new ::A2PhysAccumHist[nElements];
   }
   // Wrapper around operator delete
   static void delete_A2PhysAccumHist(void *p) {
      delete ((::A2PhysAccumHist*)p);
   }
   static void deleteArray_A2PhysAccumHist(void *p) {
      delete [] ((::A2PhysAccumHist*)p);
   }
   static void destruct_A2PhysAccumHist(void *p) {
      typedef ::A2PhysAccumHist current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_A2PhysAccumHist(TBuffer &buf, void *obj) {
      ((::A2PhysAccumHist*)obj)->::A2PhysAccumHist::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::A2PhysAccumHist

//______________________________________________________________________________
void A2CountArray::Streamer(TBuffer &R__b)
{
   // Stream an object of class A2CountArray.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> nchannel;
      R__b >> ndata;
      R__b >> idata;
      R__b.ReadStaticArray((double*)time);
      R__b.ReadStaticArray((float*)count);
      R__b.ReadStaticArray((float*)rate);
      R__b.CheckByteCount(R__s, R__c, A2CountArray::IsA());
   } else {
      R__c = R__b.WriteVersion(A2CountArray::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << nchannel;
      R__b << ndata;
      R__b << idata;
      R__b.WriteArray(time, 720);
      R__b.WriteArray((float*)count, 12960);
      R__b.WriteArray((float*)rate, 12960);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void A2CountArray::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class A2CountArray.
      TClass *R__cl = ::A2CountArray::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nchannel", &nchannel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ndata", &ndata);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "idata", &idata);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time[720]", time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "count[18][720]", count);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rate[18][720]", rate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a2scl", &a2scl);
      R__insp.InspectMember(a2scl, "a2scl.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "a2cal1", &a2cal1);
      R__insp.InspectMember(a2cal1, "a2cal1.");
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_A2CountArray(void *p) {
      return  p ? new(p) ::A2CountArray : new ::A2CountArray;
   }
   static void *newArray_A2CountArray(Long_t nElements, void *p) {
      return p ? new(p) ::A2CountArray[nElements] : new ::A2CountArray[nElements];
   }
   // Wrapper around operator delete
   static void delete_A2CountArray(void *p) {
      delete ((::A2CountArray*)p);
   }
   static void deleteArray_A2CountArray(void *p) {
      delete [] ((::A2CountArray*)p);
   }
   static void destruct_A2CountArray(void *p) {
      typedef ::A2CountArray current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_A2CountArray(TBuffer &buf, void *obj) {
      ((::A2CountArray*)obj)->::A2CountArray::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::A2CountArray

//______________________________________________________________________________
void A2CalEventHist::Streamer(TBuffer &R__b)
{
   // Stream an object of class A2CalEventHist.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      int R__i;
      for (R__i = 0; R__i < 4; R__i++)
         R__b >> hist_cal[0][R__i];
      for (R__i = 0; R__i < 4; R__i++)
         R__b >> hist_cald[0][R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b >> hist_fc[R__i];
      R__b >> hist_laser;
      R__b >> hist_noise;
      for (R__i = 0; R__i < 24; R__i++)
         R__b >> hist_silicon[0][0][R__i];
      R__b >> g_tdc;
      for (R__i = 0; R__i < 7; R__i++)
         R__b >> t_info[R__i];
      for (R__i = 0; R__i < 192; R__i++)
         R__b >> t_tdc[0][R__i];
      for (R__i = 0; R__i < 16; R__i++)
         R__b >> t_scl[R__i];
      for (R__i = 0; R__i < 96; R__i++)
         R__b >> t_flag[0][R__i];
      for (R__i = 0; R__i < 3; R__i++)
         R__b >> t_flagd[R__i];
      for (R__i = 0; R__i < 35; R__i++)
         R__b >> t_cnt[R__i];
      for (R__i = 0; R__i < 8; R__i++)
         R__b >> t_fifo[R__i];
      R__b.ReadStaticArray((char*)cname);
      R__b.ReadStaticArray((char*)ctitle);
      R__b.CheckByteCount(R__s, R__c, A2CalEventHist::IsA());
   } else {
      R__c = R__b.WriteVersion(A2CalEventHist::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      int R__i;
      for (R__i = 0; R__i < 4; R__i++)
         R__b << (TObject*)hist_cal[0][R__i];
      for (R__i = 0; R__i < 4; R__i++)
         R__b << (TObject*)hist_cald[0][R__i];
      for (R__i = 0; R__i < 2; R__i++)
         R__b << (TObject*)hist_fc[R__i];
      R__b << (TObject*)hist_laser;
      R__b << (TObject*)hist_noise;
      for (R__i = 0; R__i < 24; R__i++)
         R__b << (TObject*)hist_silicon[0][0][R__i];
      R__b << g_tdc;
      for (R__i = 0; R__i < 7; R__i++)
         R__b << t_info[R__i];
      for (R__i = 0; R__i < 192; R__i++)
         R__b << t_tdc[0][R__i];
      for (R__i = 0; R__i < 16; R__i++)
         R__b << t_scl[R__i];
      for (R__i = 0; R__i < 96; R__i++)
         R__b << t_flag[0][R__i];
      for (R__i = 0; R__i < 3; R__i++)
         R__b << t_flagd[R__i];
      for (R__i = 0; R__i < 35; R__i++)
         R__b << t_cnt[R__i];
      for (R__i = 0; R__i < 8; R__i++)
         R__b << t_fifo[R__i];
      R__b.WriteArray(cname, 256);
      R__b.WriteArray(ctitle, 256);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void A2CalEventHist::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class A2CalEventHist.
      TClass *R__cl = ::A2CalEventHist::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hist_cal[2][2]", &hist_cal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hist_cald[2][2]", &hist_cald);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hist_fc[2]", &hist_fc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hist_laser", &hist_laser);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hist_noise", &hist_noise);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hist_silicon[4][2][3]", &hist_silicon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*g_tdc", &g_tdc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*t_info[7]", &t_info);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*t_tdc[12][16]", &t_tdc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*t_scl[16]", &t_scl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*t_flag[3][32]", &t_flag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*t_flagd[3]", &t_flagd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*t_cnt[35]", &t_cnt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*t_fifo[8]", &t_fifo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c1", &c1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c1pad1_1", &c1pad1_1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c1pad1_2", &c1pad1_2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c1pad1_3", &c1pad1_3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c1pad1_4", &c1pad1_4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c1pad2_1", &c1pad2_1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c1pad2_2", &c1pad2_2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c1pad3_1", &c1pad3_1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c1pad3_2", &c1pad3_2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c1pad4_1", &c1pad4_1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c1pad4_2", &c1pad4_2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c2", &c2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c2pad1", &c2pad1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c2pad2", &c2pad2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c2pad3", &c2pad3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c2pad4", &c2pad4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c3", &c3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*l_cnt[35]", &l_cnt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*l_tdc[12]", &l_tdc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*l_scl[16]", &l_scl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*lf_0", &lf_0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*lf_1", &lf_1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*lf_2", &lf_2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gpioversion", &gpioversion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "f_DisplayVersion", &f_DisplayVersion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cname[256]", cname);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ctitle[256]", ctitle);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_A2CalEventHist(void *p) {
      return  p ? new(p) ::A2CalEventHist : new ::A2CalEventHist;
   }
   static void *newArray_A2CalEventHist(Long_t nElements, void *p) {
      return p ? new(p) ::A2CalEventHist[nElements] : new ::A2CalEventHist[nElements];
   }
   // Wrapper around operator delete
   static void delete_A2CalEventHist(void *p) {
      delete ((::A2CalEventHist*)p);
   }
   static void deleteArray_A2CalEventHist(void *p) {
      delete [] ((::A2CalEventHist*)p);
   }
   static void destruct_A2CalEventHist(void *p) {
      typedef ::A2CalEventHist current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_A2CalEventHist(TBuffer &buf, void *obj) {
      ((::A2CalEventHist*)obj)->::A2CalEventHist::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::A2CalEventHist

//______________________________________________________________________________
void SimP::Streamer(TBuffer &R__b)
{
   // Stream an object of class SimP.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> code;
      R__b >> subcode;
      R__b >> charge;
      R__b >> user;
      R__b.ReadStaticArray((double*)pos);
      R__b >> energy;
      R__b.ReadStaticArray((double*)mom);
      R__b.CheckByteCount(R__s, R__c, SimP::IsA());
   } else {
      R__c = R__b.WriteVersion(SimP::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << code;
      R__b << subcode;
      R__b << charge;
      R__b << user;
      R__b.WriteArray(pos, 3);
      R__b << energy;
      R__b.WriteArray(mom, 3);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void SimP::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class SimP.
      TClass *R__cl = ::SimP::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "code", &code);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "subcode", &subcode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "charge", &charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "user", &user);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pos[3]", pos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energy", &energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mom[3]", mom);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_SimP(void *p) {
      return  p ? new(p) ::SimP : new ::SimP;
   }
   static void *newArray_SimP(Long_t nElements, void *p) {
      return p ? new(p) ::SimP[nElements] : new ::SimP[nElements];
   }
   // Wrapper around operator delete
   static void delete_SimP(void *p) {
      delete ((::SimP*)p);
   }
   static void deleteArray_SimP(void *p) {
      delete [] ((::SimP*)p);
   }
   static void destruct_SimP(void *p) {
      typedef ::SimP current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_SimP(TBuffer &buf, void *obj) {
      ((::SimP*)obj)->::SimP::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::SimP

//______________________________________________________________________________
void SimIncidents::Streamer(TBuffer &R__b)
{
   // Stream an object of class SimIncidents.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> run;
      R__b >> number;
      R__b >> gnumber;
      R__b >> np;
      particles.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, SimIncidents::IsA());
   } else {
      R__c = R__b.WriteVersion(SimIncidents::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << run;
      R__b << number;
      R__b << gnumber;
      R__b << np;
      particles.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void SimIncidents::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class SimIncidents.
      TClass *R__cl = ::SimIncidents::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "number", &number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gnumber", &gnumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "np", &np);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "particles", &particles);
      R__insp.InspectMember(particles, "particles.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ref[10]", ref);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_SimIncidents(void *p) {
      return  p ? new(p) ::SimIncidents : new ::SimIncidents;
   }
   static void *newArray_SimIncidents(Long_t nElements, void *p) {
      return p ? new(p) ::SimIncidents[nElements] : new ::SimIncidents[nElements];
   }
   // Wrapper around operator delete
   static void delete_SimIncidents(void *p) {
      delete ((::SimIncidents*)p);
   }
   static void deleteArray_SimIncidents(void *p) {
      delete [] ((::SimIncidents*)p);
   }
   static void destruct_SimIncidents(void *p) {
      typedef ::SimIncidents current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_SimIncidents(TBuffer &buf, void *obj) {
      ((::SimIncidents*)obj)->::SimIncidents::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::SimIncidents

//______________________________________________________________________________
void GParam::Streamer(TBuffer &R__b)
{
   // Stream an object of class GParam.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> run;
      R__b >> number;
      R__b >> gnumber;
      R__b.ReadStaticArray((int*)parami);
      R__b.ReadStaticArray((double*)paramd);
      R__b.CheckByteCount(R__s, R__c, GParam::IsA());
   } else {
      R__c = R__b.WriteVersion(GParam::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << run;
      R__b << number;
      R__b << gnumber;
      R__b.WriteArray(parami, 32);
      R__b.WriteArray(paramd, 32);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void GParam::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class GParam.
      TClass *R__cl = ::GParam::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "number", &number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gnumber", &gnumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parami[32]", parami);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "paramd[32]", paramd);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_GParam(void *p) {
      return  p ? new(p) ::GParam : new ::GParam;
   }
   static void *newArray_GParam(Long_t nElements, void *p) {
      return p ? new(p) ::GParam[nElements] : new ::GParam[nElements];
   }
   // Wrapper around operator delete
   static void delete_GParam(void *p) {
      delete ((::GParam*)p);
   }
   static void deleteArray_GParam(void *p) {
      delete [] ((::GParam*)p);
   }
   static void destruct_GParam(void *p) {
      typedef ::GParam current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_GParam(TBuffer &buf, void *obj) {
      ((::GParam*)obj)->::GParam::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::GParam

//______________________________________________________________________________
void GParamD64::Streamer(TBuffer &R__b)
{
   // Stream an object of class GParamD64.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> run;
      R__b >> number;
      R__b >> gnumber;
      R__b.ReadStaticArray((double*)paramd);
      R__b.CheckByteCount(R__s, R__c, GParamD64::IsA());
   } else {
      R__c = R__b.WriteVersion(GParamD64::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << run;
      R__b << number;
      R__b << gnumber;
      R__b.WriteArray(paramd, 64);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void GParamD64::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class GParamD64.
      TClass *R__cl = ::GParamD64::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "number", &number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gnumber", &gnumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "paramd[64]", paramd);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_GParamD64(void *p) {
      return  p ? new(p) ::GParamD64 : new ::GParamD64;
   }
   static void *newArray_GParamD64(Long_t nElements, void *p) {
      return p ? new(p) ::GParamD64[nElements] : new ::GParamD64[nElements];
   }
   // Wrapper around operator delete
   static void delete_GParamD64(void *p) {
      delete ((::GParamD64*)p);
   }
   static void deleteArray_GParamD64(void *p) {
      delete [] ((::GParamD64*)p);
   }
   static void destruct_GParamD64(void *p) {
      typedef ::GParamD64 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_GParamD64(TBuffer &buf, void *obj) {
      ((::GParamD64*)obj)->::GParamD64::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::GParamD64

//______________________________________________________________________________
void SPSAdamo::Streamer(TBuffer &R__b)
{
   // Stream an object of class SPSAdamo.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> run;
      R__b >> number;
      R__b >> gnumber;
      R__b >> valid;
      R__b.ReadStaticArray((unsigned int*)SR);
      R__b.ReadStaticArray((double*)strip);
      R__b >> eventcounter;
      R__b.CheckByteCount(R__s, R__c, SPSAdamo::IsA());
   } else {
      R__c = R__b.WriteVersion(SPSAdamo::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << run;
      R__b << number;
      R__b << gnumber;
      R__b << valid;
      R__b.WriteArray(SR, 3);
      R__b.WriteArray((double*)strip, 10240);
      R__b << eventcounter;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void SPSAdamo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class SPSAdamo.
      TClass *R__cl = ::SPSAdamo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "number", &number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gnumber", &gnumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "valid", &valid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SR[3]", SR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "strip[5][2][1024]", strip);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventcounter", &eventcounter);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_SPSAdamo(void *p) {
      return  p ? new(p) ::SPSAdamo : new ::SPSAdamo;
   }
   static void *newArray_SPSAdamo(Long_t nElements, void *p) {
      return p ? new(p) ::SPSAdamo[nElements] : new ::SPSAdamo[nElements];
   }
   // Wrapper around operator delete
   static void delete_SPSAdamo(void *p) {
      delete ((::SPSAdamo*)p);
   }
   static void deleteArray_SPSAdamo(void *p) {
      delete [] ((::SPSAdamo*)p);
   }
   static void destruct_SPSAdamo(void *p) {
      typedef ::SPSAdamo current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_SPSAdamo(TBuffer &buf, void *obj) {
      ((::SPSAdamo*)obj)->::SPSAdamo::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::SPSAdamo

//______________________________________________________________________________
void SPSAdamoHist::Streamer(TBuffer &R__b)
{
   // Stream an object of class SPSAdamoHist.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      int R__i;
      for (R__i = 0; R__i < 10; R__i++)
         R__b >> hist[0][R__i];
      R__b.ReadStaticArray((char*)cname);
      R__b.ReadStaticArray((char*)ctitle);
      R__b.CheckByteCount(R__s, R__c, SPSAdamoHist::IsA());
   } else {
      R__c = R__b.WriteVersion(SPSAdamoHist::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      int R__i;
      for (R__i = 0; R__i < 10; R__i++)
         R__b << (TObject*)hist[0][R__i];
      R__b.WriteArray(cname, 256);
      R__b.WriteArray(ctitle, 256);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void SPSAdamoHist::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class SPSAdamoHist.
      TClass *R__cl = ::SPSAdamoHist::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hist[5][2]", &hist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*c", &c);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cname[256]", cname);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ctitle[256]", ctitle);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_SPSAdamoHist(void *p) {
      return  p ? new(p) ::SPSAdamoHist : new ::SPSAdamoHist;
   }
   static void *newArray_SPSAdamoHist(Long_t nElements, void *p) {
      return p ? new(p) ::SPSAdamoHist[nElements] : new ::SPSAdamoHist[nElements];
   }
   // Wrapper around operator delete
   static void delete_SPSAdamoHist(void *p) {
      delete ((::SPSAdamoHist*)p);
   }
   static void deleteArray_SPSAdamoHist(void *p) {
      delete [] ((::SPSAdamoHist*)p);
   }
   static void destruct_SPSAdamoHist(void *p) {
      typedef ::SPSAdamoHist current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_SPSAdamoHist(TBuffer &buf, void *obj) {
      ((::SPSAdamoHist*)obj)->::SPSAdamoHist::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::SPSAdamoHist

//______________________________________________________________________________
void SPSAdamoRec0::Streamer(TBuffer &R__b)
{
   // Stream an object of class SPSAdamoRec0.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> run;
      R__b >> number;
      R__b >> gnumber;
      R__b.ReadStaticArray((double*)pos);
      R__b.ReadStaticArray((double*)direction);
      R__b.ReadStaticArray((int*)clevel);
      R__b.ReadStaticArray((int*)clevel1);
      R__b.ReadStaticArray((int*)ndiscri);
      R__b.ReadStaticArray((int*)ndata);
      R__b.ReadStaticArray((double*)data);
      R__b.ReadStaticArray((double*)dataz);
      R__b.ReadStaticArray((double*)chi2);
      R__b >> pad;
      R__b.CheckByteCount(R__s, R__c, SPSAdamoRec0::IsA());
   } else {
      R__c = R__b.WriteVersion(SPSAdamoRec0::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << run;
      R__b << number;
      R__b << gnumber;
      R__b.WriteArray(pos, 2);
      R__b.WriteArray(direction, 2);
      R__b.WriteArray(clevel, 2);
      R__b.WriteArray(clevel1, 2);
      R__b.WriteArray((int*)ndiscri, 10);
      R__b.WriteArray(ndata, 2);
      R__b.WriteArray((double*)data, 10);
      R__b.WriteArray((double*)dataz, 10);
      R__b.WriteArray(chi2, 2);
      R__b << pad;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void SPSAdamoRec0::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class SPSAdamoRec0.
      TClass *R__cl = ::SPSAdamoRec0::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "number", &number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gnumber", &gnumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pos[2]", pos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "direction[2]", direction);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "clevel[2]", clevel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "clevel1[2]", clevel1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ndiscri[2][5]", ndiscri);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ndata[2]", ndata);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "data[2][5]", data);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dataz[2][5]", dataz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chi2[2]", chi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pad", &pad);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_SPSAdamoRec0(void *p) {
      return  p ? new(p) ::SPSAdamoRec0 : new ::SPSAdamoRec0;
   }
   static void *newArray_SPSAdamoRec0(Long_t nElements, void *p) {
      return p ? new(p) ::SPSAdamoRec0[nElements] : new ::SPSAdamoRec0[nElements];
   }
   // Wrapper around operator delete
   static void delete_SPSAdamoRec0(void *p) {
      delete ((::SPSAdamoRec0*)p);
   }
   static void deleteArray_SPSAdamoRec0(void *p) {
      delete [] ((::SPSAdamoRec0*)p);
   }
   static void destruct_SPSAdamoRec0(void *p) {
      typedef ::SPSAdamoRec0 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_SPSAdamoRec0(TBuffer &buf, void *obj) {
      ((::SPSAdamoRec0*)obj)->::SPSAdamoRec0::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::SPSAdamoRec0

namespace ROOTDict {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<double>

namespace ROOTDict {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "prec_stl/vector", 49,
                  typeid(vector<int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<int>

namespace ROOTDict {
   void vectorlEunsignedsPintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEunsignedsPintgR_Dictionary();
   static void *new_vectorlEunsignedsPintgR(void *p = 0);
   static void *newArray_vectorlEunsignedsPintgR(Long_t size, void *p);
   static void delete_vectorlEunsignedsPintgR(void *p);
   static void deleteArray_vectorlEunsignedsPintgR(void *p);
   static void destruct_vectorlEunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<unsigned int>*)
   {
      vector<unsigned int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<unsigned int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<unsigned int>", -2, "vector.dll", 0,
                  typeid(vector<unsigned int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEunsignedsPintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<unsigned int>) );
      instance.SetNew(&new_vectorlEunsignedsPintgR);
      instance.SetNewArray(&newArray_vectorlEunsignedsPintgR);
      instance.SetDelete(&delete_vectorlEunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEunsignedsPintgR);
      instance.SetDestructor(&destruct_vectorlEunsignedsPintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<unsigned int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<unsigned int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEunsignedsPintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<unsigned int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEunsignedsPintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned int> : new vector<unsigned int>;
   }
   static void *newArray_vectorlEunsignedsPintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned int>[nElements] : new vector<unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEunsignedsPintgR(void *p) {
      delete ((vector<unsigned int>*)p);
   }
   static void deleteArray_vectorlEunsignedsPintgR(void *p) {
      delete [] ((vector<unsigned int>*)p);
   }
   static void destruct_vectorlEunsignedsPintgR(void *p) {
      typedef vector<unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<unsigned int>

/********************************************************
* libLHCfEvent.cpp
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtablelibLHCfEvent();

extern "C" void G__set_cpp_environmentlibLHCfEvent() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("LHCfEvent.h");
  G__add_compiledheader("LHCfDef.h");
  G__add_compiledheader("A1Raw.h");
  G__add_compiledheader("A1Cal1.h");
  G__add_compiledheader("A1Cal2.h");
  G__add_compiledheader("A1Cal2M.h");
  G__add_compiledheader("A1Phys.h");
  G__add_compiledheader("A1Info.h");
  G__add_compiledheader("A1Scl.h");
  G__add_compiledheader("A1Rec1.h");
  G__add_compiledheader("A1Rec2.h");
  G__add_compiledheader("A2Raw.h");
  G__add_compiledheader("A2Cal1.h");
  G__add_compiledheader("A2Cal2.h");
  G__add_compiledheader("A2Cal2M.h");
  G__add_compiledheader("A2Phys.h");
  G__add_compiledheader("A2Rec1.h");
  G__add_compiledheader("A2Rec2.h");
  G__add_compiledheader("A2Rec3.h");
  G__add_compiledheader("A2Info.h");
  G__add_compiledheader("A2Scl.h");
  G__add_compiledheader("A2Raw_pPb2013.h");
  G__add_compiledheader("A1Raw_pp2015.h");
  G__add_compiledheader("A2Raw_pp2015.h");
  G__add_compiledheader("A1Scl_pp2015.h");
  G__add_compiledheader("A2Scl_pp2015.h");
  G__add_compiledheader("A2Raw_pPb2016.h");
  G__add_compiledheader("RHICfRaw_Op2017.h");
  G__add_compiledheader("RHICfScl_Op2017.h");
  G__add_compiledheader("RHICfSinglePar.h");
  G__add_compiledheader("RHICfPhotonPair.h");
  G__add_compiledheader("RHICfCollection.h");
  G__add_compiledheader("RawL1T.h");
  G__add_compiledheader("SclL1T.h");
  G__add_compiledheader("Rec0.h");
  G__add_compiledheader("A1Cal1AccumHist.h");
  G__add_compiledheader("A2Cal1AccumHist.h");
  G__add_compiledheader("A1Cal2AccumHist.h");
  G__add_compiledheader("A2Cal2AccumHist.h");
  G__add_compiledheader("A1PhysAccumHist.h");
  G__add_compiledheader("A2PhysAccumHist.h");
  G__add_compiledheader("A1CountArray.h");
  G__add_compiledheader("A2CountArray.h");
  G__add_compiledheader("A1CalEventHist.h");
  G__add_compiledheader("A2CalEventHist.h");
  G__add_compiledheader("SimP.h");
  G__add_compiledheader("SimIncidents.h");
  G__add_compiledheader("GParam.h");
  G__add_compiledheader("GParamD64.h");
  G__add_compiledheader("SPSAdamo.h");
  G__add_compiledheader("SPSAdamoRec0.h");
  G__add_compiledheader("SPSAdamoHist.h");
  G__cpp_reset_tagtablelibLHCfEvent();
}
#include <new>
extern "C" int G__cpp_dllrevlibLHCfEvent() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* A1Raw */
static int G__libLHCfEvent_191_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1Raw* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A1Raw[n];
     } else {
       p = new((void*) gvp) A1Raw[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A1Raw;
     } else {
       p = new((void*) gvp) A1Raw;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A1Raw));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_191_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1Raw* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new A1Raw((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) A1Raw((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A1Raw));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_191_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A1Raw*) G__getstructoffset())->clear((A1Raw::bankio) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A1Raw*) G__getstructoffset())->clear());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_191_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A1Raw*) G__getstructoffset())->copy((A1Raw*) G__int(libp->para[0]), (A1Raw::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A1Raw*) G__getstructoffset())->copy((A1Raw*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_191_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A1Raw*) G__getstructoffset())->copydata((A1Raw*) G__int(libp->para[0]), (A1Raw::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A1Raw*) G__getstructoffset())->copydata((A1Raw*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_191_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A1Raw*) G__getstructoffset())->add((A1Raw*) G__int(libp->para[0]), (A1Raw::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A1Raw*) G__getstructoffset())->add((A1Raw*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_191_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) A1Raw::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_191_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1Raw::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_191_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) A1Raw::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_191_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      A1Raw::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_191_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1Raw*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_191_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1Raw::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_191_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A1Raw::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_191_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1Raw::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_191_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A1Raw::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfEvent_191_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   A1Raw* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new A1Raw(*(A1Raw*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A1Raw));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef A1Raw G__TA1Raw;
static int G__libLHCfEvent_191_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (A1Raw*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((A1Raw*) (soff+(sizeof(A1Raw)*i)))->~G__TA1Raw();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (A1Raw*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((A1Raw*) (soff))->~G__TA1Raw();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfEvent_191_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1Raw* dest = (A1Raw*) G__getstructoffset();
   *dest = *(A1Raw*) libp->para[0].ref;
   const A1Raw& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* A1Cal1 */
static int G__libLHCfEvent_193_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1Cal1* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A1Cal1[n];
     } else {
       p = new((void*) gvp) A1Cal1[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A1Cal1;
     } else {
       p = new((void*) gvp) A1Cal1;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1Cal1* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new A1Cal1((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) A1Cal1((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A1Cal1*) G__getstructoffset())->clear((A1Cal1::bankio) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A1Cal1*) G__getstructoffset())->clear());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A1Cal1*) G__getstructoffset())->copy((A1Cal1*) G__int(libp->para[0]), (A1Cal1::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A1Cal1*) G__getstructoffset())->copy((A1Cal1*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A1Cal1*) G__getstructoffset())->copydata((A1Cal1*) G__int(libp->para[0]), (A1Cal1::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A1Cal1*) G__getstructoffset())->copydata((A1Cal1*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A1Cal1*) G__getstructoffset())->add((A1Cal1*) G__int(libp->para[0]), (A1Cal1::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A1Cal1*) G__getstructoffset())->add((A1Cal1*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A1Cal1*) G__getstructoffset())->subtract((A1Cal1*) G__int(libp->para[0]), (A1Cal1::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A1Cal1*) G__getstructoffset())->subtract((A1Cal1*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A1Cal1*) G__getstructoffset())->multiply((double) G__double(libp->para[0]), (A1Cal1::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A1Cal1*) G__getstructoffset())->multiply((double) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A1Cal1*) G__getstructoffset())->divide((double) G__double(libp->para[0]), (A1Cal1::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A1Cal1*) G__getstructoffset())->divide((double) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A1Cal1*) G__getstructoffset())->pow((double) G__double(libp->para[0]), (A1Cal1::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A1Cal1*) G__getstructoffset())->pow((double) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A1Cal1*) G__getstructoffset())->sqrt((A1Cal1::bankio) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A1Cal1*) G__getstructoffset())->sqrt());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A1Cal1*) G__getstructoffset())->clk());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A1Cal1*) G__getstructoffset())->bptx1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A1Cal1*) G__getstructoffset())->bptx2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1*) G__getstructoffset())->CheckFlag((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1*) G__getstructoffset())->IsBPTX1Flag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1*) G__getstructoffset())->IsBPTX2Flag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1*) G__getstructoffset())->IsEXTL1TFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1*) G__getstructoffset())->IsL2TAFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1*) G__getstructoffset())->IsL2TPFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1*) G__getstructoffset())->IsL2TEXTFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1*) G__getstructoffset())->IsL2TL1TFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1*) G__getstructoffset())->IsSTRGFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1*) G__getstructoffset())->IsSTrgSmallFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1*) G__getstructoffset())->IsLTRGFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1*) G__getstructoffset())->IsSTrgLargeFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1*) G__getstructoffset())->IsBeamFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1*) G__getstructoffset())->IsPedeFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1*) G__getstructoffset())->IsLaserFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1*) G__getstructoffset())->IsEnableFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1*) G__getstructoffset())->IsA1EnableFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1*) G__getstructoffset())->IsA1STrgFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1*) G__getstructoffset())->IsA1ShowerTrgFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1*) G__getstructoffset())->IsA1L3TFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1*) G__getstructoffset())->IsA2EnableFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1*) G__getstructoffset())->IsA2STrgFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1*) G__getstructoffset())->IsA2ShowerTrgFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1*) G__getstructoffset())->IsA2L3TFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1*) G__getstructoffset())->IsATLASL1AFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1*) G__getstructoffset())->IsA1FCTrgFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1*) G__getstructoffset())->IsA2FCTrgFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1*) G__getstructoffset())->IsL2TCFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1*) G__getstructoffset())->IsFCFlag((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1*) G__getstructoffset())->IsDSCFlag((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) A1Cal1::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1Cal1::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) A1Cal1::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      A1Cal1::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1Cal1*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1Cal1::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A1Cal1::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1Cal1::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_193_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A1Cal1::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfEvent_193_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   A1Cal1* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new A1Cal1(*(A1Cal1*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef A1Cal1 G__TA1Cal1;
static int G__libLHCfEvent_193_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (A1Cal1*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((A1Cal1*) (soff+(sizeof(A1Cal1)*i)))->~G__TA1Cal1();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (A1Cal1*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((A1Cal1*) (soff))->~G__TA1Cal1();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfEvent_193_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1Cal1* dest = (A1Cal1*) G__getstructoffset();
   *dest = *(A1Cal1*) libp->para[0].ref;
   const A1Cal1& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* A1Cal2 */
static int G__libLHCfEvent_197_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1Cal2* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A1Cal2[n];
     } else {
       p = new((void*) gvp) A1Cal2[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A1Cal2;
     } else {
       p = new((void*) gvp) A1Cal2;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1Cal2* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new A1Cal2((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) A1Cal2((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A1Cal2*) G__getstructoffset())->clear((A1Cal2::bankio) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A1Cal2*) G__getstructoffset())->clear());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A1Cal2*) G__getstructoffset())->copy((A1Cal2*) G__int(libp->para[0]), (A1Cal2::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A1Cal2*) G__getstructoffset())->copy((A1Cal2*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A1Cal2*) G__getstructoffset())->copydata((A1Cal2*) G__int(libp->para[0]), (A1Cal2::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A1Cal2*) G__getstructoffset())->copydata((A1Cal2*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A1Cal2*) G__getstructoffset())->add((A1Cal2*) G__int(libp->para[0]), (A1Cal2::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A1Cal2*) G__getstructoffset())->add((A1Cal2*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A1Cal2*) G__getstructoffset())->subtract((A1Cal2*) G__int(libp->para[0]), (A1Cal2::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A1Cal2*) G__getstructoffset())->subtract((A1Cal2*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A1Cal2*) G__getstructoffset())->multiply((double) G__double(libp->para[0]), (A1Cal2::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A1Cal2*) G__getstructoffset())->multiply((double) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A1Cal2*) G__getstructoffset())->divide((double) G__double(libp->para[0]), (A1Cal2::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A1Cal2*) G__getstructoffset())->divide((double) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((A1Cal2*) G__getstructoffset())->calsum((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((A1Cal2*) G__getstructoffset())->calsum((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((A1Cal2*) G__getstructoffset())->calsum((int) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((A1Cal2*) G__getstructoffset())->calsum2((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((A1Cal2*) G__getstructoffset())->calsum2((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((A1Cal2*) G__getstructoffset())->calsum2((int) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A1Cal2*) G__getstructoffset())->scifisum((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal2*) G__getstructoffset())->CheckFlag((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal2*) G__getstructoffset())->IsBPTX1Flag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal2*) G__getstructoffset())->IsBPTX2Flag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal2*) G__getstructoffset())->IsEXTL1TFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal2*) G__getstructoffset())->IsL2TAFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal2*) G__getstructoffset())->IsL2TPFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal2*) G__getstructoffset())->IsL2TEXTFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal2*) G__getstructoffset())->IsL2TL1TFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal2*) G__getstructoffset())->IsSTRGFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal2*) G__getstructoffset())->IsSTrgSmallFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal2*) G__getstructoffset())->IsLTRGFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal2*) G__getstructoffset())->IsSTrgLargeFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal2*) G__getstructoffset())->IsBeamFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal2*) G__getstructoffset())->IsPedeFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal2*) G__getstructoffset())->IsLaserFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal2*) G__getstructoffset())->IsEnableFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal2*) G__getstructoffset())->IsA1EnableFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal2*) G__getstructoffset())->IsA1STrgFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal2*) G__getstructoffset())->IsA1ShowerTrgFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal2*) G__getstructoffset())->IsA1L3TFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal2*) G__getstructoffset())->IsA2EnableFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal2*) G__getstructoffset())->IsA2STrgFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal2*) G__getstructoffset())->IsA2ShowerTrgFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal2*) G__getstructoffset())->IsA2L3TFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal2*) G__getstructoffset())->IsATLASL1AFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal2*) G__getstructoffset())->IsA1FCTrgFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal2*) G__getstructoffset())->IsA2FCTrgFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal2*) G__getstructoffset())->IsL2TCFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal2*) G__getstructoffset())->IsFCFlag((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal2*) G__getstructoffset())->IsDSCFlag((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) A1Cal2::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1Cal2::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) A1Cal2::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      A1Cal2::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1Cal2*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1Cal2::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A1Cal2::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1Cal2::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_197_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A1Cal2::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfEvent_197_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   A1Cal2* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new A1Cal2(*(A1Cal2*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef A1Cal2 G__TA1Cal2;
static int G__libLHCfEvent_197_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (A1Cal2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((A1Cal2*) (soff+(sizeof(A1Cal2)*i)))->~G__TA1Cal2();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (A1Cal2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((A1Cal2*) (soff))->~G__TA1Cal2();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfEvent_197_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1Cal2* dest = (A1Cal2*) G__getstructoffset();
   *dest = *(A1Cal2*) libp->para[0].ref;
   const A1Cal2& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* A1Phys */
static int G__libLHCfEvent_201_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1Phys* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A1Phys[n];
     } else {
       p = new((void*) gvp) A1Phys[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A1Phys;
     } else {
       p = new((void*) gvp) A1Phys;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A1Phys));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1Phys* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new A1Phys((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) A1Phys((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A1Phys));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Phys*) G__getstructoffset())->clear());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Phys*) G__getstructoffset())->copy((A1Phys*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Phys*) G__getstructoffset())->copydata((A1Phys*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->Energy((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->Pos((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->X((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->Y((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Phys*) G__getstructoffset())->Hits((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Phys*) G__getstructoffset())->PID((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((A1Phys*) G__getstructoffset())->IsElemag((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((A1Phys*) G__getstructoffset())->IsHadron((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((A1Phys*) G__getstructoffset())->InFiducial((int) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((A1Phys*) G__getstructoffset())->InFiducial((int) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GlobalPos((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GlobalPos((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GlobalPos((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GPos((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GPos((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GPos((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GPosX((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GPosX((int) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GPosX((int) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GPosY((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GPosY((int) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GPosY((int) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GetPi0Distance((bool) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GetPi0Distance());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GetPi0Mass((bool) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GetPi0Mass());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GetPi0Energy((bool) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GetPi0Energy());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->Momentum((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->Momentum((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->Momentum((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GetPi0Momentum((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GetPi0Momentum((int) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GetPi0Momentum((int) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GetPi0MomentumX((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GetPi0MomentumX((double) G__double(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GetPi0MomentumX());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GetPi0MomentumY((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GetPi0MomentumY((double) G__double(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GetPi0MomentumY());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GetPi0Pt((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GetPi0Pt((double) G__double(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GetPi0Pt());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GetPi0Pl((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GetPi0Pl((double) G__double(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GetPi0Pl());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GetPi0Rapidity((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GetPi0Rapidity((double) G__double(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GetPi0Rapidity());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GlobalPos_Detector((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GlobalPos_BC((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GlobalPos_BC((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GlobalPos_BC((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GlobalPos_BeamPipe((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GlobalPos_BeamPipe((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GlobalPos_BeamPipe((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GPosX_Detector((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GPosY_Detector((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GPosX_BC((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GPosY_BC((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GPosX_BeamPipe((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A1Phys*) G__getstructoffset())->GPosY_BeamPipe((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1Phys*) G__getstructoffset())->Show();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) A1Phys::CalorimeterSize((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A1Phys::SetPositionBeamCenter((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A1Phys::SetPositionBeamPipeCenter((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) A1Phys::GetOffsetBC((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) A1Phys::GetOffsetBeamPipe((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) A1Phys::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1Phys::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) A1Phys::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      A1Phys::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1Phys*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1Phys::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A1Phys::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1Phys::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_201_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A1Phys::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfEvent_201_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   A1Phys* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new A1Phys(*(A1Phys*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A1Phys));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef A1Phys G__TA1Phys;
static int G__libLHCfEvent_201_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (A1Phys*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((A1Phys*) (soff+(sizeof(A1Phys)*i)))->~G__TA1Phys();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (A1Phys*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((A1Phys*) (soff))->~G__TA1Phys();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfEvent_201_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1Phys* dest = (A1Phys*) G__getstructoffset();
   *dest = *(A1Phys*) libp->para[0].ref;
   const A1Phys& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* A1Info */
static int G__libLHCfEvent_202_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1Info* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A1Info[n];
     } else {
       p = new((void*) gvp) A1Info[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A1Info;
     } else {
       p = new((void*) gvp) A1Info;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A1Info));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_202_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1Info* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new A1Info((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) A1Info((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A1Info));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_202_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Info*) G__getstructoffset())->clear());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_202_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) A1Info::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_202_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1Info::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_202_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) A1Info::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_202_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      A1Info::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_202_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1Info*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_202_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1Info::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_202_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A1Info::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_202_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1Info::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_202_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A1Info::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfEvent_202_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   A1Info* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new A1Info(*(A1Info*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A1Info));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef A1Info G__TA1Info;
static int G__libLHCfEvent_202_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (A1Info*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((A1Info*) (soff+(sizeof(A1Info)*i)))->~G__TA1Info();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (A1Info*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((A1Info*) (soff))->~G__TA1Info();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfEvent_202_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1Info* dest = (A1Info*) G__getstructoffset();
   *dest = *(A1Info*) libp->para[0].ref;
   const A1Info& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* A1Scl */
static int G__libLHCfEvent_203_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1Scl* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A1Scl[n];
     } else {
       p = new((void*) gvp) A1Scl[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A1Scl;
     } else {
       p = new((void*) gvp) A1Scl;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A1Scl));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_203_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1Scl* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new A1Scl((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) A1Scl((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A1Scl));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_203_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Scl*) G__getstructoffset())->clear());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_203_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Scl*) G__getstructoffset())->copy((A1Scl*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_203_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Scl*) G__getstructoffset())->copydata((A1Scl*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_203_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) A1Scl::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_203_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1Scl::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_203_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) A1Scl::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_203_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      A1Scl::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_203_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1Scl*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_203_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1Scl::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_203_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A1Scl::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_203_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1Scl::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_203_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A1Scl::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfEvent_203_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   A1Scl* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new A1Scl(*(A1Scl*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A1Scl));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef A1Scl G__TA1Scl;
static int G__libLHCfEvent_203_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (A1Scl*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((A1Scl*) (soff+(sizeof(A1Scl)*i)))->~G__TA1Scl();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (A1Scl*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((A1Scl*) (soff))->~G__TA1Scl();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfEvent_203_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1Scl* dest = (A1Scl*) G__getstructoffset();
   *dest = *(A1Scl*) libp->para[0].ref;
   const A1Scl& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* A2Raw */
static int G__libLHCfEvent_204_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Raw* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A2Raw[n];
     } else {
       p = new((void*) gvp) A2Raw[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A2Raw;
     } else {
       p = new((void*) gvp) A2Raw;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_204_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Raw* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new A2Raw((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) A2Raw((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_204_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A2Raw*) G__getstructoffset())->clear((A2Raw::bankio) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A2Raw*) G__getstructoffset())->clear());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_204_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A2Raw*) G__getstructoffset())->copy((A2Raw*) G__int(libp->para[0]), (A2Raw::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A2Raw*) G__getstructoffset())->copy((A2Raw*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_204_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A2Raw*) G__getstructoffset())->copydata((A2Raw*) G__int(libp->para[0]), (A2Raw::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A2Raw*) G__getstructoffset())->copydata((A2Raw*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_204_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A2Raw*) G__getstructoffset())->add((A2Raw*) G__int(libp->para[0]), (A2Raw::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A2Raw*) G__getstructoffset())->add((A2Raw*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_204_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) A2Raw::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_204_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Raw::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_204_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) A2Raw::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_204_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      A2Raw::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_204_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2Raw*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_204_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Raw::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_204_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2Raw::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_204_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Raw::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_204_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2Raw::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfEvent_204_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   A2Raw* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new A2Raw(*(A2Raw*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef A2Raw G__TA2Raw;
static int G__libLHCfEvent_204_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (A2Raw*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((A2Raw*) (soff+(sizeof(A2Raw)*i)))->~G__TA2Raw();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (A2Raw*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((A2Raw*) (soff))->~G__TA2Raw();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfEvent_204_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Raw* dest = (A2Raw*) G__getstructoffset();
   *dest = *(A2Raw*) libp->para[0].ref;
   const A2Raw& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* A2Cal2 */
static int G__libLHCfEvent_206_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Cal2* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A2Cal2[n];
     } else {
       p = new((void*) gvp) A2Cal2[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A2Cal2;
     } else {
       p = new((void*) gvp) A2Cal2;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Cal2* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new A2Cal2((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) A2Cal2((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A2Cal2*) G__getstructoffset())->clear((A2Cal2::bankio) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A2Cal2*) G__getstructoffset())->clear());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A2Cal2*) G__getstructoffset())->copy((A2Cal2*) G__int(libp->para[0]), (A2Cal2::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A2Cal2*) G__getstructoffset())->copy((A2Cal2*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A2Cal2*) G__getstructoffset())->copydata((A2Cal2*) G__int(libp->para[0]), (A2Cal2::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A2Cal2*) G__getstructoffset())->copydata((A2Cal2*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A2Cal2*) G__getstructoffset())->add((A2Cal2*) G__int(libp->para[0]), (A2Cal2::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A2Cal2*) G__getstructoffset())->add((A2Cal2*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A2Cal2*) G__getstructoffset())->subtract((A2Cal2*) G__int(libp->para[0]), (A2Cal2::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A2Cal2*) G__getstructoffset())->subtract((A2Cal2*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A2Cal2*) G__getstructoffset())->multiply((double) G__double(libp->para[0]), (A2Cal2::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A2Cal2*) G__getstructoffset())->multiply((double) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A2Cal2*) G__getstructoffset())->divide((double) G__double(libp->para[0]), (A2Cal2::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A2Cal2*) G__getstructoffset())->divide((double) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((A2Cal2*) G__getstructoffset())->calsum((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((A2Cal2*) G__getstructoffset())->calsum((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((A2Cal2*) G__getstructoffset())->calsum((int) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((A2Cal2*) G__getstructoffset())->calsum2((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((A2Cal2*) G__getstructoffset())->calsum2((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((A2Cal2*) G__getstructoffset())->calsum2((int) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letdouble(result7, 100, (double) ((A2Cal2*) G__getstructoffset())->siliconsum((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4])));
      break;
   case 4:
      G__letdouble(result7, 100, (double) ((A2Cal2*) G__getstructoffset())->siliconsum((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((A2Cal2*) G__getstructoffset())->siliconsum((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal2*) G__getstructoffset())->CopySilicon((A2Cal1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2Cal2*) G__getstructoffset())->Show();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal2*) G__getstructoffset())->CheckFlag((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal2*) G__getstructoffset())->IsBPTX1Flag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal2*) G__getstructoffset())->IsBPTX2Flag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal2*) G__getstructoffset())->IsEXTL1TFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal2*) G__getstructoffset())->IsL2TAFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal2*) G__getstructoffset())->IsL2TPFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal2*) G__getstructoffset())->IsL2TEXTFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal2*) G__getstructoffset())->IsL2TL1TFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal2*) G__getstructoffset())->IsSTRGFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal2*) G__getstructoffset())->IsSTrgSmallFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal2*) G__getstructoffset())->IsLTRGFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal2*) G__getstructoffset())->IsSTrgLargeFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal2*) G__getstructoffset())->IsBeamFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal2*) G__getstructoffset())->IsPedeFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal2*) G__getstructoffset())->IsLaserFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal2*) G__getstructoffset())->IsEnableFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal2*) G__getstructoffset())->IsA1EnableFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal2*) G__getstructoffset())->IsA1STrgFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal2*) G__getstructoffset())->IsA1ShowerTrgFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal2*) G__getstructoffset())->IsA1L3TFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal2*) G__getstructoffset())->IsA2EnableFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal2*) G__getstructoffset())->IsA2STrgFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal2*) G__getstructoffset())->IsA2ShowerTrgFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal2*) G__getstructoffset())->IsA2L3TFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal2*) G__getstructoffset())->IsATLASL1AFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal2*) G__getstructoffset())->IsA1FCTrgFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal2*) G__getstructoffset())->IsA2FCTrgFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal2*) G__getstructoffset())->IsL2TCFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal2*) G__getstructoffset())->IsFCFlag((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal2*) G__getstructoffset())->IsDSCFlag((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) A2Cal2::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Cal2::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) A2Cal2::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      A2Cal2::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2Cal2*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Cal2::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2Cal2::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Cal2::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_206_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2Cal2::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfEvent_206_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   A2Cal2* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new A2Cal2(*(A2Cal2*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef A2Cal2 G__TA2Cal2;
static int G__libLHCfEvent_206_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (A2Cal2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((A2Cal2*) (soff+(sizeof(A2Cal2)*i)))->~G__TA2Cal2();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (A2Cal2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((A2Cal2*) (soff))->~G__TA2Cal2();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfEvent_206_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Cal2* dest = (A2Cal2*) G__getstructoffset();
   *dest = *(A2Cal2*) libp->para[0].ref;
   const A2Cal2& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* A2Cal1 */
static int G__libLHCfEvent_207_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Cal1* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A2Cal1[n];
     } else {
       p = new((void*) gvp) A2Cal1[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A2Cal1;
     } else {
       p = new((void*) gvp) A2Cal1;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Cal1* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new A2Cal1((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) A2Cal1((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->clear((A2Cal1::bankio) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->clear());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->copy((A2Cal1*) G__int(libp->para[0]), (A2Cal1::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->copy((A2Cal1*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->copydata((A2Cal1*) G__int(libp->para[0]), (A2Cal1::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->copydata((A2Cal1*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->add((A2Cal1*) G__int(libp->para[0]), (A2Cal1::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->add((A2Cal1*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->subtract((A2Cal1*) G__int(libp->para[0]), (A2Cal1::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->subtract((A2Cal1*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->multiply((double) G__double(libp->para[0]), (A2Cal1::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->multiply((double) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->divide((double) G__double(libp->para[0]), (A2Cal1::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->divide((double) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->pow((double) G__double(libp->para[0]), (A2Cal1::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->pow((double) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->sqrt((A2Cal1::bankio) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->sqrt());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A2Cal1*) G__getstructoffset())->clk());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A2Cal1*) G__getstructoffset())->bptx1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A2Cal1*) G__getstructoffset())->bptx2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->CheckFlag((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->IsBPTX1Flag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->IsBPTX2Flag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->IsEXTL1TFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->IsL2TAFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->IsL2TPFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->IsL2TEXTFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->IsL2TL1TFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->IsSTRGFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->IsSTrgSmallFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->IsLTRGFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->IsSTrgLargeFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->IsBeamFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->IsPedeFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->IsLaserFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->IsEnableFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->IsA1EnableFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->IsA1STrgFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->IsA1ShowerTrgFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->IsA1L3TFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->IsA2EnableFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->IsA2STrgFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->IsA2ShowerTrgFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->IsA2L3TFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->IsATLASL1AFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->IsA1FCTrgFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->IsA2FCTrgFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->IsL2TCFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->IsFCFlag((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->IsDSCFlag((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->CopySilicon((A2Cal2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A2Cal1*) G__getstructoffset())->GetTDCofBPTX1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A2Cal1*) G__getstructoffset())->GetTDCofBPTX2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1*) G__getstructoffset())->CheckBunchCrossing());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) A2Cal1::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Cal1::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) A2Cal1::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      A2Cal1::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2Cal1*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Cal1::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2Cal1::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Cal1::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_207_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2Cal1::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfEvent_207_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   A2Cal1* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new A2Cal1(*(A2Cal1*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef A2Cal1 G__TA2Cal1;
static int G__libLHCfEvent_207_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (A2Cal1*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((A2Cal1*) (soff+(sizeof(A2Cal1)*i)))->~G__TA2Cal1();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (A2Cal1*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((A2Cal1*) (soff))->~G__TA2Cal1();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfEvent_207_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Cal1* dest = (A2Cal1*) G__getstructoffset();
   *dest = *(A2Cal1*) libp->para[0].ref;
   const A2Cal1& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* A2Phys */
static int G__libLHCfEvent_215_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Phys* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A2Phys[n];
     } else {
       p = new((void*) gvp) A2Phys[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A2Phys;
     } else {
       p = new((void*) gvp) A2Phys;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2Phys));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Phys* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new A2Phys((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) A2Phys((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2Phys));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Phys*) G__getstructoffset())->clear());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Phys*) G__getstructoffset())->copy((A2Phys*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Phys*) G__getstructoffset())->copydata((A2Phys*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->Energy((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->Pos((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->X((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->Y((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Phys*) G__getstructoffset())->Hits((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Phys*) G__getstructoffset())->PID((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((A2Phys*) G__getstructoffset())->IsElemag((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((A2Phys*) G__getstructoffset())->IsHadron((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((A2Phys*) G__getstructoffset())->InFiducial((int) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((A2Phys*) G__getstructoffset())->InFiducial((int) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GlobalPos((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GlobalPos((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GlobalPos((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GPos((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GPos((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GPos((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GPosX((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GPosX((int) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GPosX((int) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GPosY((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GPosY((int) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GPosY((int) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GPosR((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GPosR((int) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GPosR((int) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GetPi0Distance((bool) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GetPi0Distance());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GetPi0Mass((bool) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GetPi0Mass());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GetPi0Energy((bool) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GetPi0Energy());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->Momentum((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->Momentum((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->Momentum((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GetPi0Momentum((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GetPi0Momentum((int) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GetPi0Momentum((int) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GetPi0MomentumX((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GetPi0MomentumX((double) G__double(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GetPi0MomentumX());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GetPi0MomentumY((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GetPi0MomentumY((double) G__double(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GetPi0MomentumY());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GetPi0Pt((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GetPi0Pt((double) G__double(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GetPi0Pt());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GetPi0Pl((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GetPi0Pl((double) G__double(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GetPi0Pl());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GetPi0Rapidity((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GetPi0Rapidity((double) G__double(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GetPi0Rapidity());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GlobalPos_Detector((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GlobalPos_BC((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GlobalPos_BC((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GlobalPos_BC((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GlobalPos_BeamPipe((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GlobalPos_BeamPipe((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GlobalPos_BeamPipe((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GPosX_Detector((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GPosY_Detector((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GPosX_BC((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GPosY_BC((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GPosX_BeamPipe((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A2Phys*) G__getstructoffset())->GPosY_BeamPipe((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2Phys*) G__getstructoffset())->Show();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) A2Phys::CalorimeterSize((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2Phys::SetPositionBeamCenter((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2Phys::SetPositionBeamPipeCenter((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) A2Phys::GetOffsetBC((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) A2Phys::GetOffsetBeamPipe((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) A2Phys::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Phys::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) A2Phys::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      A2Phys::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2Phys*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Phys::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2Phys::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Phys::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_215_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2Phys::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfEvent_215_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   A2Phys* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new A2Phys(*(A2Phys*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2Phys));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef A2Phys G__TA2Phys;
static int G__libLHCfEvent_215_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (A2Phys*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((A2Phys*) (soff+(sizeof(A2Phys)*i)))->~G__TA2Phys();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (A2Phys*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((A2Phys*) (soff))->~G__TA2Phys();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfEvent_215_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Phys* dest = (A2Phys*) G__getstructoffset();
   *dest = *(A2Phys*) libp->para[0].ref;
   const A2Phys& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Rec0 */
static int G__libLHCfEvent_216_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Rec0* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Rec0[n];
     } else {
       p = new((void*) gvp) Rec0[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Rec0;
     } else {
       p = new((void*) gvp) Rec0;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_Rec0));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Rec0* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Rec0((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) Rec0((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_Rec0));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Rec0*) G__getstructoffset())->resize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Rec0*) G__getstructoffset())->clear());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Rec0*) G__getstructoffset())->copy((Rec0*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Rec0*) G__getstructoffset())->copydata((Rec0*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Rec0*) G__getstructoffset())->GetFormatNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Rec0*) G__getstructoffset())->FillToPhys((A1Phys*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Rec0*) G__getstructoffset())->FillToPhys((A2Phys*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Rec0*) G__getstructoffset())->Show();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Rec0*) G__getstructoffset())->GetEventQuality());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Rec0*) G__getstructoffset())->SetEventQuality((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Rec0*) G__getstructoffset())->GetBeamColConf());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Rec0*) G__getstructoffset())->SetBeamColConf((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Rec0*) G__getstructoffset())->GetBunchNumber((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Rec0*) G__getstructoffset())->SetBunchNumber((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((Rec0*) G__getstructoffset())->GetFlags((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Rec0*) G__getstructoffset())->SetFlags((int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((Rec0*) G__getstructoffset())->GetAnalysisFlags((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Rec0*) G__getstructoffset())->SetAnalysisFlags((int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Rec0*) G__getstructoffset())->IsShowerTrig());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Rec0*) G__getstructoffset())->IsPi0Trig());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Rec0*) G__getstructoffset())->IsHighEMTrig());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Rec0*) G__getstructoffset())->GetCal((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Rec0*) G__getstructoffset())->SetCal((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Rec0*) G__getstructoffset())->GetFC((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Rec0*) G__getstructoffset())->SetFC((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Rec0*) G__getstructoffset())->GetTFitParam((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Rec0*) G__getstructoffset())->SetTFitParam((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Rec0*) G__getstructoffset())->GetTFitParamCorr((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Rec0*) G__getstructoffset())->SetTFitParamCorr((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Rec0*) G__getstructoffset())->GetTFitParamLeakin((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Rec0*) G__getstructoffset())->SetTFitParamLeakin((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Rec0*) G__getstructoffset())->GetTScale((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Rec0*) G__getstructoffset())->GetTScaleCorr((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Rec0*) G__getstructoffset())->GetTScaleLeakin((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Rec0*) G__getstructoffset())->GetTMax((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Rec0*) G__getstructoffset())->GetTMaxCorr((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Rec0*) G__getstructoffset())->GetTMaxLeakin((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Rec0*) G__getstructoffset())->GetResultEnergy((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Rec0*) G__getstructoffset())->GetResultEnergy((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Rec0*) G__getstructoffset())->SetResultEnergy((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Rec0*) G__getstructoffset())->GetSumdE((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Rec0*) G__getstructoffset())->SetSumdE((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Rec0*) G__getstructoffset())->GetSumdE2((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Rec0*) G__getstructoffset())->SetSumdE2((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Rec0*) G__getstructoffset())->GetLeakageOut((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Rec0*) G__getstructoffset())->SetLeakageOut((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Rec0*) G__getstructoffset())->GetLightYield((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Rec0*) G__getstructoffset())->SetLightYield((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Rec0*) G__getstructoffset())->GetEnergyScaleFactor((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Rec0*) G__getstructoffset())->SetEnergyScaleFactor((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Rec0*) G__getstructoffset())->GetResultHitPosition((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Rec0*) G__getstructoffset())->SetResultHitPosition((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Rec0*) G__getstructoffset())->GetResultNumberOfHits((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Rec0*) G__getstructoffset())->SetResultNumberOfHits((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Rec0*) G__getstructoffset())->GetNumberOfHits((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Rec0*) G__getstructoffset())->SetNumberOfHits((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Rec0*) G__getstructoffset())->GetHitPosition((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Rec0*) G__getstructoffset())->SetHitPosition((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Rec0*) G__getstructoffset())->GetPeakStrip((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Rec0*) G__getstructoffset())->SetPeakStrip((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Rec0*) G__getstructoffset())->GetdEAtPeak((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Rec0*) G__getstructoffset())->SetdEAtPeak((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Rec0*) G__getstructoffset())->GetSiSatuFlag((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Rec0*) G__getstructoffset())->SetSiSatuFlag((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Rec0*) G__getstructoffset())->GetMHBkgPar((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Rec0*) G__getstructoffset())->SetMHBkgPar((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Rec0*) G__getstructoffset())->GetMHNhits((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Rec0*) G__getstructoffset())->SetMHNhits((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Rec0*) G__getstructoffset())->GetMHParPos((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Rec0*) G__getstructoffset())->GetMHPar((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Rec0*) G__getstructoffset())->SetMHPar((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (double) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Rec0*) G__getstructoffset())->GetMHDiscardedFlag((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Rec0*) G__getstructoffset())->AddMHHit((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Rec0*) G__getstructoffset())->EraseMHHit((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Rec0*) G__getstructoffset())->GetMHNumberOfHits((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Rec0*) G__getstructoffset())->SetMHNumberOfHits((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Rec0*) G__getstructoffset())->GetMaxBarLayer((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Rec0*) G__getstructoffset())->SetMaxBarLayer((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Rec0*) G__getstructoffset())->GetMaxBarLayer2((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Rec0*) G__getstructoffset())->SetMaxBarLayer2((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Rec0*) G__getstructoffset())->GetMHPosition((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Rec0*) G__getstructoffset())->SetMHPosition((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (double) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Rec0*) G__getstructoffset())->GetMHPeakRaw((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Rec0*) G__getstructoffset())->SetMHPeakRaw((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (double) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Rec0*) G__getstructoffset())->GetMHPeakEstimated((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Rec0*) G__getstructoffset())->SetMHPeakEstimated((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (double) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Rec0*) G__getstructoffset())->GetMHIntegral((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Rec0*) G__getstructoffset())->SetMHIntegral((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (double) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Rec0*) G__getstructoffset())->GetChiSquare((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Rec0*) G__getstructoffset())->SetChiSquare((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (double) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Rec0*) G__getstructoffset())->GetResultPID((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Rec0*) G__getstructoffset())->SetResultPID((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Rec0*) G__getstructoffset())->GetL20((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_105(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Rec0*) G__getstructoffset())->SetL20((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_106(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Rec0*) G__getstructoffset())->GetL90((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_107(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Rec0*) G__getstructoffset())->SetL90((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_108(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Rec0*) G__getstructoffset())->GetL2D((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_109(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Rec0*) G__getstructoffset())->SetL2D((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_110(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Rec0*) G__getstructoffset())->GetL20wocorr((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_111(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Rec0*) G__getstructoffset())->SetL20wocorr((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_112(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Rec0*) G__getstructoffset())->GetL90wocorr((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_113(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Rec0*) G__getstructoffset())->SetL90wocorr((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_114(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Rec0*) G__getstructoffset())->GetTransitionFit((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_115(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Rec0*) G__getstructoffset())->SetTransitionFit((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_116(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Rec0*) G__getstructoffset())->GetTDC_BPTX((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_117(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Rec0*) G__getstructoffset())->SetTDC_BPTX((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_118(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((Rec0*) G__getstructoffset())->GetCounter((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_119(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Rec0*) G__getstructoffset())->SetCounter((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_120(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Rec0::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_121(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Rec0::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_122(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Rec0::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_123(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Rec0::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_127(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Rec0*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_128(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Rec0::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_129(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Rec0::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_130(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Rec0::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_216_0_131(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Rec0::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfEvent_216_0_132(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Rec0* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Rec0(*(Rec0*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_Rec0));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Rec0 G__TRec0;
static int G__libLHCfEvent_216_0_133(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Rec0*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Rec0*) (soff+(sizeof(Rec0)*i)))->~G__TRec0();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Rec0*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Rec0*) (soff))->~G__TRec0();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfEvent_216_0_134(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Rec0* dest = (Rec0*) G__getstructoffset();
   *dest = *(Rec0*) libp->para[0].ref;
   const Rec0& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* A2Cal2M */
static int G__libLHCfEvent_223_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Cal2M* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A2Cal2M[n];
     } else {
       p = new((void*) gvp) A2Cal2M[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A2Cal2M;
     } else {
       p = new((void*) gvp) A2Cal2M;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2M));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_223_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Cal2M* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new A2Cal2M((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) A2Cal2M((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2M));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_223_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A2Cal2M*) G__getstructoffset())->copy((A2Cal2M*) G__int(libp->para[0]), (A2Cal2::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A2Cal2M*) G__getstructoffset())->copy((A2Cal2M*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_223_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A2Cal2M*) G__getstructoffset())->copydata((A2Cal2M*) G__int(libp->para[0]), (A2Cal2::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A2Cal2M*) G__getstructoffset())->copydata((A2Cal2M*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_223_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A2Cal2M*) G__getstructoffset())->clk());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_223_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A2Cal2M*) G__getstructoffset())->bptx1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_223_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A2Cal2M*) G__getstructoffset())->bptx2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_223_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A2Cal2M*) G__getstructoffset())->GetTDCofBPTX1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_223_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A2Cal2M*) G__getstructoffset())->GetTDCofBPTX2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_223_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal2M*) G__getstructoffset())->CheckBunchCrossing());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_223_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) A2Cal2M::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_223_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Cal2M::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_223_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) A2Cal2M::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_223_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      A2Cal2M::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_223_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2Cal2M*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_223_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Cal2M::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_223_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2Cal2M::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_223_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Cal2M::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_223_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2Cal2M::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfEvent_223_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   A2Cal2M* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new A2Cal2M(*(A2Cal2M*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2M));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef A2Cal2M G__TA2Cal2M;
static int G__libLHCfEvent_223_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (A2Cal2M*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((A2Cal2M*) (soff+(sizeof(A2Cal2M)*i)))->~G__TA2Cal2M();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (A2Cal2M*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((A2Cal2M*) (soff))->~G__TA2Cal2M();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfEvent_223_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Cal2M* dest = (A2Cal2M*) G__getstructoffset();
   *dest = *(A2Cal2M*) libp->para[0].ref;
   const A2Cal2M& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* A2Info */
static int G__libLHCfEvent_225_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Info* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A2Info[n];
     } else {
       p = new((void*) gvp) A2Info[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A2Info;
     } else {
       p = new((void*) gvp) A2Info;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2Info));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_225_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Info* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new A2Info((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) A2Info((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2Info));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_225_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Info*) G__getstructoffset())->clear());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_225_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) A2Info::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_225_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Info::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_225_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) A2Info::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_225_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      A2Info::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_225_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2Info*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_225_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Info::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_225_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2Info::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_225_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Info::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_225_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2Info::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfEvent_225_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   A2Info* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new A2Info(*(A2Info*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2Info));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef A2Info G__TA2Info;
static int G__libLHCfEvent_225_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (A2Info*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((A2Info*) (soff+(sizeof(A2Info)*i)))->~G__TA2Info();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (A2Info*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((A2Info*) (soff))->~G__TA2Info();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfEvent_225_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Info* dest = (A2Info*) G__getstructoffset();
   *dest = *(A2Info*) libp->para[0].ref;
   const A2Info& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* A2Scl */
static int G__libLHCfEvent_226_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Scl* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A2Scl[n];
     } else {
       p = new((void*) gvp) A2Scl[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A2Scl;
     } else {
       p = new((void*) gvp) A2Scl;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2Scl));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_226_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Scl* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new A2Scl((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) A2Scl((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2Scl));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_226_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Scl*) G__getstructoffset())->clear());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_226_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Scl*) G__getstructoffset())->copy((A2Scl*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_226_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Scl*) G__getstructoffset())->copydata((A2Scl*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_226_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) A2Scl::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_226_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Scl::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_226_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) A2Scl::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_226_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      A2Scl::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_226_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2Scl*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_226_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Scl::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_226_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2Scl::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_226_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Scl::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_226_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2Scl::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfEvent_226_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   A2Scl* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new A2Scl(*(A2Scl*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2Scl));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef A2Scl G__TA2Scl;
static int G__libLHCfEvent_226_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (A2Scl*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((A2Scl*) (soff+(sizeof(A2Scl)*i)))->~G__TA2Scl();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (A2Scl*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((A2Scl*) (soff))->~G__TA2Scl();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfEvent_226_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Scl* dest = (A2Scl*) G__getstructoffset();
   *dest = *(A2Scl*) libp->para[0].ref;
   const A2Scl& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RawL1T */
static int G__libLHCfEvent_227_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RawL1T* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RawL1T[n];
     } else {
       p = new((void*) gvp) RawL1T[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RawL1T;
     } else {
       p = new((void*) gvp) RawL1T;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_RawL1T));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_227_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RawL1T* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RawL1T((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) RawL1T((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_RawL1T));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_227_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RawL1T*) G__getstructoffset())->clear());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_227_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RawL1T*) G__getstructoffset())->copy((RawL1T*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_227_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RawL1T*) G__getstructoffset())->copydata((RawL1T*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_227_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RawL1T::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_227_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RawL1T::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_227_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RawL1T::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_227_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RawL1T::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_227_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RawL1T*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_227_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RawL1T::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_227_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RawL1T::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_227_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RawL1T::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_227_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RawL1T::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfEvent_227_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RawL1T* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RawL1T(*(RawL1T*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_RawL1T));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RawL1T G__TRawL1T;
static int G__libLHCfEvent_227_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RawL1T*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RawL1T*) (soff+(sizeof(RawL1T)*i)))->~G__TRawL1T();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RawL1T*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RawL1T*) (soff))->~G__TRawL1T();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfEvent_227_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RawL1T* dest = (RawL1T*) G__getstructoffset();
   *dest = *(RawL1T*) libp->para[0].ref;
   const RawL1T& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SclL1T */
static int G__libLHCfEvent_228_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SclL1T* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SclL1T[n];
     } else {
       p = new((void*) gvp) SclL1T[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SclL1T;
     } else {
       p = new((void*) gvp) SclL1T;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_SclL1T));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_228_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SclL1T* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SclL1T((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) SclL1T((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_SclL1T));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_228_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SclL1T*) G__getstructoffset())->clear());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_228_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SclL1T*) G__getstructoffset())->copy((SclL1T*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_228_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SclL1T*) G__getstructoffset())->copydata((SclL1T*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_228_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SclL1T::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_228_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SclL1T::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_228_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SclL1T::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_228_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SclL1T::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_228_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SclL1T*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_228_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SclL1T::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_228_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SclL1T::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_228_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SclL1T::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_228_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SclL1T::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfEvent_228_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   SclL1T* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new SclL1T(*(SclL1T*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_SclL1T));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SclL1T G__TSclL1T;
static int G__libLHCfEvent_228_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SclL1T*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SclL1T*) (soff+(sizeof(SclL1T)*i)))->~G__TSclL1T();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SclL1T*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SclL1T*) (soff))->~G__TSclL1T();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfEvent_228_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SclL1T* dest = (SclL1T*) G__getstructoffset();
   *dest = *(SclL1T*) libp->para[0].ref;
   const SclL1T& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* GParam */
static int G__libLHCfEvent_229_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GParam* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GParam[n];
     } else {
       p = new((void*) gvp) GParam[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GParam;
     } else {
       p = new((void*) gvp) GParam;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_GParam));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_229_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GParam* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new GParam((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) GParam((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_GParam));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_229_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GParam*) G__getstructoffset())->clear());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_229_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GParam*) G__getstructoffset())->copy((GParam*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_229_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GParam*) G__getstructoffset())->copydata((GParam*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_229_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GParam*) G__getstructoffset())->SetI((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_229_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GParam*) G__getstructoffset())->GetI((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_229_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GParam*) G__getstructoffset())->SetD((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_229_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GParam*) G__getstructoffset())->GetD((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_229_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) GParam::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_229_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GParam::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_229_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) GParam::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_229_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      GParam::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_229_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GParam*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_229_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GParam::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_229_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GParam::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_229_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GParam::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_229_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GParam::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfEvent_229_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   GParam* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new GParam(*(GParam*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_GParam));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef GParam G__TGParam;
static int G__libLHCfEvent_229_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (GParam*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((GParam*) (soff+(sizeof(GParam)*i)))->~G__TGParam();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (GParam*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((GParam*) (soff))->~G__TGParam();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfEvent_229_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GParam* dest = (GParam*) G__getstructoffset();
   *dest = *(GParam*) libp->para[0].ref;
   const GParam& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* GParamD64 */
static int G__libLHCfEvent_230_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GParamD64* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GParamD64[n];
     } else {
       p = new((void*) gvp) GParamD64[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GParamD64;
     } else {
       p = new((void*) gvp) GParamD64;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_GParamD64));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_230_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GParamD64* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new GParamD64((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) GParamD64((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_GParamD64));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_230_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GParamD64*) G__getstructoffset())->clear());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_230_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GParamD64*) G__getstructoffset())->copy((GParamD64*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_230_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((GParamD64*) G__getstructoffset())->copydata((GParamD64*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_230_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GParamD64*) G__getstructoffset())->SetD((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_230_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GParamD64*) G__getstructoffset())->GetD((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_230_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GParamD64*) G__getstructoffset())->Set((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_230_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((GParamD64*) G__getstructoffset())->Get((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_230_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) GParamD64::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_230_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GParamD64::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_230_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) GParamD64::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_230_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      GParamD64::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_230_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GParamD64*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_230_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GParamD64::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_230_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GParamD64::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_230_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GParamD64::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_230_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GParamD64::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfEvent_230_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   GParamD64* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new GParamD64(*(GParamD64*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_GParamD64));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef GParamD64 G__TGParamD64;
static int G__libLHCfEvent_230_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (GParamD64*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((GParamD64*) (soff+(sizeof(GParamD64)*i)))->~G__TGParamD64();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (GParamD64*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((GParamD64*) (soff))->~G__TGParamD64();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfEvent_230_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GParamD64* dest = (GParamD64*) G__getstructoffset();
   *dest = *(GParamD64*) libp->para[0].ref;
   const GParamD64& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SPSAdamo */
static int G__libLHCfEvent_231_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SPSAdamo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SPSAdamo[n];
     } else {
       p = new((void*) gvp) SPSAdamo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SPSAdamo;
     } else {
       p = new((void*) gvp) SPSAdamo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_SPSAdamo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_231_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SPSAdamo* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SPSAdamo((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) SPSAdamo((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_SPSAdamo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_231_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SPSAdamo*) G__getstructoffset())->clear());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_231_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SPSAdamo*) G__getstructoffset())->copy((SPSAdamo*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_231_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SPSAdamo*) G__getstructoffset())->copydata((SPSAdamo*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_231_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SPSAdamo*) G__getstructoffset())->add((SPSAdamo*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_231_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SPSAdamo*) G__getstructoffset())->subtract((SPSAdamo*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_231_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SPSAdamo*) G__getstructoffset())->multiply((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_231_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SPSAdamo*) G__getstructoffset())->divide((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_231_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((SPSAdamo*) G__getstructoffset())->IsValid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_231_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) SPSAdamo::IsValidStrip((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_231_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) SPSAdamo::IsDeadStrip((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_231_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) SPSAdamo::IsBadStrip((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_231_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) SPSAdamo::IsIwataStrip((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_231_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SPSAdamo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_231_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SPSAdamo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_231_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SPSAdamo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_231_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SPSAdamo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_231_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SPSAdamo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_231_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SPSAdamo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_231_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SPSAdamo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_231_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SPSAdamo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_231_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SPSAdamo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfEvent_231_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   SPSAdamo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new SPSAdamo(*(SPSAdamo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_SPSAdamo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SPSAdamo G__TSPSAdamo;
static int G__libLHCfEvent_231_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SPSAdamo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SPSAdamo*) (soff+(sizeof(SPSAdamo)*i)))->~G__TSPSAdamo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SPSAdamo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SPSAdamo*) (soff))->~G__TSPSAdamo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfEvent_231_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SPSAdamo* dest = (SPSAdamo*) G__getstructoffset();
   *dest = *(SPSAdamo*) libp->para[0].ref;
   const SPSAdamo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RHICfSinglePar */
static int G__libLHCfEvent_275_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RHICfSinglePar* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RHICfSinglePar[n];
     } else {
       p = new((void*) gvp) RHICfSinglePar[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RHICfSinglePar;
     } else {
       p = new((void*) gvp) RHICfSinglePar;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_RHICfSinglePar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_275_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RHICfSinglePar* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RHICfSinglePar((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) RHICfSinglePar((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_RHICfSinglePar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_275_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfSinglePar*) G__getstructoffset())->setTower((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_275_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfSinglePar*) G__getstructoffset())->setId((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_275_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfSinglePar*) G__getstructoffset())->setPosition((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_275_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfSinglePar*) G__getstructoffset())->setEnergy((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_275_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfSinglePar*) G__getstructoffset())->setPid(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_275_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfSinglePar*) G__getstructoffset())->setBeamCenter((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_275_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfSinglePar*) G__getstructoffset())->tower());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_275_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((RHICfSinglePar*) G__getstructoffset())->id());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_275_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfSinglePar*) G__getstructoffset())->energy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_275_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((RHICfSinglePar*) G__getstructoffset())->fourmomentum();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_275_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector2* pobj;
         TVector2 xobj = ((RHICfSinglePar*) G__getstructoffset())->position();
         pobj = new TVector2(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_275_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((RHICfSinglePar*) G__getstructoffset())->pid();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_275_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfSinglePar*) G__getstructoffset())->pT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_275_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfSinglePar*) G__getstructoffset())->eta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_275_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfSinglePar*) G__getstructoffset())->phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_275_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RHICfSinglePar::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_275_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RHICfSinglePar::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_275_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RHICfSinglePar::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_275_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RHICfSinglePar::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_275_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfSinglePar*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_275_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RHICfSinglePar::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_275_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RHICfSinglePar::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_275_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RHICfSinglePar::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_275_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RHICfSinglePar::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfEvent_275_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RHICfSinglePar* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RHICfSinglePar(*(RHICfSinglePar*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_RHICfSinglePar));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RHICfSinglePar G__TRHICfSinglePar;
static int G__libLHCfEvent_275_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RHICfSinglePar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RHICfSinglePar*) (soff+(sizeof(RHICfSinglePar)*i)))->~G__TRHICfSinglePar();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RHICfSinglePar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RHICfSinglePar*) (soff))->~G__TRHICfSinglePar();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfEvent_275_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RHICfSinglePar* dest = (RHICfSinglePar*) G__getstructoffset();
   *dest = *(RHICfSinglePar*) libp->para[0].ref;
   const RHICfSinglePar& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RHICfPhotonPair */
static int G__libLHCfEvent_276_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RHICfPhotonPair* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RHICfPhotonPair[n];
     } else {
       p = new((void*) gvp) RHICfPhotonPair[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RHICfPhotonPair;
     } else {
       p = new((void*) gvp) RHICfPhotonPair;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_RHICfPhotonPair));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_276_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfPhotonPair*) G__getstructoffset())->Initialize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_276_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfPhotonPair*) G__getstructoffset())->setPi0Type((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_276_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfPhotonPair*) G__getstructoffset())->setEnergy((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_276_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfPhotonPair*) G__getstructoffset())->setFourMomentum(*((TLorentzVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_276_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfPhotonPair*) G__getstructoffset())->setPhotonId((unsigned int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_276_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfPhotonPair*) G__getstructoffset())->pi0type());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_276_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfPhotonPair*) G__getstructoffset())->energy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_276_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((RHICfPhotonPair*) G__getstructoffset())->fourmomentum();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_276_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfPhotonPair*) G__getstructoffset())->invarmass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_276_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfPhotonPair*) G__getstructoffset())->pT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_276_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfPhotonPair*) G__getstructoffset())->eta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_276_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfPhotonPair*) G__getstructoffset())->phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_276_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((RHICfPhotonPair*) G__getstructoffset())->id1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_276_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((RHICfPhotonPair*) G__getstructoffset())->id2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_276_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfPhotonPair*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_276_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RHICfPhotonPair::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_276_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RHICfPhotonPair::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_276_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RHICfPhotonPair::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_276_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RHICfPhotonPair::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_276_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfPhotonPair*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_276_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RHICfPhotonPair::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_276_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RHICfPhotonPair::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_276_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RHICfPhotonPair::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_276_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RHICfPhotonPair::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfEvent_276_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RHICfPhotonPair* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RHICfPhotonPair(*(RHICfPhotonPair*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_RHICfPhotonPair));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RHICfPhotonPair G__TRHICfPhotonPair;
static int G__libLHCfEvent_276_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RHICfPhotonPair*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RHICfPhotonPair*) (soff+(sizeof(RHICfPhotonPair)*i)))->~G__TRHICfPhotonPair();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RHICfPhotonPair*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RHICfPhotonPair*) (soff))->~G__TRHICfPhotonPair();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfEvent_276_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RHICfPhotonPair* dest = (RHICfPhotonPair*) G__getstructoffset();
   *dest = *(RHICfPhotonPair*) libp->para[0].ref;
   const RHICfPhotonPair& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* A1Rec1 */
static int G__libLHCfEvent_277_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1Rec1* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A1Rec1[n];
     } else {
       p = new((void*) gvp) A1Rec1[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A1Rec1;
     } else {
       p = new((void*) gvp) A1Rec1;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A1Rec1));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_277_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1Rec1* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new A1Rec1((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) A1Rec1((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A1Rec1));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_277_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Rec1*) G__getstructoffset())->resize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_277_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A1Rec1*) G__getstructoffset())->GetPeakPosition((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_277_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1Rec1*) G__getstructoffset())->SetPeakPosition((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_277_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A1Rec1*) G__getstructoffset())->GetMHBkgPar((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_277_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1Rec1*) G__getstructoffset())->SetMHBkgPar((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (double) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_277_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Rec1*) G__getstructoffset())->GetMHNhits((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_277_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1Rec1*) G__getstructoffset())->SetMHNhits((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_277_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Rec1*) G__getstructoffset())->GetMHParPos((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_277_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A1Rec1*) G__getstructoffset())->GetMHPar((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_277_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1Rec1*) G__getstructoffset())->SetMHPar((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_277_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((A1Rec1*) G__getstructoffset())->GetMHDiscardedFlag((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_277_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Rec1*) G__getstructoffset())->AddMHHit((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double*) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_277_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Rec1*) G__getstructoffset())->EraseMHHit((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_277_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) A1Rec1::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_277_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1Rec1::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_277_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) A1Rec1::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_277_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      A1Rec1::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_277_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1Rec1*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_277_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1Rec1::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_277_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A1Rec1::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_277_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1Rec1::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_277_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A1Rec1::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfEvent_277_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   A1Rec1* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new A1Rec1(*(A1Rec1*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A1Rec1));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef A1Rec1 G__TA1Rec1;
static int G__libLHCfEvent_277_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (A1Rec1*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((A1Rec1*) (soff+(sizeof(A1Rec1)*i)))->~G__TA1Rec1();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (A1Rec1*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((A1Rec1*) (soff))->~G__TA1Rec1();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfEvent_277_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1Rec1* dest = (A1Rec1*) G__getstructoffset();
   *dest = *(A1Rec1*) libp->para[0].ref;
   const A1Rec1& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RHICfCollection */
static int G__libLHCfEvent_278_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RHICfCollection* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RHICfCollection[n];
     } else {
       p = new((void*) gvp) RHICfCollection[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RHICfCollection;
     } else {
       p = new((void*) gvp) RHICfCollection;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_RHICfCollection));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_278_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RHICfCollection* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RHICfCollection((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) RHICfCollection((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_RHICfCollection));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_278_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfCollection*) G__getstructoffset())->Initialize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_278_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfCollection*) G__getstructoffset())->addSinglePars(*((TClonesArray*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_278_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfCollection*) G__getstructoffset())->addPhotonPairs(*((TClonesArray*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_278_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfCollection*) G__getstructoffset())->addEventInfo((RHICfEventInfo*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_278_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfCollection*) G__getstructoffset())->setBeamCenter((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_278_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfCollection*) G__getstructoffset())->setInfo((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, *((TString*) G__int(libp->para[2])), (int) G__int(libp->para[3])
, *((TString*) G__int(libp->para[4])), *((TString*) G__int(libp->para[5])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_278_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TClonesArray* pobj;
         TClonesArray xobj = ((RHICfCollection*) G__getstructoffset())->singlepars();
         pobj = new TClonesArray(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_278_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TClonesArray* pobj;
         TClonesArray xobj = ((RHICfCollection*) G__getstructoffset())->photonpairs();
         pobj = new TClonesArray(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_278_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RHICfCollection*) G__getstructoffset())->eventinfo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_278_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((RHICfCollection*) G__getstructoffset())->npars());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_278_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((RHICfCollection*) G__getstructoffset())->npairs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_278_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfCollection*) G__getstructoffset())->runnumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_278_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfCollection*) G__getstructoffset())->evtnumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_278_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((RHICfCollection*) G__getstructoffset())->trigger();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_278_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfCollection*) G__getstructoffset())->bunchid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_278_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((RHICfCollection*) G__getstructoffset())->runtype();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_278_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((RHICfCollection*) G__getstructoffset())->quality();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_278_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfCollection*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_278_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RHICfCollection::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_278_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RHICfCollection::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_278_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RHICfCollection::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_278_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RHICfCollection::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_278_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfCollection*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_278_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RHICfCollection::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_278_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RHICfCollection::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_278_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RHICfCollection::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_278_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RHICfCollection::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RHICfCollection G__TRHICfCollection;
static int G__libLHCfEvent_278_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RHICfCollection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RHICfCollection*) (soff+(sizeof(RHICfCollection)*i)))->~G__TRHICfCollection();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RHICfCollection*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RHICfCollection*) (soff))->~G__TRHICfCollection();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* A1Raw_pp2015 */
static int G__libLHCfEvent_279_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1Raw_pp2015* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A1Raw_pp2015[n];
     } else {
       p = new((void*) gvp) A1Raw_pp2015[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A1Raw_pp2015;
     } else {
       p = new((void*) gvp) A1Raw_pp2015;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A1Raw_pp2015));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_279_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1Raw_pp2015* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new A1Raw_pp2015((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) A1Raw_pp2015((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A1Raw_pp2015));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_279_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A1Raw_pp2015*) G__getstructoffset())->clear((A1Raw_pp2015::bankio) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A1Raw_pp2015*) G__getstructoffset())->clear());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_279_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A1Raw_pp2015*) G__getstructoffset())->copy((A1Raw_pp2015*) G__int(libp->para[0]), (A1Raw_pp2015::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A1Raw_pp2015*) G__getstructoffset())->copy((A1Raw_pp2015*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_279_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A1Raw_pp2015*) G__getstructoffset())->copydata((A1Raw_pp2015*) G__int(libp->para[0]), (A1Raw_pp2015::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A1Raw_pp2015*) G__getstructoffset())->copydata((A1Raw_pp2015*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_279_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A1Raw_pp2015*) G__getstructoffset())->add((A1Raw_pp2015*) G__int(libp->para[0]), (A1Raw_pp2015::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A1Raw_pp2015*) G__getstructoffset())->add((A1Raw_pp2015*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_279_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) A1Raw_pp2015::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_279_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1Raw_pp2015::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_279_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) A1Raw_pp2015::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_279_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      A1Raw_pp2015::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_279_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1Raw_pp2015*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_279_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1Raw_pp2015::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_279_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A1Raw_pp2015::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_279_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1Raw_pp2015::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_279_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A1Raw_pp2015::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfEvent_279_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   A1Raw_pp2015* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new A1Raw_pp2015(*(A1Raw_pp2015*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A1Raw_pp2015));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef A1Raw_pp2015 G__TA1Raw_pp2015;
static int G__libLHCfEvent_279_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (A1Raw_pp2015*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((A1Raw_pp2015*) (soff+(sizeof(A1Raw_pp2015)*i)))->~G__TA1Raw_pp2015();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (A1Raw_pp2015*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((A1Raw_pp2015*) (soff))->~G__TA1Raw_pp2015();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfEvent_279_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1Raw_pp2015* dest = (A1Raw_pp2015*) G__getstructoffset();
   *dest = *(A1Raw_pp2015*) libp->para[0].ref;
   const A1Raw_pp2015& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* A2Raw_pp2015 */
static int G__libLHCfEvent_281_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Raw_pp2015* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A2Raw_pp2015[n];
     } else {
       p = new((void*) gvp) A2Raw_pp2015[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A2Raw_pp2015;
     } else {
       p = new((void*) gvp) A2Raw_pp2015;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pp2015));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_281_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Raw_pp2015* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new A2Raw_pp2015((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) A2Raw_pp2015((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pp2015));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_281_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A2Raw_pp2015*) G__getstructoffset())->clear((A2Raw_pp2015::bankio) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A2Raw_pp2015*) G__getstructoffset())->clear());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_281_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A2Raw_pp2015*) G__getstructoffset())->copy((A2Raw_pp2015*) G__int(libp->para[0]), (A2Raw_pp2015::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A2Raw_pp2015*) G__getstructoffset())->copy((A2Raw_pp2015*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_281_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A2Raw_pp2015*) G__getstructoffset())->copydata((A2Raw_pp2015*) G__int(libp->para[0]), (A2Raw_pp2015::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A2Raw_pp2015*) G__getstructoffset())->copydata((A2Raw_pp2015*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_281_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A2Raw_pp2015*) G__getstructoffset())->add((A2Raw_pp2015*) G__int(libp->para[0]), (A2Raw_pp2015::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A2Raw_pp2015*) G__getstructoffset())->add((A2Raw_pp2015*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_281_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) A2Raw_pp2015::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_281_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Raw_pp2015::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_281_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) A2Raw_pp2015::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_281_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      A2Raw_pp2015::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_281_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2Raw_pp2015*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_281_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Raw_pp2015::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_281_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2Raw_pp2015::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_281_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Raw_pp2015::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_281_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2Raw_pp2015::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfEvent_281_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   A2Raw_pp2015* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new A2Raw_pp2015(*(A2Raw_pp2015*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pp2015));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef A2Raw_pp2015 G__TA2Raw_pp2015;
static int G__libLHCfEvent_281_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (A2Raw_pp2015*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((A2Raw_pp2015*) (soff+(sizeof(A2Raw_pp2015)*i)))->~G__TA2Raw_pp2015();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (A2Raw_pp2015*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((A2Raw_pp2015*) (soff))->~G__TA2Raw_pp2015();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfEvent_281_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Raw_pp2015* dest = (A2Raw_pp2015*) G__getstructoffset();
   *dest = *(A2Raw_pp2015*) libp->para[0].ref;
   const A2Raw_pp2015& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* A1Scl_pp2015 */
static int G__libLHCfEvent_283_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1Scl_pp2015* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A1Scl_pp2015[n];
     } else {
       p = new((void*) gvp) A1Scl_pp2015[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A1Scl_pp2015;
     } else {
       p = new((void*) gvp) A1Scl_pp2015;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A1Scl_pp2015));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_283_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1Scl_pp2015* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new A1Scl_pp2015((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) A1Scl_pp2015((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A1Scl_pp2015));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_283_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Scl_pp2015*) G__getstructoffset())->clear());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_283_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Scl_pp2015*) G__getstructoffset())->copy((A1Scl_pp2015*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_283_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Scl_pp2015*) G__getstructoffset())->copydata((A1Scl_pp2015*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_283_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) A1Scl_pp2015::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_283_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1Scl_pp2015::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_283_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) A1Scl_pp2015::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_283_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      A1Scl_pp2015::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_283_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1Scl_pp2015*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_283_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1Scl_pp2015::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_283_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A1Scl_pp2015::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_283_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1Scl_pp2015::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_283_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A1Scl_pp2015::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfEvent_283_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   A1Scl_pp2015* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new A1Scl_pp2015(*(A1Scl_pp2015*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A1Scl_pp2015));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef A1Scl_pp2015 G__TA1Scl_pp2015;
static int G__libLHCfEvent_283_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (A1Scl_pp2015*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((A1Scl_pp2015*) (soff+(sizeof(A1Scl_pp2015)*i)))->~G__TA1Scl_pp2015();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (A1Scl_pp2015*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((A1Scl_pp2015*) (soff))->~G__TA1Scl_pp2015();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfEvent_283_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1Scl_pp2015* dest = (A1Scl_pp2015*) G__getstructoffset();
   *dest = *(A1Scl_pp2015*) libp->para[0].ref;
   const A1Scl_pp2015& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* A2Scl_pp2015 */
static int G__libLHCfEvent_284_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Scl_pp2015* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A2Scl_pp2015[n];
     } else {
       p = new((void*) gvp) A2Scl_pp2015[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A2Scl_pp2015;
     } else {
       p = new((void*) gvp) A2Scl_pp2015;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2Scl_pp2015));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_284_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Scl_pp2015* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new A2Scl_pp2015((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) A2Scl_pp2015((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2Scl_pp2015));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_284_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Scl_pp2015*) G__getstructoffset())->clear());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_284_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Scl_pp2015*) G__getstructoffset())->copy((A2Scl_pp2015*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_284_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Scl_pp2015*) G__getstructoffset())->copydata((A2Scl_pp2015*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_284_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) A2Scl_pp2015::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_284_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Scl_pp2015::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_284_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) A2Scl_pp2015::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_284_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      A2Scl_pp2015::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_284_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2Scl_pp2015*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_284_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Scl_pp2015::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_284_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2Scl_pp2015::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_284_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Scl_pp2015::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_284_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2Scl_pp2015::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfEvent_284_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   A2Scl_pp2015* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new A2Scl_pp2015(*(A2Scl_pp2015*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2Scl_pp2015));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef A2Scl_pp2015 G__TA2Scl_pp2015;
static int G__libLHCfEvent_284_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (A2Scl_pp2015*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((A2Scl_pp2015*) (soff+(sizeof(A2Scl_pp2015)*i)))->~G__TA2Scl_pp2015();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (A2Scl_pp2015*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((A2Scl_pp2015*) (soff))->~G__TA2Scl_pp2015();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfEvent_284_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Scl_pp2015* dest = (A2Scl_pp2015*) G__getstructoffset();
   *dest = *(A2Scl_pp2015*) libp->para[0].ref;
   const A2Scl_pp2015& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* A2Raw_pPb2013 */
static int G__libLHCfEvent_285_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Raw_pPb2013* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A2Raw_pPb2013[n];
     } else {
       p = new((void*) gvp) A2Raw_pPb2013[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A2Raw_pPb2013;
     } else {
       p = new((void*) gvp) A2Raw_pPb2013;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2013));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_285_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Raw_pPb2013* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new A2Raw_pPb2013((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) A2Raw_pPb2013((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2013));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_285_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A2Raw_pPb2013*) G__getstructoffset())->clear((A2Raw_pPb2013::bankio) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A2Raw_pPb2013*) G__getstructoffset())->clear());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_285_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A2Raw_pPb2013*) G__getstructoffset())->copy((A2Raw_pPb2013*) G__int(libp->para[0]), (A2Raw_pPb2013::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A2Raw_pPb2013*) G__getstructoffset())->copy((A2Raw_pPb2013*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_285_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A2Raw_pPb2013*) G__getstructoffset())->copydata((A2Raw_pPb2013*) G__int(libp->para[0]), (A2Raw_pPb2013::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A2Raw_pPb2013*) G__getstructoffset())->copydata((A2Raw_pPb2013*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_285_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A2Raw_pPb2013*) G__getstructoffset())->add((A2Raw_pPb2013*) G__int(libp->para[0]), (A2Raw_pPb2013::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A2Raw_pPb2013*) G__getstructoffset())->add((A2Raw_pPb2013*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_285_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) A2Raw_pPb2013::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_285_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Raw_pPb2013::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_285_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) A2Raw_pPb2013::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_285_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      A2Raw_pPb2013::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_285_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2Raw_pPb2013*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_285_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Raw_pPb2013::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_285_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2Raw_pPb2013::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_285_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Raw_pPb2013::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_285_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2Raw_pPb2013::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfEvent_285_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   A2Raw_pPb2013* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new A2Raw_pPb2013(*(A2Raw_pPb2013*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2013));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef A2Raw_pPb2013 G__TA2Raw_pPb2013;
static int G__libLHCfEvent_285_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (A2Raw_pPb2013*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((A2Raw_pPb2013*) (soff+(sizeof(A2Raw_pPb2013)*i)))->~G__TA2Raw_pPb2013();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (A2Raw_pPb2013*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((A2Raw_pPb2013*) (soff))->~G__TA2Raw_pPb2013();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfEvent_285_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Raw_pPb2013* dest = (A2Raw_pPb2013*) G__getstructoffset();
   *dest = *(A2Raw_pPb2013*) libp->para[0].ref;
   const A2Raw_pPb2013& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* A2Raw_pPb2016 */
static int G__libLHCfEvent_287_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Raw_pPb2016* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A2Raw_pPb2016[n];
     } else {
       p = new((void*) gvp) A2Raw_pPb2016[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A2Raw_pPb2016;
     } else {
       p = new((void*) gvp) A2Raw_pPb2016;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2016));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_287_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Raw_pPb2016* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new A2Raw_pPb2016((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) A2Raw_pPb2016((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2016));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_287_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A2Raw_pPb2016*) G__getstructoffset())->clear((A2Raw_pPb2016::bankio) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A2Raw_pPb2016*) G__getstructoffset())->clear());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_287_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A2Raw_pPb2016*) G__getstructoffset())->copy((A2Raw_pPb2016*) G__int(libp->para[0]), (A2Raw_pPb2016::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A2Raw_pPb2016*) G__getstructoffset())->copy((A2Raw_pPb2016*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_287_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A2Raw_pPb2016*) G__getstructoffset())->copydata((A2Raw_pPb2016*) G__int(libp->para[0]), (A2Raw_pPb2016::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A2Raw_pPb2016*) G__getstructoffset())->copydata((A2Raw_pPb2016*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_287_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A2Raw_pPb2016*) G__getstructoffset())->add((A2Raw_pPb2016*) G__int(libp->para[0]), (A2Raw_pPb2016::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A2Raw_pPb2016*) G__getstructoffset())->add((A2Raw_pPb2016*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_287_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) A2Raw_pPb2016::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_287_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Raw_pPb2016::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_287_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) A2Raw_pPb2016::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_287_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      A2Raw_pPb2016::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_287_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2Raw_pPb2016*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_287_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Raw_pPb2016::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_287_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2Raw_pPb2016::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_287_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Raw_pPb2016::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_287_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2Raw_pPb2016::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfEvent_287_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   A2Raw_pPb2016* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new A2Raw_pPb2016(*(A2Raw_pPb2016*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2016));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef A2Raw_pPb2016 G__TA2Raw_pPb2016;
static int G__libLHCfEvent_287_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (A2Raw_pPb2016*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((A2Raw_pPb2016*) (soff+(sizeof(A2Raw_pPb2016)*i)))->~G__TA2Raw_pPb2016();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (A2Raw_pPb2016*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((A2Raw_pPb2016*) (soff))->~G__TA2Raw_pPb2016();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfEvent_287_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Raw_pPb2016* dest = (A2Raw_pPb2016*) G__getstructoffset();
   *dest = *(A2Raw_pPb2016*) libp->para[0].ref;
   const A2Raw_pPb2016& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RHICfRaw_Op2017 */
static int G__libLHCfEvent_289_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RHICfRaw_Op2017* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RHICfRaw_Op2017[n];
     } else {
       p = new((void*) gvp) RHICfRaw_Op2017[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RHICfRaw_Op2017;
     } else {
       p = new((void*) gvp) RHICfRaw_Op2017;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_RHICfRaw_Op2017));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_289_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RHICfRaw_Op2017* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RHICfRaw_Op2017((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) RHICfRaw_Op2017((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_RHICfRaw_Op2017));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_289_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((RHICfRaw_Op2017*) G__getstructoffset())->clear((RHICfRaw_Op2017::bankio) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((RHICfRaw_Op2017*) G__getstructoffset())->clear());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_289_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((RHICfRaw_Op2017*) G__getstructoffset())->copy((RHICfRaw_Op2017*) G__int(libp->para[0]), (RHICfRaw_Op2017::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((RHICfRaw_Op2017*) G__getstructoffset())->copy((RHICfRaw_Op2017*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_289_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((RHICfRaw_Op2017*) G__getstructoffset())->copydata((RHICfRaw_Op2017*) G__int(libp->para[0]), (RHICfRaw_Op2017::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((RHICfRaw_Op2017*) G__getstructoffset())->copydata((RHICfRaw_Op2017*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_289_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((RHICfRaw_Op2017*) G__getstructoffset())->add((RHICfRaw_Op2017*) G__int(libp->para[0]), (RHICfRaw_Op2017::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((RHICfRaw_Op2017*) G__getstructoffset())->add((RHICfRaw_Op2017*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_289_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RHICfRaw_Op2017::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_289_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RHICfRaw_Op2017::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_289_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RHICfRaw_Op2017::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_289_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RHICfRaw_Op2017::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_289_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRaw_Op2017*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_289_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RHICfRaw_Op2017::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_289_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RHICfRaw_Op2017::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_289_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RHICfRaw_Op2017::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_289_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RHICfRaw_Op2017::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfEvent_289_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RHICfRaw_Op2017* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RHICfRaw_Op2017(*(RHICfRaw_Op2017*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_RHICfRaw_Op2017));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RHICfRaw_Op2017 G__TRHICfRaw_Op2017;
static int G__libLHCfEvent_289_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RHICfRaw_Op2017*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RHICfRaw_Op2017*) (soff+(sizeof(RHICfRaw_Op2017)*i)))->~G__TRHICfRaw_Op2017();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RHICfRaw_Op2017*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RHICfRaw_Op2017*) (soff))->~G__TRHICfRaw_Op2017();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfEvent_289_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RHICfRaw_Op2017* dest = (RHICfRaw_Op2017*) G__getstructoffset();
   *dest = *(RHICfRaw_Op2017*) libp->para[0].ref;
   const RHICfRaw_Op2017& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* LHCfEvent */
static int G__libLHCfEvent_291_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LHCfEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LHCfEvent[n];
     } else {
       p = new((void*) gvp) LHCfEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LHCfEvent;
     } else {
       p = new((void*) gvp) LHCfEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_LHCfEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LHCfEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new LHCfEvent((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) LHCfEvent((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_LHCfEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LHCfEvent*) G__getstructoffset())->Initialize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LHCfEvent*) G__getstructoffset())->Delete();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->GetRun());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->GetGNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->GetA1Number());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->GetA2Number());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 72, (long) ((LHCfEvent*) G__getstructoffset())->GetA1Flag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((LHCfEvent*) G__getstructoffset())->GetA1Flag((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 72, (long) ((LHCfEvent*) G__getstructoffset())->GetA2Flag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((LHCfEvent*) G__getstructoffset())->GetA2Flag((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->GetIFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->GetTNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((LHCfEvent*) G__getstructoffset())->GetTag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->GetTmp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((LHCfEvent*) G__getstructoffset())->GetObjAarray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LHCfEvent*) G__getstructoffset())->SetTmp((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LHCfEvent*) G__getstructoffset())->Add((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((LHCfEvent*) G__getstructoffset())->FindObject((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((LHCfEvent*) G__getstructoffset())->GetObject((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((LHCfEvent*) G__getstructoffset())->Get((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->Check((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((LHCfEvent*) G__getstructoffset())->GetA1Raw((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((LHCfEvent*) G__getstructoffset())->GetA1Raw());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((LHCfEvent*) G__getstructoffset())->GetA1Cal1((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((LHCfEvent*) G__getstructoffset())->GetA1Cal1());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((LHCfEvent*) G__getstructoffset())->GetA1Cal2((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((LHCfEvent*) G__getstructoffset())->GetA1Cal2());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((LHCfEvent*) G__getstructoffset())->GetA1Phys((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((LHCfEvent*) G__getstructoffset())->GetA1Phys());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((LHCfEvent*) G__getstructoffset())->GetA1Info((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((LHCfEvent*) G__getstructoffset())->GetA1Info());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((LHCfEvent*) G__getstructoffset())->GetA1Scl((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((LHCfEvent*) G__getstructoffset())->GetA1Scl());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((LHCfEvent*) G__getstructoffset())->GetA2Raw((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((LHCfEvent*) G__getstructoffset())->GetA2Raw());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((LHCfEvent*) G__getstructoffset())->GetA2Cal1((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((LHCfEvent*) G__getstructoffset())->GetA2Cal1());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((LHCfEvent*) G__getstructoffset())->GetA2Cal2((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((LHCfEvent*) G__getstructoffset())->GetA2Cal2());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((LHCfEvent*) G__getstructoffset())->GetA2Phys((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((LHCfEvent*) G__getstructoffset())->GetA2Phys());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((LHCfEvent*) G__getstructoffset())->GetA2Info((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((LHCfEvent*) G__getstructoffset())->GetA2Info());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((LHCfEvent*) G__getstructoffset())->GetA2Scl((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((LHCfEvent*) G__getstructoffset())->GetA2Scl());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((LHCfEvent*) G__getstructoffset())->GetRHICfCollection((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((LHCfEvent*) G__getstructoffset())->GetRHICfCollection());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((LHCfEvent*) G__getstructoffset())->GetA1Raw_pp2015((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((LHCfEvent*) G__getstructoffset())->GetA1Raw_pp2015());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((LHCfEvent*) G__getstructoffset())->GetA2Raw_pp2015((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((LHCfEvent*) G__getstructoffset())->GetA2Raw_pp2015());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((LHCfEvent*) G__getstructoffset())->GetA1Scl_pp2015((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((LHCfEvent*) G__getstructoffset())->GetA1Scl_pp2015());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((LHCfEvent*) G__getstructoffset())->GetA2Scl_pp2015((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((LHCfEvent*) G__getstructoffset())->GetA2Scl_pp2015());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LHCfEvent*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LHCfEvent*) G__getstructoffset())->HeaderClear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LHCfEvent*) G__getstructoffset())->ObjClear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LHCfEvent*) G__getstructoffset())->ObjDelete();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LHCfEvent*) G__getstructoffset())->HeaderCopy((LHCfEvent*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->CheckTag((unsigned int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->CheckTag());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->CheckA1Trg());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->CheckA1Scl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->CheckA2Trg());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->CheckA2Scl());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->CheckSC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->CheckA1Sim());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->CheckA2Sim());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->CheckA1Flag((int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->CheckA1Flag((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->CheckA1Flag());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->CheckA2Flag((int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->CheckA2Flag((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->CheckA2Flag());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->IsA1BeamFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->IsA1PedeFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->IsA1LaserFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->IsA1EnableFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->IsA1BTPX1Flag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->IsA1BTPX2Flag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->IsA1L2TAFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->IsA1L2TPFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->IsA1L2TEXTFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->IsA1STRGFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->IsA1LTRGFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->IsA1L2TASPFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->IsA1L2TAMBFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->IsA2BeamFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->IsA2PedeFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->IsA2LaserFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->IsA2EnableFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->IsA2BTPX1Flag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->IsA2BTPX2Flag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->IsA2L2TAFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->IsA2L2TPFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->IsA2L2TEXTFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->IsA2STRGFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->IsA2LTRGFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->IsA2L2TASPFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->IsA2L2TAMBFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LHCfEvent*) G__getstructoffset())->EventTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LHCfEvent*) G__getstructoffset())->Show();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LHCfEvent*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) LHCfEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LHCfEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) LHCfEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      LHCfEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LHCfEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LHCfEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LHCfEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LHCfEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_291_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LHCfEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef LHCfEvent G__TLHCfEvent;
static int G__libLHCfEvent_291_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (LHCfEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((LHCfEvent*) (soff+(sizeof(LHCfEvent)*i)))->~G__TLHCfEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (LHCfEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((LHCfEvent*) (soff))->~G__TLHCfEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* LHCfDef */

/* A1Cal2M */
static int G__libLHCfEvent_294_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1Cal2M* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A1Cal2M[n];
     } else {
       p = new((void*) gvp) A1Cal2M[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A1Cal2M;
     } else {
       p = new((void*) gvp) A1Cal2M;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2M));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_294_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1Cal2M* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new A1Cal2M((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) A1Cal2M((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2M));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_294_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A1Cal2M*) G__getstructoffset())->copy((A1Cal2M*) G__int(libp->para[0]), (A1Cal2::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A1Cal2M*) G__getstructoffset())->copy((A1Cal2M*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_294_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A1Cal2M*) G__getstructoffset())->copydata((A1Cal2M*) G__int(libp->para[0]), (A1Cal2::bankio) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A1Cal2M*) G__getstructoffset())->copydata((A1Cal2M*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_294_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A1Cal2M*) G__getstructoffset())->clk());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_294_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A1Cal2M*) G__getstructoffset())->bptx1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_294_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A1Cal2M*) G__getstructoffset())->bptx2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_294_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A1Cal2M*) G__getstructoffset())->GetTDCofBPTX1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_294_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A1Cal2M*) G__getstructoffset())->GetTDCofBPTX2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_294_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal2M*) G__getstructoffset())->CheckBunchCrossing());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_294_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) A1Cal2M::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_294_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1Cal2M::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_294_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) A1Cal2M::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_294_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      A1Cal2M::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_294_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1Cal2M*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_294_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1Cal2M::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_294_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A1Cal2M::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_294_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1Cal2M::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_294_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A1Cal2M::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfEvent_294_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   A1Cal2M* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new A1Cal2M(*(A1Cal2M*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2M));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef A1Cal2M G__TA1Cal2M;
static int G__libLHCfEvent_294_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (A1Cal2M*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((A1Cal2M*) (soff+(sizeof(A1Cal2M)*i)))->~G__TA1Cal2M();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (A1Cal2M*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((A1Cal2M*) (soff))->~G__TA1Cal2M();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfEvent_294_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1Cal2M* dest = (A1Cal2M*) G__getstructoffset();
   *dest = *(A1Cal2M*) libp->para[0].ref;
   const A1Cal2M& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* A1Rec2 */
static int G__libLHCfEvent_296_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1Rec2* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A1Rec2[n];
     } else {
       p = new((void*) gvp) A1Rec2[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A1Rec2;
     } else {
       p = new((void*) gvp) A1Rec2;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A1Rec2));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_296_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1Rec2* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new A1Rec2((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) A1Rec2((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A1Rec2));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_296_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Rec2*) G__getstructoffset())->resize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_296_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A1Rec2*) G__getstructoffset())->GetPeakPosition((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_296_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1Rec2*) G__getstructoffset())->SetPeakPosition((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_296_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A1Rec2*) G__getstructoffset())->GetMHBkgPar((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_296_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1Rec2*) G__getstructoffset())->SetMHBkgPar((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (double) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_296_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Rec2*) G__getstructoffset())->GetMHNhits((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_296_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1Rec2*) G__getstructoffset())->SetMHNhits((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_296_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Rec2*) G__getstructoffset())->GetMHParPos((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_296_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((A1Rec2*) G__getstructoffset())->GetMHPar((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_296_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1Rec2*) G__getstructoffset())->SetMHPar((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_296_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((A1Rec2*) G__getstructoffset())->GetMHDiscardedFlag((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_296_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Rec2*) G__getstructoffset())->AddMHHit((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double*) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_296_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Rec2*) G__getstructoffset())->EraseMHHit((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_296_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) A1Rec2::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_296_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1Rec2::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_296_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) A1Rec2::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_296_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      A1Rec2::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_296_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1Rec2*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_296_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1Rec2::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_296_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A1Rec2::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_296_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1Rec2::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_296_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A1Rec2::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfEvent_296_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   A1Rec2* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new A1Rec2(*(A1Rec2*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A1Rec2));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef A1Rec2 G__TA1Rec2;
static int G__libLHCfEvent_296_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (A1Rec2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((A1Rec2*) (soff+(sizeof(A1Rec2)*i)))->~G__TA1Rec2();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (A1Rec2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((A1Rec2*) (soff))->~G__TA1Rec2();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfEvent_296_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1Rec2* dest = (A1Rec2*) G__getstructoffset();
   *dest = *(A1Rec2*) libp->para[0].ref;
   const A1Rec2& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* A2Rec1 */
static int G__libLHCfEvent_298_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Rec1* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A2Rec1[n];
     } else {
       p = new((void*) gvp) A2Rec1[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A2Rec1;
     } else {
       p = new((void*) gvp) A2Rec1;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2Rec1));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_298_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Rec1* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new A2Rec1((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) A2Rec1((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2Rec1));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_298_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Rec1*) G__getstructoffset())->resize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_298_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) A2Rec1::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_298_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Rec1::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_298_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) A2Rec1::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_298_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      A2Rec1::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_298_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2Rec1*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_298_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Rec1::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_298_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2Rec1::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_298_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Rec1::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_298_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2Rec1::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfEvent_298_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   A2Rec1* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new A2Rec1(*(A2Rec1*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2Rec1));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef A2Rec1 G__TA2Rec1;
static int G__libLHCfEvent_298_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (A2Rec1*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((A2Rec1*) (soff+(sizeof(A2Rec1)*i)))->~G__TA2Rec1();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (A2Rec1*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((A2Rec1*) (soff))->~G__TA2Rec1();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfEvent_298_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Rec1* dest = (A2Rec1*) G__getstructoffset();
   *dest = *(A2Rec1*) libp->para[0].ref;
   const A2Rec1& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* A2Rec2 */
static int G__libLHCfEvent_299_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Rec2* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A2Rec2[n];
     } else {
       p = new((void*) gvp) A2Rec2[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A2Rec2;
     } else {
       p = new((void*) gvp) A2Rec2;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2Rec2));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_299_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Rec2* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new A2Rec2((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) A2Rec2((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2Rec2));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_299_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Rec2*) G__getstructoffset())->resize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_299_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) A2Rec2::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_299_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Rec2::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_299_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) A2Rec2::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_299_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      A2Rec2::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_299_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2Rec2*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_299_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Rec2::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_299_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2Rec2::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_299_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Rec2::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_299_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2Rec2::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfEvent_299_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   A2Rec2* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new A2Rec2(*(A2Rec2*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2Rec2));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef A2Rec2 G__TA2Rec2;
static int G__libLHCfEvent_299_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (A2Rec2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((A2Rec2*) (soff+(sizeof(A2Rec2)*i)))->~G__TA2Rec2();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (A2Rec2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((A2Rec2*) (soff))->~G__TA2Rec2();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfEvent_299_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Rec2* dest = (A2Rec2*) G__getstructoffset();
   *dest = *(A2Rec2*) libp->para[0].ref;
   const A2Rec2& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* A2Rec3 */
static int G__libLHCfEvent_300_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Rec3* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A2Rec3[n];
     } else {
       p = new((void*) gvp) A2Rec3[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A2Rec3;
     } else {
       p = new((void*) gvp) A2Rec3;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2Rec3));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_300_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Rec3* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new A2Rec3((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) A2Rec3((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2Rec3));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_300_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Rec3*) G__getstructoffset())->resize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_300_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) A2Rec3::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_300_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Rec3::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_300_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) A2Rec3::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_300_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      A2Rec3::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_300_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2Rec3*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_300_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Rec3::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_300_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2Rec3::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_300_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Rec3::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_300_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2Rec3::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfEvent_300_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   A2Rec3* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new A2Rec3(*(A2Rec3*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2Rec3));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef A2Rec3 G__TA2Rec3;
static int G__libLHCfEvent_300_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (A2Rec3*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((A2Rec3*) (soff+(sizeof(A2Rec3)*i)))->~G__TA2Rec3();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (A2Rec3*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((A2Rec3*) (soff))->~G__TA2Rec3();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfEvent_300_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Rec3* dest = (A2Rec3*) G__getstructoffset();
   *dest = *(A2Rec3*) libp->para[0].ref;
   const A2Rec3& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RHICfScl_Op2017 */
static int G__libLHCfEvent_301_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RHICfScl_Op2017* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RHICfScl_Op2017[n];
     } else {
       p = new((void*) gvp) RHICfScl_Op2017[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RHICfScl_Op2017;
     } else {
       p = new((void*) gvp) RHICfScl_Op2017;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_RHICfScl_Op2017));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_301_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RHICfScl_Op2017* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RHICfScl_Op2017((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) RHICfScl_Op2017((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_RHICfScl_Op2017));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_301_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfScl_Op2017*) G__getstructoffset())->clear());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_301_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfScl_Op2017*) G__getstructoffset())->copy((RHICfScl_Op2017*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_301_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfScl_Op2017*) G__getstructoffset())->copydata((RHICfScl_Op2017*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_301_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RHICfScl_Op2017::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_301_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RHICfScl_Op2017::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_301_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RHICfScl_Op2017::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_301_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RHICfScl_Op2017::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_301_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfScl_Op2017*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_301_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RHICfScl_Op2017::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_301_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RHICfScl_Op2017::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_301_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RHICfScl_Op2017::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_301_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RHICfScl_Op2017::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfEvent_301_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RHICfScl_Op2017* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RHICfScl_Op2017(*(RHICfScl_Op2017*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_RHICfScl_Op2017));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RHICfScl_Op2017 G__TRHICfScl_Op2017;
static int G__libLHCfEvent_301_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RHICfScl_Op2017*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RHICfScl_Op2017*) (soff+(sizeof(RHICfScl_Op2017)*i)))->~G__TRHICfScl_Op2017();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RHICfScl_Op2017*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RHICfScl_Op2017*) (soff))->~G__TRHICfScl_Op2017();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfEvent_301_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RHICfScl_Op2017* dest = (RHICfScl_Op2017*) G__getstructoffset();
   *dest = *(RHICfScl_Op2017*) libp->para[0].ref;
   const RHICfScl_Op2017& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* A1Cal1AccumHist */
static int G__libLHCfEvent_391_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1Cal1AccumHist* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A1Cal1AccumHist[n];
     } else {
       p = new((void*) gvp) A1Cal1AccumHist[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A1Cal1AccumHist;
     } else {
       p = new((void*) gvp) A1Cal1AccumHist;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1AccumHist));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1Cal1AccumHist* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new A1Cal1AccumHist((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) A1Cal1AccumHist((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1AccumHist));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->InitializeMembers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->Initialize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->InitializeHists());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->InitializeCanvases());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->InitializeCanvasCal0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->InitializeCanvasCal1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->InitializeCanvasADCs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->InitializeCanvasFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->InitializeCanvasTDC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->InitializeCanvasSciFi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->DeleteHists());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->DeleteHist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->DeleteCanvases());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->Fill((A1Cal1*) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, (bool) G__int(libp->para[2]), (bool) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->Fill((A1Cal1*) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, (bool) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->Fill((A1Cal1*) G__int(libp->para[0]), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->Fill((A1Cal1*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->Reset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->CopyData((A1Cal1AccumHist*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->SetDataVersion((A1Cal1AccumHist::DATA_VERSION) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1Cal1AccumHist*) G__getstructoffset())->SetCanvasCal0((TCanvas*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1Cal1AccumHist*) G__getstructoffset())->SetCanvasCal1((TCanvas*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1Cal1AccumHist*) G__getstructoffset())->SetCanvasADCs((TCanvas*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1Cal1AccumHist*) G__getstructoffset())->SetCanvasFlag((TCanvas*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1Cal1AccumHist*) G__getstructoffset())->SetCanvasTDC((TCanvas*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1Cal1AccumHist*) G__getstructoffset())->SetCanvasSciFi((TCanvas*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((A1Cal1AccumHist*) G__getstructoffset())->GetCanvasCal0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((A1Cal1AccumHist*) G__getstructoffset())->GetCanvasCal1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((A1Cal1AccumHist*) G__getstructoffset())->GetCanvasADCs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((A1Cal1AccumHist*) G__getstructoffset())->GetCanvasFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((A1Cal1AccumHist*) G__getstructoffset())->GetCanvasTDC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((A1Cal1AccumHist*) G__getstructoffset())->GetCanvasSciFi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->SetHistNbin((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->SetHistBinMinimum((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->SetHistBinMaximum((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->SetHSciFiNbin((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->SetHSciFiBinMinimum((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->SetHSciFiBinMaximum((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->SetHSciFiChannel((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->GetHistNbin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->GetHistBinMinimum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->GetHistBinMaximum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->GetHSciFiNbin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->GetHSciFiBinMinimum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->GetHSciFiBinMaximum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->GetHSciFiChannel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->SetTDCHistogram((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->SetTDCHistogram((int) G__int(libp->para[0]), (TH1F*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1Cal1AccumHist*) G__getstructoffset())->SetLineColor((Color_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1Cal1AccumHist*) G__getstructoffset())->SetFillColor((Color_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1Cal1AccumHist*) G__getstructoffset())->SetFillStyle((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1Cal1AccumHist*) G__getstructoffset())->Scale((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->Draw((int) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->Draw((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->Draw());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->DrawCal0((int) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->DrawCal0((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->DrawCal0());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->DrawCal1((int) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->DrawCal1((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->DrawCal1());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->DrawADCs((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->DrawADCs());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->DrawFlag((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->DrawFlag());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->DrawTDC((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->DrawTDC());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->DrawSciFi((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->DrawSciFi());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->OptimizeYRange((TPad*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->SetLogy((TCanvas*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->SetLogy((TCanvas*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->SetLogy((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->SetLogy());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->SetLogyCal0((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->SetLogyCal0());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->SetLogyCal1((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->SetLogyCal1());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->SetLogyADCs((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->SetLogyADCs());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->SetLogyFlag((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->SetLogyFlag());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->SetLogyTDC((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->SetLogyTDC());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->SetLogySciFi((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->SetLogySciFi());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->Init());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->Bor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->Eor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal1AccumHist*) G__getstructoffset())->Loop((A1Cal1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) A1Cal1AccumHist::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1Cal1AccumHist::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) A1Cal1AccumHist::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      A1Cal1AccumHist::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1Cal1AccumHist*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1Cal1AccumHist::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A1Cal1AccumHist::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1Cal1AccumHist::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_391_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A1Cal1AccumHist::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfEvent_391_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   A1Cal1AccumHist* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new A1Cal1AccumHist(*(A1Cal1AccumHist*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1AccumHist));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef A1Cal1AccumHist G__TA1Cal1AccumHist;
static int G__libLHCfEvent_391_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (A1Cal1AccumHist*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((A1Cal1AccumHist*) (soff+(sizeof(A1Cal1AccumHist)*i)))->~G__TA1Cal1AccumHist();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (A1Cal1AccumHist*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((A1Cal1AccumHist*) (soff))->~G__TA1Cal1AccumHist();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfEvent_391_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1Cal1AccumHist* dest = (A1Cal1AccumHist*) G__getstructoffset();
   *dest = *(A1Cal1AccumHist*) libp->para[0].ref;
   const A1Cal1AccumHist& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* A2Cal1AccumHist */
static int G__libLHCfEvent_393_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Cal1AccumHist* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A2Cal1AccumHist[n];
     } else {
       p = new((void*) gvp) A2Cal1AccumHist[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A2Cal1AccumHist;
     } else {
       p = new((void*) gvp) A2Cal1AccumHist;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1AccumHist));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Cal1AccumHist* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new A2Cal1AccumHist((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) A2Cal1AccumHist((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1AccumHist));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->InitializeMembers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->Initialize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->InitializeHists());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->InitializeCanvases());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->InitializeCanvasCal0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->InitializeCanvasCal1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->InitializeCanvasADCs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->InitializeCanvasFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->InitializeCanvasTDC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->InitializeCanvasSilicon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->DeleteHists());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->DeleteHist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->DeleteCanvases());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->Fill((A2Cal1*) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, (bool) G__int(libp->para[2]), (bool) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->Fill((A2Cal1*) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, (bool) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->Fill((A2Cal1*) G__int(libp->para[0]), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->Fill((A2Cal1*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->Reset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->CopyData((A2Cal1AccumHist*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2Cal1AccumHist*) G__getstructoffset())->SetCanvasCal0((TCanvas*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2Cal1AccumHist*) G__getstructoffset())->SetCanvasCal1((TCanvas*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2Cal1AccumHist*) G__getstructoffset())->SetCanvasADCs((TCanvas*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2Cal1AccumHist*) G__getstructoffset())->SetCanvasFlag((TCanvas*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2Cal1AccumHist*) G__getstructoffset())->SetCanvasTDC((TCanvas*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2Cal1AccumHist*) G__getstructoffset())->SetCanvasSilicon((TCanvas*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((A2Cal1AccumHist*) G__getstructoffset())->GetCanvasCal0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((A2Cal1AccumHist*) G__getstructoffset())->GetCanvasCal1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((A2Cal1AccumHist*) G__getstructoffset())->GetCanvasADCs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((A2Cal1AccumHist*) G__getstructoffset())->GetCanvasFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((A2Cal1AccumHist*) G__getstructoffset())->GetCanvasTDC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((A2Cal1AccumHist*) G__getstructoffset())->GetCanvasSilicon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->SetHistNbin((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->SetHistBinMinimum((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->SetHistBinMaximum((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->SetHSiliconNbin((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->SetHSiliconBinMinimum((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->SetHSiliconBinMaximum((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->SetHSiliconChannel((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->GetHistNbin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->GetHistBinMinimum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->GetHistBinMaximum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->GetHSiliconNbin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->GetHSiliconBinMinimum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->GetHSiliconBinMaximum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->GetHSiliconChannel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->SetTDCHistogram((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->SetTDCHistogram((int) G__int(libp->para[0]), (TH1F*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2Cal1AccumHist*) G__getstructoffset())->SetLineColor((Color_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2Cal1AccumHist*) G__getstructoffset())->SetFillColor((Color_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2Cal1AccumHist*) G__getstructoffset())->SetFillStyle((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2Cal1AccumHist*) G__getstructoffset())->Scale((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->Draw((int) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->Draw((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->Draw());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->DrawCal0((int) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->DrawCal0((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->DrawCal0());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->DrawCal1((int) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->DrawCal1((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->DrawCal1());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->DrawADCs((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->DrawADCs());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->DrawFlag((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->DrawFlag());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->DrawTDC((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->DrawTDC());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->DrawSilicon((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->DrawSilicon());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->OptimizeYRange((TPad*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->SetLogy((TCanvas*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->SetLogy((TCanvas*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->SetLogy((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->SetLogy());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->SetLogyCal0((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->SetLogyCal0());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->SetLogyCal1((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->SetLogyCal1());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->SetLogyADCs((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->SetLogyADCs());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->SetLogyFlag((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->SetLogyFlag());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->SetLogyTDC((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->SetLogyTDC());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->SetLogySilicon((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->SetLogySilicon());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->Init());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->Bor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->Eor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal1AccumHist*) G__getstructoffset())->Loop((A2Cal1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) A2Cal1AccumHist::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Cal1AccumHist::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) A2Cal1AccumHist::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      A2Cal1AccumHist::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2Cal1AccumHist*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Cal1AccumHist::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2Cal1AccumHist::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Cal1AccumHist::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_393_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2Cal1AccumHist::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfEvent_393_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   A2Cal1AccumHist* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new A2Cal1AccumHist(*(A2Cal1AccumHist*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1AccumHist));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef A2Cal1AccumHist G__TA2Cal1AccumHist;
static int G__libLHCfEvent_393_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (A2Cal1AccumHist*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((A2Cal1AccumHist*) (soff+(sizeof(A2Cal1AccumHist)*i)))->~G__TA2Cal1AccumHist();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (A2Cal1AccumHist*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((A2Cal1AccumHist*) (soff))->~G__TA2Cal1AccumHist();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfEvent_393_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Cal1AccumHist* dest = (A2Cal1AccumHist*) G__getstructoffset();
   *dest = *(A2Cal1AccumHist*) libp->para[0].ref;
   const A2Cal1AccumHist& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* A1Cal2AccumHist */
static int G__libLHCfEvent_394_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1Cal2AccumHist* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A1Cal2AccumHist[n];
     } else {
       p = new((void*) gvp) A1Cal2AccumHist[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A1Cal2AccumHist;
     } else {
       p = new((void*) gvp) A1Cal2AccumHist;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2AccumHist));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_394_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1Cal2AccumHist* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new A1Cal2AccumHist((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) A1Cal2AccumHist((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2AccumHist));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_394_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal2AccumHist*) G__getstructoffset())->Initialize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_394_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal2AccumHist*) G__getstructoffset())->DeleteHist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_394_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal2AccumHist*) G__getstructoffset())->DeleteHists());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_394_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal2AccumHist*) G__getstructoffset())->Fill((A1Cal2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_394_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal2AccumHist*) G__getstructoffset())->Reset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_394_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal2AccumHist*) G__getstructoffset())->CopyData((A1Cal2AccumHist*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_394_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal2AccumHist*) G__getstructoffset())->Init());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_394_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal2AccumHist*) G__getstructoffset())->Bor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_394_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal2AccumHist*) G__getstructoffset())->Eor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_394_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1Cal2AccumHist*) G__getstructoffset())->Loop((A1Cal2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_394_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) A1Cal2AccumHist::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_394_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1Cal2AccumHist::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_394_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) A1Cal2AccumHist::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_394_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      A1Cal2AccumHist::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_394_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1Cal2AccumHist*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_394_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1Cal2AccumHist::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_394_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A1Cal2AccumHist::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_394_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1Cal2AccumHist::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_394_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A1Cal2AccumHist::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfEvent_394_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   A1Cal2AccumHist* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new A1Cal2AccumHist(*(A1Cal2AccumHist*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2AccumHist));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef A1Cal2AccumHist G__TA1Cal2AccumHist;
static int G__libLHCfEvent_394_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (A1Cal2AccumHist*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((A1Cal2AccumHist*) (soff+(sizeof(A1Cal2AccumHist)*i)))->~G__TA1Cal2AccumHist();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (A1Cal2AccumHist*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((A1Cal2AccumHist*) (soff))->~G__TA1Cal2AccumHist();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfEvent_394_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1Cal2AccumHist* dest = (A1Cal2AccumHist*) G__getstructoffset();
   *dest = *(A1Cal2AccumHist*) libp->para[0].ref;
   const A1Cal2AccumHist& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* A2Cal2AccumHist */
static int G__libLHCfEvent_395_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Cal2AccumHist* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A2Cal2AccumHist[n];
     } else {
       p = new((void*) gvp) A2Cal2AccumHist[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A2Cal2AccumHist;
     } else {
       p = new((void*) gvp) A2Cal2AccumHist;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2AccumHist));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_395_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Cal2AccumHist* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new A2Cal2AccumHist((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) A2Cal2AccumHist((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2AccumHist));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_395_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal2AccumHist*) G__getstructoffset())->Initialize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_395_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal2AccumHist*) G__getstructoffset())->DeleteHist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_395_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal2AccumHist*) G__getstructoffset())->DeleteHists());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_395_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal2AccumHist*) G__getstructoffset())->Fill((A2Cal2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_395_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal2AccumHist*) G__getstructoffset())->Reset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_395_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal2AccumHist*) G__getstructoffset())->CopyData((A2Cal2AccumHist*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_395_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal2AccumHist*) G__getstructoffset())->Init());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_395_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal2AccumHist*) G__getstructoffset())->Bor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_395_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal2AccumHist*) G__getstructoffset())->Eor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_395_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2Cal2AccumHist*) G__getstructoffset())->Loop((A2Cal2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_395_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) A2Cal2AccumHist::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_395_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Cal2AccumHist::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_395_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) A2Cal2AccumHist::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_395_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      A2Cal2AccumHist::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_395_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2Cal2AccumHist*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_395_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Cal2AccumHist::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_395_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2Cal2AccumHist::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_395_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2Cal2AccumHist::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_395_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2Cal2AccumHist::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfEvent_395_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   A2Cal2AccumHist* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new A2Cal2AccumHist(*(A2Cal2AccumHist*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2AccumHist));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef A2Cal2AccumHist G__TA2Cal2AccumHist;
static int G__libLHCfEvent_395_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (A2Cal2AccumHist*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((A2Cal2AccumHist*) (soff+(sizeof(A2Cal2AccumHist)*i)))->~G__TA2Cal2AccumHist();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (A2Cal2AccumHist*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((A2Cal2AccumHist*) (soff))->~G__TA2Cal2AccumHist();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfEvent_395_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2Cal2AccumHist* dest = (A2Cal2AccumHist*) G__getstructoffset();
   *dest = *(A2Cal2AccumHist*) libp->para[0].ref;
   const A2Cal2AccumHist& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* A1PhysAccumHist */
static int G__libLHCfEvent_403_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1PhysAccumHist* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A1PhysAccumHist[n];
     } else {
       p = new((void*) gvp) A1PhysAccumHist[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A1PhysAccumHist;
     } else {
       p = new((void*) gvp) A1PhysAccumHist;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A1PhysAccumHist));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_403_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1PhysAccumHist* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new A1PhysAccumHist((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) A1PhysAccumHist((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A1PhysAccumHist));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_403_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1PhysAccumHist*) G__getstructoffset())->Initialize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_403_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1PhysAccumHist*) G__getstructoffset())->DeleteHist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_403_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1PhysAccumHist*) G__getstructoffset())->DeleteHists());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_403_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((A1PhysAccumHist*) G__getstructoffset())->Fill((A1Phys*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((A1PhysAccumHist*) G__getstructoffset())->Fill((A1Phys*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A1PhysAccumHist*) G__getstructoffset())->Fill((A1Phys*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_403_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1PhysAccumHist*) G__getstructoffset())->Reset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_403_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1PhysAccumHist*) G__getstructoffset())->CopyData((A1PhysAccumHist*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_403_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1PhysAccumHist*) G__getstructoffset())->AddData((A1PhysAccumHist*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_403_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1PhysAccumHist*) G__getstructoffset())->Init());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_403_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1PhysAccumHist*) G__getstructoffset())->Bor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_403_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1PhysAccumHist*) G__getstructoffset())->Eor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_403_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1PhysAccumHist*) G__getstructoffset())->Loop((A1Phys*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_403_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) A1PhysAccumHist::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_403_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1PhysAccumHist::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_403_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) A1PhysAccumHist::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_403_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      A1PhysAccumHist::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_403_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1PhysAccumHist*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_403_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1PhysAccumHist::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_403_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A1PhysAccumHist::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_403_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1PhysAccumHist::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_403_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A1PhysAccumHist::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfEvent_403_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   A1PhysAccumHist* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new A1PhysAccumHist(*(A1PhysAccumHist*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A1PhysAccumHist));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef A1PhysAccumHist G__TA1PhysAccumHist;
static int G__libLHCfEvent_403_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (A1PhysAccumHist*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((A1PhysAccumHist*) (soff+(sizeof(A1PhysAccumHist)*i)))->~G__TA1PhysAccumHist();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (A1PhysAccumHist*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((A1PhysAccumHist*) (soff))->~G__TA1PhysAccumHist();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfEvent_403_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1PhysAccumHist* dest = (A1PhysAccumHist*) G__getstructoffset();
   *dest = *(A1PhysAccumHist*) libp->para[0].ref;
   const A1PhysAccumHist& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* A2PhysAccumHist */
static int G__libLHCfEvent_404_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2PhysAccumHist* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A2PhysAccumHist[n];
     } else {
       p = new((void*) gvp) A2PhysAccumHist[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A2PhysAccumHist;
     } else {
       p = new((void*) gvp) A2PhysAccumHist;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2PhysAccumHist));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_404_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2PhysAccumHist* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new A2PhysAccumHist((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) A2PhysAccumHist((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2PhysAccumHist));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_404_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2PhysAccumHist*) G__getstructoffset())->Initialize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_404_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2PhysAccumHist*) G__getstructoffset())->DeleteHist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_404_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2PhysAccumHist*) G__getstructoffset())->DeleteHists());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_404_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((A2PhysAccumHist*) G__getstructoffset())->Fill((A2Phys*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((A2PhysAccumHist*) G__getstructoffset())->Fill((A2Phys*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((A2PhysAccumHist*) G__getstructoffset())->Fill((A2Phys*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_404_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2PhysAccumHist*) G__getstructoffset())->Reset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_404_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2PhysAccumHist*) G__getstructoffset())->CopyData((A2PhysAccumHist*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_404_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2PhysAccumHist*) G__getstructoffset())->AddData((A2PhysAccumHist*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_404_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2PhysAccumHist*) G__getstructoffset())->Init());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_404_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2PhysAccumHist*) G__getstructoffset())->Bor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_404_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2PhysAccumHist*) G__getstructoffset())->Eor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_404_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2PhysAccumHist*) G__getstructoffset())->Loop((A2Phys*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_404_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) A2PhysAccumHist::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_404_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2PhysAccumHist::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_404_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) A2PhysAccumHist::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_404_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      A2PhysAccumHist::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_404_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2PhysAccumHist*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_404_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2PhysAccumHist::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_404_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2PhysAccumHist::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_404_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2PhysAccumHist::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_404_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2PhysAccumHist::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfEvent_404_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   A2PhysAccumHist* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new A2PhysAccumHist(*(A2PhysAccumHist*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2PhysAccumHist));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef A2PhysAccumHist G__TA2PhysAccumHist;
static int G__libLHCfEvent_404_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (A2PhysAccumHist*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((A2PhysAccumHist*) (soff+(sizeof(A2PhysAccumHist)*i)))->~G__TA2PhysAccumHist();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (A2PhysAccumHist*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((A2PhysAccumHist*) (soff))->~G__TA2PhysAccumHist();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfEvent_404_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2PhysAccumHist* dest = (A2PhysAccumHist*) G__getstructoffset();
   *dest = *(A2PhysAccumHist*) libp->para[0].ref;
   const A2PhysAccumHist& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* A1CountArray */
static int G__libLHCfEvent_408_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1CountArray* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A1CountArray[n];
     } else {
       p = new((void*) gvp) A1CountArray[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A1CountArray;
     } else {
       p = new((void*) gvp) A1CountArray;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A1CountArray));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_408_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1CountArray* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new A1CountArray((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) A1CountArray((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A1CountArray));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_408_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1CountArray*) G__getstructoffset())->Initalize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_408_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1CountArray*) G__getstructoffset())->Clear());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_408_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1CountArray*) G__getstructoffset())->GetNdata());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_408_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1CountArray*) G__getstructoffset())->GetIdata());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_408_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1CountArray*) G__getstructoffset())->Next((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_408_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1CountArray*) G__getstructoffset())->Previous((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_408_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1CountArray*) G__getstructoffset())->Fill((A1Cal1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_408_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1CountArray*) G__getstructoffset())->Fill((A1Scl_pp2015*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_408_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) ((A1CountArray*) G__getstructoffset())->MakeTGraph((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((A1CountArray*) G__getstructoffset())->MakeTGraph((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((A1CountArray*) G__getstructoffset())->MakeTGraph((int) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_408_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((A1CountArray*) G__getstructoffset())->FillToTGraph((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (TGraph*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_408_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((A1CountArray*) G__getstructoffset())->GetCounterTitle((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_408_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1CountArray*) G__getstructoffset())->Init());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_408_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1CountArray*) G__getstructoffset())->Bor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_408_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1CountArray*) G__getstructoffset())->Eor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_408_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1CountArray*) G__getstructoffset())->Loop((A1Scl_pp2015*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_408_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1CountArray*) G__getstructoffset())->Loop((A1Cal1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_408_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) A1CountArray::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_408_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1CountArray::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_408_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) A1CountArray::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_408_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      A1CountArray::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_408_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1CountArray*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_408_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1CountArray::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_408_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A1CountArray::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_408_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1CountArray::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_408_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A1CountArray::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfEvent_408_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   A1CountArray* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new A1CountArray(*(A1CountArray*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A1CountArray));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef A1CountArray G__TA1CountArray;
static int G__libLHCfEvent_408_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (A1CountArray*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((A1CountArray*) (soff+(sizeof(A1CountArray)*i)))->~G__TA1CountArray();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (A1CountArray*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((A1CountArray*) (soff))->~G__TA1CountArray();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfEvent_408_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1CountArray* dest = (A1CountArray*) G__getstructoffset();
   *dest = *(A1CountArray*) libp->para[0].ref;
   const A1CountArray& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* A2CountArray */
static int G__libLHCfEvent_409_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2CountArray* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A2CountArray[n];
     } else {
       p = new((void*) gvp) A2CountArray[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A2CountArray;
     } else {
       p = new((void*) gvp) A2CountArray;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2CountArray));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_409_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2CountArray* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new A2CountArray((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) A2CountArray((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2CountArray));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_409_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2CountArray*) G__getstructoffset())->Initalize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_409_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2CountArray*) G__getstructoffset())->Clear());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_409_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2CountArray*) G__getstructoffset())->GetNdata());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_409_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2CountArray*) G__getstructoffset())->GetIdata());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_409_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2CountArray*) G__getstructoffset())->Next((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_409_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2CountArray*) G__getstructoffset())->Previous((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_409_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2CountArray*) G__getstructoffset())->Fill((A2Cal1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_409_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2CountArray*) G__getstructoffset())->Fill((A2Scl_pp2015*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_409_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) ((A2CountArray*) G__getstructoffset())->MakeTGraph((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((A2CountArray*) G__getstructoffset())->MakeTGraph((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((A2CountArray*) G__getstructoffset())->MakeTGraph((int) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_409_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((A2CountArray*) G__getstructoffset())->FillToTGraph((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (TGraph*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_409_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((A2CountArray*) G__getstructoffset())->GetCounterTitle((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_409_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2CountArray*) G__getstructoffset())->Init());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_409_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2CountArray*) G__getstructoffset())->Bor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_409_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2CountArray*) G__getstructoffset())->Eor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_409_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2CountArray*) G__getstructoffset())->Loop((A2Scl_pp2015*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_409_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2CountArray*) G__getstructoffset())->Loop((A2Cal1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_409_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) A2CountArray::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_409_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2CountArray::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_409_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) A2CountArray::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_409_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      A2CountArray::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_409_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2CountArray*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_409_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2CountArray::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_409_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2CountArray::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_409_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2CountArray::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_409_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2CountArray::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfEvent_409_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   A2CountArray* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new A2CountArray(*(A2CountArray*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2CountArray));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef A2CountArray G__TA2CountArray;
static int G__libLHCfEvent_409_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (A2CountArray*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((A2CountArray*) (soff+(sizeof(A2CountArray)*i)))->~G__TA2CountArray();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (A2CountArray*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((A2CountArray*) (soff))->~G__TA2CountArray();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfEvent_409_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2CountArray* dest = (A2CountArray*) G__getstructoffset();
   *dest = *(A2CountArray*) libp->para[0].ref;
   const A2CountArray& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* A1CalEventHist */
static int G__libLHCfEvent_412_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1CalEventHist* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A1CalEventHist[n];
     } else {
       p = new((void*) gvp) A1CalEventHist[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A1CalEventHist;
     } else {
       p = new((void*) gvp) A1CalEventHist;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A1CalEventHist));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_412_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1CalEventHist* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new A1CalEventHist((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) A1CalEventHist((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A1CalEventHist));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_412_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1CalEventHist*) G__getstructoffset())->Initialize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_412_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1CalEventHist*) G__getstructoffset())->DeleteHist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_412_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1CalEventHist*) G__getstructoffset())->DeleteHists());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_412_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1CalEventHist*) G__getstructoffset())->Reset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_412_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1CalEventHist*) G__getstructoffset())->Fill((A1Cal1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_412_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1CalEventHist*) G__getstructoffset())->Fill((A1Cal2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_412_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1CalEventHist*) G__getstructoffset())->SetCanvas1((TCanvas*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_412_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A1CalEventHist*) G__getstructoffset())->DrawCanvas1((char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A1CalEventHist*) G__getstructoffset())->DrawCanvas1());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_412_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1CalEventHist*) G__getstructoffset())->UpdateCanvas1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_412_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1CalEventHist*) G__getstructoffset())->ClearCanvas1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_412_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A1CalEventHist*) G__getstructoffset())->SetHistConfig((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A1CalEventHist*) G__getstructoffset())->SetHistConfig());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_412_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1CalEventHist*) G__getstructoffset())->SetCanvas2((TCanvas*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_412_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A1CalEventHist*) G__getstructoffset())->DrawCanvas2((char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A1CalEventHist*) G__getstructoffset())->DrawCanvas2());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_412_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1CalEventHist*) G__getstructoffset())->UpdateCanvas2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_412_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1CalEventHist*) G__getstructoffset())->SetCanvas3((TCanvas*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_412_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A1CalEventHist*) G__getstructoffset())->DrawCanvas3((char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A1CalEventHist*) G__getstructoffset())->DrawCanvas3());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_412_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1CalEventHist*) G__getstructoffset())->UpdateCanvas3());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_412_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1CalEventHist*) G__getstructoffset())->SetCanvas3YRange((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_412_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1CalEventHist*) G__getstructoffset())->OptimizeYRange());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_412_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1CalEventHist*) G__getstructoffset())->OptimizeYRange((TPad*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_412_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1CalEventHist*) G__getstructoffset())->ChangeHistTitleOnPad((TPad*) G__int(libp->para[0]), (char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_412_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((A1CalEventHist*) G__getstructoffset())->GetTH1OnPad((TPad*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_412_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1CalEventHist*) G__getstructoffset())->SelGPIOLogicFormat((A1Cal1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_412_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A1CalEventHist*) G__getstructoffset())->SetDisplayFormat((A1CalEventHist::DISPLAY_VERSION) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_412_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1CalEventHist*) G__getstructoffset())->SetDisplayVersion_pp2010();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_412_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1CalEventHist*) G__getstructoffset())->SetDisplayVersion_pp2015();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_412_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1CalEventHist*) G__getstructoffset())->SetDisplayVersion_RHICf_Op2017();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_412_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) A1CalEventHist::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_412_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1CalEventHist::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_412_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) A1CalEventHist::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_412_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      A1CalEventHist::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_412_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A1CalEventHist*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_412_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1CalEventHist::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_412_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A1CalEventHist::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_412_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A1CalEventHist::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_412_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A1CalEventHist::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfEvent_412_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   A1CalEventHist* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new A1CalEventHist(*(A1CalEventHist*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A1CalEventHist));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef A1CalEventHist G__TA1CalEventHist;
static int G__libLHCfEvent_412_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (A1CalEventHist*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((A1CalEventHist*) (soff+(sizeof(A1CalEventHist)*i)))->~G__TA1CalEventHist();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (A1CalEventHist*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((A1CalEventHist*) (soff))->~G__TA1CalEventHist();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfEvent_412_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A1CalEventHist* dest = (A1CalEventHist*) G__getstructoffset();
   *dest = *(A1CalEventHist*) libp->para[0].ref;
   const A1CalEventHist& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* A2CalEventHist */
static int G__libLHCfEvent_415_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2CalEventHist* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A2CalEventHist[n];
     } else {
       p = new((void*) gvp) A2CalEventHist[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new A2CalEventHist;
     } else {
       p = new((void*) gvp) A2CalEventHist;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2CalEventHist));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_415_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2CalEventHist* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new A2CalEventHist((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) A2CalEventHist((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2CalEventHist));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_415_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2CalEventHist*) G__getstructoffset())->Initialize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_415_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2CalEventHist*) G__getstructoffset())->DeleteHist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_415_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2CalEventHist*) G__getstructoffset())->DeleteHists());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_415_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2CalEventHist*) G__getstructoffset())->Reset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_415_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2CalEventHist*) G__getstructoffset())->Fill((A2Cal1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_415_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2CalEventHist*) G__getstructoffset())->Fill((A2Cal2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_415_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2CalEventHist*) G__getstructoffset())->SetCanvas1((TCanvas*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_415_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A2CalEventHist*) G__getstructoffset())->DrawCanvas1((char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A2CalEventHist*) G__getstructoffset())->DrawCanvas1());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_415_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2CalEventHist*) G__getstructoffset())->UpdateCanvas1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_415_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2CalEventHist*) G__getstructoffset())->ClearCanvas1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_415_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A2CalEventHist*) G__getstructoffset())->SetHistConfig((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A2CalEventHist*) G__getstructoffset())->SetHistConfig());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_415_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2CalEventHist*) G__getstructoffset())->SetCanvas2((TCanvas*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_415_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A2CalEventHist*) G__getstructoffset())->DrawCanvas2((char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A2CalEventHist*) G__getstructoffset())->DrawCanvas2());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_415_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2CalEventHist*) G__getstructoffset())->UpdateCanvas2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_415_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2CalEventHist*) G__getstructoffset())->SetCanvas3((TCanvas*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_415_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A2CalEventHist*) G__getstructoffset())->DrawCanvas3((char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A2CalEventHist*) G__getstructoffset())->DrawCanvas3());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_415_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2CalEventHist*) G__getstructoffset())->UpdateCanvas3());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_415_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2CalEventHist*) G__getstructoffset())->SetCanvas3YRange((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_415_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 105, (long) ((A2CalEventHist*) G__getstructoffset())->SetHistColor((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((A2CalEventHist*) G__getstructoffset())->SetHistColor());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_415_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2CalEventHist*) G__getstructoffset())->OptimizeYRange());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_415_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2CalEventHist*) G__getstructoffset())->OptimizeYRange((TPad*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_415_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2CalEventHist*) G__getstructoffset())->ChangeHistTitleOnPad((TPad*) G__int(libp->para[0]), (char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_415_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((A2CalEventHist*) G__getstructoffset())->GetTH1OnPad((TPad*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_415_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2CalEventHist*) G__getstructoffset())->SelGPIOLogicFormat((A2Cal1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_415_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((A2CalEventHist*) G__getstructoffset())->SetDisplayFormat((A2CalEventHist::DISPLAY_VERSION) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_415_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2CalEventHist*) G__getstructoffset())->SetDisplayVersion_pp2010();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_415_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2CalEventHist*) G__getstructoffset())->SetDisplayVersion_pPb2013();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_415_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2CalEventHist*) G__getstructoffset())->SetDisplayVersion_pp2015();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_415_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2CalEventHist*) G__getstructoffset())->SetDisplayVersion_pPb2016();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_415_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) A2CalEventHist::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_415_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2CalEventHist::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_415_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) A2CalEventHist::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_415_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      A2CalEventHist::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_415_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((A2CalEventHist*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_415_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2CalEventHist::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_415_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2CalEventHist::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_415_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) A2CalEventHist::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_415_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) A2CalEventHist::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfEvent_415_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   A2CalEventHist* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new A2CalEventHist(*(A2CalEventHist*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_A2CalEventHist));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef A2CalEventHist G__TA2CalEventHist;
static int G__libLHCfEvent_415_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (A2CalEventHist*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((A2CalEventHist*) (soff+(sizeof(A2CalEventHist)*i)))->~G__TA2CalEventHist();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (A2CalEventHist*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((A2CalEventHist*) (soff))->~G__TA2CalEventHist();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfEvent_415_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   A2CalEventHist* dest = (A2CalEventHist*) G__getstructoffset();
   *dest = *(A2CalEventHist*) libp->para[0].ref;
   const A2CalEventHist& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SimP */
static int G__libLHCfEvent_418_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SimP* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SimP[n];
     } else {
       p = new((void*) gvp) SimP[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SimP;
     } else {
       p = new((void*) gvp) SimP;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_SimP));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SimP* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SimP((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) SimP((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_SimP));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SimP*) G__getstructoffset())->clear());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SimP*) G__getstructoffset())->copy((SimP*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SimP*) G__getstructoffset())->copydata((SimP*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SimP*) G__getstructoffset())->Code());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SimP*) G__getstructoffset())->SubCode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SimP*) G__getstructoffset())->Charge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SimP*) G__getstructoffset())->User());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SimP*) G__getstructoffset())->Tag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((SimP*) G__getstructoffset())->Energy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((SimP*) G__getstructoffset())->PosX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((SimP*) G__getstructoffset())->PosY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((SimP*) G__getstructoffset())->PosZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((SimP*) G__getstructoffset())->MomX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((SimP*) G__getstructoffset())->MomY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((SimP*) G__getstructoffset())->MomZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((SimP*) G__getstructoffset())->KineticEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((SimP*) G__getstructoffset())->Momentum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((SimP*) G__getstructoffset())->Mass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((SimP*) G__getstructoffset())->IsPhoton());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((SimP*) G__getstructoffset())->IsGammaray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((SimP*) G__getstructoffset())->IsElectron());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((SimP*) G__getstructoffset())->IsPositron());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((SimP*) G__getstructoffset())->IsMup());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((SimP*) G__getstructoffset())->IsMun());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((SimP*) G__getstructoffset())->IsPi0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((SimP*) G__getstructoffset())->IsPip());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((SimP*) G__getstructoffset())->IsPin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((SimP*) G__getstructoffset())->IsK0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((SimP*) G__getstructoffset())->IsKp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((SimP*) G__getstructoffset())->IsKn());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((SimP*) G__getstructoffset())->IsProton());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((SimP*) G__getstructoffset())->IsAntiProton());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((SimP*) G__getstructoffset())->IsNeutron());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((SimP*) G__getstructoffset())->IsEta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((SimP*) G__getstructoffset())->IsElemag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((SimP*) G__getstructoffset())->CalPos((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((SimP*) G__getstructoffset())->CalPos((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, (double) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((SimP*) G__getstructoffset())->CalPos((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) ((SimP*) G__getstructoffset())->CalPosX((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((SimP*) G__getstructoffset())->CalPosX((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((SimP*) G__getstructoffset())->CalPosX((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) ((SimP*) G__getstructoffset())->CalPosY((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((SimP*) G__getstructoffset())->CalPosY((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((SimP*) G__getstructoffset())->CalPosY((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letint(result7, 105, (long) ((SimP*) G__getstructoffset())->CheckHit((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 105, (long) ((SimP*) G__getstructoffset())->CheckHit((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 105, (long) ((SimP*) G__getstructoffset())->CheckHit((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((SimP*) G__getstructoffset())->CheckHit((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((SimP*) G__getstructoffset())->Show((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((SimP*) G__getstructoffset())->Show((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((SimP*) G__getstructoffset())->Show((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((SimP*) G__getstructoffset())->Show((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((SimP*) G__getstructoffset())->Show();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((SimP*) G__getstructoffset())->PositionShift((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((SimP*) G__getstructoffset())->GlobalPos_Detector((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((SimP*) G__getstructoffset())->GlobalPos_Detector((int) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((SimP*) G__getstructoffset())->GlobalPos_Detector((int) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((SimP*) G__getstructoffset())->GlobalPos_BC((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((SimP*) G__getstructoffset())->GlobalPos_BC((int) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((SimP*) G__getstructoffset())->GlobalPos_BC((int) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((SimP*) G__getstructoffset())->GlobalPos_BeamPipe((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((SimP*) G__getstructoffset())->GPosX_Detector());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((SimP*) G__getstructoffset())->GPosY_Detector());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((SimP*) G__getstructoffset())->GPosX_BC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((SimP*) G__getstructoffset())->GPosY_BC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((SimP*) G__getstructoffset())->GPosX_BeamPipe());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((SimP*) G__getstructoffset())->GPosY_BeamPipe());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) SimP::GetCalorimeterSize((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SimP::SetPositionBeamCenter((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SimP::SetPositionBeamPipeCenter((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) SimP::GetPositionBeamCenter((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) SimP::GetPositionBeamPipeCenter((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) SimP::GetOffset((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) SimP::GetOffsetDetector((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) SimP::GetOffsetBC((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SimP::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SimP::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SimP::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SimP::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SimP*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SimP::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SimP::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SimP::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_418_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SimP::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfEvent_418_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   SimP* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new SimP(*(SimP*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_SimP));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SimP G__TSimP;
static int G__libLHCfEvent_418_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SimP*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SimP*) (soff+(sizeof(SimP)*i)))->~G__TSimP();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SimP*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SimP*) (soff))->~G__TSimP();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfEvent_418_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SimP* dest = (SimP*) G__getstructoffset();
   *dest = *(SimP*) libp->para[0].ref;
   const SimP& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SimIncidents */
static int G__libLHCfEvent_419_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SimIncidents* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SimIncidents[n];
     } else {
       p = new((void*) gvp) SimIncidents[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SimIncidents;
     } else {
       p = new((void*) gvp) SimIncidents;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_SimIncidents));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_419_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SimIncidents* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SimIncidents((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) SimIncidents((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_SimIncidents));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_419_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SimIncidents*) G__getstructoffset())->clear());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_419_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SimIncidents*) G__getstructoffset())->copy((SimIncidents*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_419_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SimIncidents*) G__getstructoffset())->copydata((SimIncidents*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_419_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SimIncidents*) G__getstructoffset())->Delete();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_419_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SimIncidents*) G__getstructoffset())->GetN());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_419_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SimIncidents*) G__getstructoffset())->Add((SimP*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_419_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((SimIncidents*) G__getstructoffset())->Get((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_419_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      G__letint(result7, 105, (long) ((SimIncidents*) G__getstructoffset())->GetNHit((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 105, (long) ((SimIncidents*) G__getstructoffset())->GetNHit((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 105, (long) ((SimIncidents*) G__getstructoffset())->GetNHit((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 105, (long) ((SimIncidents*) G__getstructoffset())->GetNHit((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((SimIncidents*) G__getstructoffset())->GetNHit((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_419_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      G__letint(result7, 85, (long) ((SimIncidents*) G__getstructoffset())->GetHit((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) ((SimIncidents*) G__getstructoffset())->GetHit((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) ((SimIncidents*) G__getstructoffset())->GetHit((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ((SimIncidents*) G__getstructoffset())->GetHit((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((SimIncidents*) G__getstructoffset())->GetHit((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_419_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SimIncidents*) G__getstructoffset())->GetRefNumber((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_419_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((SimIncidents*) G__getstructoffset())->GetRef((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_419_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((SimIncidents*) G__getstructoffset())->Show((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((SimIncidents*) G__getstructoffset())->Show((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((SimIncidents*) G__getstructoffset())->Show((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((SimIncidents*) G__getstructoffset())->Show((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((SimIncidents*) G__getstructoffset())->Show((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((SimIncidents*) G__getstructoffset())->Show((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((SimIncidents*) G__getstructoffset())->Show();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_419_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) SimIncidents::CalPi0Mass((SimP*) G__int(libp->para[0]), (SimP*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_419_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) SimIncidents::CalPi0Distance((SimP*) G__int(libp->para[0]), (SimP*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_419_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) SimIncidents::CalPi0Energy((SimP*) G__int(libp->para[0]), (SimP*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_419_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letdouble(result7, 100, (double) SimIncidents::CalPi0Momentum((SimP*) G__int(libp->para[0]), (SimP*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4])));
      break;
   case 4:
      G__letdouble(result7, 100, (double) SimIncidents::CalPi0Momentum((SimP*) G__int(libp->para[0]), (SimP*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) SimIncidents::CalPi0Momentum((SimP*) G__int(libp->para[0]), (SimP*) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_419_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) SimIncidents::CalPi0Pt((SimP*) G__int(libp->para[0]), (SimP*) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) SimIncidents::CalPi0Pt((SimP*) G__int(libp->para[0]), (SimP*) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) SimIncidents::CalPi0Pt((SimP*) G__int(libp->para[0]), (SimP*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_419_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SimIncidents::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_419_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SimIncidents::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_419_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SimIncidents::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_419_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SimIncidents::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_419_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SimIncidents*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_419_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SimIncidents::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_419_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SimIncidents::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_419_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SimIncidents::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_419_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SimIncidents::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SimIncidents G__TSimIncidents;
static int G__libLHCfEvent_419_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SimIncidents*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SimIncidents*) (soff+(sizeof(SimIncidents)*i)))->~G__TSimIncidents();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SimIncidents*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SimIncidents*) (soff))->~G__TSimIncidents();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SPSAdamoRec0 */
static int G__libLHCfEvent_420_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SPSAdamoRec0* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SPSAdamoRec0[n];
     } else {
       p = new((void*) gvp) SPSAdamoRec0[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SPSAdamoRec0;
     } else {
       p = new((void*) gvp) SPSAdamoRec0;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_SPSAdamoRec0));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_420_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SPSAdamoRec0*) G__getstructoffset())->clear());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_420_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SPSAdamoRec0*) G__getstructoffset())->copy((SPSAdamoRec0*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_420_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SPSAdamoRec0*) G__getstructoffset())->copydata((SPSAdamoRec0*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_420_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((SPSAdamoRec0*) G__getstructoffset())->GetPosition((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_420_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((SPSAdamoRec0*) G__getstructoffset())->GetX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_420_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((SPSAdamoRec0*) G__getstructoffset())->GetY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_420_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((SPSAdamoRec0*) G__getstructoffset())->GetDirection((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_420_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((SPSAdamoRec0*) G__getstructoffset())->GetDX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_420_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((SPSAdamoRec0*) G__getstructoffset())->GetDY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_420_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SPSAdamoRec0::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_420_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SPSAdamoRec0::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_420_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SPSAdamoRec0::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_420_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SPSAdamoRec0::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_420_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SPSAdamoRec0*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_420_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SPSAdamoRec0::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_420_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SPSAdamoRec0::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_420_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SPSAdamoRec0::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_420_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SPSAdamoRec0::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfEvent_420_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   SPSAdamoRec0* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new SPSAdamoRec0(*(SPSAdamoRec0*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_SPSAdamoRec0));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SPSAdamoRec0 G__TSPSAdamoRec0;
static int G__libLHCfEvent_420_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SPSAdamoRec0*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SPSAdamoRec0*) (soff+(sizeof(SPSAdamoRec0)*i)))->~G__TSPSAdamoRec0();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SPSAdamoRec0*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SPSAdamoRec0*) (soff))->~G__TSPSAdamoRec0();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfEvent_420_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SPSAdamoRec0* dest = (SPSAdamoRec0*) G__getstructoffset();
   *dest = *(SPSAdamoRec0*) libp->para[0].ref;
   const SPSAdamoRec0& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* SPSAdamoHist */
static int G__libLHCfEvent_421_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SPSAdamoHist* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SPSAdamoHist[n];
     } else {
       p = new((void*) gvp) SPSAdamoHist[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SPSAdamoHist;
     } else {
       p = new((void*) gvp) SPSAdamoHist;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_SPSAdamoHist));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_421_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SPSAdamoHist* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new SPSAdamoHist((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) SPSAdamoHist((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_SPSAdamoHist));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_421_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SPSAdamoHist*) G__getstructoffset())->Initialize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_421_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SPSAdamoHist*) G__getstructoffset())->DeleteHist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_421_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SPSAdamoHist*) G__getstructoffset())->DeleteHists());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_421_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SPSAdamoHist*) G__getstructoffset())->DeleteCanvas());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_421_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SPSAdamoHist*) G__getstructoffset())->Reset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_421_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((SPSAdamoHist*) G__getstructoffset())->Fill((SPSAdamo*) G__int(libp->para[0]), (char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((SPSAdamoHist*) G__getstructoffset())->Fill((SPSAdamo*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_421_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SPSAdamoHist*) G__getstructoffset())->SetCanvas((TCanvas*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_421_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SPSAdamoHist*) G__getstructoffset())->DrawCanvas());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_421_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SPSAdamoHist*) G__getstructoffset())->UpdateCanvas());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_421_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((SPSAdamoHist*) G__getstructoffset())->SetMaximum((double) G__double(libp->para[0]), (char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((SPSAdamoHist*) G__getstructoffset())->SetMaximum((double) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_421_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((SPSAdamoHist*) G__getstructoffset())->SetMinimum((double) G__double(libp->para[0]), (char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((SPSAdamoHist*) G__getstructoffset())->SetMinimum((double) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_421_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SPSAdamoHist::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_421_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SPSAdamoHist::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_421_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SPSAdamoHist::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_421_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SPSAdamoHist::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_421_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SPSAdamoHist*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_421_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SPSAdamoHist::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_421_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SPSAdamoHist::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_421_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SPSAdamoHist::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libLHCfEvent_421_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SPSAdamoHist::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libLHCfEvent_421_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   SPSAdamoHist* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new SPSAdamoHist(*(SPSAdamoHist*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libLHCfEventLN_SPSAdamoHist));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SPSAdamoHist G__TSPSAdamoHist;
static int G__libLHCfEvent_421_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SPSAdamoHist*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SPSAdamoHist*) (soff+(sizeof(SPSAdamoHist)*i)))->~G__TSPSAdamoHist();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SPSAdamoHist*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SPSAdamoHist*) (soff))->~G__TSPSAdamoHist();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libLHCfEvent_421_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SPSAdamoHist* dest = (SPSAdamoHist*) G__getstructoffset();
   *dest = *(SPSAdamoHist*) libp->para[0].ref;
   const SPSAdamoHist& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* A1Raw */

/* A1Cal1 */

/* A1Cal2 */

/* A1Phys */

/* A1Info */

/* A1Scl */

/* A2Raw */

/* A2Cal2 */

/* A2Cal1 */

/* A2Phys */

/* Rec0 */

/* A2Cal2M */

/* A2Info */

/* A2Scl */

/* RawL1T */

/* SclL1T */

/* GParam */

/* GParamD64 */

/* SPSAdamo */

/* RHICfSinglePar */

/* RHICfPhotonPair */

/* A1Rec1 */

/* RHICfCollection */

/* A1Raw_pp2015 */

/* A2Raw_pp2015 */

/* A1Scl_pp2015 */

/* A2Scl_pp2015 */

/* A2Raw_pPb2013 */

/* A2Raw_pPb2016 */

/* RHICfRaw_Op2017 */

/* LHCfEvent */

/* LHCfDef */

/* A1Cal2M */

/* A1Rec2 */

/* A2Rec1 */

/* A2Rec2 */

/* A2Rec3 */

/* RHICfScl_Op2017 */

/* A1Cal1AccumHist */

/* A2Cal1AccumHist */

/* A1Cal2AccumHist */

/* A2Cal2AccumHist */

/* A1PhysAccumHist */

/* A2PhysAccumHist */

/* A1CountArray */

/* A2CountArray */

/* A1CalEventHist */

/* A2CalEventHist */

/* SimP */

/* SimIncidents */

/* SPSAdamoRec0 */

/* SPSAdamoHist */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfunclibLHCfEvent {
 public:
  G__Sizep2memfunclibLHCfEvent(): p(&G__Sizep2memfunclibLHCfEvent::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfunclibLHCfEvent::*p)();
};

size_t G__get_sizep2memfunclibLHCfEvent()
{
  G__Sizep2memfunclibLHCfEvent a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancelibLHCfEvent() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_A1Raw))) {
     A1Raw *G__Lderived;
     G__Lderived=(A1Raw*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Raw),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Raw),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1))) {
     A1Cal1 *G__Lderived;
     G__Lderived=(A1Cal1*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2))) {
     A1Cal2 *G__Lderived;
     G__Lderived=(A1Cal2*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_A1Phys))) {
     A1Phys *G__Lderived;
     G__Lderived=(A1Phys*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Phys),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Phys),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_A1Info))) {
     A1Info *G__Lderived;
     G__Lderived=(A1Info*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Info),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Info),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_A1Scl))) {
     A1Scl *G__Lderived;
     G__Lderived=(A1Scl*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Scl),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Scl),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw))) {
     A2Raw *G__Lderived;
     G__Lderived=(A2Raw*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2))) {
     A2Cal2 *G__Lderived;
     G__Lderived=(A2Cal2*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1))) {
     A2Cal1 *G__Lderived;
     G__Lderived=(A2Cal1*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_A2Phys))) {
     A2Phys *G__Lderived;
     G__Lderived=(A2Phys*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Phys),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Phys),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_Rec0))) {
     Rec0 *G__Lderived;
     G__Lderived=(Rec0*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_Rec0),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_Rec0),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2M))) {
     A2Cal2M *G__Lderived;
     G__Lderived=(A2Cal2M*)0x1000;
     {
       A2Cal2 *G__Lpbase=(A2Cal2*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2M),G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2M),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2M),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_A2Info))) {
     A2Info *G__Lderived;
     G__Lderived=(A2Info*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Info),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Info),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_A2Scl))) {
     A2Scl *G__Lderived;
     G__Lderived=(A2Scl*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Scl),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Scl),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_RawL1T))) {
     RawL1T *G__Lderived;
     G__Lderived=(RawL1T*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_RawL1T),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_RawL1T),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_SclL1T))) {
     SclL1T *G__Lderived;
     G__Lderived=(SclL1T*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_SclL1T),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_SclL1T),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_GParam))) {
     GParam *G__Lderived;
     G__Lderived=(GParam*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_GParam),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_GParam),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_GParamD64))) {
     GParamD64 *G__Lderived;
     G__Lderived=(GParamD64*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_GParamD64),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_GParamD64),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_SPSAdamo))) {
     SPSAdamo *G__Lderived;
     G__Lderived=(SPSAdamo*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_SPSAdamo),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_SPSAdamo),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_RHICfSinglePar))) {
     RHICfSinglePar *G__Lderived;
     G__Lderived=(RHICfSinglePar*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_RHICfSinglePar),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_RHICfSinglePar),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_RHICfPhotonPair))) {
     RHICfPhotonPair *G__Lderived;
     G__Lderived=(RHICfPhotonPair*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_RHICfPhotonPair),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_RHICfPhotonPair),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_A1Rec1))) {
     A1Rec1 *G__Lderived;
     G__Lderived=(A1Rec1*)0x1000;
     {
       Rec0 *G__Lpbase=(Rec0*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Rec1),G__get_linked_tagnum(&G__libLHCfEventLN_Rec0),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Rec1),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Rec1),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_RHICfCollection))) {
     RHICfCollection *G__Lderived;
     G__Lderived=(RHICfCollection*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_RHICfCollection),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_RHICfCollection),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_A1Raw_pp2015))) {
     A1Raw_pp2015 *G__Lderived;
     G__Lderived=(A1Raw_pp2015*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Raw_pp2015),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Raw_pp2015),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pp2015))) {
     A2Raw_pp2015 *G__Lderived;
     G__Lderived=(A2Raw_pp2015*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pp2015),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pp2015),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_A1Scl_pp2015))) {
     A1Scl_pp2015 *G__Lderived;
     G__Lderived=(A1Scl_pp2015*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Scl_pp2015),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Scl_pp2015),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_A2Scl_pp2015))) {
     A2Scl_pp2015 *G__Lderived;
     G__Lderived=(A2Scl_pp2015*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Scl_pp2015),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Scl_pp2015),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2013))) {
     A2Raw_pPb2013 *G__Lderived;
     G__Lderived=(A2Raw_pPb2013*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2013),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2013),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2016))) {
     A2Raw_pPb2016 *G__Lderived;
     G__Lderived=(A2Raw_pPb2016*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2016),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2016),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_RHICfRaw_Op2017))) {
     RHICfRaw_Op2017 *G__Lderived;
     G__Lderived=(RHICfRaw_Op2017*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_RHICfRaw_Op2017),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_RHICfRaw_Op2017),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_LHCfEvent))) {
     LHCfEvent *G__Lderived;
     G__Lderived=(LHCfEvent*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_LHCfEvent),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_LHCfEvent),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2M))) {
     A1Cal2M *G__Lderived;
     G__Lderived=(A1Cal2M*)0x1000;
     {
       A1Cal2 *G__Lpbase=(A1Cal2*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2M),G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2M),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2M),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_A1Rec2))) {
     A1Rec2 *G__Lderived;
     G__Lderived=(A1Rec2*)0x1000;
     {
       Rec0 *G__Lpbase=(Rec0*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Rec2),G__get_linked_tagnum(&G__libLHCfEventLN_Rec0),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Rec2),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Rec2),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_A2Rec1))) {
     A2Rec1 *G__Lderived;
     G__Lderived=(A2Rec1*)0x1000;
     {
       Rec0 *G__Lpbase=(Rec0*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Rec1),G__get_linked_tagnum(&G__libLHCfEventLN_Rec0),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Rec1),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Rec1),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_A2Rec2))) {
     A2Rec2 *G__Lderived;
     G__Lderived=(A2Rec2*)0x1000;
     {
       A2Rec1 *G__Lpbase=(A2Rec1*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Rec2),G__get_linked_tagnum(&G__libLHCfEventLN_A2Rec1),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       Rec0 *G__Lpbase=(Rec0*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Rec2),G__get_linked_tagnum(&G__libLHCfEventLN_Rec0),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Rec2),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Rec2),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_A2Rec3))) {
     A2Rec3 *G__Lderived;
     G__Lderived=(A2Rec3*)0x1000;
     {
       A2Rec2 *G__Lpbase=(A2Rec2*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Rec3),G__get_linked_tagnum(&G__libLHCfEventLN_A2Rec2),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       A2Rec1 *G__Lpbase=(A2Rec1*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Rec3),G__get_linked_tagnum(&G__libLHCfEventLN_A2Rec1),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       Rec0 *G__Lpbase=(Rec0*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Rec3),G__get_linked_tagnum(&G__libLHCfEventLN_Rec0),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Rec3),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Rec3),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_RHICfScl_Op2017))) {
     RHICfScl_Op2017 *G__Lderived;
     G__Lderived=(RHICfScl_Op2017*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_RHICfScl_Op2017),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_RHICfScl_Op2017),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1AccumHist))) {
     A1Cal1AccumHist *G__Lderived;
     G__Lderived=(A1Cal1AccumHist*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1AccumHist),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1AccumHist),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1AccumHist))) {
     A2Cal1AccumHist *G__Lderived;
     G__Lderived=(A2Cal1AccumHist*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1AccumHist),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1AccumHist),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2AccumHist))) {
     A1Cal2AccumHist *G__Lderived;
     G__Lderived=(A1Cal2AccumHist*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2AccumHist),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2AccumHist),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2AccumHist))) {
     A2Cal2AccumHist *G__Lderived;
     G__Lderived=(A2Cal2AccumHist*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2AccumHist),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2AccumHist),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_A1PhysAccumHist))) {
     A1PhysAccumHist *G__Lderived;
     G__Lderived=(A1PhysAccumHist*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1PhysAccumHist),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1PhysAccumHist),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_A2PhysAccumHist))) {
     A2PhysAccumHist *G__Lderived;
     G__Lderived=(A2PhysAccumHist*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2PhysAccumHist),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2PhysAccumHist),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_A1CountArray))) {
     A1CountArray *G__Lderived;
     G__Lderived=(A1CountArray*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1CountArray),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1CountArray),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_A2CountArray))) {
     A2CountArray *G__Lderived;
     G__Lderived=(A2CountArray*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2CountArray),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2CountArray),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_A1CalEventHist))) {
     A1CalEventHist *G__Lderived;
     G__Lderived=(A1CalEventHist*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1CalEventHist),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1CalEventHist),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_A2CalEventHist))) {
     A2CalEventHist *G__Lderived;
     G__Lderived=(A2CalEventHist*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2CalEventHist),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2CalEventHist),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_SimP))) {
     SimP *G__Lderived;
     G__Lderived=(SimP*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_SimP),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_SimP),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_SimIncidents))) {
     SimIncidents *G__Lderived;
     G__Lderived=(SimIncidents*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_SimIncidents),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_SimIncidents),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_SPSAdamoRec0))) {
     SPSAdamoRec0 *G__Lderived;
     G__Lderived=(SPSAdamoRec0*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_SPSAdamoRec0),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_SPSAdamoRec0),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libLHCfEventLN_SPSAdamoHist))) {
     SPSAdamoHist *G__Lderived;
     G__Lderived=(SPSAdamoHist*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_SPSAdamoHist),G__get_linked_tagnum(&G__libLHCfEventLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libLHCfEventLN_SPSAdamoHist),G__get_linked_tagnum(&G__libLHCfEventLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablelibLHCfEvent() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Color_t",115,-1,0,-1);
   G__setnewtype(-1,"Color number (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__libLHCfEventLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__libLHCfEventLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libLHCfEventLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__libLHCfEventLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libLHCfEventLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__libLHCfEventLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__libLHCfEventLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libLHCfEventLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__libLHCfEventLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libLHCfEventLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__libLHCfEventLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__libLHCfEventLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__libLHCfEventLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__libLHCfEventLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__libLHCfEventLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("bankio",105,-1,0,G__get_linked_tagnum(&G__libLHCfEventLN_A1Raw));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("bankio",105,-1,0,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("bankio",105,-1,0,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("bankio",105,-1,0,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("bankio",105,-1,0,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("bankio",105,-1,0,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__libLHCfEventLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__libLHCfEventLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libLHCfEventLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__libLHCfEventLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libLHCfEventLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__libLHCfEventLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__libLHCfEventLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__libLHCfEventLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__libLHCfEventLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__libLHCfEventLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__libLHCfEventLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__libLHCfEventLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__libLHCfEventLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__libLHCfEventLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__libLHCfEventLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__libLHCfEventLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__libLHCfEventLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__libLHCfEventLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__libLHCfEventLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__libLHCfEventLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__libLHCfEventLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__libLHCfEventLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__libLHCfEventLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__libLHCfEventLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__libLHCfEventLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__libLHCfEventLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("RHICfEventInfo",117,G__get_linked_tagnum(&G__libLHCfEventLN_A1Rec1),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("bankio",105,-1,0,G__get_linked_tagnum(&G__libLHCfEventLN_A1Raw_pp2015));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("bankio",105,-1,0,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pp2015));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("bankio",105,-1,0,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2013));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("bankio",105,-1,0,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2016));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("bankio",105,-1,0,G__get_linked_tagnum(&G__libLHCfEventLN_RHICfRaw_Op2017));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__libLHCfEventLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__libLHCfEventLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__libLHCfEventLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__libLHCfEventLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libLHCfEventLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__libLHCfEventLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libLHCfEventLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__libLHCfEventLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* A1Raw */
static void G__setup_memvarA1Raw(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Raw));
   { A1Raw *p; p=(A1Raw*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,"Run Number");
   G__memvar_setup((void*)((long)(&p->number)-(long)(p)),105,0,0,-1,-1,-1,1,"number=",0,"Arm1 Event Number");
   G__memvar_setup((void*)((long)(&p->gnumber)-(long)(p)),105,0,0,-1,-1,-1,1,"gnumber=",0,"Global Event Number");
   G__memvar_setup((void*)((long)(&p->time)-(long)(p)),104,0,0,-1,-1,-1,1,"time[2]=",0,"Time [0]:sec,[1]:usec");
   G__memvar_setup((void*)((long)(&p->adc0)-(long)(p)),114,0,0,-1,-1,-1,1,"adc0[64]=",0,"ADC0 [64] For 20mm Cal. (16ch*2ranges*2events)");
   G__memvar_setup((void*)((long)(&p->adc1)-(long)(p)),114,0,0,-1,-1,-1,1,"adc1[64]=",0,"ADC1 [64] For 40mm Cal. (16ch*2ranges*2events)");
   G__memvar_setup((void*)((long)(&p->adc2)-(long)(p)),114,0,0,-1,-1,-1,1,"adc2[8]=",0,"ADC2 [8]  For Noise check");
   G__memvar_setup((void*)((long)(&p->adc3)-(long)(p)),114,0,0,-1,-1,-1,1,"adc3[16]=",0,"ADC3 [16] no use ");
   G__memvar_setup((void*)((long)(&p->adc4)-(long)(p)),114,0,0,-1,-1,-1,1,"adc4[16]=",0,"ADC4 [16] For Laser and F.C (8ch*2evnets)");
   G__memvar_setup((void*)((long)(&p->cadc0)-(long)(p)),104,0,0,-1,-1,-1,1,"cadc0[5]=",0,"Counter value of ADC0 [5] ");
   G__memvar_setup((void*)((long)(&p->cadc1)-(long)(p)),104,0,0,-1,-1,-1,1,"cadc1[5]=",0,"Counter value of ADC1 [5]");
   G__memvar_setup((void*)((long)(&p->scifi)-(long)(p)),114,0,0,-1,-1,-1,1,"scifi[512]=",0,"Scifi [512] ");
   G__memvar_setup((void*)((long)(&p->tdc0)-(long)(p)),104,0,0,-1,-1,-1,1,"tdc0[160]=",0,"TDC0 [160] it independs on [N_A1_TDC0] but should be >.   ");
   G__memvar_setup((void*)((long)(&p->scl0)-(long)(p)),104,0,0,-1,-1,-1,1,"scl0[16]=",0,"Scaler [16] ");
   G__memvar_setup((void*)((long)(&p->gpio0)-(long)(p)),104,0,0,-1,-1,-1,1,"gpio0[17]=",0,"GPIO [17] 2 Flags+15 Counter Values ");
   G__memvar_setup((void*)((long)(&p->gpio1)-(long)(p)),104,0,0,-1,-1,-1,1,"gpio1[27]=",0,"GPIO [27] 1 Flags+26 counter Values");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1RawcLcLbank),-1,-2,1,G__FastAllocString(2048).Format("TIME=%lldLL",(long long)A1Raw::TIME).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1RawcLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ADC0=%lldLL",(long long)A1Raw::ADC0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1RawcLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ADC1=%lldLL",(long long)A1Raw::ADC1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1RawcLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ADC2=%lldLL",(long long)A1Raw::ADC2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1RawcLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ADC3=%lldLL",(long long)A1Raw::ADC3).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1RawcLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ADC4=%lldLL",(long long)A1Raw::ADC4).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1RawcLcLbank),-1,-2,1,G__FastAllocString(2048).Format("CADC0=%lldLL",(long long)A1Raw::CADC0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1RawcLcLbank),-1,-2,1,G__FastAllocString(2048).Format("CADC1=%lldLL",(long long)A1Raw::CADC1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1RawcLcLbank),-1,-2,1,G__FastAllocString(2048).Format("TDC0=%lldLL",(long long)A1Raw::TDC0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1RawcLcLbank),-1,-2,1,G__FastAllocString(2048).Format("SCL0=%lldLL",(long long)A1Raw::SCL0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1RawcLcLbank),-1,-2,1,G__FastAllocString(2048).Format("GPIO0=%lldLL",(long long)A1Raw::GPIO0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1RawcLcLbank),-1,-2,1,G__FastAllocString(2048).Format("GPIO1=%lldLL",(long long)A1Raw::GPIO1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1RawcLcLbank),-1,-2,1,G__FastAllocString(2048).Format("SCIFI=%lldLL",(long long)A1Raw::SCIFI).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1RawcLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ALL=%lldLL",(long long)A1Raw::ALL).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* A1Cal1 */
static void G__setup_memvarA1Cal1(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1));
   { A1Cal1 *p; p=(A1Cal1*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,"Run Number");
   G__memvar_setup((void*)((long)(&p->number)-(long)(p)),105,0,0,-1,-1,-1,1,"number=",0,"Arm1 Event Number");
   G__memvar_setup((void*)((long)(&p->gnumber)-(long)(p)),105,0,0,-1,-1,-1,1,"gnumber=",0,"Grobal Event Number");
   G__memvar_setup((void*)((long)(&p->time)-(long)(p)),100,0,0,-1,-1,-1,1,"time[2]=",0,"[0]:sec,[1]:usec");
   G__memvar_setup((void*)((long)(&p->flag_beam)-(long)(p)),103,0,0,-1,-1,-1,1,"flag_beam=",0,"Beam Flag ");
   G__memvar_setup((void*)((long)(&p->flag_pede)-(long)(p)),103,0,0,-1,-1,-1,1,"flag_pede=",0,"Pedestal Flag");
   G__memvar_setup((void*)((long)(&p->flag_laser)-(long)(p)),103,0,0,-1,-1,-1,1,"flag_laser=",0,"Laser Flag");
   G__memvar_setup((void*)((long)(&p->cal)-(long)(p)),100,0,0,-1,-1,-1,1,"cal[2][16][2]=",0,"[tower][layer][range] range0=L,1=H");
   G__memvar_setup((void*)((long)(&p->cald)-(long)(p)),100,0,0,-1,-1,-1,1,"cald[2][16][2]=",0,"delayed gate event");
   G__memvar_setup((void*)((long)(&p->fc)-(long)(p)),100,0,0,-1,-1,-1,1,"fc[2][4]=",0,"[arm][channel] for both FCs");
   G__memvar_setup((void*)((long)(&p->fcd)-(long)(p)),100,0,0,-1,-1,-1,1,"fcd[2][4]=",0,"delayed gate event");
   G__memvar_setup((void*)((long)(&p->laser)-(long)(p)),100,0,0,-1,-1,-1,1,"laser[2]=",0,"[channel] for laser monitor PMTs (0=\"L\",1=\"R\")");
   G__memvar_setup((void*)((long)(&p->laserd)-(long)(p)),100,0,0,-1,-1,-1,1,"laserd[2]=",0,"delayed gate event");
   G__memvar_setup((void*)((long)(&p->emptyadc)-(long)(p)),100,0,0,-1,-1,-1,1,"emptyadc[8]=",0,"[channel] for noise reduction");
   G__memvar_setup((void*)((long)(&p->scifi0)-(long)(p)),100,0,0,-1,-1,-1,1,"scifi0[4][2][20]=",0,"[layer][xy][fiber] (xy:0=\"x\",1=\"y\") for 20mm cal.");
   G__memvar_setup((void*)((long)(&p->scifi1)-(long)(p)),100,0,0,-1,-1,-1,1,"scifi1[4][2][40]=",0,"[layer][xy][fiber] (xy:0=\"x\",1=\"y\") for 40mm cal.");
   G__memvar_setup((void*)((long)(&p->tdc0)-(long)(p)),100,0,0,-1,-1,-1,1,"tdc0[12][16]=",0,"[channel][hit]");
   G__memvar_setup((void*)((long)(&p->tdc0flag)-(long)(p)),99,0,0,-1,-1,-1,1,"tdc0flag[12][16]=",0,"[channel][hit] flag(-1:nodata 0x1:Phase,0x2:Valid)");
   G__memvar_setup((void*)((long)(&p->scl0)-(long)(p)),100,0,0,-1,-1,-1,1,"scl0[16]=",0,"[scaler data]");
   G__memvar_setup((void*)((long)(&p->flag)-(long)(p)),104,0,0,-1,-1,-1,1,"flag[3]=",0,"GPIO0:2ch  + GPIO:1ch");
   G__memvar_setup((void*)((long)(&p->counter)-(long)(p)),104,0,0,-1,-1,-1,1,"counter[35]=",0,"GPIO0:15ch + GPIO:20ch");
   G__memvar_setup((void*)((long)(&p->fifocounter)-(long)(p)),104,0,0,-1,-1,-1,1,"fifocounter[2][4]=",0,"[channel][hit] FIFO in LHCFCOUNTER");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("CAL=%lldLL",(long long)A1Cal1::CAL).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("CALD=%lldLL",(long long)A1Cal1::CALD).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("FC=%lldLL",(long long)A1Cal1::FC).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("FCD=%lldLL",(long long)A1Cal1::FCD).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("LASER=%lldLL",(long long)A1Cal1::LASER).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("LASERD=%lldLL",(long long)A1Cal1::LASERD).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("EMPTYADC=%lldLL",(long long)A1Cal1::EMPTYADC).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("SCIFI0=%lldLL",(long long)A1Cal1::SCIFI0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("SCIFI1=%lldLL",(long long)A1Cal1::SCIFI1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("TDC0=%lldLL",(long long)A1Cal1::TDC0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("TDC0FLAG=%lldLL",(long long)A1Cal1::TDC0FLAG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("SCL0=%lldLL",(long long)A1Cal1::SCL0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("FLAG=%lldLL",(long long)A1Cal1::FLAG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("COUNTER=%lldLL",(long long)A1Cal1::COUNTER).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("FIFOCOUNTER=%lldLL",(long long)A1Cal1::FIFOCOUNTER).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ALL=%lldLL",(long long)A1Cal1::ALL).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_BPTX1=%lldLL",(long long)A1Cal1::FLAG0_BPTX1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_BPTX2=%lldLL",(long long)A1Cal1::FLAG0_BPTX2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_EXT_L1T=%lldLL",(long long)A1Cal1::FLAG0_EXT_L1T).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_L2TA=%lldLL",(long long)A1Cal1::FLAG0_L2TA).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_L2TP=%lldLL",(long long)A1Cal1::FLAG0_L2TP).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_L2T_EXT=%lldLL",(long long)A1Cal1::FLAG0_L2T_EXT).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_L2T_L1T=%lldLL",(long long)A1Cal1::FLAG0_L2T_L1T).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_STRG=%lldLL",(long long)A1Cal1::FLAG0_STRG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_LTRG=%lldLL",(long long)A1Cal1::FLAG0_LTRG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_BEAMFLAG=%lldLL",(long long)A1Cal1::FLAG0_BEAMFLAG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_PEDEFLAG=%lldLL",(long long)A1Cal1::FLAG0_PEDEFLAG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_LASERFLAG=%lldLL",(long long)A1Cal1::FLAG0_LASERFLAG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_ENABLEFLAG=%lldLL",(long long)A1Cal1::FLAG0_ENABLEFLAG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A1_ENABLE=%lldLL",(long long)A1Cal1::FLAG2_A1_ENABLE).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A1_STR=%lldLL",(long long)A1Cal1::FLAG2_A1_STR).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A1_L3T=%lldLL",(long long)A1Cal1::FLAG2_A1_L3T).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A2_ENABLE=%lldLL",(long long)A1Cal1::FLAG2_A2_ENABLE).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A2_STR=%lldLL",(long long)A1Cal1::FLAG2_A2_STR).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A2_L3T=%lldLL",(long long)A1Cal1::FLAG2_A2_L3T).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_BPTX1=%lldLL",(long long)A1Cal1::FLAG2_BPTX1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_BPTX2=%lldLL",(long long)A1Cal1::FLAG2_BPTX2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_L1A=%lldLL",(long long)A1Cal1::FLAG2_L1A).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A1_FC_TRG=%lldLL",(long long)A1Cal1::FLAG2_A1_FC_TRG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A2_FC_TRG=%lldLL",(long long)A1Cal1::FLAG2_A2_FC_TRG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_L2TC=%lldLL",(long long)A1Cal1::FLAG2_L2TC).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A1_FC0=%lldLL",(long long)A1Cal1::FLAG2_A1_FC0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A1_FC1=%lldLL",(long long)A1Cal1::FLAG2_A1_FC1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A1_FC2=%lldLL",(long long)A1Cal1::FLAG2_A1_FC2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A1_FC3=%lldLL",(long long)A1Cal1::FLAG2_A1_FC3).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A2_FC0=%lldLL",(long long)A1Cal1::FLAG2_A2_FC0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A2_FC1=%lldLL",(long long)A1Cal1::FLAG2_A2_FC1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A2_FC2=%lldLL",(long long)A1Cal1::FLAG2_A2_FC2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A2_FC3=%lldLL",(long long)A1Cal1::FLAG2_A2_FC3).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* A1Cal2 */
static void G__setup_memvarA1Cal2(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2));
   { A1Cal2 *p; p=(A1Cal2*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,"run number");
   G__memvar_setup((void*)((long)(&p->number)-(long)(p)),105,0,0,-1,-1,-1,1,"number=",0,"Arm#1  event number");
   G__memvar_setup((void*)((long)(&p->gnumber)-(long)(p)),105,0,0,-1,-1,-1,1,"gnumber=",0,"Grobal event number");
   G__memvar_setup((void*)((long)(&p->time)-(long)(p)),100,0,0,-1,-1,-1,1,"time[2]=",0,"Time 0:sec 1:usec");
   G__memvar_setup((void*)((long)(&p->cal)-(long)(p)),100,0,0,-1,-1,-1,1,"cal[2][16]=",0,"Scintillator Layers [tower:layer]");
   G__memvar_setup((void*)((long)(&p->fc)-(long)(p)),100,0,0,-1,-1,-1,1,"fc[2][4]=",0,"Front counters [arm:channel]");
   G__memvar_setup((void*)((long)(&p->scifi0)-(long)(p)),100,0,0,-1,-1,-1,1,"scifi0[4][2][20]=",0,"Scifi 20mm tower [layer:xy:fiber]");
   G__memvar_setup((void*)((long)(&p->scifi1)-(long)(p)),100,0,0,-1,-1,-1,1,"scifi1[4][2][40]=",0,"Scifi 40mm tower [layer:xy:fiber]");
   G__memvar_setup((void*)((long)(&p->flag)-(long)(p)),104,0,0,-1,-1,-1,1,"flag[3]=",0,"Flags in GPIOs (GPIO0:2ch+GPIO:1ch)");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("CAL=%lldLL",(long long)A1Cal2::CAL).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("FC=%lldLL",(long long)A1Cal2::FC).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("SCIFI0=%lldLL",(long long)A1Cal2::SCIFI0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("SCIFI1=%lldLL",(long long)A1Cal2::SCIFI1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("TDC0=%lldLL",(long long)A1Cal2::TDC0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("TDC0FLAG=%lldLL",(long long)A1Cal2::TDC0FLAG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("SCL0=%lldLL",(long long)A1Cal2::SCL0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("FLAG=%lldLL",(long long)A1Cal2::FLAG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("COUNTER=%lldLL",(long long)A1Cal2::COUNTER).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("FIFOCOUNTER=%lldLL",(long long)A1Cal2::FIFOCOUNTER).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ALL=%lldLL",(long long)A1Cal2::ALL).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_BPTX1=%lldLL",(long long)A1Cal2::FLAG0_BPTX1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_BPTX2=%lldLL",(long long)A1Cal2::FLAG0_BPTX2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_EXT_L1T=%lldLL",(long long)A1Cal2::FLAG0_EXT_L1T).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_L2TA=%lldLL",(long long)A1Cal2::FLAG0_L2TA).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_L2TP=%lldLL",(long long)A1Cal2::FLAG0_L2TP).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_L2T_EXT=%lldLL",(long long)A1Cal2::FLAG0_L2T_EXT).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_L2T_L1T=%lldLL",(long long)A1Cal2::FLAG0_L2T_L1T).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_STRG=%lldLL",(long long)A1Cal2::FLAG0_STRG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_LTRG=%lldLL",(long long)A1Cal2::FLAG0_LTRG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_BEAMFLAG=%lldLL",(long long)A1Cal2::FLAG0_BEAMFLAG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_PEDEFLAG=%lldLL",(long long)A1Cal2::FLAG0_PEDEFLAG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_LASERFLAG=%lldLL",(long long)A1Cal2::FLAG0_LASERFLAG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_ENABLEFLAG=%lldLL",(long long)A1Cal2::FLAG0_ENABLEFLAG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A1_ENABLE=%lldLL",(long long)A1Cal2::FLAG2_A1_ENABLE).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A1_STR=%lldLL",(long long)A1Cal2::FLAG2_A1_STR).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A1_L3T=%lldLL",(long long)A1Cal2::FLAG2_A1_L3T).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A2_ENABLE=%lldLL",(long long)A1Cal2::FLAG2_A2_ENABLE).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A2_STR=%lldLL",(long long)A1Cal2::FLAG2_A2_STR).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A2_L3T=%lldLL",(long long)A1Cal2::FLAG2_A2_L3T).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_BPTX1=%lldLL",(long long)A1Cal2::FLAG2_BPTX1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_BPTX2=%lldLL",(long long)A1Cal2::FLAG2_BPTX2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_L1A=%lldLL",(long long)A1Cal2::FLAG2_L1A).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A1_FC_TRG=%lldLL",(long long)A1Cal2::FLAG2_A1_FC_TRG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A2_FC_TRG=%lldLL",(long long)A1Cal2::FLAG2_A2_FC_TRG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_L2TC=%lldLL",(long long)A1Cal2::FLAG2_L2TC).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A1_FC0=%lldLL",(long long)A1Cal2::FLAG2_A1_FC0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A1_FC1=%lldLL",(long long)A1Cal2::FLAG2_A1_FC1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A1_FC2=%lldLL",(long long)A1Cal2::FLAG2_A1_FC2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A1_FC3=%lldLL",(long long)A1Cal2::FLAG2_A1_FC3).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A2_FC0=%lldLL",(long long)A1Cal2::FLAG2_A2_FC0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A2_FC1=%lldLL",(long long)A1Cal2::FLAG2_A2_FC1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A2_FC2=%lldLL",(long long)A1Cal2::FLAG2_A2_FC2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A2_FC3=%lldLL",(long long)A1Cal2::FLAG2_A2_FC3).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* A1Phys */
static void G__setup_memvarA1Phys(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Phys));
   { A1Phys *p; p=(A1Phys*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,"Run number");
   G__memvar_setup((void*)((long)(&p->number)-(long)(p)),105,0,0,-1,-1,-1,1,"number=",0,"Arm#1  event number");
   G__memvar_setup((void*)((long)(&p->gnumber)-(long)(p)),105,0,0,-1,-1,-1,1,"gnumber=",0,"Grobal event number");
   G__memvar_setup((void*)((long)(&p->time)-(long)(p)),100,0,0,-1,-1,-1,1,"time[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->energy)-(long)(p)),100,0,0,-1,-1,-1,1,"energy[2]=",0,"Energy[GeV] of each calorimter. [tower] 0:20mm,1:40mm ");
   G__memvar_setup((void*)((long)(&p->pos)-(long)(p)),100,0,0,-1,-1,-1,1,"pos[2][2]=",0,"Hit position[mm] on the calorimteter system.[tower][xy] ");
   G__memvar_setup((void*)((long)(&p->pid)-(long)(p)),105,0,0,-1,-1,-1,1,"pid[2]=",0,"Particle ID 0=elemag 1=hadronic. [tower]");
   G__memvar_setup((void*)((long)(&p->hits)-(long)(p)),105,0,0,-1,-1,-1,1,"hits[2]=",0,"Number of hits. [tower]");
   G__memvar_setup((void*)((long)(&p->flag)-(long)(p)),104,0,0,-1,-1,-1,1,"flag[3]=",0,"GPIO0:2ch  + GPIO:1ch");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-2,2,"sPositionBeamCenter[2]=",0,"! offset parameters: beam position in the global_detector coodinate ");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-2,2,"sPositionBeamPipe[2]=",0,"! offset parameters: beam pipe position in the global detector coodinate. ");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("ALLPARTICLE=%lldLL",(long long)A1Phys::ALLPARTICLE).data(),0,"!");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("ELEMAG=%lldLL",(long long)A1Phys::ELEMAG).data(),0,"! ");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("HADRON=%lldLL",(long long)A1Phys::HADRON).data(),0,"!");
   G__memvar_setup((void*)(&A1Phys::cDistance),100,0,1,-1,-1,-2,1,"cDistance=",0,"! Distance between I.P. and the front of calorimeter. [mm]");
   G__memvar_setup((void*)(&A1Phys::cPi0mass),100,0,1,-1,-1,-2,1,"cPi0mass=",0,"! Pi0 invariant mass [MeV]");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* A1Info */
static void G__setup_memvarA1Info(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Info));
   { A1Info *p; p=(A1Info*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,"Run Number");
   G__memvar_setup((void*)((long)(&p->runmode)-(long)(p)),105,0,0,-1,-1,-1,1,"runmode=",0,"Rum Mode");
   G__memvar_setup((void*)((long)(&p->isrunning)-(long)(p)),103,0,0,-1,-1,-1,1,"isrunning=",0,"1: running , 0: not running");
   G__memvar_setup((void*)((long)(&p->start_time)-(long)(p)),105,0,0,-1,-1,-1,1,"start_time=",0,"Start Time [UTC]");
   G__memvar_setup((void*)((long)(&p->end_time)-(long)(p)),105,0,0,-1,-1,-1,1,"end_time=",0,"End Time [UTC]");
   G__memvar_setup((void*)((long)(&p->nev_trg)-(long)(p)),105,0,0,-1,-1,-1,1,"nev_trg=",0,"Number of Trigger1 events  ");
   G__memvar_setup((void*)((long)(&p->nev_scl)-(long)(p)),105,0,0,-1,-1,-1,1,"nev_scl=",0,"Number of Sclar1 events");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* A1Scl */
static void G__setup_memvarA1Scl(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Scl));
   { A1Scl *p; p=(A1Scl*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,"RUN Number");
   G__memvar_setup((void*)((long)(&p->number)-(long)(p)),105,0,0,-1,-1,-1,1,"number=",0,"Event Number");
   G__memvar_setup((void*)((long)(&p->time)-(long)(p)),104,0,0,-1,-1,-1,1,"time[1]=",0,"CPU TIME");
   G__memvar_setup((void*)((long)(&p->scl0)-(long)(p)),104,0,0,-1,-1,-1,1,"scl0[16]=",0,"Scaler values of CAEN V260");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* A2Raw */
static void G__setup_memvarA2Raw(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw));
   { A2Raw *p; p=(A2Raw*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,"Run Number");
   G__memvar_setup((void*)((long)(&p->number)-(long)(p)),105,0,0,-1,-1,-1,1,"number=",0,"Arm2 Event Number ");
   G__memvar_setup((void*)((long)(&p->gnumber)-(long)(p)),105,0,0,-1,-1,-1,1,"gnumber=",0,"Glocal Event Number");
   G__memvar_setup((void*)((long)(&p->time)-(long)(p)),104,0,0,-1,-1,-1,1,"time[2]=",0,"Time [0]:sec,[1]:usec");
   G__memvar_setup((void*)((long)(&p->adc0)-(long)(p)),114,0,0,-1,-1,-1,1,"adc0[64]=",0,"ADC0 [64] For 20mm Cal. (16ch*2ranges*2events)");
   G__memvar_setup((void*)((long)(&p->adc1)-(long)(p)),114,0,0,-1,-1,-1,1,"adc1[64]=",0,"ADC1 [64] For 40mm Cal. (16ch*2ranges*2events)");
   G__memvar_setup((void*)((long)(&p->adc2)-(long)(p)),114,0,0,-1,-1,-1,1,"adc2[8]=",0,"ADC2 [8]  For Noise check");
   G__memvar_setup((void*)((long)(&p->adc3)-(long)(p)),114,0,0,-1,-1,-1,1,"adc3[16]=",0,"ADC3 [16] no use ");
   G__memvar_setup((void*)((long)(&p->adc4)-(long)(p)),114,0,0,-1,-1,-1,1,"adc4[16]=",0,"ADC4 [16] For Laser and F.C (8ch*2evnets)");
   G__memvar_setup((void*)((long)(&p->cadc0)-(long)(p)),104,0,0,-1,-1,-1,1,"cadc0[5]=",0,"Counter value of ADC0 [5] ");
   G__memvar_setup((void*)((long)(&p->cadc1)-(long)(p)),104,0,0,-1,-1,-1,1,"cadc1[5]=",0,"Counter value of ADC1 [5]");
   G__memvar_setup((void*)((long)(&p->tdc0)-(long)(p)),104,0,0,-1,-1,-1,1,"tdc0[128]=",0,"TDC0 [64] ");
   G__memvar_setup((void*)((long)(&p->scl0)-(long)(p)),104,0,0,-1,-1,-1,1,"scl0[16]=",0,"Scaler [16] ");
   G__memvar_setup((void*)((long)(&p->gpio0)-(long)(p)),104,0,0,-1,-1,-1,1,"gpio0[17]=",0,"GPIO [17] 2 Flags+15 Counter Values ");
   G__memvar_setup((void*)((long)(&p->gpio1)-(long)(p)),104,0,0,-1,-1,-1,1,"gpio1[27]=",0,"GPIO [27] 1 Flags+26 counter Values");
   G__memvar_setup((void*)((long)(&p->arm2)-(long)(p)),99,0,0,-1,-1,-1,1,"arm2[14280]=",0,"Silicon [14280] ");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2RawcLcLbank),-1,-2,1,G__FastAllocString(2048).Format("TIME=%lldLL",(long long)A2Raw::TIME).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2RawcLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ADC0=%lldLL",(long long)A2Raw::ADC0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2RawcLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ADC1=%lldLL",(long long)A2Raw::ADC1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2RawcLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ADC2=%lldLL",(long long)A2Raw::ADC2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2RawcLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ADC3=%lldLL",(long long)A2Raw::ADC3).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2RawcLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ADC4=%lldLL",(long long)A2Raw::ADC4).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2RawcLcLbank),-1,-2,1,G__FastAllocString(2048).Format("CADC0=%lldLL",(long long)A2Raw::CADC0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2RawcLcLbank),-1,-2,1,G__FastAllocString(2048).Format("CADC1=%lldLL",(long long)A2Raw::CADC1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2RawcLcLbank),-1,-2,1,G__FastAllocString(2048).Format("TDC0=%lldLL",(long long)A2Raw::TDC0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2RawcLcLbank),-1,-2,1,G__FastAllocString(2048).Format("SCL0=%lldLL",(long long)A2Raw::SCL0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2RawcLcLbank),-1,-2,1,G__FastAllocString(2048).Format("GPIO0=%lldLL",(long long)A2Raw::GPIO0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2RawcLcLbank),-1,-2,1,G__FastAllocString(2048).Format("GPIO1=%lldLL",(long long)A2Raw::GPIO1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2RawcLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ARM2=%lldLL",(long long)A2Raw::ARM2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2RawcLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ALL=%lldLL",(long long)A2Raw::ALL).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* A2Cal2 */
static void G__setup_memvarA2Cal2(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2));
   { A2Cal2 *p; p=(A2Cal2*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,"run number");
   G__memvar_setup((void*)((long)(&p->number)-(long)(p)),105,0,0,-1,-1,-1,1,"number=",0,"Arm#2  event number");
   G__memvar_setup((void*)((long)(&p->gnumber)-(long)(p)),105,0,0,-1,-1,-1,1,"gnumber=",0,"Grobal event number");
   G__memvar_setup((void*)((long)(&p->time)-(long)(p)),100,0,0,-1,-1,-1,1,"time[2]=",0,"Time 0:sec 1:usec");
   G__memvar_setup((void*)((long)(&p->cal)-(long)(p)),100,0,0,-1,-1,-1,1,"cal[2][16]=",0,"Scintillator Layers [tower:layer]");
   G__memvar_setup((void*)((long)(&p->fc)-(long)(p)),100,0,0,-1,-1,-1,1,"fc[2][4]=",0,"Front counters [arm:channel]");
   G__memvar_setup((void*)((long)(&p->silicon)-(long)(p)),102,0,0,-1,-1,-1,1,"silicon[4][2][384][3]=",0,"Silicon Layers [layer:xy:strip:sample]");
   G__memvar_setup((void*)((long)(&p->flag)-(long)(p)),104,0,0,-1,-1,-1,1,"flag[3]=",0,"Flags in GPIOs (GPIO0:2ch+GPIO:1ch)");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("CAL=%lldLL",(long long)A2Cal2::CAL).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("FC=%lldLL",(long long)A2Cal2::FC).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("SILICON=%lldLL",(long long)A2Cal2::SILICON).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("TDC0=%lldLL",(long long)A2Cal2::TDC0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("TDC0FLAG=%lldLL",(long long)A2Cal2::TDC0FLAG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("SCL0=%lldLL",(long long)A2Cal2::SCL0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("FLAG=%lldLL",(long long)A2Cal2::FLAG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("COUNTER=%lldLL",(long long)A2Cal2::COUNTER).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("FIFOCOUNTER=%lldLL",(long long)A2Cal2::FIFOCOUNTER).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ALL=%lldLL",(long long)A2Cal2::ALL).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_BPTX1=%lldLL",(long long)A2Cal2::FLAG0_BPTX1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_BPTX2=%lldLL",(long long)A2Cal2::FLAG0_BPTX2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_EXT_L1T=%lldLL",(long long)A2Cal2::FLAG0_EXT_L1T).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_L2TA=%lldLL",(long long)A2Cal2::FLAG0_L2TA).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_L2TP=%lldLL",(long long)A2Cal2::FLAG0_L2TP).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_L2T_EXT=%lldLL",(long long)A2Cal2::FLAG0_L2T_EXT).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_L2T_L1T=%lldLL",(long long)A2Cal2::FLAG0_L2T_L1T).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_STRG=%lldLL",(long long)A2Cal2::FLAG0_STRG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_LTRG=%lldLL",(long long)A2Cal2::FLAG0_LTRG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_BEAMFLAG=%lldLL",(long long)A2Cal2::FLAG0_BEAMFLAG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_PEDEFLAG=%lldLL",(long long)A2Cal2::FLAG0_PEDEFLAG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_LASERFLAG=%lldLL",(long long)A2Cal2::FLAG0_LASERFLAG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_ENABLEFLAG=%lldLL",(long long)A2Cal2::FLAG0_ENABLEFLAG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A1_ENABLE=%lldLL",(long long)A2Cal2::FLAG2_A1_ENABLE).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A1_STR=%lldLL",(long long)A2Cal2::FLAG2_A1_STR).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A1_L3T=%lldLL",(long long)A2Cal2::FLAG2_A1_L3T).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A2_ENABLE=%lldLL",(long long)A2Cal2::FLAG2_A2_ENABLE).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A2_STR=%lldLL",(long long)A2Cal2::FLAG2_A2_STR).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A2_L3T=%lldLL",(long long)A2Cal2::FLAG2_A2_L3T).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_BPTX1=%lldLL",(long long)A2Cal2::FLAG2_BPTX1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_BPTX2=%lldLL",(long long)A2Cal2::FLAG2_BPTX2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_L1A=%lldLL",(long long)A2Cal2::FLAG2_L1A).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A1_FC_TRG=%lldLL",(long long)A2Cal2::FLAG2_A1_FC_TRG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A2_FC_TRG=%lldLL",(long long)A2Cal2::FLAG2_A2_FC_TRG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_L2TC=%lldLL",(long long)A2Cal2::FLAG2_L2TC).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A1_FC0=%lldLL",(long long)A2Cal2::FLAG2_A1_FC0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A1_FC1=%lldLL",(long long)A2Cal2::FLAG2_A1_FC1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A1_FC2=%lldLL",(long long)A2Cal2::FLAG2_A1_FC2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A1_FC3=%lldLL",(long long)A2Cal2::FLAG2_A1_FC3).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A2_FC0=%lldLL",(long long)A2Cal2::FLAG2_A2_FC0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A2_FC1=%lldLL",(long long)A2Cal2::FLAG2_A2_FC1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A2_FC2=%lldLL",(long long)A2Cal2::FLAG2_A2_FC2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A2_FC3=%lldLL",(long long)A2Cal2::FLAG2_A2_FC3).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* A2Cal1 */
static void G__setup_memvarA2Cal1(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1));
   { A2Cal1 *p; p=(A2Cal1*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,"Run Number");
   G__memvar_setup((void*)((long)(&p->number)-(long)(p)),105,0,0,-1,-1,-1,1,"number=",0,"Arm#2 Event Number");
   G__memvar_setup((void*)((long)(&p->gnumber)-(long)(p)),105,0,0,-1,-1,-1,1,"gnumber=",0,"Grobal Event Number");
   G__memvar_setup((void*)((long)(&p->time)-(long)(p)),100,0,0,-1,-1,-1,1,"time[2]=",0,"[0]:sec,[1]:usec");
   G__memvar_setup((void*)((long)(&p->flag_beam)-(long)(p)),103,0,0,-1,-1,-1,1,"flag_beam=",0,"Beam Flag ");
   G__memvar_setup((void*)((long)(&p->flag_pede)-(long)(p)),103,0,0,-1,-1,-1,1,"flag_pede=",0,"Pedestal Flag");
   G__memvar_setup((void*)((long)(&p->flag_laser)-(long)(p)),103,0,0,-1,-1,-1,1,"flag_laser=",0,"Laser Flag");
   G__memvar_setup((void*)((long)(&p->cal)-(long)(p)),100,0,0,-1,-1,-1,1,"cal[2][16][2]=",0,"[tower][layer][range] range0=L,1=H");
   G__memvar_setup((void*)((long)(&p->cald)-(long)(p)),100,0,0,-1,-1,-1,1,"cald[2][16][2]=",0,"delayed gate event");
   G__memvar_setup((void*)((long)(&p->fc)-(long)(p)),100,0,0,-1,-1,-1,1,"fc[2][4]=",0,"[arm][channel] for both FCs ");
   G__memvar_setup((void*)((long)(&p->fcd)-(long)(p)),100,0,0,-1,-1,-1,1,"fcd[2][4]=",0,"delayed gate event");
   G__memvar_setup((void*)((long)(&p->laser)-(long)(p)),100,0,0,-1,-1,-1,1,"laser[2]=",0,"[channel] for laser monitor PMTs (0=\"L\",1=\"R\")");
   G__memvar_setup((void*)((long)(&p->laserd)-(long)(p)),100,0,0,-1,-1,-1,1,"laserd[2]=",0,"delayed gate event");
   G__memvar_setup((void*)((long)(&p->emptyadc)-(long)(p)),100,0,0,-1,-1,-1,1,"emptyadc[8]=",0,"[channel] for noise reduction");
   G__memvar_setup((void*)((long)(&p->tdc0)-(long)(p)),100,0,0,-1,-1,-1,1,"tdc0[12][16]=",0,"[channel][hit]");
   G__memvar_setup((void*)((long)(&p->tdc0flag)-(long)(p)),99,0,0,-1,-1,-1,1,"tdc0flag[12][16]=",0,"[channel][hit] flag(-1:nodata 0x1:Phase,0x2:Valid)");
   G__memvar_setup((void*)((long)(&p->scl0)-(long)(p)),100,0,0,-1,-1,-1,1,"scl0[16]=",0,"[scaler data]");
   G__memvar_setup((void*)((long)(&p->silicon)-(long)(p)),102,0,0,-1,-1,-1,1,"silicon[4][2][384][3]=",0,"[layer][xy][strip][sample]");
   G__memvar_setup((void*)((long)(&p->flag)-(long)(p)),104,0,0,-1,-1,-1,1,"flag[3]=",0,"GPIO0:2ch  + GPIO:1ch");
   G__memvar_setup((void*)((long)(&p->counter)-(long)(p)),104,0,0,-1,-1,-1,1,"counter[35]=",0,"GPIO0:15ch + GPIO:20ch");
   G__memvar_setup((void*)((long)(&p->fifocounter)-(long)(p)),104,0,0,-1,-1,-1,1,"fifocounter[2][4]=",0,"[channel][hit] FIFO in LHCFCOUNTER");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("CAL=%lldLL",(long long)A2Cal1::CAL).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("CALD=%lldLL",(long long)A2Cal1::CALD).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("FC=%lldLL",(long long)A2Cal1::FC).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("FCD=%lldLL",(long long)A2Cal1::FCD).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("LASER=%lldLL",(long long)A2Cal1::LASER).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("LASERD=%lldLL",(long long)A2Cal1::LASERD).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("EMPTYADC=%lldLL",(long long)A2Cal1::EMPTYADC).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("SILICON=%lldLL",(long long)A2Cal1::SILICON).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("TDC0=%lldLL",(long long)A2Cal1::TDC0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("TDC0FLAG=%lldLL",(long long)A2Cal1::TDC0FLAG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("SCL0=%lldLL",(long long)A2Cal1::SCL0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("FLAG=%lldLL",(long long)A2Cal1::FLAG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("COUNTER=%lldLL",(long long)A2Cal1::COUNTER).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("FIFOCOUNTER=%lldLL",(long long)A2Cal1::FIFOCOUNTER).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ALL=%lldLL",(long long)A2Cal1::ALL).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_BPTX1=%lldLL",(long long)A2Cal1::FLAG0_BPTX1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_BPTX2=%lldLL",(long long)A2Cal1::FLAG0_BPTX2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_EXT_L1T=%lldLL",(long long)A2Cal1::FLAG0_EXT_L1T).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_L2TA=%lldLL",(long long)A2Cal1::FLAG0_L2TA).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_L2TP=%lldLL",(long long)A2Cal1::FLAG0_L2TP).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_L2T_EXT=%lldLL",(long long)A2Cal1::FLAG0_L2T_EXT).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_L2T_L1T=%lldLL",(long long)A2Cal1::FLAG0_L2T_L1T).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_STRG=%lldLL",(long long)A2Cal1::FLAG0_STRG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_LTRG=%lldLL",(long long)A2Cal1::FLAG0_LTRG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_BEAMFLAG=%lldLL",(long long)A2Cal1::FLAG0_BEAMFLAG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_PEDEFLAG=%lldLL",(long long)A2Cal1::FLAG0_PEDEFLAG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_LASERFLAG=%lldLL",(long long)A2Cal1::FLAG0_LASERFLAG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLGPIOFLAG0),-1,-2,1,G__FastAllocString(2048).Format("FLAG0_ENABLEFLAG=%lldLL",(long long)A2Cal1::FLAG0_ENABLEFLAG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A1_ENABLE=%lldLL",(long long)A2Cal1::FLAG2_A1_ENABLE).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A1_STR=%lldLL",(long long)A2Cal1::FLAG2_A1_STR).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A1_L3T=%lldLL",(long long)A2Cal1::FLAG2_A1_L3T).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A2_ENABLE=%lldLL",(long long)A2Cal1::FLAG2_A2_ENABLE).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A2_STR=%lldLL",(long long)A2Cal1::FLAG2_A2_STR).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A2_L3T=%lldLL",(long long)A2Cal1::FLAG2_A2_L3T).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_BPTX1=%lldLL",(long long)A2Cal1::FLAG2_BPTX1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_BPTX2=%lldLL",(long long)A2Cal1::FLAG2_BPTX2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_L1A=%lldLL",(long long)A2Cal1::FLAG2_L1A).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A1_FC_TRG=%lldLL",(long long)A2Cal1::FLAG2_A1_FC_TRG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A2_FC_TRG=%lldLL",(long long)A2Cal1::FLAG2_A2_FC_TRG).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_L2TC=%lldLL",(long long)A2Cal1::FLAG2_L2TC).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A1_FC0=%lldLL",(long long)A2Cal1::FLAG2_A1_FC0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A1_FC1=%lldLL",(long long)A2Cal1::FLAG2_A1_FC1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A1_FC2=%lldLL",(long long)A2Cal1::FLAG2_A1_FC2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A1_FC3=%lldLL",(long long)A2Cal1::FLAG2_A1_FC3).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A2_FC0=%lldLL",(long long)A2Cal1::FLAG2_A2_FC0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A2_FC1=%lldLL",(long long)A2Cal1::FLAG2_A2_FC1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A2_FC2=%lldLL",(long long)A2Cal1::FLAG2_A2_FC2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLGPIOFLAG2),-1,-2,1,G__FastAllocString(2048).Format("FLAG2_A2_FC3=%lldLL",(long long)A2Cal1::FLAG2_A2_FC3).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLBUNCHCONFFLAG),-1,-2,1,G__FastAllocString(2048).Format("CROSSING=%lldLL",(long long)A2Cal1::CROSSING).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLBUNCHCONFFLAG),-1,-2,1,G__FastAllocString(2048).Format("NONCROSSING=%lldLL",(long long)A2Cal1::NONCROSSING).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLBUNCHCONFFLAG),-1,-2,1,G__FastAllocString(2048).Format("DISPLACED=%lldLL",(long long)A2Cal1::DISPLACED).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLBUNCHCONFFLAG),-1,-2,1,G__FastAllocString(2048).Format("NONCROSSING2=%lldLL",(long long)A2Cal1::NONCROSSING2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1cLcLBUNCHCONFFLAG),-1,-2,1,G__FastAllocString(2048).Format("UNKNOWN=%lldLL",(long long)A2Cal1::UNKNOWN).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* A2Phys */
static void G__setup_memvarA2Phys(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Phys));
   { A2Phys *p; p=(A2Phys*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,"Run number");
   G__memvar_setup((void*)((long)(&p->number)-(long)(p)),105,0,0,-1,-1,-1,1,"number=",0,"Arm#2  event number");
   G__memvar_setup((void*)((long)(&p->gnumber)-(long)(p)),105,0,0,-1,-1,-1,1,"gnumber=",0,"Grobal event number");
   G__memvar_setup((void*)((long)(&p->time)-(long)(p)),100,0,0,-1,-1,-1,1,"time[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->energy)-(long)(p)),100,0,0,-1,-1,-1,1,"energy[2]=",0,"Energy[GeV] of each calorimter. [tower]  0:25mm, 1:32mm ");
   G__memvar_setup((void*)((long)(&p->pos)-(long)(p)),100,0,0,-1,-1,-1,1,"pos[2][2]=",0,"Hit position[mm] on the calorimteter system. [tower][xy]");
   G__memvar_setup((void*)((long)(&p->sideposit)-(long)(p)),100,0,0,-1,-1,-1,1,"sideposit[2][4][2][3]=",0,"Energy deposit in silicon. [tower][layer][xy][sample] //Added by eugenio");
   G__memvar_setup((void*)((long)(&p->sidepositsum)-(long)(p)),100,0,0,-1,-1,-1,1,"sidepositsum[2][3]=",0,"Energy deposit in silicon summed over all layers. [tower][sample] //Added by eugenio  ");
   G__memvar_setup((void*)((long)(&p->pid)-(long)(p)),105,0,0,-1,-1,-1,1,"pid[2]=",0,"Particle ID 0:elemag 1:hadronic [tower]");
   G__memvar_setup((void*)((long)(&p->hits)-(long)(p)),105,0,0,-1,-1,-1,1,"hits[2]=",0,"Number of hits  [tower]");
   G__memvar_setup((void*)((long)(&p->flag)-(long)(p)),104,0,0,-1,-1,-1,1,"flag[3]=",0,"GPIO0:2ch  + GPIO:1ch");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-2,2,"sPositionBeamCenter[2]=",0,"! offset parameters: beam position in the global_detector coodinate ");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-2,2,"sPositionBeamPipe[2]=",0,"! offset parameters: beam pipe position in the global detector coodinate. ");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("ALLPARTICLE=%lldLL",(long long)A2Phys::ALLPARTICLE).data(),0,"!");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("ELEMAG=%lldLL",(long long)A2Phys::ELEMAG).data(),0,"!");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("HADRON=%lldLL",(long long)A2Phys::HADRON).data(),0,"!");
   G__memvar_setup((void*)(&A2Phys::cDistance),100,0,1,-1,-1,-2,1,"cDistance=",0,"! Distance between I.P. and the front of calorimeter. [mm]");
   G__memvar_setup((void*)(&A2Phys::cPi0mass),100,0,1,-1,-1,-2,1,"cPi0mass=",0,"! Pi0 invariant mass [MeV]");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Rec0 */
static void G__setup_memvarRec0(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_Rec0));
   { Rec0 *p; p=(Rec0*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,"Run Number");
   G__memvar_setup((void*)((long)(&p->number)-(long)(p)),105,0,0,-1,-1,-1,1,"number=",0,"Arm#2 Event Number");
   G__memvar_setup((void*)((long)(&p->gnumber)-(long)(p)),105,0,0,-1,-1,-1,1,"gnumber=",0,"Grobal Event Number");
   G__memvar_setup((void*)((long)(&p->time)-(long)(p)),100,0,0,-1,-1,-1,1,"time[2]=",0,"[0]:sec,[1]:usec");
   G__memvar_setup((void*)((long)(&p->format)-(long)(p)),105,0,0,-1,-1,-1,1,"format=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->evinfo)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"evinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->flags)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<unsigned int>"),-1,1,"flags=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->rec)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"rec=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cal)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"cal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pos)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"pos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pid)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"pid=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tdc)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"tdc=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->counter)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"counter=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_Rec0cLcLDEF_EVQUALITY),-1,-2,1,G__FastAllocString(2048).Format("GOOD=%lldLL",(long long)Rec0::GOOD).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_Rec0cLcLDEF_EVQUALITY),-1,-2,1,G__FastAllocString(2048).Format("BAD=%lldLL",(long long)Rec0::BAD).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_Rec0cLcLDEF_BEAMTAG),-1,-2,1,G__FastAllocString(2048).Format("CROSSING=%lldLL",(long long)Rec0::CROSSING).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_Rec0cLcLDEF_BEAMTAG),-1,-2,1,G__FastAllocString(2048).Format("DISPLACED=%lldLL",(long long)Rec0::DISPLACED).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_Rec0cLcLDEF_BEAMTAG),-1,-2,1,G__FastAllocString(2048).Format("NONCROSSING=%lldLL",(long long)Rec0::NONCROSSING).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_Rec0cLcLDEF_BEAMTAG),-1,-2,1,G__FastAllocString(2048).Format("NONCROSSING2=%lldLL",(long long)Rec0::NONCROSSING2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_Rec0cLcLDEF_BEAMTAG),-1,-2,1,G__FastAllocString(2048).Format("UNKNOWN=%lldLL",(long long)Rec0::UNKNOWN).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* A2Cal2M */
static void G__setup_memvarA2Cal2M(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2M));
   { A2Cal2M *p; p=(A2Cal2M*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->tdc0)-(long)(p)),100,0,0,-1,-1,-1,1,"tdc0[12][16]=",0,"[channel][hit]");
   G__memvar_setup((void*)((long)(&p->tdc0flag)-(long)(p)),99,0,0,-1,-1,-1,1,"tdc0flag[12][16]=",0,"[channel][hit] flag(-1:nodata 0x1:Phase,0x2:Valid)");
   G__memvar_setup((void*)((long)(&p->scl0)-(long)(p)),100,0,0,-1,-1,-1,1,"scl0[16]=",0,"[scaler data]");
   G__memvar_setup((void*)((long)(&p->counter)-(long)(p)),104,0,0,-1,-1,-1,1,"counter[35]=",0,"GPIO0:15ch + GPIO:20ch");
   G__memvar_setup((void*)((long)(&p->fifocounter)-(long)(p)),104,0,0,-1,-1,-1,1,"fifocounter[2][4]=",0,"[channel][hit] FIFO in LHCFCOUNTER");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2McLcLBUNCHCONFFLAG),-1,-2,1,G__FastAllocString(2048).Format("CROSSING=%lldLL",(long long)A2Cal2M::CROSSING).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2McLcLBUNCHCONFFLAG),-1,-2,1,G__FastAllocString(2048).Format("DISPLACED=%lldLL",(long long)A2Cal2M::DISPLACED).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2McLcLBUNCHCONFFLAG),-1,-2,1,G__FastAllocString(2048).Format("NONCROSSING=%lldLL",(long long)A2Cal2M::NONCROSSING).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2McLcLBUNCHCONFFLAG),-1,-2,1,G__FastAllocString(2048).Format("NONCROSSING2=%lldLL",(long long)A2Cal2M::NONCROSSING2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2McLcLBUNCHCONFFLAG),-1,-2,1,G__FastAllocString(2048).Format("UNKNOWN=%lldLL",(long long)A2Cal2M::UNKNOWN).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* A2Info */
static void G__setup_memvarA2Info(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Info));
   { A2Info *p; p=(A2Info*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,"Run Number");
   G__memvar_setup((void*)((long)(&p->runmode)-(long)(p)),105,0,0,-1,-1,-1,1,"runmode=",0,"Rum Mode");
   G__memvar_setup((void*)((long)(&p->isrunning)-(long)(p)),103,0,0,-1,-1,-1,1,"isrunning=",0,"1: running , 0: not running");
   G__memvar_setup((void*)((long)(&p->start_time)-(long)(p)),105,0,0,-1,-1,-1,1,"start_time=",0,"Start Time [UTC]");
   G__memvar_setup((void*)((long)(&p->end_time)-(long)(p)),105,0,0,-1,-1,-1,1,"end_time=",0,"End Time [UTC]");
   G__memvar_setup((void*)((long)(&p->nev_trg)-(long)(p)),105,0,0,-1,-1,-1,1,"nev_trg=",0,"Number of Trigger2 events  ");
   G__memvar_setup((void*)((long)(&p->nev_scl)-(long)(p)),105,0,0,-1,-1,-1,1,"nev_scl=",0,"Number of Sclar2 events");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* A2Scl */
static void G__setup_memvarA2Scl(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Scl));
   { A2Scl *p; p=(A2Scl*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,"RUN Number");
   G__memvar_setup((void*)((long)(&p->number)-(long)(p)),105,0,0,-1,-1,-1,1,"number=",0,"Event Number");
   G__memvar_setup((void*)((long)(&p->time)-(long)(p)),104,0,0,-1,-1,-1,1,"time[1]=",0,"CPU TIME");
   G__memvar_setup((void*)((long)(&p->scl0)-(long)(p)),104,0,0,-1,-1,-1,1,"scl0[16]=",0,"Scaler values of CAEN V260");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RawL1T */
static void G__setup_memvarRawL1T(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_RawL1T));
   { RawL1T *p; p=(RawL1T*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("NCOUNTERS=%lldLL",(long long)RawL1T::NCOUNTERS).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,"Run Number");
   G__memvar_setup((void*)((long)(&p->number)-(long)(p)),105,0,0,-1,-1,-1,1,"number=",0,"Event Number");
   G__memvar_setup((void*)((long)(&p->gnumber)-(long)(p)),105,0,0,-1,-1,-1,1,"gnumber=",0,"Glocal Event Number");
   G__memvar_setup((void*)((long)(&p->time)-(long)(p)),104,0,0,-1,-1,-1,1,"time[2]=",0,"Time [0]:sec, [1]:usec");
   G__memvar_setup((void*)((long)(&p->gpio2)-(long)(p)),104,0,0,-1,-1,-1,1,"gpio2[14]=",0,"Counter valses in LHCFL1T");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SclL1T */
static void G__setup_memvarSclL1T(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_SclL1T));
   { SclL1T *p; p=(SclL1T*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("NCOUNTERS=%lldLL",(long long)SclL1T::NCOUNTERS).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,"Run Number");
   G__memvar_setup((void*)((long)(&p->number)-(long)(p)),105,0,0,-1,-1,-1,1,"number=",0,"Event Number");
   G__memvar_setup((void*)((long)(&p->time)-(long)(p)),104,0,0,-1,-1,-1,1,"time[1]=",0,"Time [0]:sec");
   G__memvar_setup((void*)((long)(&p->bcounters)-(long)(p)),104,0,0,-1,-1,-1,1,"bcounters[20]=",0,"BCounter valses in LHCFL1T");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* GParam */
static void G__setup_memvarGParam(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_GParam));
   { GParam *p; p=(GParam*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,"Run Number");
   G__memvar_setup((void*)((long)(&p->number)-(long)(p)),105,0,0,-1,-1,-1,1,"number=",0,"Event number");
   G__memvar_setup((void*)((long)(&p->gnumber)-(long)(p)),105,0,0,-1,-1,-1,1,"gnumber=",0,"Grobal event number");
   G__memvar_setup((void*)((long)(&p->parami)-(long)(p)),105,0,0,-1,-1,-1,1,"parami[32]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->paramd)-(long)(p)),100,0,0,-1,-1,-1,1,"paramd[32]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* GParamD64 */
static void G__setup_memvarGParamD64(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_GParamD64));
   { GParamD64 *p; p=(GParamD64*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,"Run Number");
   G__memvar_setup((void*)((long)(&p->number)-(long)(p)),105,0,0,-1,-1,-1,1,"number=",0,"Event number");
   G__memvar_setup((void*)((long)(&p->gnumber)-(long)(p)),105,0,0,-1,-1,-1,1,"gnumber=",0,"Grobal event number");
   G__memvar_setup((void*)((long)(&p->paramd)-(long)(p)),100,0,0,-1,-1,-1,1,"paramd[64]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SPSAdamo */
static void G__setup_memvarSPSAdamo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_SPSAdamo));
   { SPSAdamo *p; p=(SPSAdamo*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("NSR=%lldLL",(long long)SPSAdamo::NSR).data(),0,"Number of status register words");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("NLAYER=%lldLL",(long long)SPSAdamo::NLAYER).data(),0,"Number of silicon XY layer");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("NXY=%lldLL",(long long)SPSAdamo::NXY).data(),0,"Number of silicon in 1 layer (X and Y)");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("NSTRIP=%lldLL",(long long)SPSAdamo::NSTRIP).data(),0,"Number of strip in one x or y layer.");
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,"Run Number");
   G__memvar_setup((void*)((long)(&p->number)-(long)(p)),105,0,0,-1,-1,-1,1,"number=",0,"Event Number");
   G__memvar_setup((void*)((long)(&p->gnumber)-(long)(p)),105,0,0,-1,-1,-1,1,"gnumber=",0,"Event Number");
   G__memvar_setup((void*)((long)(&p->valid)-(long)(p)),103,0,0,-1,-1,-1,1,"valid=",0,"Valid event or not ");
   G__memvar_setup((void*)((long)(&p->SR)-(long)(p)),104,0,0,-1,-1,-1,1,"SR[3]=",0,"Status Register (3 words)");
   G__memvar_setup((void*)((long)(&p->strip)-(long)(p)),100,0,0,-1,-1,-1,1,"strip[5][2][1024]=",0,"[layer][xy][channel]");
   G__memvar_setup((void*)((long)(&p->eventcounter)-(long)(p)),104,0,0,-1,-1,-1,1,"eventcounter=",0,"Event Counter Value");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RHICfSinglePar */
static void G__setup_memvarRHICfSinglePar(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_RHICfSinglePar));
   { RHICfSinglePar *p; p=(RHICfSinglePar*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fIsInfiducial)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fIsInfiducial=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsBeamCenter=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTower=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fId=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TLorentzVector),-1,-1,4,"fFourMomentum=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TVector2),-1,-1,4,"fPosition=",0,"Coordinate origin is the center of TS.");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TString),-1,-1,4,"fPid=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RHICfPhotonPair */
static void G__setup_memvarRHICfPhotonPair(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_RHICfPhotonPair));
   { RHICfPhotonPair *p; p=(RHICfPhotonPair*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fIsBeamCenter)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fIsBeamCenter=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPi0Type=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TLorentzVector),-1,-1,4,"fFourMomentum=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fInvarMass=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fNumOfPars=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fPhotonId[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* A1Rec1 */
static void G__setup_memvarA1Rec1(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Rec1));
   { A1Rec1 *p; p=(A1Rec1*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RHICfCollection */
static void G__setup_memvarRHICfCollection(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_RHICfCollection));
   { RHICfCollection *p; p=(RHICfCollection*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fIsPhotonPair)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fIsPhotonPair=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClonesArray),-1,-1,4,"fSinglePars=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClonesArray),-1,-1,4,"fPhotonPairs=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_A1Rec1),G__defined_typename("RHICfEventInfo"),-1,4,"fEventInfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fNumOfPars=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fNumOfPairs=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRunNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fEventNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TString),-1,-1,4,"fTriggerType=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fBunchId=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TString),-1,-1,4,"fRunType=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TString),-1,-1,4,"fEventQuality=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* A1Raw_pp2015 */
static void G__setup_memvarA1Raw_pp2015(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Raw_pp2015));
   { A1Raw_pp2015 *p; p=(A1Raw_pp2015*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_TIME=%lldLL",(long long)A1Raw_pp2015::c_N_TIME).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_ADC0=%lldLL",(long long)A1Raw_pp2015::c_N_ADC0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_ADC1=%lldLL",(long long)A1Raw_pp2015::c_N_ADC1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_ADC2=%lldLL",(long long)A1Raw_pp2015::c_N_ADC2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_ADC3=%lldLL",(long long)A1Raw_pp2015::c_N_ADC3).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_ADC4=%lldLL",(long long)A1Raw_pp2015::c_N_ADC4).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_CAD0=%lldLL",(long long)A1Raw_pp2015::c_N_CAD0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_CAD1=%lldLL",(long long)A1Raw_pp2015::c_N_CAD1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_TDC0=%lldLL",(long long)A1Raw_pp2015::c_N_TDC0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_SCL0=%lldLL",(long long)A1Raw_pp2015::c_N_SCL0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_GPI0=%lldLL",(long long)A1Raw_pp2015::c_N_GPI0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_GPI1=%lldLL",(long long)A1Raw_pp2015::c_N_GPI1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_SCIF=%lldLL",(long long)A1Raw_pp2015::c_N_SCIF).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,"Run Number");
   G__memvar_setup((void*)((long)(&p->number)-(long)(p)),105,0,0,-1,-1,-1,1,"number=",0,"Arm1 Event Number");
   G__memvar_setup((void*)((long)(&p->gnumber)-(long)(p)),105,0,0,-1,-1,-1,1,"gnumber=",0,"Global Event Number");
   G__memvar_setup((void*)((long)(&p->time)-(long)(p)),104,0,0,-1,-1,-1,1,"time[2]=",0,"Time [0]:sec,[1]:usec");
   G__memvar_setup((void*)((long)(&p->adc0)-(long)(p)),114,0,0,-1,-1,-1,1,"adc0[64]=",0,"ADC0 [64] For 20mm Cal. (16ch*2ranges*2events)");
   G__memvar_setup((void*)((long)(&p->adc1)-(long)(p)),114,0,0,-1,-1,-1,1,"adc1[64]=",0,"ADC1 [64] For 40mm Cal. (16ch*2ranges*2events)");
   G__memvar_setup((void*)((long)(&p->adc2)-(long)(p)),114,0,0,-1,-1,-1,1,"adc2[64]=",0,"ADC2 [64]  ADC2 [64] For FC, Laser Monitor, Noise check");
   G__memvar_setup((void*)((long)(&p->adc3)-(long)(p)),114,0,0,-1,-1,-1,1,"adc3[4]=",0,"ADC3 [4]  For Laser Monitor (L,R)");
   G__memvar_setup((void*)((long)(&p->cadc0)-(long)(p)),104,0,0,-1,-1,-1,1,"cadc0[5]=",0,"Counter value of ADC0 [5] ");
   G__memvar_setup((void*)((long)(&p->cadc1)-(long)(p)),104,0,0,-1,-1,-1,1,"cadc1[5]=",0,"Counter value of ADC1 [5]");
   G__memvar_setup((void*)((long)(&p->scifi)-(long)(p)),114,0,0,-1,-1,-1,1,"scifi[512]=",0,"Scifi [512] ");
   G__memvar_setup((void*)((long)(&p->tdc0)-(long)(p)),104,0,0,-1,-1,-1,1,"tdc0[256]=",0,"TDC0 [256] it independs on [c_N_TDC0] but should be >.   ");
   G__memvar_setup((void*)((long)(&p->scl0)-(long)(p)),104,0,0,-1,-1,-1,1,"scl0[16]=",0,"Scaler [16] ");
   G__memvar_setup((void*)((long)(&p->gpio0)-(long)(p)),104,0,0,-1,-1,-1,1,"gpio0[50]=",0,"GPIO [50] 2 Flags+15 Counter Values ");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Raw_pp2015cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("TIME=%lldLL",(long long)A1Raw_pp2015::TIME).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Raw_pp2015cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ADC0=%lldLL",(long long)A1Raw_pp2015::ADC0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Raw_pp2015cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ADC1=%lldLL",(long long)A1Raw_pp2015::ADC1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Raw_pp2015cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ADC2=%lldLL",(long long)A1Raw_pp2015::ADC2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Raw_pp2015cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ADC3=%lldLL",(long long)A1Raw_pp2015::ADC3).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Raw_pp2015cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ADC4=%lldLL",(long long)A1Raw_pp2015::ADC4).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Raw_pp2015cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("CADC0=%lldLL",(long long)A1Raw_pp2015::CADC0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Raw_pp2015cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("CADC1=%lldLL",(long long)A1Raw_pp2015::CADC1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Raw_pp2015cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("TDC0=%lldLL",(long long)A1Raw_pp2015::TDC0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Raw_pp2015cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("SCL0=%lldLL",(long long)A1Raw_pp2015::SCL0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Raw_pp2015cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("GPIO0=%lldLL",(long long)A1Raw_pp2015::GPIO0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Raw_pp2015cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("GPIO1=%lldLL",(long long)A1Raw_pp2015::GPIO1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Raw_pp2015cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("SCIFI=%lldLL",(long long)A1Raw_pp2015::SCIFI).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Raw_pp2015cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ALL=%lldLL",(long long)A1Raw_pp2015::ALL).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* A2Raw_pp2015 */
static void G__setup_memvarA2Raw_pp2015(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pp2015));
   { A2Raw_pp2015 *p; p=(A2Raw_pp2015*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_TIME=%lldLL",(long long)A2Raw_pp2015::c_N_TIME).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_ADC0=%lldLL",(long long)A2Raw_pp2015::c_N_ADC0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_ADC1=%lldLL",(long long)A2Raw_pp2015::c_N_ADC1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_ADC2=%lldLL",(long long)A2Raw_pp2015::c_N_ADC2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_ADC3=%lldLL",(long long)A2Raw_pp2015::c_N_ADC3).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_ADC4=%lldLL",(long long)A2Raw_pp2015::c_N_ADC4).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_CAD0=%lldLL",(long long)A2Raw_pp2015::c_N_CAD0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_CAD1=%lldLL",(long long)A2Raw_pp2015::c_N_CAD1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_TDC0=%lldLL",(long long)A2Raw_pp2015::c_N_TDC0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_SCL0=%lldLL",(long long)A2Raw_pp2015::c_N_SCL0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_GPI0=%lldLL",(long long)A2Raw_pp2015::c_N_GPI0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_GPI1=%lldLL",(long long)A2Raw_pp2015::c_N_GPI1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_ARM2=%lldLL",(long long)A2Raw_pp2015::c_N_ARM2).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,"Run Number");
   G__memvar_setup((void*)((long)(&p->number)-(long)(p)),105,0,0,-1,-1,-1,1,"number=",0,"Arm2 Event Number ");
   G__memvar_setup((void*)((long)(&p->gnumber)-(long)(p)),105,0,0,-1,-1,-1,1,"gnumber=",0,"Glocal Event Number");
   G__memvar_setup((void*)((long)(&p->time)-(long)(p)),104,0,0,-1,-1,-1,1,"time[2]=",0,"Time [0]:sec,[1]:usec");
   G__memvar_setup((void*)((long)(&p->adc0)-(long)(p)),114,0,0,-1,-1,-1,1,"adc0[64]=",0,"ADC0 [64] For 20mm Cal. (16ch*2ranges*2events)");
   G__memvar_setup((void*)((long)(&p->adc1)-(long)(p)),114,0,0,-1,-1,-1,1,"adc1[64]=",0,"ADC1 [64] For 40mm Cal. (16ch*2ranges*2events)");
   G__memvar_setup((void*)((long)(&p->adc2)-(long)(p)),114,0,0,-1,-1,-1,1,"adc2[64]=",0,"ADC2 [64] For FC, Laser Monitor, Noise check");
   G__memvar_setup((void*)((long)(&p->adc3)-(long)(p)),114,0,0,-1,-1,-1,1,"adc3[4]=",0,"ADC3 [4] For Laser Monitor (L,R)");
   G__memvar_setup((void*)((long)(&p->cadc0)-(long)(p)),104,0,0,-1,-1,-1,1,"cadc0[5]=",0,"Counter value of ADC0 [5] ");
   G__memvar_setup((void*)((long)(&p->cadc1)-(long)(p)),104,0,0,-1,-1,-1,1,"cadc1[5]=",0,"Counter value of ADC1 [5]");
   G__memvar_setup((void*)((long)(&p->tdc0)-(long)(p)),104,0,0,-1,-1,-1,1,"tdc0[256]=",0,"TDC0 [256] ");
   G__memvar_setup((void*)((long)(&p->scl0)-(long)(p)),104,0,0,-1,-1,-1,1,"scl0[16]=",0,"Scaler [16]");
   G__memvar_setup((void*)((long)(&p->gpio0)-(long)(p)),104,0,0,-1,-1,-1,1,"gpio0[50]=",0,"GPIO [50] 3 Flags+32 Counter Values ");
   G__memvar_setup((void*)((long)(&p->arm2)-(long)(p)),99,0,0,-1,-1,-1,1,"arm2[14280]=",0,"Silicon [14280] ");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pp2015cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("TIME=%lldLL",(long long)A2Raw_pp2015::TIME).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pp2015cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ADC0=%lldLL",(long long)A2Raw_pp2015::ADC0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pp2015cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ADC1=%lldLL",(long long)A2Raw_pp2015::ADC1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pp2015cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ADC2=%lldLL",(long long)A2Raw_pp2015::ADC2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pp2015cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ADC3=%lldLL",(long long)A2Raw_pp2015::ADC3).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pp2015cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ADC4=%lldLL",(long long)A2Raw_pp2015::ADC4).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pp2015cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("CADC0=%lldLL",(long long)A2Raw_pp2015::CADC0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pp2015cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("CADC1=%lldLL",(long long)A2Raw_pp2015::CADC1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pp2015cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("TDC0=%lldLL",(long long)A2Raw_pp2015::TDC0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pp2015cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("SCL0=%lldLL",(long long)A2Raw_pp2015::SCL0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pp2015cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("GPIO0=%lldLL",(long long)A2Raw_pp2015::GPIO0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pp2015cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("GPIO1=%lldLL",(long long)A2Raw_pp2015::GPIO1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pp2015cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ARM2=%lldLL",(long long)A2Raw_pp2015::ARM2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pp2015cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ALL=%lldLL",(long long)A2Raw_pp2015::ALL).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* A1Scl_pp2015 */
static void G__setup_memvarA1Scl_pp2015(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Scl_pp2015));
   { A1Scl_pp2015 *p; p=(A1Scl_pp2015*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_A1_PTIM=%lldLL",(long long)A1Scl_pp2015::c_N_A1_PTIM).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_A1_PSCL=%lldLL",(long long)A1Scl_pp2015::c_N_A1_PSCL).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_A1_RAMC=%lldLL",(long long)A1Scl_pp2015::c_N_A1_RAMC).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,"RUN Number");
   G__memvar_setup((void*)((long)(&p->number)-(long)(p)),105,0,0,-1,-1,-1,1,"number=",0,"Event Number");
   G__memvar_setup((void*)((long)(&p->time)-(long)(p)),104,0,0,-1,-1,-1,1,"time[2]=",0,"CPU TIME");
   G__memvar_setup((void*)((long)(&p->scl0)-(long)(p)),104,0,0,-1,-1,-1,1,"scl0[16]=",0,"Scaler values of CAEN V260");
   G__memvar_setup((void*)((long)(&p->ramc)-(long)(p)),104,0,0,-1,-1,-1,1,"ramc[256]=",0,"RAM Counter values of CAEN V1495 ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* A2Scl_pp2015 */
static void G__setup_memvarA2Scl_pp2015(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Scl_pp2015));
   { A2Scl_pp2015 *p; p=(A2Scl_pp2015*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_A2_PTIM=%lldLL",(long long)A2Scl_pp2015::c_N_A2_PTIM).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_A2_PSCL=%lldLL",(long long)A2Scl_pp2015::c_N_A2_PSCL).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_A2_RAMC=%lldLL",(long long)A2Scl_pp2015::c_N_A2_RAMC).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,"RUN Number");
   G__memvar_setup((void*)((long)(&p->number)-(long)(p)),105,0,0,-1,-1,-1,1,"number=",0,"Event Number");
   G__memvar_setup((void*)((long)(&p->time)-(long)(p)),104,0,0,-1,-1,-1,1,"time[2]=",0,"CPU TIME");
   G__memvar_setup((void*)((long)(&p->scl0)-(long)(p)),104,0,0,-1,-1,-1,1,"scl0[16]=",0,"Scaler values of CAEN V260");
   G__memvar_setup((void*)((long)(&p->ramc)-(long)(p)),104,0,0,-1,-1,-1,1,"ramc[256]=",0,"RAM Counter values of CAEN V1495 ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* A2Raw_pPb2013 */
static void G__setup_memvarA2Raw_pPb2013(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2013));
   { A2Raw_pPb2013 *p; p=(A2Raw_pPb2013*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_TIME=%lldLL",(long long)A2Raw_pPb2013::c_N_TIME).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_ADC0=%lldLL",(long long)A2Raw_pPb2013::c_N_ADC0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_ADC1=%lldLL",(long long)A2Raw_pPb2013::c_N_ADC1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_ADC2=%lldLL",(long long)A2Raw_pPb2013::c_N_ADC2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_ADC3=%lldLL",(long long)A2Raw_pPb2013::c_N_ADC3).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_ADC4=%lldLL",(long long)A2Raw_pPb2013::c_N_ADC4).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_CAD0=%lldLL",(long long)A2Raw_pPb2013::c_N_CAD0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_CAD1=%lldLL",(long long)A2Raw_pPb2013::c_N_CAD1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_TDC0=%lldLL",(long long)A2Raw_pPb2013::c_N_TDC0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_SCL0=%lldLL",(long long)A2Raw_pPb2013::c_N_SCL0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_GPI0=%lldLL",(long long)A2Raw_pPb2013::c_N_GPI0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_GPI1=%lldLL",(long long)A2Raw_pPb2013::c_N_GPI1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_ARM2=%lldLL",(long long)A2Raw_pPb2013::c_N_ARM2).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,"Run Number");
   G__memvar_setup((void*)((long)(&p->number)-(long)(p)),105,0,0,-1,-1,-1,1,"number=",0,"Arm2 Event Number ");
   G__memvar_setup((void*)((long)(&p->gnumber)-(long)(p)),105,0,0,-1,-1,-1,1,"gnumber=",0,"Glocal Event Number");
   G__memvar_setup((void*)((long)(&p->time)-(long)(p)),104,0,0,-1,-1,-1,1,"time[2]=",0,"Time [0]:sec,[1]:usec");
   G__memvar_setup((void*)((long)(&p->adc0)-(long)(p)),114,0,0,-1,-1,-1,1,"adc0[64]=",0,"ADC0 [64] For 20mm Cal. (16ch*2ranges*2events)");
   G__memvar_setup((void*)((long)(&p->adc1)-(long)(p)),114,0,0,-1,-1,-1,1,"adc1[64]=",0,"ADC1 [64] For 40mm Cal. (16ch*2ranges*2events)");
   G__memvar_setup((void*)((long)(&p->adc2)-(long)(p)),114,0,0,-1,-1,-1,1,"adc2[64]=",0,"ADC2 [64] For FC, Laser, Noise check");
   G__memvar_setup((void*)((long)(&p->adc3)-(long)(p)),114,0,0,-1,-1,-1,1,"adc3=",0,"ADC3 [0] no use ");
   G__memvar_setup((void*)((long)(&p->adc4)-(long)(p)),114,0,0,-1,-1,-1,1,"adc4=",0,"ADC4 [0] no use");
   G__memvar_setup((void*)((long)(&p->cadc0)-(long)(p)),104,0,0,-1,-1,-1,1,"cadc0[5]=",0,"Counter value of ADC0 [5] ");
   G__memvar_setup((void*)((long)(&p->cadc1)-(long)(p)),104,0,0,-1,-1,-1,1,"cadc1[5]=",0,"Counter value of ADC1 [5]");
   G__memvar_setup((void*)((long)(&p->tdc0)-(long)(p)),104,0,0,-1,-1,-1,1,"tdc0[256]=",0,"TDC0 [256] ");
   G__memvar_setup((void*)((long)(&p->scl0)-(long)(p)),104,0,0,-1,-1,-1,1,"scl0[16]=",0,"Scaler [16]");
   G__memvar_setup((void*)((long)(&p->gpio0)-(long)(p)),104,0,0,-1,-1,-1,1,"gpio0[17]=",0,"GPIO [17] 2 Flags+15 Counter Values ");
   G__memvar_setup((void*)((long)(&p->gpio1)-(long)(p)),104,0,0,-1,-1,-1,1,"gpio1[27]=",0,"GPIO [27] 1 Flags+26 counter Values");
   G__memvar_setup((void*)((long)(&p->arm2)-(long)(p)),99,0,0,-1,-1,-1,1,"arm2[14280]=",0,"Silicon [14280] ");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2013cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("TIME=%lldLL",(long long)A2Raw_pPb2013::TIME).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2013cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ADC0=%lldLL",(long long)A2Raw_pPb2013::ADC0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2013cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ADC1=%lldLL",(long long)A2Raw_pPb2013::ADC1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2013cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ADC2=%lldLL",(long long)A2Raw_pPb2013::ADC2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2013cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ADC3=%lldLL",(long long)A2Raw_pPb2013::ADC3).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2013cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ADC4=%lldLL",(long long)A2Raw_pPb2013::ADC4).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2013cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("CADC0=%lldLL",(long long)A2Raw_pPb2013::CADC0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2013cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("CADC1=%lldLL",(long long)A2Raw_pPb2013::CADC1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2013cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("TDC0=%lldLL",(long long)A2Raw_pPb2013::TDC0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2013cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("SCL0=%lldLL",(long long)A2Raw_pPb2013::SCL0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2013cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("GPIO0=%lldLL",(long long)A2Raw_pPb2013::GPIO0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2013cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("GPIO1=%lldLL",(long long)A2Raw_pPb2013::GPIO1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2013cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ARM2=%lldLL",(long long)A2Raw_pPb2013::ARM2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2013cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ALL=%lldLL",(long long)A2Raw_pPb2013::ALL).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* A2Raw_pPb2016 */
static void G__setup_memvarA2Raw_pPb2016(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2016));
   { A2Raw_pPb2016 *p; p=(A2Raw_pPb2016*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_TIME=%lldLL",(long long)A2Raw_pPb2016::c_N_TIME).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_ADC0=%lldLL",(long long)A2Raw_pPb2016::c_N_ADC0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_ADC1=%lldLL",(long long)A2Raw_pPb2016::c_N_ADC1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_ADC2=%lldLL",(long long)A2Raw_pPb2016::c_N_ADC2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_ADC3=%lldLL",(long long)A2Raw_pPb2016::c_N_ADC3).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_ADC4=%lldLL",(long long)A2Raw_pPb2016::c_N_ADC4).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_CAD0=%lldLL",(long long)A2Raw_pPb2016::c_N_CAD0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_CAD1=%lldLL",(long long)A2Raw_pPb2016::c_N_CAD1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_TDC0=%lldLL",(long long)A2Raw_pPb2016::c_N_TDC0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_SCL0=%lldLL",(long long)A2Raw_pPb2016::c_N_SCL0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_GPI0=%lldLL",(long long)A2Raw_pPb2016::c_N_GPI0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_GPI1=%lldLL",(long long)A2Raw_pPb2016::c_N_GPI1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_ARM2=%lldLL",(long long)A2Raw_pPb2016::c_N_ARM2).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,"Run Number");
   G__memvar_setup((void*)((long)(&p->number)-(long)(p)),105,0,0,-1,-1,-1,1,"number=",0,"Arm2 Event Number ");
   G__memvar_setup((void*)((long)(&p->gnumber)-(long)(p)),105,0,0,-1,-1,-1,1,"gnumber=",0,"Glocal Event Number");
   G__memvar_setup((void*)((long)(&p->time)-(long)(p)),104,0,0,-1,-1,-1,1,"time[2]=",0,"Time [0]:sec,[1]:usec");
   G__memvar_setup((void*)((long)(&p->adc0)-(long)(p)),114,0,0,-1,-1,-1,1,"adc0[64]=",0,"ADC0 [64] For 20mm Cal. (16ch*2ranges*2events)");
   G__memvar_setup((void*)((long)(&p->adc1)-(long)(p)),114,0,0,-1,-1,-1,1,"adc1[64]=",0,"ADC1 [64] For 40mm Cal. (16ch*2ranges*2events)");
   G__memvar_setup((void*)((long)(&p->adc2)-(long)(p)),114,0,0,-1,-1,-1,1,"adc2[64]=",0,"ADC2 [64] For FC, Laser, Noise check");
   G__memvar_setup((void*)((long)(&p->adc3)-(long)(p)),114,0,0,-1,-1,-1,1,"adc3[4]=",0,"ADC3 [0] no use ");
   G__memvar_setup((void*)((long)(&p->adc4)-(long)(p)),114,0,0,-1,-1,-1,1,"adc4=",0,"ADC4 [0] no use");
   G__memvar_setup((void*)((long)(&p->cadc0)-(long)(p)),104,0,0,-1,-1,-1,1,"cadc0[5]=",0,"Counter value of ADC0 [5] ");
   G__memvar_setup((void*)((long)(&p->cadc1)-(long)(p)),104,0,0,-1,-1,-1,1,"cadc1[5]=",0,"Counter value of ADC1 [5]");
   G__memvar_setup((void*)((long)(&p->tdc0)-(long)(p)),104,0,0,-1,-1,-1,1,"tdc0[256]=",0,"TDC0 [256] ");
   G__memvar_setup((void*)((long)(&p->scl0)-(long)(p)),104,0,0,-1,-1,-1,1,"scl0[16]=",0,"Scaler [16]");
   G__memvar_setup((void*)((long)(&p->gpio0)-(long)(p)),104,0,0,-1,-1,-1,1,"gpio0[17]=",0,"GPIO [17] 2 Flags+15 Counter Values ");
   G__memvar_setup((void*)((long)(&p->gpio1)-(long)(p)),104,0,0,-1,-1,-1,1,"gpio1[27]=",0,"GPIO [27] 1 Flags+26 counter Values");
   G__memvar_setup((void*)((long)(&p->arm2)-(long)(p)),99,0,0,-1,-1,-1,1,"arm2[14280]=",0,"Silicon [14280] ");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2016cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("TIME=%lldLL",(long long)A2Raw_pPb2016::TIME).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2016cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ADC0=%lldLL",(long long)A2Raw_pPb2016::ADC0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2016cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ADC1=%lldLL",(long long)A2Raw_pPb2016::ADC1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2016cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ADC2=%lldLL",(long long)A2Raw_pPb2016::ADC2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2016cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ADC3=%lldLL",(long long)A2Raw_pPb2016::ADC3).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2016cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ADC4=%lldLL",(long long)A2Raw_pPb2016::ADC4).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2016cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("CADC0=%lldLL",(long long)A2Raw_pPb2016::CADC0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2016cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("CADC1=%lldLL",(long long)A2Raw_pPb2016::CADC1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2016cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("TDC0=%lldLL",(long long)A2Raw_pPb2016::TDC0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2016cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("SCL0=%lldLL",(long long)A2Raw_pPb2016::SCL0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2016cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("GPIO0=%lldLL",(long long)A2Raw_pPb2016::GPIO0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2016cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("GPIO1=%lldLL",(long long)A2Raw_pPb2016::GPIO1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2016cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ARM2=%lldLL",(long long)A2Raw_pPb2016::ARM2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2016cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ALL=%lldLL",(long long)A2Raw_pPb2016::ALL).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RHICfRaw_Op2017 */
static void G__setup_memvarRHICfRaw_Op2017(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_RHICfRaw_Op2017));
   { RHICfRaw_Op2017 *p; p=(RHICfRaw_Op2017*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_TIME=%lldLL",(long long)RHICfRaw_Op2017::c_N_TIME).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_TRGM=%lldLL",(long long)RHICfRaw_Op2017::c_N_TRGM).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_ADC0=%lldLL",(long long)RHICfRaw_Op2017::c_N_ADC0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_ADC1=%lldLL",(long long)RHICfRaw_Op2017::c_N_ADC1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_ADC2=%lldLL",(long long)RHICfRaw_Op2017::c_N_ADC2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_ADC3=%lldLL",(long long)RHICfRaw_Op2017::c_N_ADC3).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_ADC4=%lldLL",(long long)RHICfRaw_Op2017::c_N_ADC4).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_CAD0=%lldLL",(long long)RHICfRaw_Op2017::c_N_CAD0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_CAD1=%lldLL",(long long)RHICfRaw_Op2017::c_N_CAD1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_TDC0=%lldLL",(long long)RHICfRaw_Op2017::c_N_TDC0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_SCL0=%lldLL",(long long)RHICfRaw_Op2017::c_N_SCL0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_GPI0=%lldLL",(long long)RHICfRaw_Op2017::c_N_GPI0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_GPI1=%lldLL",(long long)RHICfRaw_Op2017::c_N_GPI1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_SCIF=%lldLL",(long long)RHICfRaw_Op2017::c_N_SCIF).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,"Run Number");
   G__memvar_setup((void*)((long)(&p->number)-(long)(p)),105,0,0,-1,-1,-1,1,"number=",0,"Arm1 Event Number");
   G__memvar_setup((void*)((long)(&p->gnumber)-(long)(p)),105,0,0,-1,-1,-1,1,"gnumber=",0,"Global Event Number");
   G__memvar_setup((void*)((long)(&p->time)-(long)(p)),104,0,0,-1,-1,-1,1,"time[2]=",0,"Time [0]:sec,[1]:usec");
   G__memvar_setup((void*)((long)(&p->trgm)-(long)(p)),104,0,0,-1,-1,-1,1,"trgm[1]=",0,"TRGM [0] token + trigger flag");
   G__memvar_setup((void*)((long)(&p->adc0)-(long)(p)),114,0,0,-1,-1,-1,1,"adc0[64]=",0,"ADC0 [64] For 20mm Cal. (16ch*2ranges*2events)");
   G__memvar_setup((void*)((long)(&p->adc1)-(long)(p)),114,0,0,-1,-1,-1,1,"adc1[64]=",0,"ADC1 [64] For 40mm Cal. (16ch*2ranges*2events)");
   G__memvar_setup((void*)((long)(&p->adc2)-(long)(p)),114,0,0,-1,-1,-1,1,"adc2[64]=",0,"ADC2 [64]  ADC2 [64] For FC, Laser Monitor, Noise check");
   G__memvar_setup((void*)((long)(&p->cadc0)-(long)(p)),104,0,0,-1,-1,-1,1,"cadc0[5]=",0,"Counter value of ADC0 [5] ");
   G__memvar_setup((void*)((long)(&p->cadc1)-(long)(p)),104,0,0,-1,-1,-1,1,"cadc1[5]=",0,"Counter value of ADC1 [5]");
   G__memvar_setup((void*)((long)(&p->scifi)-(long)(p)),114,0,0,-1,-1,-1,1,"scifi[512]=",0,"Scifi [512] ");
   G__memvar_setup((void*)((long)(&p->tdc0)-(long)(p)),104,0,0,-1,-1,-1,1,"tdc0[256]=",0,"TDC0 [256] it independs on [c_N_TDC0] but should be >.   ");
   G__memvar_setup((void*)((long)(&p->gpio0)-(long)(p)),104,0,0,-1,-1,-1,1,"gpio0[19]=",0,"GPIO [19] 2 Flags+17 Counter Values ");
   G__memvar_setup((void*)((long)(&p->gpio1)-(long)(p)),104,0,0,-1,-1,-1,1,"gpio1[17]=",0,"GPIO [17] 1 Flags+26 counter Values");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_RHICfRaw_Op2017cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("TIME=%lldLL",(long long)RHICfRaw_Op2017::TIME).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_RHICfRaw_Op2017cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ADC0=%lldLL",(long long)RHICfRaw_Op2017::ADC0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_RHICfRaw_Op2017cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ADC1=%lldLL",(long long)RHICfRaw_Op2017::ADC1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_RHICfRaw_Op2017cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ADC2=%lldLL",(long long)RHICfRaw_Op2017::ADC2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_RHICfRaw_Op2017cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ADC3=%lldLL",(long long)RHICfRaw_Op2017::ADC3).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_RHICfRaw_Op2017cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ADC4=%lldLL",(long long)RHICfRaw_Op2017::ADC4).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_RHICfRaw_Op2017cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("CADC0=%lldLL",(long long)RHICfRaw_Op2017::CADC0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_RHICfRaw_Op2017cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("CADC1=%lldLL",(long long)RHICfRaw_Op2017::CADC1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_RHICfRaw_Op2017cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("TDC0=%lldLL",(long long)RHICfRaw_Op2017::TDC0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_RHICfRaw_Op2017cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("SCL0=%lldLL",(long long)RHICfRaw_Op2017::SCL0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_RHICfRaw_Op2017cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("GPIO0=%lldLL",(long long)RHICfRaw_Op2017::GPIO0).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_RHICfRaw_Op2017cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("GPIO1=%lldLL",(long long)RHICfRaw_Op2017::GPIO1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_RHICfRaw_Op2017cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("SCIFI=%lldLL",(long long)RHICfRaw_Op2017::SCIFI).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_RHICfRaw_Op2017cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("TRGM=%lldLL",(long long)RHICfRaw_Op2017::TRGM).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_RHICfRaw_Op2017cLcLbank),-1,-2,1,G__FastAllocString(2048).Format("ALL=%lldLL",(long long)RHICfRaw_Op2017::ALL).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* LHCfEvent */
static void G__setup_memvarLHCfEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_LHCfEvent));
   { LHCfEvent *p; p=(LHCfEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,"Run Number");
   G__memvar_setup((void*)((long)(&p->gnumber)-(long)(p)),105,0,0,-1,-1,-1,1,"gnumber=",0,"Global Event Number ");
   G__memvar_setup((void*)((long)(&p->a1number)-(long)(p)),105,0,0,-1,-1,-1,1,"a1number=",0,"Arm#1  Event Number");
   G__memvar_setup((void*)((long)(&p->a2number)-(long)(p)),105,0,0,-1,-1,-1,1,"a2number=",0,"Arm#2  Event Number");
   G__memvar_setup((void*)((long)(&p->a1flag)-(long)(p)),104,0,0,-1,-1,-1,1,"a1flag[2]=",0,"Arm#1  Event Flag [0]:GPI0[0] [1]:GPI1[0]");
   G__memvar_setup((void*)((long)(&p->a2flag)-(long)(p)),104,0,0,-1,-1,-1,1,"a2flag[2]=",0,"Arm#1  Event Flag [0]:GPI0[0] [1]:GPI1[0]");
   G__memvar_setup((void*)((long)(&p->ifile)-(long)(p)),105,0,0,-1,-1,-1,1,"ifile=",0,"File Identification Number");
   G__memvar_setup((void*)((long)(&p->tnumber)-(long)(p)),105,0,0,-1,-1,-1,1,"tnumber=",0,"Event Number in the file");
   G__memvar_setup((void*)((long)(&p->tag)-(long)(p)),104,0,0,-1,-1,-1,1,"tag=",0,"Tags for the event type  ");
   G__memvar_setup((void*)((long)(&p->tmp)-(long)(p)),105,0,0,-1,-1,-1,1,"tmp=",0,"Temporal Number, each user can use freely");
   G__memvar_setup((void*)((long)(&p->objarray)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TObjArray),-1,-1,1,"objarray=",0,"Data Stock in the Event");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* LHCfDef */
static void G__setup_memvarLHCfDef(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_LHCfDef));
   {
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_LHCfDefcLcLDef_TOWER),-1,-2,1,G__FastAllocString(2048).Format("SMALL_TOWER=%lldLL",(long long)LHCfDef::SMALL_TOWER).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_LHCfDefcLcLDef_TOWER),-1,-2,1,G__FastAllocString(2048).Format("LARGE_TOWER=%lldLL",(long long)LHCfDef::LARGE_TOWER).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_LHCfDefcLcLDef_TOWER),-1,-2,1,G__FastAllocString(2048).Format("N_TOWER=%lldLL",(long long)LHCfDef::N_TOWER).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("N_SCIN_LAYER=%lldLL",(long long)LHCfDef::N_SCIN_LAYER).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("N_SI_LAYER=%lldLL",(long long)LHCfDef::N_SI_LAYER).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("N_SI_VIEW=%lldLL",(long long)LHCfDef::N_SI_VIEW).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("N_SI_SAMPLE=%lldLL",(long long)LHCfDef::N_SI_SAMPLE).data(),0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* A1Cal2M */
static void G__setup_memvarA1Cal2M(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2M));
   { A1Cal2M *p; p=(A1Cal2M*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->tdc0)-(long)(p)),100,0,0,-1,-1,-1,1,"tdc0[12][16]=",0,"[channel][hit]");
   G__memvar_setup((void*)((long)(&p->tdc0flag)-(long)(p)),99,0,0,-1,-1,-1,1,"tdc0flag[12][16]=",0,"[channel][hit] flag(-1:nodata 0x1:Phase,0x2:Valid)");
   G__memvar_setup((void*)((long)(&p->scl0)-(long)(p)),100,0,0,-1,-1,-1,1,"scl0[16]=",0,"[scaler data]");
   G__memvar_setup((void*)((long)(&p->counter)-(long)(p)),104,0,0,-1,-1,-1,1,"counter[35]=",0,"[counter data on FPGA]");
   G__memvar_setup((void*)((long)(&p->fifocounter)-(long)(p)),104,0,0,-1,-1,-1,1,"fifocounter[2][4]=",0,"[channel][hit] FIFO in LHCFCOUNTER");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2McLcLBUNCHCONFFLAG),-1,-2,1,G__FastAllocString(2048).Format("CROSSING=%lldLL",(long long)A1Cal2M::CROSSING).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2McLcLBUNCHCONFFLAG),-1,-2,1,G__FastAllocString(2048).Format("DISPLACED=%lldLL",(long long)A1Cal2M::DISPLACED).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2McLcLBUNCHCONFFLAG),-1,-2,1,G__FastAllocString(2048).Format("NONCROSSING=%lldLL",(long long)A1Cal2M::NONCROSSING).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2McLcLBUNCHCONFFLAG),-1,-2,1,G__FastAllocString(2048).Format("NONCROSSING2=%lldLL",(long long)A1Cal2M::NONCROSSING2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2McLcLBUNCHCONFFLAG),-1,-2,1,G__FastAllocString(2048).Format("UNKNOWN=%lldLL",(long long)A1Cal2M::UNKNOWN).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* A1Rec2 */
static void G__setup_memvarA1Rec2(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Rec2));
   { A1Rec2 *p; p=(A1Rec2*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Rec2cLcLBITMAP_FLAGANALYSIS),-1,-2,1,G__FastAllocString(2048).Format("HARDWARETRIGGER=%lldLL",(long long)A1Rec2::HARDWARETRIGGER).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Rec2cLcLBITMAP_FLAGANALYSIS),-1,-2,1,G__FastAllocString(2048).Format("SOFTWARETRIGGER=%lldLL",(long long)A1Rec2::SOFTWARETRIGGER).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Rec2cLcLBITMAP_FLAGANALYSIS),-1,-2,1,G__FastAllocString(2048).Format("CRITERIA1=%lldLL",(long long)A1Rec2::CRITERIA1).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Rec2cLcLBITMAP_FLAGANALYSIS),-1,-2,1,G__FastAllocString(2048).Format("CRITERIA2=%lldLL",(long long)A1Rec2::CRITERIA2).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* A2Rec1 */
static void G__setup_memvarA2Rec1(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Rec1));
   { A2Rec1 *p; p=(A2Rec1*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* A2Rec2 */
static void G__setup_memvarA2Rec2(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Rec2));
   { A2Rec2 *p; p=(A2Rec2*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->posmh)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"posmh=",0,"For Multi-Hit");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* A2Rec3 */
static void G__setup_memvarA2Rec3(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Rec3));
   { A2Rec3 *p; p=(A2Rec3*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RHICfScl_Op2017 */
static void G__setup_memvarRHICfScl_Op2017(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_RHICfScl_Op2017));
   { RHICfScl_Op2017 *p; p=(RHICfScl_Op2017*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_A1_PTIM=%lldLL",(long long)RHICfScl_Op2017::c_N_A1_PTIM).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_A1_PGP0=%lldLL",(long long)RHICfScl_Op2017::c_N_A1_PGP0).data(),0,"DWORD ");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("c_N_A1_PGP1=%lldLL",(long long)RHICfScl_Op2017::c_N_A1_PGP1).data(),0,"DWORD ");
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,"RUN Number");
   G__memvar_setup((void*)((long)(&p->number)-(long)(p)),105,0,0,-1,-1,-1,1,"number=",0,"Event Number");
   G__memvar_setup((void*)((long)(&p->time)-(long)(p)),104,0,0,-1,-1,-1,1,"time[2]=",0,"CPU TIME");
   G__memvar_setup((void*)((long)(&p->logic_counter)-(long)(p)),104,0,0,-1,-1,-1,1,"logic_counter[12]=",0,"Counters in RHICF_LOGIC");
   G__memvar_setup((void*)((long)(&p->counter)-(long)(p)),104,0,0,-1,-1,-1,1,"counter[120]=",0,"BRAM Counter values ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* A1Cal1AccumHist */
static void G__setup_memvarA1Cal1AccumHist(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1AccumHist));
   { A1Cal1AccumHist *p; p=(A1Cal1AccumHist*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->hist_cal)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TH1F),-1,-1,1,"hist_cal[2][16][2]=",0,"-> Histograms for Scin. [Tower:Layer:Range]");
   G__memvar_setup((void*)((long)(&p->hist_noise)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TH1F),-1,-1,1,"hist_noise[8]=",0,"-> Histograms for Noise. [Channel]");
   G__memvar_setup((void*)((long)(&p->hist_fc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TH1F),-1,-1,1,"hist_fc[2][4]=",0,"-> Histograms for F.C.'s [Arm(arm1-0,arm2-1):Channel]");
   G__memvar_setup((void*)((long)(&p->hist_laser)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TH1F),-1,-1,1,"hist_laser[2]=",0,"-> Histograms for Laser Monitor PMT. [Channel]");
   G__memvar_setup((void*)((long)(&p->haccum_scifi)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TH1F),-1,-1,1,"haccum_scifi[2][4][2]=",0,"-> Histograms for Accumulate [Tower:Layer:XY] ");
   G__memvar_setup((void*)((long)(&p->hist_scifi)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TH1F),-1,-1,1,"hist_scifi[2][4][2]=",0,"-> Histograms for typical SciFi channels in each layer. ");
   G__memvar_setup((void*)((long)(&p->hist_flag)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TH1F),-1,-1,1,"hist_flag[3]=",0,"-> Accumulate of Flag values  ");
   G__memvar_setup((void*)((long)(&p->hist_tdc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TH1F),-1,-1,1,"hist_tdc[7]=",0,"-> Histograms for TDC");
   G__memvar_setup((void*)((long)(&p->hist_scl)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TH1F),-1,-1,1,"hist_scl[3]=",0,"-> Histograms for Scaler");
   G__memvar_setup((void*)((long)(&p->hist_nbin)-(long)(p)),105,0,0,-1,-1,-1,1,"hist_nbin=",0,"number of bins of histgrams for ADC values. [210]");
   G__memvar_setup((void*)((long)(&p->hist_binmin)-(long)(p)),105,0,0,-1,-1,-1,1,"hist_binmin=",0,"minimum value of histogram bin for ADC values [-104]");
   G__memvar_setup((void*)((long)(&p->hist_binmax)-(long)(p)),105,0,0,-1,-1,-1,1,"hist_binmax=",0,"maximum value of histogram bin for ADC values [4096]");
   G__memvar_setup((void*)((long)(&p->hscifi_nbin)-(long)(p)),105,0,0,-1,-1,-1,1,"hscifi_nbin=",0,"number of bins of histograms for typical Scifi channel [500]");
   G__memvar_setup((void*)((long)(&p->hscifi_binmin)-(long)(p)),105,0,0,-1,-1,-1,1,"hscifi_binmin=",0,"minimum value of histogram bin for typical Scifi channel [-4500]");
   G__memvar_setup((void*)((long)(&p->hscifi_binmax)-(long)(p)),105,0,0,-1,-1,-1,1,"hscifi_binmax=",0,"maximum value of histogram bin for typical Scifi channel [-4500]");
   G__memvar_setup((void*)((long)(&p->hscifi_channel)-(long)(p)),105,0,0,-1,-1,-1,1,"hscifi_channel=",0,"channel filled value to histogram [10]");
   G__memvar_setup((void*)((long)(&p->c_cal0)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TCanvas),-1,-1,1,"c_cal0=",0,"! Canvas for the scintillators in 20mm cal. ");
   G__memvar_setup((void*)((long)(&p->c_cal1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TCanvas),-1,-1,1,"c_cal1=",0,"! Canvas for the scintillators in 40mm cal. ");
   G__memvar_setup((void*)((long)(&p->c_adcs)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TCanvas),-1,-1,1,"c_adcs=",0,"! Canvsa for the other ADCs. Noise,Laser,FCs");
   G__memvar_setup((void*)((long)(&p->c_flag)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TCanvas),-1,-1,1,"c_flag=",0,"! Canvas for the flags.");
   G__memvar_setup((void*)((long)(&p->c_tdc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TCanvas),-1,-1,1,"c_tdc=",0,"! Canvas for TDC.  ");
   G__memvar_setup((void*)((long)(&p->c_scifi)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TCanvas),-1,-1,1,"c_scifi=",0,"! Canvas for SciFi.");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1AccumHistcLcLDATA_VERSION),-1,-2,1,G__FastAllocString(2048).Format("VERSION_PP2010=%lldLL",(long long)A1Cal1AccumHist::VERSION_PP2010).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1AccumHistcLcLDATA_VERSION),-1,-2,1,G__FastAllocString(2048).Format("VERSION_PP2015=%lldLL",(long long)A1Cal1AccumHist::VERSION_PP2015).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1AccumHistcLcLDATA_VERSION),-1,-2,1,G__FastAllocString(2048).Format("VERSION_RHICF_OP2017=%lldLL",(long long)A1Cal1AccumHist::VERSION_RHICF_OP2017).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1AccumHistcLcLDATA_VERSION),-1,-2,1,G__FastAllocString(2048).Format("VERSION_UNKNOW=%lldLL",(long long)A1Cal1AccumHist::VERSION_UNKNOW).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->f_DataVersion)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1AccumHistcLcLDATA_VERSION),-1,-1,1,"f_DataVersion=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-2,4,"icall=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"DEFAULT_hist_nbin=210LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"DEFAULT_hist_binmin=-104LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"DEFAULT_hist_binmax=4096LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"DEFAULT_hscifi_nbin=500LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"DEFAULT_hscifi_binmin=-4500LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"DEFAULT_hscifi_binmax=65500LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"DEFAULT_hscifi_channel=10LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* A2Cal1AccumHist */
static void G__setup_memvarA2Cal1AccumHist(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1AccumHist));
   { A2Cal1AccumHist *p; p=(A2Cal1AccumHist*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->hist_cal)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TH1F),-1,-1,1,"hist_cal[2][16][2]=",0,"-> Histograms for Scin. [Tower:Layer:Range]");
   G__memvar_setup((void*)((long)(&p->hist_noise)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TH1F),-1,-1,1,"hist_noise[8]=",0,"-> Histograms for Noise. [Channel]");
   G__memvar_setup((void*)((long)(&p->hist_fc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TH1F),-1,-1,1,"hist_fc[2][4]=",0,"-> Histograms for F.C.'s [Arm(arm1-0,arm2-1):Channel]");
   G__memvar_setup((void*)((long)(&p->hist_laser)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TH1F),-1,-1,1,"hist_laser[2]=",0,"-> Histograms for Laser Monitor PMT. [Channel]");
   G__memvar_setup((void*)((long)(&p->haccum_silicon)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TH1F),-1,-1,1,"haccum_silicon[4][2][3]=",0,"-> Histograms for Accumulate [Layer:XY:Sample] ");
   G__memvar_setup((void*)((long)(&p->hist_silicon)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TH1F),-1,-1,1,"hist_silicon[4][2][3]=",0,"-> Histograms for a typical silicon strip in each layer. ");
   G__memvar_setup((void*)((long)(&p->hist_flag)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TH1F),-1,-1,1,"hist_flag[3]=",0,"-> Accumulate of Flag values ");
   G__memvar_setup((void*)((long)(&p->hist_tdc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TH1F),-1,-1,1,"hist_tdc[7]=",0,"-> Histograms for TDC");
   G__memvar_setup((void*)((long)(&p->hist_scl)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TH1F),-1,-1,1,"hist_scl[3]=",0,"-> Histograms for Scaler");
   G__memvar_setup((void*)((long)(&p->hist_nbin)-(long)(p)),105,0,0,-1,-1,-1,1,"hist_nbin=",0,"number of bins of histgrams for ADC values. [210]");
   G__memvar_setup((void*)((long)(&p->hist_binmin)-(long)(p)),105,0,0,-1,-1,-1,1,"hist_binmin=",0,"minimum value of histogram bin for ADC values [-104]");
   G__memvar_setup((void*)((long)(&p->hist_binmax)-(long)(p)),105,0,0,-1,-1,-1,1,"hist_binmax=",0,"maximum value of histogram bin for ADC values [4096]");
   G__memvar_setup((void*)((long)(&p->hsilicon_nbin)-(long)(p)),105,0,0,-1,-1,-1,1,"hsilicon_nbin=",0,"number of bins of histograms for typical silicon channel [500]");
   G__memvar_setup((void*)((long)(&p->hsilicon_binmin)-(long)(p)),105,0,0,-1,-1,-1,1,"hsilicon_binmin=",0,"minimum value of histogram bin for typical silicon channel [-4500]");
   G__memvar_setup((void*)((long)(&p->hsilicon_binmax)-(long)(p)),105,0,0,-1,-1,-1,1,"hsilicon_binmax=",0,"minimum value of histogram bin for typical silicon channel [-4500]");
   G__memvar_setup((void*)((long)(&p->hsilicon_channel)-(long)(p)),105,0,0,-1,-1,-1,1,"hsilicon_channel=",0,"channel filled value to histogram [10]");
   G__memvar_setup((void*)((long)(&p->c_cal0)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TCanvas),-1,-1,1,"c_cal0=",0,"! Canvas for the scintillators in 25mm cal. ");
   G__memvar_setup((void*)((long)(&p->c_cal1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TCanvas),-1,-1,1,"c_cal1=",0,"! Canvas for the scintillators in 32mm cal. ");
   G__memvar_setup((void*)((long)(&p->c_adcs)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TCanvas),-1,-1,1,"c_adcs=",0,"! Canvsa for the other ADCs. Noise,Laser,FCs");
   G__memvar_setup((void*)((long)(&p->c_flag)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TCanvas),-1,-1,1,"c_flag=",0,"! Canvas for the flags.");
   G__memvar_setup((void*)((long)(&p->c_tdc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TCanvas),-1,-1,1,"c_tdc=",0,"! Canvas for TDC.");
   G__memvar_setup((void*)((long)(&p->c_si)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TCanvas),-1,-1,1,"c_si=",0,"! Canvas for Accum Silicon");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-2,4,"icall=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"DEFAULT_hist_nbin=210LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"DEFAULT_hist_binmin=-104LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"DEFAULT_hist_binmax=4096LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"DEFAULT_hsilicon_nbin=110LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"DEFAULT_hsilicon_binmin=-200LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"DEFAULT_hsilicon_binmax=2000LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"DEFAULT_hsilicon_channel=10LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* A1Cal2AccumHist */
static void G__setup_memvarA1Cal2AccumHist(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2AccumHist));
   { A1Cal2AccumHist *p; p=(A1Cal2AccumHist*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->hist_cal)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TH1F),-1,-1,1,"hist_cal[2][16]=",0,"->  Tower:Layer");
   G__memvar_setup((void*)((long)(&p->haccum_scifi)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TH1F),-1,-1,1,"haccum_scifi[2][4][2]=",0,"->  Accumulate Tower:Layer:XY");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-2,4,"icall=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"hist_nbin=51LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"hist_binmin=-100LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"hist_binmax=5000LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* A2Cal2AccumHist */
static void G__setup_memvarA2Cal2AccumHist(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2AccumHist));
   { A2Cal2AccumHist *p; p=(A2Cal2AccumHist*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->hist_cal)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TH1F),-1,-1,1,"hist_cal[2][16]=",0,"->   Tower:Layer");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-2,4,"icall=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"hist_nbin=51LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"hist_binmin=-100LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"hist_binmax=5000LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* A1PhysAccumHist */
static void G__setup_memvarA1PhysAccumHist(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1PhysAccumHist));
   { A1PhysAccumHist *p; p=(A1PhysAccumHist*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->henergy)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TH1F),-1,-1,1,"henergy[2]=",0,"->");
   G__memvar_setup((void*)((long)(&p->h2pos)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TH2F),-1,-1,1,"h2pos[2]=",0,"->");
   G__memvar_setup((void*)((long)(&p->h2flux)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TH2F),-1,-1,1,"h2flux[2]=",0,"->");
   G__memvar_setup((void*)((long)(&p->hpid)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TH1F),-1,-1,1,"hpid[2]=",0,"->");
   G__memvar_setup((void*)((long)(&p->hhits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TH1F),-1,-1,1,"hhits[2]=",0,"->");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-2,4,"icall=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"henergy_nbin=1000LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"henergy_binmin=0LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"henergy_binmax=10000LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"hpos0_nbin=22LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"hpos0_binmin=-1LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"hpos0_binmax=21LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"hpos1_nbin=42LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"hpos1_binmin=-1LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"hpos1_binmax=41LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"hpid_nbin=3LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"hpid_binmin=-1LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"hpid_binmax=2LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"hhits_nbin=3LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"hhits_binmin=-1LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"hhits_binmax=2LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* A2PhysAccumHist */
static void G__setup_memvarA2PhysAccumHist(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2PhysAccumHist));
   { A2PhysAccumHist *p; p=(A2PhysAccumHist*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->henergy)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TH1F),-1,-1,1,"henergy[2]=",0,"->");
   G__memvar_setup((void*)((long)(&p->h2pos)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TH2F),-1,-1,1,"h2pos[2]=",0,"->");
   G__memvar_setup((void*)((long)(&p->h2flux)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TH2F),-1,-1,1,"h2flux[2]=",0,"->");
   G__memvar_setup((void*)((long)(&p->hpid)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TH1F),-1,-1,1,"hpid[2]=",0,"->");
   G__memvar_setup((void*)((long)(&p->hhits)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TH1F),-1,-1,1,"hhits[2]=",0,"->");
   G__memvar_setup((void*)((long)(&p->hsideposit)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TH1F),-1,-1,1,"hsideposit[2][4][2]=",0,"-> //Added by eugenio");
   G__memvar_setup((void*)((long)(&p->hsidepositsum)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TH1F),-1,-1,1,"hsidepositsum[2]=",0,"-> //Added by eugenio");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-2,4,"icall=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"henergy_nbin=101LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"henergy_binmin=-700LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"henergy_binmax=70000LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"hpos0_nbin=27LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"hpos0_binmin=-1LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"hpos0_binmax=26LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"hpos1_nbin=34LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"hpos1_binmin=-1LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"hpos1_binmax=33LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"hpid_nbin=3LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"hpid_binmin=-1LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"hpid_binmax=2LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"hhits_nbin=3LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"hhits_binmin=-1LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"hhits_binmax=2LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"hsideposit_nbin=100LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"hsideposit_binmin=0LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"hsideposit_binmax=25000LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"hsidepositsum_nbin=100LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"hsidepositsum_binmin=0LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"hsidepositsum_binmax=100000LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* A1CountArray */
static void G__setup_memvarA1CountArray(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1CountArray));
   { A1CountArray *p; p=(A1CountArray*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("NCH=%lldLL",(long long)A1CountArray::NCH).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("NDATA=%lldLL",(long long)A1CountArray::NDATA).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nchannel)-(long)(p)),105,0,0,-1,-1,-1,1,"nchannel=",0,"Number of channel");
   G__memvar_setup((void*)((long)(&p->ndata)-(long)(p)),105,0,0,-1,-1,-1,1,"ndata=",0,"Number of stored data");
   G__memvar_setup((void*)((long)(&p->idata)-(long)(p)),105,0,0,-1,-1,-1,1,"idata=",0,"Newest data number");
   G__memvar_setup((void*)((long)(&p->time)-(long)(p)),100,0,0,-1,-1,-1,1,"time[720]=",0,"Time [sec]");
   G__memvar_setup((void*)((long)(&p->count)-(long)(p)),102,0,0,-1,-1,-1,1,"count[18][720]=",0,"Array of Counts ");
   G__memvar_setup((void*)((long)(&p->rate)-(long)(p)),102,0,0,-1,-1,-1,1,"rate[18][720]=",0,"Array of Rate [Hz]");
   G__memvar_setup((void*)((long)(&p->a1scl)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_A1Scl_pp2015),-1,-1,1,"a1scl=",0,"!");
   G__memvar_setup((void*)((long)(&p->a1cal1)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1),-1,-1,1,"a1cal1=",0,"!");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("NTIME_A1CAL1=%lldLL",(long long)A1CountArray::NTIME_A1CAL1).data(),0,"interval of filling A1Cal1[sec]");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* A2CountArray */
static void G__setup_memvarA2CountArray(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2CountArray));
   { A2CountArray *p; p=(A2CountArray*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("NCH=%lldLL",(long long)A2CountArray::NCH).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("NDATA=%lldLL",(long long)A2CountArray::NDATA).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nchannel)-(long)(p)),105,0,0,-1,-1,-1,1,"nchannel=",0,"Number of channel");
   G__memvar_setup((void*)((long)(&p->ndata)-(long)(p)),105,0,0,-1,-1,-1,1,"ndata=",0,"Number of stored data");
   G__memvar_setup((void*)((long)(&p->idata)-(long)(p)),105,0,0,-1,-1,-1,1,"idata=",0,"Newest data number");
   G__memvar_setup((void*)((long)(&p->time)-(long)(p)),100,0,0,-1,-1,-1,1,"time[720]=",0,"Time [sec]");
   G__memvar_setup((void*)((long)(&p->count)-(long)(p)),102,0,0,-1,-1,-1,1,"count[18][720]=",0,"Array of Count");
   G__memvar_setup((void*)((long)(&p->rate)-(long)(p)),102,0,0,-1,-1,-1,1,"rate[18][720]=",0,"Array of Rate [Hz]");
   G__memvar_setup((void*)((long)(&p->a2scl)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_A2Scl_pp2015),-1,-1,1,"a2scl=",0,"!");
   G__memvar_setup((void*)((long)(&p->a2cal1)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1),-1,-1,1,"a2cal1=",0,"!");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("NTIME_A2CAL1=%lldLL",(long long)A2CountArray::NTIME_A2CAL1).data(),0,"interval of filling A2Cal1[sec]");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* A1CalEventHist */
static void G__setup_memvarA1CalEventHist(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1CalEventHist));
   { A1CalEventHist *p; p=(A1CalEventHist*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->hist_cal)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TH1F),-1,-1,1,"hist_cal[2][2]=",0,"-> tower:range");
   G__memvar_setup((void*)((long)(&p->hist_cald)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TH1F),-1,-1,1,"hist_cald[2][2]=",0,"-> tower:range");
   G__memvar_setup((void*)((long)(&p->hist_fc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TH1F),-1,-1,1,"hist_fc[2]=",0,"-> arm");
   G__memvar_setup((void*)((long)(&p->hist_laser)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TH1F),-1,-1,1,"hist_laser=",0,"->");
   G__memvar_setup((void*)((long)(&p->hist_noise)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TH1F),-1,-1,1,"hist_noise=",0,"-> ");
   G__memvar_setup((void*)((long)(&p->hist_scifi)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TH1F),-1,-1,1,"hist_scifi[2][4][2]=",0,"-> tower:layer:xy");
   G__memvar_setup((void*)((long)(&p->g_tdc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TGraph),-1,-1,1,"g_tdc=",0,"->");
   G__memvar_setup((void*)((long)(&p->t_info)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TText),-1,-1,1,"t_info[7]=",0,"->");
   G__memvar_setup((void*)((long)(&p->t_tdc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TText),-1,-1,1,"t_tdc[12][16]=",0,"->");
   G__memvar_setup((void*)((long)(&p->t_scl)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TText),-1,-1,1,"t_scl[16]=",0,"->");
   G__memvar_setup((void*)((long)(&p->t_flag)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TText),-1,-1,1,"t_flag[3][32]=",0,"->");
   G__memvar_setup((void*)((long)(&p->t_flagd)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TText),-1,-1,1,"t_flagd[3]=",0,"->");
   G__memvar_setup((void*)((long)(&p->t_cnt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TText),-1,-1,1,"t_cnt[35]=",0,"->");
   G__memvar_setup((void*)((long)(&p->t_fifo)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TText),-1,-1,1,"t_fifo[8]=",0,"-> ");
   G__memvar_setup((void*)((long)(&p->c1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TCanvas),-1,-1,1,"c1=",0,"!");
   G__memvar_setup((void*)((long)(&p->c1pad1_1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TPad),-1,-1,1,"c1pad1_1=",0,"! ");
   G__memvar_setup((void*)((long)(&p->c1pad1_2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TPad),-1,-1,1,"c1pad1_2=",0,"!");
   G__memvar_setup((void*)((long)(&p->c1pad1_3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TPad),-1,-1,1,"c1pad1_3=",0,"! ");
   G__memvar_setup((void*)((long)(&p->c1pad1_4)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TPad),-1,-1,1,"c1pad1_4=",0,"! ");
   G__memvar_setup((void*)((long)(&p->c1pad2_1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TPad),-1,-1,1,"c1pad2_1=",0,"! ");
   G__memvar_setup((void*)((long)(&p->c1pad2_2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TPad),-1,-1,1,"c1pad2_2=",0,"!");
   G__memvar_setup((void*)((long)(&p->c1pad3_1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TPad),-1,-1,1,"c1pad3_1=",0,"! ");
   G__memvar_setup((void*)((long)(&p->c1pad3_2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TPad),-1,-1,1,"c1pad3_2=",0,"!");
   G__memvar_setup((void*)((long)(&p->c1pad4_1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TPad),-1,-1,1,"c1pad4_1=",0,"! ");
   G__memvar_setup((void*)((long)(&p->c1pad4_2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TPad),-1,-1,1,"c1pad4_2=",0,"!");
   G__memvar_setup((void*)((long)(&p->c2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TCanvas),-1,-1,1,"c2=",0,"!");
   G__memvar_setup((void*)((long)(&p->c2pad1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TPad),-1,-1,1,"c2pad1=",0,"! ");
   G__memvar_setup((void*)((long)(&p->c2pad2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TPad),-1,-1,1,"c2pad2=",0,"!");
   G__memvar_setup((void*)((long)(&p->c2pad3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TPad),-1,-1,1,"c2pad3=",0,"! ");
   G__memvar_setup((void*)((long)(&p->c2pad4)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TPad),-1,-1,1,"c2pad4=",0,"! ");
   G__memvar_setup((void*)((long)(&p->c3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TCanvas),-1,-1,1,"c3=",0,"!");
   G__memvar_setup((void*)((long)(&p->c3pad)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TPad),-1,-1,1,"c3pad[8]=",0,"!  ");
   G__memvar_setup((void*)((long)(&p->l_cnt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TText),-1,-1,1,"l_cnt[35]=",0,"!  Lable for counters");
   G__memvar_setup((void*)((long)(&p->l_tdc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TText),-1,-1,1,"l_tdc[12]=",0,"!  Labels for TDC");
   G__memvar_setup((void*)((long)(&p->l_scl)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TText),-1,-1,1,"l_scl[16]=",0,"!  Labels for Scalers");
   G__memvar_setup((void*)((long)(&p->lf_0)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TText),-1,-1,1,"lf_0=",0,"!");
   G__memvar_setup((void*)((long)(&p->lf_1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TText),-1,-1,1,"lf_1=",0,"!");
   G__memvar_setup((void*)((long)(&p->lf_2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TText),-1,-1,1,"lf_2=",0,"!");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1CalEventHistcLcLGPIOLOGIC),-1,-2,1,G__FastAllocString(2048).Format("GPIOLOGIC_OLD=%lldLL",(long long)A1CalEventHist::GPIOLOGIC_OLD).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1CalEventHistcLcLGPIOLOGIC),-1,-2,1,G__FastAllocString(2048).Format("GPIOLOGIC_V28=%lldLL",(long long)A1CalEventHist::GPIOLOGIC_V28).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1CalEventHistcLcLGPIOLOGIC),-1,-2,1,G__FastAllocString(2048).Format("GPIOLOGIC_OP2015=%lldLL",(long long)A1CalEventHist::GPIOLOGIC_OP2015).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1CalEventHistcLcLGPIOLOGIC),-1,-2,1,G__FastAllocString(2048).Format("GPIOLOGIC_UNKNOWN=%lldLL",(long long)A1CalEventHist::GPIOLOGIC_UNKNOWN).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1CalEventHistcLcLDISPLAY_VERSION),-1,-2,1,G__FastAllocString(2048).Format("VERSION_PP2010=%lldLL",(long long)A1CalEventHist::VERSION_PP2010).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1CalEventHistcLcLDISPLAY_VERSION),-1,-2,1,G__FastAllocString(2048).Format("VERSION_PP2015=%lldLL",(long long)A1CalEventHist::VERSION_PP2015).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1CalEventHistcLcLDISPLAY_VERSION),-1,-2,1,G__FastAllocString(2048).Format("VERSION_RHICF_OP2017=%lldLL",(long long)A1CalEventHist::VERSION_RHICF_OP2017).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A1CalEventHistcLcLDISPLAY_VERSION),-1,-2,1,G__FastAllocString(2048).Format("VERSION_UNKNOW=%lldLL",(long long)A1CalEventHist::VERSION_UNKNOW).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->gpioversion)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_A1CalEventHistcLcLGPIOLOGIC),-1,-1,1,"gpioversion=",0,"!");
   G__memvar_setup((void*)((long)(&p->f_DisplayVersion)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_A1CalEventHistcLcLDISPLAY_VERSION),-1,-1,1,"f_DisplayVersion=",0,"!");
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,4,"cname[256]=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,4,"ctitle[256]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-2,4,"icall=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* A2CalEventHist */
static void G__setup_memvarA2CalEventHist(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2CalEventHist));
   { A2CalEventHist *p; p=(A2CalEventHist*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->hist_cal)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TH1F),-1,-1,1,"hist_cal[2][2]=",0,"-> tower:range");
   G__memvar_setup((void*)((long)(&p->hist_cald)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TH1F),-1,-1,1,"hist_cald[2][2]=",0,"-> tower:range");
   G__memvar_setup((void*)((long)(&p->hist_fc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TH1F),-1,-1,1,"hist_fc[2]=",0,"-> arm");
   G__memvar_setup((void*)((long)(&p->hist_laser)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TH1F),-1,-1,1,"hist_laser=",0,"->");
   G__memvar_setup((void*)((long)(&p->hist_noise)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TH1F),-1,-1,1,"hist_noise=",0,"-> ");
   G__memvar_setup((void*)((long)(&p->hist_silicon)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TH1F),-1,-1,1,"hist_silicon[4][2][3]=",0,"-> layer:xy:timing");
   G__memvar_setup((void*)((long)(&p->g_tdc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TGraph),-1,-1,1,"g_tdc=",0,"->");
   G__memvar_setup((void*)((long)(&p->t_info)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TText),-1,-1,1,"t_info[7]=",0,"->");
   G__memvar_setup((void*)((long)(&p->t_tdc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TText),-1,-1,1,"t_tdc[12][16]=",0,"->");
   G__memvar_setup((void*)((long)(&p->t_scl)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TText),-1,-1,1,"t_scl[16]=",0,"->");
   G__memvar_setup((void*)((long)(&p->t_flag)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TText),-1,-1,1,"t_flag[3][32]=",0,"->");
   G__memvar_setup((void*)((long)(&p->t_flagd)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TText),-1,-1,1,"t_flagd[3]=",0,"->");
   G__memvar_setup((void*)((long)(&p->t_cnt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TText),-1,-1,1,"t_cnt[35]=",0,"->");
   G__memvar_setup((void*)((long)(&p->t_fifo)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TText),-1,-1,1,"t_fifo[8]=",0,"->");
   G__memvar_setup((void*)((long)(&p->c1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TCanvas),-1,-1,1,"c1=",0,"!");
   G__memvar_setup((void*)((long)(&p->c1pad1_1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TPad),-1,-1,1,"c1pad1_1=",0,"! ");
   G__memvar_setup((void*)((long)(&p->c1pad1_2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TPad),-1,-1,1,"c1pad1_2=",0,"!");
   G__memvar_setup((void*)((long)(&p->c1pad1_3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TPad),-1,-1,1,"c1pad1_3=",0,"! ");
   G__memvar_setup((void*)((long)(&p->c1pad1_4)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TPad),-1,-1,1,"c1pad1_4=",0,"! ");
   G__memvar_setup((void*)((long)(&p->c1pad2_1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TPad),-1,-1,1,"c1pad2_1=",0,"! ");
   G__memvar_setup((void*)((long)(&p->c1pad2_2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TPad),-1,-1,1,"c1pad2_2=",0,"!");
   G__memvar_setup((void*)((long)(&p->c1pad3_1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TPad),-1,-1,1,"c1pad3_1=",0,"! ");
   G__memvar_setup((void*)((long)(&p->c1pad3_2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TPad),-1,-1,1,"c1pad3_2=",0,"!");
   G__memvar_setup((void*)((long)(&p->c1pad4_1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TPad),-1,-1,1,"c1pad4_1=",0,"! ");
   G__memvar_setup((void*)((long)(&p->c1pad4_2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TPad),-1,-1,1,"c1pad4_2=",0,"!");
   G__memvar_setup((void*)((long)(&p->c2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TCanvas),-1,-1,1,"c2=",0,"!");
   G__memvar_setup((void*)((long)(&p->c2pad1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TPad),-1,-1,1,"c2pad1=",0,"! ");
   G__memvar_setup((void*)((long)(&p->c2pad2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TPad),-1,-1,1,"c2pad2=",0,"!");
   G__memvar_setup((void*)((long)(&p->c2pad3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TPad),-1,-1,1,"c2pad3=",0,"! ");
   G__memvar_setup((void*)((long)(&p->c2pad4)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TPad),-1,-1,1,"c2pad4=",0,"! ");
   G__memvar_setup((void*)((long)(&p->c3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TCanvas),-1,-1,1,"c3=",0,"!");
   G__memvar_setup((void*)((long)(&p->l_cnt)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TText),-1,-1,1,"l_cnt[35]=",0,"!  Labels for counters");
   G__memvar_setup((void*)((long)(&p->l_tdc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TText),-1,-1,1,"l_tdc[12]=",0,"!  Labels for TDC");
   G__memvar_setup((void*)((long)(&p->l_scl)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TText),-1,-1,1,"l_scl[16]=",0,"!  Labels for Scalers");
   G__memvar_setup((void*)((long)(&p->lf_0)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TText),-1,-1,1,"lf_0=",0,"!");
   G__memvar_setup((void*)((long)(&p->lf_1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TText),-1,-1,1,"lf_1=",0,"!");
   G__memvar_setup((void*)((long)(&p->lf_2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TText),-1,-1,1,"lf_2=",0,"!");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2CalEventHistcLcLGPIOLOGIC),-1,-2,1,G__FastAllocString(2048).Format("GPIOLOGIC_OLD=%lldLL",(long long)A2CalEventHist::GPIOLOGIC_OLD).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2CalEventHistcLcLGPIOLOGIC),-1,-2,1,G__FastAllocString(2048).Format("GPIOLOGIC_V28=%lldLL",(long long)A2CalEventHist::GPIOLOGIC_V28).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2CalEventHistcLcLGPIOLOGIC),-1,-2,1,G__FastAllocString(2048).Format("GPIOLOGIC_OP2015=%lldLL",(long long)A2CalEventHist::GPIOLOGIC_OP2015).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2CalEventHistcLcLGPIOLOGIC),-1,-2,1,G__FastAllocString(2048).Format("GPIOLOGIC_UNKNOWN=%lldLL",(long long)A2CalEventHist::GPIOLOGIC_UNKNOWN).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2CalEventHistcLcLDISPLAY_VERSION),-1,-2,1,G__FastAllocString(2048).Format("VERSION_PP2010=%lldLL",(long long)A2CalEventHist::VERSION_PP2010).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2CalEventHistcLcLDISPLAY_VERSION),-1,-2,1,G__FastAllocString(2048).Format("VERSION_PPB2013=%lldLL",(long long)A2CalEventHist::VERSION_PPB2013).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2CalEventHistcLcLDISPLAY_VERSION),-1,-2,1,G__FastAllocString(2048).Format("VERSION_PP2015=%lldLL",(long long)A2CalEventHist::VERSION_PP2015).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2CalEventHistcLcLDISPLAY_VERSION),-1,-2,1,G__FastAllocString(2048).Format("VERSION_PPB2016=%lldLL",(long long)A2CalEventHist::VERSION_PPB2016).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libLHCfEventLN_A2CalEventHistcLcLDISPLAY_VERSION),-1,-2,1,G__FastAllocString(2048).Format("VERSION_UNKNOW=%lldLL",(long long)A2CalEventHist::VERSION_UNKNOW).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->gpioversion)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_A2CalEventHistcLcLGPIOLOGIC),-1,-1,1,"gpioversion=",0,"!");
   G__memvar_setup((void*)((long)(&p->f_DisplayVersion)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_A2CalEventHistcLcLDISPLAY_VERSION),-1,-1,1,"f_DisplayVersion=",0,"!");
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,4,"cname[256]=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,4,"ctitle[256]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-2,4,"icall=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SimP */
static void G__setup_memvarSimP(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_SimP));
   { SimP *p; p=(SimP*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->code)-(long)(p)),105,0,0,-1,-1,-1,1,"code=",0,"code for particle identification on Epics");
   G__memvar_setup((void*)((long)(&p->subcode)-(long)(p)),105,0,0,-1,-1,-1,1,"subcode=",0,"sub-code ");
   G__memvar_setup((void*)((long)(&p->charge)-(long)(p)),105,0,0,-1,-1,-1,1,"charge=",0,"charge ");
   G__memvar_setup((void*)((long)(&p->user)-(long)(p)),105,0,0,-1,-1,-1,1,"user=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pos)-(long)(p)),100,0,0,-1,-1,-1,1,"pos[3]=",0,"Incident Position [mm]");
   G__memvar_setup((void*)((long)(&p->energy)-(long)(p)),100,0,0,-1,-1,-1,1,"energy=",0,"Total Energy [GeV]");
   G__memvar_setup((void*)((long)(&p->mom)-(long)(p)),100,0,0,-1,-1,-1,1,"mom[3]=",0,"Momentum [GeV/c]");
   G__memvar_setup((void*)(&SimP::sPositionBeamCenter),100,0,0,-1,-1,-2,1,"sPositionBeamCenter[2]=",0,"! offset parameters: beam position in the global_detector coodinate ");
   G__memvar_setup((void*)(&SimP::sPositionBeamPipe),100,0,0,-1,-1,-2,1,"sPositionBeamPipe[2]=",0,"! offset parameters: beam pipe position in the global detector coodinate. ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SimIncidents */
static void G__setup_memvarSimIncidents(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_SimIncidents));
   { SimIncidents *p; p=(SimIncidents*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,"Run Number");
   G__memvar_setup((void*)((long)(&p->number)-(long)(p)),105,0,0,-1,-1,-1,1,"number=",0,"Event number");
   G__memvar_setup((void*)((long)(&p->gnumber)-(long)(p)),105,0,0,-1,-1,-1,1,"gnumber=",0,"Grobal event number");
   G__memvar_setup((void*)((long)(&p->np)-(long)(p)),105,0,0,-1,-1,-1,1,"np=",0,"Number of Incident Particle");
   G__memvar_setup((void*)((long)(&p->particles)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TObjArray),-1,-1,1,"particles=",0,"Array of SimP                ");
   G__memvar_setup((void*)((long)(&p->ref)-(long)(p)),105,0,0,-1,-1,-1,1,"ref[10]=",0,"! temporal reference to SimP");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SPSAdamoRec0 */
static void G__setup_memvarSPSAdamoRec0(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_SPSAdamoRec0));
   { SPSAdamoRec0 *p; p=(SPSAdamoRec0*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("NLAYER=%lldLL",(long long)SPSAdamoRec0::NLAYER).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("NXY=%lldLL",(long long)SPSAdamoRec0::NXY).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,"Run Number");
   G__memvar_setup((void*)((long)(&p->number)-(long)(p)),105,0,0,-1,-1,-1,1,"number=",0,"Event Number");
   G__memvar_setup((void*)((long)(&p->gnumber)-(long)(p)),105,0,0,-1,-1,-1,1,"gnumber=",0,"Grobal Event Number");
   G__memvar_setup((void*)((long)(&p->pos)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"pos[2]=",0,"incident position (x,y) unit mm;");
   G__memvar_setup((void*)((long)(&p->direction)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"direction[2]=",0,"incidnet direction (dx,xy) unit mm/mm;");
   G__memvar_setup((void*)((long)(&p->clevel)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"clevel[2]=",0,"number of coinsidence layers (x,y) max:5");
   G__memvar_setup((void*)((long)(&p->clevel1)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"clevel1[2]=",0,"anther type max : > 5");
   G__memvar_setup((void*)((long)(&p->ndiscri)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ndiscri[2][5]=",0,"number of discriminate channels.");
   G__memvar_setup((void*)((long)(&p->ndata)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ndata[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->data)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"data[2][5]=",0,"?");
   G__memvar_setup((void*)((long)(&p->dataz)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"dataz[2][5]=",0,"?");
   G__memvar_setup((void*)((long)(&p->chi2)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"chi2[2]=",0,"chi2 of linear fit");
   G__memvar_setup((void*)((long)(&p->pad)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"pad=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* SPSAdamoHist */
static void G__setup_memvarSPSAdamoHist(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libLHCfEventLN_SPSAdamoHist));
   { SPSAdamoHist *p; p=(SPSAdamoHist*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->hist)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TH1F),-1,-1,1,"hist[5][2]=",0,"->  [Layer][XY]");
   G__memvar_setup((void*)((long)(&p->c)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TCanvas),-1,-1,1,"c=",0,"!");
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,4,"cname[256]=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,4,"ctitle[256]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-2,4,"icall=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libLHCfEventLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarlibLHCfEvent() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncA1Raw(void) {
   /* A1Raw */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Raw));
   G__memfunc_setup("A1Raw",412,G__libLHCfEvent_191_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A1Raw), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("A1Raw",412,G__libLHCfEvent_191_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A1Raw), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__libLHCfEvent_191_0_3, 105, -1, -1, 0, 1, 1, 1, 0, "i - 'A1Raw::bankio' 0 'ALL' option", "Clear all data.", (void*) NULL, 0);
   G__memfunc_setup("copy",443,G__libLHCfEvent_191_0_4, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A1Raw' - 0 - data i - 'A1Raw::bankio' 0 'ALL' option", "Copy all data to this.   ", (void*) NULL, 0);
   G__memfunc_setup("copydata",853,G__libLHCfEvent_191_0_5, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A1Raw' - 0 - data i - 'A1Raw::bankio' 0 'ALL' option", "Copy data to this except header data.  ", (void*) NULL, 0);
   G__memfunc_setup("add",297,G__libLHCfEvent_191_0_6, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A1Raw' - 0 - data i - 'A1Raw::bankio' 0 'ALL' option", "Add data to this.", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfEvent_191_0_7, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&A1Raw::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_191_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1Raw::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_191_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&A1Raw::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_191_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&A1Raw::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_191_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_191_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1Raw::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_191_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A1Raw::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_191_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1Raw::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_191_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A1Raw::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("A1Raw", 412, G__libLHCfEvent_191_0_19, (int) ('i'), G__get_linked_tagnum(&G__libLHCfEventLN_A1Raw), -1, 0, 1, 1, 1, 0, "u 'A1Raw' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~A1Raw", 538, G__libLHCfEvent_191_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfEvent_191_0_21, (int) ('u'), G__get_linked_tagnum(&G__libLHCfEventLN_A1Raw), -1, 1, 1, 1, 1, 0, "u 'A1Raw' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncA1Cal1(void) {
   /* A1Cal1 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1));
   G__memfunc_setup("A1Cal1",435,G__libLHCfEvent_193_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("A1Cal1",435,G__libLHCfEvent_193_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__libLHCfEvent_193_0_3, 105, -1, -1, 0, 1, 1, 1, 0, "i - 'A1Cal1::bankio' 0 'ALL' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copy",443,G__libLHCfEvent_193_0_4, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A1Cal1' - 0 - d i - 'A1Cal1::bankio' 0 'ALL' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copydata",853,G__libLHCfEvent_193_0_5, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A1Cal1' - 0 - d i - 'A1Cal1::bankio' 0 'ALL' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__libLHCfEvent_193_0_6, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A1Cal1' - 0 - d i - 'A1Cal1::bankio' 0 '0x1FF' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("subtract",872,G__libLHCfEvent_193_0_7, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A1Cal1' - 0 - d i - 'A1Cal1::bankio' 0 '0x1FF' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("multiply",896,G__libLHCfEvent_193_0_8, 105, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - d i - 'A1Cal1::bankio' 0 '0x1FF' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("divide",629,G__libLHCfEvent_193_0_9, 105, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - d i - 'A1Cal1::bankio' 0 '0x1FF' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pow",342,G__libLHCfEvent_193_0_10, 105, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - d i - 'A1Cal1::bankio' 0 '0x1FF' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sqrt",458,G__libLHCfEvent_193_0_11, 105, -1, -1, 0, 1, 1, 1, 0, "i - 'A1Cal1::bankio' 0 '0x1FF' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clk",314,G__libLHCfEvent_193_0_12, 100, -1, -1, 0, 0, 1, 1, 0, "", "scl0[1]*2^24+scl0[0]", (void*) NULL, 0);
   G__memfunc_setup("bptx1",495,G__libLHCfEvent_193_0_13, 100, -1, -1, 0, 0, 1, 1, 0, "", "scl0[3]*2^24+scl0[2]", (void*) NULL, 0);
   G__memfunc_setup("bptx2",496,G__libLHCfEvent_193_0_14, 100, -1, -1, 0, 0, 1, 1, 0, "", "scl0[5]*2^24+scl0[4]", (void*) NULL, 0);
   G__memfunc_setup("CheckFlag",856,G__libLHCfEvent_193_0_15, 105, -1, -1, 0, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - mask", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsBPTX1Flag",933,G__libLHCfEvent_193_0_16, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsBPTX2Flag",934,G__libLHCfEvent_193_0_17, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsEXTL1TFlag",1016,G__libLHCfEvent_193_0_18, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsL2TAFlag",841,G__libLHCfEvent_193_0_19, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsL2TPFlag",856,G__libLHCfEvent_193_0_20, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsL2TEXTFlag",1017,G__libLHCfEvent_193_0_21, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsL2TL1TFlag",985,G__libLHCfEvent_193_0_22, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSTRGFlag",886,G__libLHCfEvent_193_0_23, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSTrgSmallFlag",1455,G__libLHCfEvent_193_0_24, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsLTRGFlag",879,G__libLHCfEvent_193_0_25, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSTrgLargeFlag",1441,G__libLHCfEvent_193_0_26, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsBeamFlag",939,G__libLHCfEvent_193_0_27, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsPedeFlag",948,G__libLHCfEvent_193_0_28, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsLaserFlag",1069,G__libLHCfEvent_193_0_29, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsEnableFlag",1149,G__libLHCfEvent_193_0_30, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA1EnableFlag",1263,G__libLHCfEvent_193_0_31, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA1STrgFlag",1064,G__libLHCfEvent_193_0_32, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA1ShowerTrgFlag",1613,G__libLHCfEvent_193_0_33, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA1L3TFlag",891,G__libLHCfEvent_193_0_34, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA2EnableFlag",1264,G__libLHCfEvent_193_0_35, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA2STrgFlag",1065,G__libLHCfEvent_193_0_36, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA2ShowerTrgFlag",1614,G__libLHCfEvent_193_0_37, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA2L3TFlag",892,G__libLHCfEvent_193_0_38, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsATLASL1AFlag",1129,G__libLHCfEvent_193_0_39, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA1FCTrgFlag",1118,G__libLHCfEvent_193_0_40, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA2FCTrgFlag",1119,G__libLHCfEvent_193_0_41, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsL2TCFlag",843,G__libLHCfEvent_193_0_42, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsFCFlag",703,G__libLHCfEvent_193_0_43, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - arm i - - 0 - channel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsDSCFlag",784,G__libLHCfEvent_193_0_44, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - tower i - - 0 - layer", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfEvent_193_0_45, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&A1Cal1::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_193_0_46, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1Cal1::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_193_0_47, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&A1Cal1::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_193_0_48, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&A1Cal1::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_193_0_52, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_193_0_53, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1Cal1::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_193_0_54, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A1Cal1::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_193_0_55, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1Cal1::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_193_0_56, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A1Cal1::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("A1Cal1", 435, G__libLHCfEvent_193_0_57, (int) ('i'), G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1), -1, 0, 1, 1, 1, 0, "u 'A1Cal1' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~A1Cal1", 561, G__libLHCfEvent_193_0_58, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfEvent_193_0_59, (int) ('u'), G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1), -1, 1, 1, 1, 1, 0, "u 'A1Cal1' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncA1Cal2(void) {
   /* A1Cal2 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2));
   G__memfunc_setup("A1Cal2",436,G__libLHCfEvent_197_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("A1Cal2",436,G__libLHCfEvent_197_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__libLHCfEvent_197_0_3, 105, -1, -1, 0, 1, 1, 1, 0, "i - 'A1Cal2::bankio' 0 'ALL' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copy",443,G__libLHCfEvent_197_0_4, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A1Cal2' - 0 - d i - 'A1Cal2::bankio' 0 'ALL' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copydata",853,G__libLHCfEvent_197_0_5, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A1Cal2' - 0 - d i - 'A1Cal2::bankio' 0 'ALL' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__libLHCfEvent_197_0_6, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A1Cal2' - 0 - d i - 'A1Cal2::bankio' 0 '0x6D' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("subtract",872,G__libLHCfEvent_197_0_7, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A1Cal2' - 0 - d i - 'A1Cal2::bankio' 0 '0x6D' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("multiply",896,G__libLHCfEvent_197_0_8, 105, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - d i - 'A1Cal2::bankio' 0 '0x6D' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("divide",629,G__libLHCfEvent_197_0_9, 105, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - d i - 'A1Cal2::bankio' 0 '0x6D' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("calsum",645,G__libLHCfEvent_197_0_10, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 '0' sl "
"i - - 0 '15' ie", "Simple sum of calorimeter ", (void*) NULL, 0);
   G__memfunc_setup("calsum2",695,G__libLHCfEvent_197_0_11, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 '0' sl "
"i - - 0 '15' ie", "Modified Sum (if layer>10,*2)", (void*) NULL, 0);
   G__memfunc_setup("scifisum",867,G__libLHCfEvent_197_0_12, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy", "Sum of Scifi dEs", (void*) NULL, 0);
   G__memfunc_setup("CheckFlag",856,G__libLHCfEvent_197_0_13, 105, -1, -1, 0, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - mask", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsBPTX1Flag",933,G__libLHCfEvent_197_0_14, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsBPTX2Flag",934,G__libLHCfEvent_197_0_15, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsEXTL1TFlag",1016,G__libLHCfEvent_197_0_16, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsL2TAFlag",841,G__libLHCfEvent_197_0_17, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsL2TPFlag",856,G__libLHCfEvent_197_0_18, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsL2TEXTFlag",1017,G__libLHCfEvent_197_0_19, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsL2TL1TFlag",985,G__libLHCfEvent_197_0_20, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSTRGFlag",886,G__libLHCfEvent_197_0_21, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSTrgSmallFlag",1455,G__libLHCfEvent_197_0_22, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsLTRGFlag",879,G__libLHCfEvent_197_0_23, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSTrgLargeFlag",1441,G__libLHCfEvent_197_0_24, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsBeamFlag",939,G__libLHCfEvent_197_0_25, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsPedeFlag",948,G__libLHCfEvent_197_0_26, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsLaserFlag",1069,G__libLHCfEvent_197_0_27, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsEnableFlag",1149,G__libLHCfEvent_197_0_28, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA1EnableFlag",1263,G__libLHCfEvent_197_0_29, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA1STrgFlag",1064,G__libLHCfEvent_197_0_30, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA1ShowerTrgFlag",1613,G__libLHCfEvent_197_0_31, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA1L3TFlag",891,G__libLHCfEvent_197_0_32, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA2EnableFlag",1264,G__libLHCfEvent_197_0_33, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA2STrgFlag",1065,G__libLHCfEvent_197_0_34, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA2ShowerTrgFlag",1614,G__libLHCfEvent_197_0_35, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA2L3TFlag",892,G__libLHCfEvent_197_0_36, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsATLASL1AFlag",1129,G__libLHCfEvent_197_0_37, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA1FCTrgFlag",1118,G__libLHCfEvent_197_0_38, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA2FCTrgFlag",1119,G__libLHCfEvent_197_0_39, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsL2TCFlag",843,G__libLHCfEvent_197_0_40, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsFCFlag",703,G__libLHCfEvent_197_0_41, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - arm i - - 0 - channel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsDSCFlag",784,G__libLHCfEvent_197_0_42, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - tower i - - 0 - layer", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfEvent_197_0_43, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&A1Cal2::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_197_0_44, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1Cal2::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_197_0_45, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&A1Cal2::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_197_0_46, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&A1Cal2::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_197_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_197_0_51, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1Cal2::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_197_0_52, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A1Cal2::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_197_0_53, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1Cal2::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_197_0_54, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A1Cal2::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("A1Cal2", 436, G__libLHCfEvent_197_0_55, (int) ('i'), G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2), -1, 0, 1, 1, 1, 0, "u 'A1Cal2' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~A1Cal2", 562, G__libLHCfEvent_197_0_56, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfEvent_197_0_57, (int) ('u'), G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2), -1, 1, 1, 1, 1, 0, "u 'A1Cal2' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncA1Phys(void) {
   /* A1Phys */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Phys));
   G__memfunc_setup("A1Phys",534,G__libLHCfEvent_201_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A1Phys), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("A1Phys",534,G__libLHCfEvent_201_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A1Phys), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__libLHCfEvent_201_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copy",443,G__libLHCfEvent_201_0_4, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Phys' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copydata",853,G__libLHCfEvent_201_0_5, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Phys' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Energy",618,G__libLHCfEvent_201_0_6, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pos",306,G__libLHCfEvent_201_0_7, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 - ixy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("X",88,G__libLHCfEvent_201_0_8, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Y",89,G__libLHCfEvent_201_0_9, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Hits",408,G__libLHCfEvent_201_0_10, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PID",221,G__libLHCfEvent_201_0_11, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsElemag",775,G__libLHCfEvent_201_0_12, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsHadron",792,G__libLHCfEvent_201_0_13, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InFiducial",984,G__libLHCfEvent_201_0_14, 103, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it d - - 0 '2.0' edgecut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GlobalPos",899,G__libLHCfEvent_201_0_15, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - ixy "
"d - - 0 '0.' offsetx d - - 0 '0.' offsety", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GPos",377,G__libLHCfEvent_201_0_16, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - ixy "
"d - - 0 '0.' offsetx d - - 0 '0.' offsety", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GPosX",465,G__libLHCfEvent_201_0_17, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it d - - 0 '0.' offsetx "
"d - - 0 '0.' offsety", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GPosY",466,G__libLHCfEvent_201_0_18, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it d - - 0 '0.' offsetx "
"d - - 0 '0.' offsety", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPi0Distance",1332,G__libLHCfEvent_201_0_19, 100, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'false' check", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPi0Mass",925,G__libLHCfEvent_201_0_20, 100, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'false' check", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPi0Energy",1139,G__libLHCfEvent_201_0_21, 100, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'false' check", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Momentum",850,G__libLHCfEvent_201_0_22, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - dir "
"d - - 0 'GetOffsetBC(0)' offsetx d - - 0 'GetOffsetBC(1)' offsety", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPi0Momentum",1371,G__libLHCfEvent_201_0_23, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - dir d - - 0 'GetOffsetBC(0)' beamcenter_x "
"d - - 0 'GetOffsetBC(1)' beamcenter_y", "Return Pi0 Momentum [GeV/c]. ( Momentum(0,dir) + Momentum(1,dir))", (void*) NULL, 0);
   G__memfunc_setup("GetPi0MomentumX",1459,G__libLHCfEvent_201_0_24, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 'GetOffsetBC(0)' beamcenter_x d - - 0 'GetOffsetBC(1)' beamcenter_y", "Pi0 Momentum_X [GeV/c] (=GetPi0Momentum(0,beamcenter_x,beamcenter_y))", (void*) NULL, 0);
   G__memfunc_setup("GetPi0MomentumY",1460,G__libLHCfEvent_201_0_25, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 'GetOffsetBC(0)' beamcenter_x d - - 0 'GetOffsetBC(1)' beamcenter_y", "Pi0 Momentum_Y [GeV/c] (=GetPi0Momentum(1,beamcenter_x,beamcenter_y))   ", (void*) NULL, 0);
   G__memfunc_setup("GetPi0Pt",717,G__libLHCfEvent_201_0_26, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 'GetOffsetBC(0)' beamcenter_x d - - 0 'GetOffsetBC(1)' beamcenter_y", "Return Pi0 transverse momentum [GeV/c]   ", (void*) NULL, 0);
   G__memfunc_setup("GetPi0Pl",709,G__libLHCfEvent_201_0_27, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 'GetOffsetBC(0)' beamcenter_x d - - 0 'GetOffsetBC(1)' beamcenter_y", "Pi0 longitudinal momentum [GeV/c] (=GetPi0Momentum(2))", (void*) NULL, 0);
   G__memfunc_setup("GetPi0Rapidity",1359,G__libLHCfEvent_201_0_28, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 'GetOffsetBC(0)' beamcenter_x d - - 0 'GetOffsetBC(1)' beamcenter_y", "Pi0 Rapidity", (void*) NULL, 0);
   G__memfunc_setup("GlobalPos_Detector",1820,G__libLHCfEvent_201_0_29, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - tower i - - 0 - ixy", "Hit Position in the global detector coordinate", (void*) NULL, 0);
   G__memfunc_setup("GlobalPos_BC",1127,G__libLHCfEvent_201_0_30, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - tower i - - 0 - ixy "
"d - - 0 'GetOffsetBC(0)' offsetx d - - 0 'GetOffsetBC(1)' offsety", "Hit Position in the global beam center coordinate ", (void*) NULL, 0);
   G__memfunc_setup("GlobalPos_BeamPipe",1765,G__libLHCfEvent_201_0_31, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - tower i - - 0 - ixy "
"d - - 0 'GetOffsetBeamPipe(0)' offsetx d - - 0 'GetOffsetBeamPipe(1)' offsety", "Hit Position in the global beam pipe coordinate", (void*) NULL, 0);
   G__memfunc_setup("GPosX_Detector",1386,G__libLHCfEvent_201_0_32, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", "Arias to GlobalPos_Detector(tower,0)", (void*) NULL, 0);
   G__memfunc_setup("GPosY_Detector",1387,G__libLHCfEvent_201_0_33, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", "Arias to GlobalPos_Detector(tower,1)", (void*) NULL, 0);
   G__memfunc_setup("GPosX_BC",693,G__libLHCfEvent_201_0_34, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", "Arias to GlobalPos_BC(tower,0)", (void*) NULL, 0);
   G__memfunc_setup("GPosY_BC",694,G__libLHCfEvent_201_0_35, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", "Arias to GlobalPos_BC(tower,1)", (void*) NULL, 0);
   G__memfunc_setup("GPosX_BeamPipe",1331,G__libLHCfEvent_201_0_36, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", "Arias to GlobalPos_BeamPipe(tower,0)", (void*) NULL, 0);
   G__memfunc_setup("GPosY_BeamPipe",1332,G__libLHCfEvent_201_0_37, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", "Arias to GlobalPos_BeamPipe(tower,1)", (void*) NULL, 0);
   G__memfunc_setup("Show",417,G__libLHCfEvent_201_0_38, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalorimeterSize",1554,G__libLHCfEvent_201_0_39, 100, -1, -1, 0, 1, 3, 1, 0, "i - - 0 - it", (char*)NULL, (void*) G__func2void( (double (*)(int))(&A1Phys::CalorimeterSize) ), 0);
   G__memfunc_setup("SetPositionBeamCenter",2135,G__libLHCfEvent_201_0_40, 105, -1, -1, 0, 2, 3, 1, 0, 
"d - - 0 - x d - - 0 - y", "Set the Beam Center Position in the Global_Detertor coordinate.[mm]", (void*) G__func2void( (int (*)(double, double))(&A1Phys::SetPositionBeamCenter) ), 0);
   G__memfunc_setup("SetPositionBeamPipeCenter",2533,G__libLHCfEvent_201_0_41, 105, -1, -1, 0, 2, 3, 1, 0, 
"d - - 0 - x d - - 0 - y", "Set the Beam Pipe Center in the Global_Detertor coordinate.[mm]", (void*) G__func2void( (int (*)(double, double))(&A1Phys::SetPositionBeamPipeCenter) ), 0);
   G__memfunc_setup("GetOffsetBC",1036,G__libLHCfEvent_201_0_42, 100, -1, -1, 0, 1, 3, 1, 0, "i - - 0 - xy", "= sPositionBeamCenter[xy]  ", (void*) G__func2void( (double (*)(int))(&A1Phys::GetOffsetBC) ), 0);
   G__memfunc_setup("GetOffsetBeamPipe",1674,G__libLHCfEvent_201_0_43, 100, -1, -1, 0, 1, 3, 1, 0, "i - - 0 - xy", "= sPositionBeamPipe[xy]  ", (void*) G__func2void( (double (*)(int))(&A1Phys::GetOffsetBeamPipe) ), 0);
   G__memfunc_setup("Class",502,G__libLHCfEvent_201_0_44, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&A1Phys::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_201_0_45, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1Phys::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_201_0_46, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&A1Phys::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_201_0_47, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&A1Phys::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_201_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_201_0_52, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1Phys::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_201_0_53, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A1Phys::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_201_0_54, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1Phys::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_201_0_55, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A1Phys::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("A1Phys", 534, G__libLHCfEvent_201_0_56, (int) ('i'), G__get_linked_tagnum(&G__libLHCfEventLN_A1Phys), -1, 0, 1, 1, 1, 0, "u 'A1Phys' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~A1Phys", 660, G__libLHCfEvent_201_0_57, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfEvent_201_0_58, (int) ('u'), G__get_linked_tagnum(&G__libLHCfEventLN_A1Phys), -1, 1, 1, 1, 1, 0, "u 'A1Phys' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncA1Info(void) {
   /* A1Info */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Info));
   G__memfunc_setup("A1Info",510,G__libLHCfEvent_202_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A1Info), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("A1Info",510,G__libLHCfEvent_202_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A1Info), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__libLHCfEvent_202_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfEvent_202_0_4, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&A1Info::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_202_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1Info::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_202_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&A1Info::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_202_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&A1Info::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_202_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_202_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1Info::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_202_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A1Info::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_202_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1Info::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_202_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A1Info::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("A1Info", 510, G__libLHCfEvent_202_0_16, (int) ('i'), G__get_linked_tagnum(&G__libLHCfEventLN_A1Info), -1, 0, 1, 1, 1, 0, "u 'A1Info' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~A1Info", 636, G__libLHCfEvent_202_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfEvent_202_0_18, (int) ('u'), G__get_linked_tagnum(&G__libLHCfEventLN_A1Info), -1, 1, 1, 1, 1, 0, "u 'A1Info' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncA1Scl(void) {
   /* A1Scl */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Scl));
   G__memfunc_setup("A1Scl",404,G__libLHCfEvent_203_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A1Scl), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("A1Scl",404,G__libLHCfEvent_203_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A1Scl), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name C - - 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__libLHCfEvent_203_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copy",443,G__libLHCfEvent_203_0_4, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Scl' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copydata",853,G__libLHCfEvent_203_0_5, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Scl' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfEvent_203_0_6, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&A1Scl::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_203_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1Scl::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_203_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&A1Scl::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_203_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&A1Scl::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_203_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_203_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1Scl::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_203_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A1Scl::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_203_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1Scl::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_203_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A1Scl::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("A1Scl", 404, G__libLHCfEvent_203_0_18, (int) ('i'), G__get_linked_tagnum(&G__libLHCfEventLN_A1Scl), -1, 0, 1, 1, 1, 0, "u 'A1Scl' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~A1Scl", 530, G__libLHCfEvent_203_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfEvent_203_0_20, (int) ('u'), G__get_linked_tagnum(&G__libLHCfEventLN_A1Scl), -1, 1, 1, 1, 1, 0, "u 'A1Scl' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncA2Raw(void) {
   /* A2Raw */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw));
   G__memfunc_setup("A2Raw",413,G__libLHCfEvent_204_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("A2Raw",413,G__libLHCfEvent_204_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__libLHCfEvent_204_0_3, 105, -1, -1, 0, 1, 1, 1, 0, "i - 'A2Raw::bankio' 0 'ALL' option", "Clear all data.", (void*) NULL, 0);
   G__memfunc_setup("copy",443,G__libLHCfEvent_204_0_4, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A2Raw' - 0 - data i - 'A2Raw::bankio' 0 'ALL' option", "Copy all data to this.", (void*) NULL, 0);
   G__memfunc_setup("copydata",853,G__libLHCfEvent_204_0_5, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A2Raw' - 0 - data i - 'A2Raw::bankio' 0 'ALL' option", "Copy data to this except header data.", (void*) NULL, 0);
   G__memfunc_setup("add",297,G__libLHCfEvent_204_0_6, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A2Raw' - 0 - data i - 'A2Raw::bankio' 0 'ALL' option", "Add data to this.", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfEvent_204_0_7, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&A2Raw::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_204_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Raw::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_204_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&A2Raw::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_204_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&A2Raw::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_204_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_204_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Raw::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_204_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A2Raw::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_204_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Raw::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_204_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A2Raw::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("A2Raw", 413, G__libLHCfEvent_204_0_19, (int) ('i'), G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw), -1, 0, 1, 1, 1, 0, "u 'A2Raw' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~A2Raw", 539, G__libLHCfEvent_204_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfEvent_204_0_21, (int) ('u'), G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw), -1, 1, 1, 1, 1, 0, "u 'A2Raw' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncA2Cal2(void) {
   /* A2Cal2 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2));
   G__memfunc_setup("A2Cal2",437,G__libLHCfEvent_206_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("A2Cal2",437,G__libLHCfEvent_206_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__libLHCfEvent_206_0_3, 105, -1, -1, 0, 1, 1, 1, 0, "i - 'A2Cal2::bankio' 0 'ALL' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("copy",443,G__libLHCfEvent_206_0_4, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A2Cal2' - 0 - d i - 'A2Cal2::bankio' 0 'ALL' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("copydata",853,G__libLHCfEvent_206_0_5, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A2Cal2' - 0 - d i - 'A2Cal2::bankio' 0 'ALL' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("add",297,G__libLHCfEvent_206_0_6, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A2Cal2' - 0 - d i - 'A2Cal2::bankio' 0 '0x25' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("subtract",872,G__libLHCfEvent_206_0_7, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A2Cal2' - 0 - d i - 'A2Cal2::bankio' 0 '0x25' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("multiply",896,G__libLHCfEvent_206_0_8, 105, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - d i - 'A2Cal2::bankio' 0 '0x25' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("divide",629,G__libLHCfEvent_206_0_9, 105, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - d i - 'A2Cal2::bankio' 0 '0x25' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("calsum",645,G__libLHCfEvent_206_0_10, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 '0' sl "
"i - - 0 '15' ie", "Sum of calorimeter", (void*) NULL, 0);
   G__memfunc_setup("calsum2",695,G__libLHCfEvent_206_0_11, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 '0' sl "
"i - - 0 '15' ie", "Modified Sum (if layer>10,*2)", (void*) NULL, 0);
   G__memfunc_setup("siliconsum",1094,G__libLHCfEvent_206_0_12, 100, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - il i - - 0 - ixy "
"i - - 0 - isample i - - 0 '0' sstrip "
"i - - 0 '383' estrip", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CopySilicon",1132,G__libLHCfEvent_206_0_13, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Cal1' - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Show",417,G__libLHCfEvent_206_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckFlag",856,G__libLHCfEvent_206_0_15, 105, -1, -1, 0, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - mask", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsBPTX1Flag",933,G__libLHCfEvent_206_0_16, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsBPTX2Flag",934,G__libLHCfEvent_206_0_17, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsEXTL1TFlag",1016,G__libLHCfEvent_206_0_18, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsL2TAFlag",841,G__libLHCfEvent_206_0_19, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsL2TPFlag",856,G__libLHCfEvent_206_0_20, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsL2TEXTFlag",1017,G__libLHCfEvent_206_0_21, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsL2TL1TFlag",985,G__libLHCfEvent_206_0_22, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSTRGFlag",886,G__libLHCfEvent_206_0_23, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSTrgSmallFlag",1455,G__libLHCfEvent_206_0_24, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsLTRGFlag",879,G__libLHCfEvent_206_0_25, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSTrgLargeFlag",1441,G__libLHCfEvent_206_0_26, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsBeamFlag",939,G__libLHCfEvent_206_0_27, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsPedeFlag",948,G__libLHCfEvent_206_0_28, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsLaserFlag",1069,G__libLHCfEvent_206_0_29, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsEnableFlag",1149,G__libLHCfEvent_206_0_30, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA1EnableFlag",1263,G__libLHCfEvent_206_0_31, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA1STrgFlag",1064,G__libLHCfEvent_206_0_32, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA1ShowerTrgFlag",1613,G__libLHCfEvent_206_0_33, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA1L3TFlag",891,G__libLHCfEvent_206_0_34, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA2EnableFlag",1264,G__libLHCfEvent_206_0_35, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA2STrgFlag",1065,G__libLHCfEvent_206_0_36, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA2ShowerTrgFlag",1614,G__libLHCfEvent_206_0_37, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA2L3TFlag",892,G__libLHCfEvent_206_0_38, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsATLASL1AFlag",1129,G__libLHCfEvent_206_0_39, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA1FCTrgFlag",1118,G__libLHCfEvent_206_0_40, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA2FCTrgFlag",1119,G__libLHCfEvent_206_0_41, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsL2TCFlag",843,G__libLHCfEvent_206_0_42, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsFCFlag",703,G__libLHCfEvent_206_0_43, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - arm i - - 0 - channel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsDSCFlag",784,G__libLHCfEvent_206_0_44, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - tower i - - 0 - layer", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfEvent_206_0_45, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&A2Cal2::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_206_0_46, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Cal2::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_206_0_47, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&A2Cal2::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_206_0_48, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&A2Cal2::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_206_0_52, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_206_0_53, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Cal2::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_206_0_54, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A2Cal2::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_206_0_55, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Cal2::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_206_0_56, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A2Cal2::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("A2Cal2", 437, G__libLHCfEvent_206_0_57, (int) ('i'), G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2), -1, 0, 1, 1, 1, 0, "u 'A2Cal2' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~A2Cal2", 563, G__libLHCfEvent_206_0_58, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfEvent_206_0_59, (int) ('u'), G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2), -1, 1, 1, 1, 1, 0, "u 'A2Cal2' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncA2Cal1(void) {
   /* A2Cal1 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1));
   G__memfunc_setup("A2Cal1",436,G__libLHCfEvent_207_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("A2Cal1",436,G__libLHCfEvent_207_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__libLHCfEvent_207_0_3, 105, -1, -1, 0, 1, 1, 1, 0, "i - 'A2Cal1::bankio' 0 'ALL' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copy",443,G__libLHCfEvent_207_0_4, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A2Cal1' - 0 - d i - 'A2Cal1::bankio' 0 'ALL' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copydata",853,G__libLHCfEvent_207_0_5, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A2Cal1' - 0 - d i - 'A2Cal1::bankio' 0 'ALL' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__libLHCfEvent_207_0_6, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A2Cal1' - 0 - d i - 'A2Cal1::bankio' 0 '0x1FF' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("subtract",872,G__libLHCfEvent_207_0_7, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A2Cal1' - 0 - d i - 'A2Cal1::bankio' 0 '0x1FF' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("multiply",896,G__libLHCfEvent_207_0_8, 105, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - d i - 'A2Cal1::bankio' 0 '0x1FF' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("divide",629,G__libLHCfEvent_207_0_9, 105, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - d i - 'A2Cal1::bankio' 0 '0x1FF' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pow",342,G__libLHCfEvent_207_0_10, 105, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - d i - 'A2Cal1::bankio' 0 '0x1FF' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sqrt",458,G__libLHCfEvent_207_0_11, 105, -1, -1, 0, 1, 1, 1, 0, "i - 'A2Cal1::bankio' 0 '0x1FF' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clk",314,G__libLHCfEvent_207_0_12, 100, -1, -1, 0, 0, 1, 1, 0, "", "scl0[1]*2^24+scl0[0]", (void*) NULL, 0);
   G__memfunc_setup("bptx1",495,G__libLHCfEvent_207_0_13, 100, -1, -1, 0, 0, 1, 1, 0, "", "scl0[3]*2^24+scl0[2]", (void*) NULL, 0);
   G__memfunc_setup("bptx2",496,G__libLHCfEvent_207_0_14, 100, -1, -1, 0, 0, 1, 1, 0, "", "scl0[5]*2^24+scl0[4]", (void*) NULL, 0);
   G__memfunc_setup("CheckFlag",856,G__libLHCfEvent_207_0_15, 105, -1, -1, 0, 2, 1, 1, 0, 
"h - - 0 - i h - - 0 - mask", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsBPTX1Flag",933,G__libLHCfEvent_207_0_16, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsBPTX2Flag",934,G__libLHCfEvent_207_0_17, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsEXTL1TFlag",1016,G__libLHCfEvent_207_0_18, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsL2TAFlag",841,G__libLHCfEvent_207_0_19, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsL2TPFlag",856,G__libLHCfEvent_207_0_20, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsL2TEXTFlag",1017,G__libLHCfEvent_207_0_21, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsL2TL1TFlag",985,G__libLHCfEvent_207_0_22, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSTRGFlag",886,G__libLHCfEvent_207_0_23, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSTrgSmallFlag",1455,G__libLHCfEvent_207_0_24, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsLTRGFlag",879,G__libLHCfEvent_207_0_25, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSTrgLargeFlag",1441,G__libLHCfEvent_207_0_26, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsBeamFlag",939,G__libLHCfEvent_207_0_27, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsPedeFlag",948,G__libLHCfEvent_207_0_28, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsLaserFlag",1069,G__libLHCfEvent_207_0_29, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsEnableFlag",1149,G__libLHCfEvent_207_0_30, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA1EnableFlag",1263,G__libLHCfEvent_207_0_31, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA1STrgFlag",1064,G__libLHCfEvent_207_0_32, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA1ShowerTrgFlag",1613,G__libLHCfEvent_207_0_33, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA1L3TFlag",891,G__libLHCfEvent_207_0_34, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA2EnableFlag",1264,G__libLHCfEvent_207_0_35, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA2STrgFlag",1065,G__libLHCfEvent_207_0_36, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA2ShowerTrgFlag",1614,G__libLHCfEvent_207_0_37, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA2L3TFlag",892,G__libLHCfEvent_207_0_38, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsATLASL1AFlag",1129,G__libLHCfEvent_207_0_39, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA1FCTrgFlag",1118,G__libLHCfEvent_207_0_40, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA2FCTrgFlag",1119,G__libLHCfEvent_207_0_41, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsL2TCFlag",843,G__libLHCfEvent_207_0_42, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsFCFlag",703,G__libLHCfEvent_207_0_43, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - arm i - - 0 - channel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsDSCFlag",784,G__libLHCfEvent_207_0_44, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - tower i - - 0 - layer", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CopySilicon",1132,G__libLHCfEvent_207_0_45, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Cal2' - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTDCofBPTX1",1087,G__libLHCfEvent_207_0_46, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTDCofBPTX2",1088,G__libLHCfEvent_207_0_47, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckBunchCrossing",1814,G__libLHCfEvent_207_0_48, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfEvent_207_0_49, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&A2Cal1::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_207_0_50, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Cal1::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_207_0_51, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&A2Cal1::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_207_0_52, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&A2Cal1::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_207_0_56, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_207_0_57, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Cal1::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_207_0_58, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A2Cal1::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_207_0_59, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Cal1::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_207_0_60, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A2Cal1::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("A2Cal1", 436, G__libLHCfEvent_207_0_61, (int) ('i'), G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1), -1, 0, 1, 1, 1, 0, "u 'A2Cal1' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~A2Cal1", 562, G__libLHCfEvent_207_0_62, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfEvent_207_0_63, (int) ('u'), G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1), -1, 1, 1, 1, 1, 0, "u 'A2Cal1' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncA2Phys(void) {
   /* A2Phys */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Phys));
   G__memfunc_setup("A2Phys",535,G__libLHCfEvent_215_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A2Phys), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("A2Phys",535,G__libLHCfEvent_215_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A2Phys), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__libLHCfEvent_215_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copy",443,G__libLHCfEvent_215_0_4, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Phys' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copydata",853,G__libLHCfEvent_215_0_5, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Phys' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Energy",618,G__libLHCfEvent_215_0_6, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pos",306,G__libLHCfEvent_215_0_7, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 - ixy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("X",88,G__libLHCfEvent_215_0_8, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Y",89,G__libLHCfEvent_215_0_9, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Hits",408,G__libLHCfEvent_215_0_10, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PID",221,G__libLHCfEvent_215_0_11, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsElemag",775,G__libLHCfEvent_215_0_12, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsHadron",792,G__libLHCfEvent_215_0_13, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InFiducial",984,G__libLHCfEvent_215_0_14, 103, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it d - - 0 '2.0' edgecut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GlobalPos",899,G__libLHCfEvent_215_0_15, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - ixy "
"d - - 0 '0.' offsetx d - - 0 '0.' offsety", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GPos",377,G__libLHCfEvent_215_0_16, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - ixy "
"d - - 0 '0.' offsetx d - - 0 '0.' offsety", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GPosX",465,G__libLHCfEvent_215_0_17, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it d - - 0 '0.' offsetx "
"d - - 0 '0.' offsety", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GPosY",466,G__libLHCfEvent_215_0_18, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it d - - 0 '0.' offsetx "
"d - - 0 '0.' offsety", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GPosR",459,G__libLHCfEvent_215_0_19, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it d - - 0 '0.' offsetx "
"d - - 0 '0.' offsety", "Note: offsetx, offsety = -1.* beamcenter ", (void*) NULL, 0);
   G__memfunc_setup("GetPi0Distance",1332,G__libLHCfEvent_215_0_20, 100, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'false' check", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPi0Mass",925,G__libLHCfEvent_215_0_21, 100, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'false' check", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPi0Energy",1139,G__libLHCfEvent_215_0_22, 100, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'false' check", "Pi0 Energy [GeV] (energy[0]+energy[1])", (void*) NULL, 0);
   G__memfunc_setup("Momentum",850,G__libLHCfEvent_215_0_23, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - dir "
"d - - 0 'GetOffsetBC(0)' beamcenter_x d - - 0 'GetOffsetBC(1)' beamcenter_y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPi0Momentum",1371,G__libLHCfEvent_215_0_24, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - dir d - - 0 'GetOffsetBC(0)' beamcenter_x "
"d - - 0 'GetOffsetBC(1)' beamcenter_y", "Return Pi0 Momentum [GeV/c]. ( Momentum(0,dir) + Momentum(1,dir))", (void*) NULL, 0);
   G__memfunc_setup("GetPi0MomentumX",1459,G__libLHCfEvent_215_0_25, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 'GetOffsetBC(0)' beamcenter_x d - - 0 'GetOffsetBC(1)' beamcenter_y", "Pi0 Momentum_X [GeV/c] (=GetPi0Momentum(0,beamcenter_x,beamcenter_y))", (void*) NULL, 0);
   G__memfunc_setup("GetPi0MomentumY",1460,G__libLHCfEvent_215_0_26, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 'GetOffsetBC(0)' beamcenter_x d - - 0 'GetOffsetBC(1)' beamcenter_y", "Pi0 Momentum_Y [GeV/c] (=GetPi0Momentum(1,beamcenter_x,beamcenter_y))   ", (void*) NULL, 0);
   G__memfunc_setup("GetPi0Pt",717,G__libLHCfEvent_215_0_27, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 'GetOffsetBC(0)' beamcenter_x d - - 0 'GetOffsetBC(1)' beamcenter_y", "Return Pi0 transverse momentum [GeV/c]   ", (void*) NULL, 0);
   G__memfunc_setup("GetPi0Pl",709,G__libLHCfEvent_215_0_28, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 'GetOffsetBC(0)' beamcenter_x d - - 0 'GetOffsetBC(1)' beamcenter_y", "Pi0 longitudinal momentum [GeV/c] (=GetPi0Momentum(2))", (void*) NULL, 0);
   G__memfunc_setup("GetPi0Rapidity",1359,G__libLHCfEvent_215_0_29, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 'GetOffsetBC(0)' beamcenter_x d - - 0 'GetOffsetBC(1)' beamcenter_y", "Pi0 Rapidity", (void*) NULL, 0);
   G__memfunc_setup("GlobalPos_Detector",1820,G__libLHCfEvent_215_0_30, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - tower i - - 0 - ixy", "Hit Position in the global detector coordinate", (void*) NULL, 0);
   G__memfunc_setup("GlobalPos_BC",1127,G__libLHCfEvent_215_0_31, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - tower i - - 0 - ixy "
"d - - 0 'GetOffsetBC(0)' offsetx d - - 0 'GetOffsetBC(1)' offsety", "Hit Position in the global beam center coordinate ", (void*) NULL, 0);
   G__memfunc_setup("GlobalPos_BeamPipe",1765,G__libLHCfEvent_215_0_32, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - tower i - - 0 - ixy "
"d - - 0 'GetOffsetBeamPipe(0)' offsetx d - - 0 'GetOffsetBeamPipe(1)' offsety", "Hit Position in the global beam pipe coordinate", (void*) NULL, 0);
   G__memfunc_setup("GPosX_Detector",1386,G__libLHCfEvent_215_0_33, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", "Arias to GlobalPos_Detector(tower,0)", (void*) NULL, 0);
   G__memfunc_setup("GPosY_Detector",1387,G__libLHCfEvent_215_0_34, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", "Arias to GlobalPos_Detector(tower,1)", (void*) NULL, 0);
   G__memfunc_setup("GPosX_BC",693,G__libLHCfEvent_215_0_35, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", "Arias to GlobalPos_BC(tower,0)", (void*) NULL, 0);
   G__memfunc_setup("GPosY_BC",694,G__libLHCfEvent_215_0_36, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", "Arias to GlobalPos_BC(tower,1)", (void*) NULL, 0);
   G__memfunc_setup("GPosX_BeamPipe",1331,G__libLHCfEvent_215_0_37, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", "Arias to GlobalPos_BeamPipe(tower,0)", (void*) NULL, 0);
   G__memfunc_setup("GPosY_BeamPipe",1332,G__libLHCfEvent_215_0_38, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", "Arias to GlobalPos_BeamPipe(tower,1)", (void*) NULL, 0);
   G__memfunc_setup("Show",417,G__libLHCfEvent_215_0_39, 121, -1, -1, 0, 0, 1, 1, 0, "", "Print informations.", (void*) NULL, 0);
   G__memfunc_setup("CalorimeterSize",1554,G__libLHCfEvent_215_0_40, 100, -1, -1, 0, 1, 3, 1, 0, "i - - 0 - it", (char*)NULL, (void*) G__func2void( (double (*)(int))(&A2Phys::CalorimeterSize) ), 0);
   G__memfunc_setup("SetPositionBeamCenter",2135,G__libLHCfEvent_215_0_41, 105, -1, -1, 0, 2, 3, 1, 0, 
"d - - 0 - x d - - 0 - y", "Set the Beam Center Position in the Global_Detertor coordinate.[mm]", (void*) G__func2void( (int (*)(double, double))(&A2Phys::SetPositionBeamCenter) ), 0);
   G__memfunc_setup("SetPositionBeamPipeCenter",2533,G__libLHCfEvent_215_0_42, 105, -1, -1, 0, 2, 3, 1, 0, 
"d - - 0 - x d - - 0 - y", "Set the Beam Pipe Center in the Global_Detertor coordinate.[mm]", (void*) G__func2void( (int (*)(double, double))(&A2Phys::SetPositionBeamPipeCenter) ), 0);
   G__memfunc_setup("GetOffsetBC",1036,G__libLHCfEvent_215_0_43, 100, -1, -1, 0, 1, 3, 1, 0, "i - - 0 - xy", "= sPositionBeamCenter[xy]  ", (void*) G__func2void( (double (*)(int))(&A2Phys::GetOffsetBC) ), 0);
   G__memfunc_setup("GetOffsetBeamPipe",1674,G__libLHCfEvent_215_0_44, 100, -1, -1, 0, 1, 3, 1, 0, "i - - 0 - xy", "= sPositionBeamPipe[xy]  ", (void*) G__func2void( (double (*)(int))(&A2Phys::GetOffsetBeamPipe) ), 0);
   G__memfunc_setup("Class",502,G__libLHCfEvent_215_0_45, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&A2Phys::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_215_0_46, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Phys::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_215_0_47, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&A2Phys::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_215_0_48, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&A2Phys::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_215_0_52, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_215_0_53, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Phys::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_215_0_54, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A2Phys::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_215_0_55, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Phys::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_215_0_56, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A2Phys::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("A2Phys", 535, G__libLHCfEvent_215_0_57, (int) ('i'), G__get_linked_tagnum(&G__libLHCfEventLN_A2Phys), -1, 0, 1, 1, 1, 0, "u 'A2Phys' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~A2Phys", 661, G__libLHCfEvent_215_0_58, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfEvent_215_0_59, (int) ('u'), G__get_linked_tagnum(&G__libLHCfEventLN_A2Phys), -1, 1, 1, 1, 1, 0, "u 'A2Phys' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRec0(void) {
   /* Rec0 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_Rec0));
   G__memfunc_setup("Rec0",330,G__libLHCfEvent_216_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_Rec0), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Rec0",330,G__libLHCfEvent_216_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_Rec0), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__libLHCfEvent_216_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__libLHCfEvent_216_0_4, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copy",443,G__libLHCfEvent_216_0_5, 105, -1, -1, 0, 1, 1, 1, 0, "U 'Rec0' - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copydata",853,G__libLHCfEvent_216_0_6, 105, -1, -1, 0, 1, 1, 1, 0, "U 'Rec0' - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFormatNumber",1522,G__libLHCfEvent_216_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillToPhys",1006,G__libLHCfEvent_216_0_8, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Phys' - 0 - phys", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillToPhys",1006,G__libLHCfEvent_216_0_9, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Phys' - 0 - phys", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Show",417,G__libLHCfEvent_216_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("resize",658,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"u 'vector<int,allocator<int> >' 'vector<int>' 1 - v i - - 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >' 'vector<unsigned int>' 1 - v i - - 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"u 'vector<double,allocator<double> >' 'vector<double>' 1 - v i - - 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"u 'vector<int,allocator<int> >' 'vector<int>' 1 - v i - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >' 'vector<unsigned int>' 1 - v h - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"u 'vector<double,allocator<double> >' 'vector<double>' 1 - v d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copy",443,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"u 'vector<int,allocator<int> >' 'vector<int>' 1 - v u 'vector<int,allocator<int> >' 'vector<int>' 1 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copy",443,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >' 'vector<unsigned int>' 1 - v u 'vector<unsigned int,allocator<unsigned int> >' 'vector<unsigned int>' 1 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copy",443,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"u 'vector<double,allocator<double> >' 'vector<double>' 1 - v u 'vector<double,allocator<double> >' 'vector<double>' 1 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventQuality",1547,G__libLHCfEvent_216_0_20, 105, -1, -1, 0, 0, 1, 1, 0, "", "Event Quality flag ", (void*) NULL, 1);
   G__memfunc_setup("SetEventQuality",1559,G__libLHCfEvent_216_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBeamColConf",1337,G__libLHCfEvent_216_0_22, 105, -1, -1, 0, 0, 1, 1, 0, "", "Beam Colliding flag", (void*) NULL, 1);
   G__memfunc_setup("SetBeamColConf",1349,G__libLHCfEvent_216_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBunchNumber",1401,G__libLHCfEvent_216_0_24, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ib", "Bunch Number (beam 1 or 2)", (void*) NULL, 1);
   G__memfunc_setup("SetBunchNumber",1413,G__libLHCfEvent_216_0_25, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - ib i - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFlags",781,G__libLHCfEvent_216_0_26, 104, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", "Flag from GPIO's (i-th)", (void*) NULL, 1);
   G__memfunc_setup("SetFlags",793,G__libLHCfEvent_216_0_27, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i h - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAnalysisFlags",1617,G__libLHCfEvent_216_0_28, 104, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", "Analysis flag (i-th)", (void*) NULL, 1);
   G__memfunc_setup("SetAnalysisFlags",1629,G__libLHCfEvent_216_0_29, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i h - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsShowerTrig",1226,G__libLHCfEvent_216_0_30, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsPi0Trig",827,G__libLHCfEvent_216_0_31, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsHighEMTrig",1124,G__libLHCfEvent_216_0_32, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCal",560,G__libLHCfEvent_216_0_33, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 - il", "Calorimeter dE (tower, layer)", (void*) NULL, 1);
   G__memfunc_setup("SetCal",572,G__libLHCfEvent_216_0_34, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFC",425,G__libLHCfEvent_216_0_35, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - iarm i - - 0 - ich", "FC dE (arm, channel)", (void*) NULL, 1);
   G__memfunc_setup("SetFC",437,G__libLHCfEvent_216_0_36, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - iarm i - - 0 - ich "
"d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTFitParam",1160,G__libLHCfEvent_216_0_37, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - tower i - - 0 - ipar", "shape w/o correction tower:0,1 ipar:0-3", (void*) NULL, 1);
   G__memfunc_setup("SetTFitParam",1172,G__libLHCfEvent_216_0_38, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - tower i - - 0 - ipar "
"d - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTFitParamCorr",1566,G__libLHCfEvent_216_0_39, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - tower i - - 0 - ipar", "shape w/ correction tower:0,1 ipar:0-3", (void*) NULL, 1);
   G__memfunc_setup("SetTFitParamCorr",1578,G__libLHCfEvent_216_0_40, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - tower i - - 0 - ipar "
"d - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTFitParamLeakin",1756,G__libLHCfEvent_216_0_41, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - tower i - - 0 - ipar", "Estimated shape of leakage-in tower:0,1 ipar:0-3", (void*) NULL, 1);
   G__memfunc_setup("SetTFitParamLeakin",1768,G__libLHCfEvent_216_0_42, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - tower i - - 0 - ipar "
"d - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTScale",860,G__libLHCfEvent_216_0_43, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", "Scale of Transition fit", (void*) NULL, 1);
   G__memfunc_setup("GetTScaleCorr",1266,G__libLHCfEvent_216_0_44, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", "Scale of Transition fit", (void*) NULL, 1);
   G__memfunc_setup("GetTScaleLeakin",1456,G__libLHCfEvent_216_0_45, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", "Scale of estimated shape of shower leakage-in", (void*) NULL, 1);
   G__memfunc_setup("GetTMax",666,G__libLHCfEvent_216_0_46, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", "Get depth of Shower Maximum", (void*) NULL, 1);
   G__memfunc_setup("GetTMaxCorr",1072,G__libLHCfEvent_216_0_47, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", "Get depth of Shower Maximum ", (void*) NULL, 1);
   G__memfunc_setup("GetTMaxLeakin",1262,G__libLHCfEvent_216_0_48, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", "Get depth of Shower Maximum ", (void*) NULL, 1);
   G__memfunc_setup("GetResultEnergy",1545,G__libLHCfEvent_216_0_49, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "Recommended reconstructed energy (tower)", (void*) NULL, 1);
   G__memfunc_setup("GetResultEnergy",1545,G__libLHCfEvent_216_0_50, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 - pid", "Recommended reconstructed energy (tower, pid)", (void*) NULL, 1);
   G__memfunc_setup("SetResultEnergy",1557,G__libLHCfEvent_216_0_51, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - pid "
"d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSumdE",766,G__libLHCfEvent_216_0_52, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "Sum dE(layer=0-15) (tower)", (void*) NULL, 1);
   G__memfunc_setup("SetSumdE",778,G__libLHCfEvent_216_0_53, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSumdE2",816,G__libLHCfEvent_216_0_54, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "Sum dE(layer=1-12) (tower)", (void*) NULL, 1);
   G__memfunc_setup("SetSumdE2",828,G__libLHCfEvent_216_0_55, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLeakageOut",1282,G__libLHCfEvent_216_0_56, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "Shower Leakage parameter (tower)", (void*) NULL, 1);
   G__memfunc_setup("SetLeakageOut",1294,G__libLHCfEvent_216_0_57, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLightYield",1295,G__libLHCfEvent_216_0_58, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 - il", "Correction factor of light yield (tower, layer)", (void*) NULL, 1);
   G__memfunc_setup("SetLightYield",1307,G__libLHCfEvent_216_0_59, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEnergyScaleFactor",2001,G__libLHCfEvent_216_0_60, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "Correction factor of energy scale (tower)", (void*) NULL, 1);
   G__memfunc_setup("SetEnergyScaleFactor",2013,G__libLHCfEvent_216_0_61, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetResultHitPosition",2073,G__libLHCfEvent_216_0_62, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 - ixy", "Recommended hit position results (tower, xy)", (void*) NULL, 1);
   G__memfunc_setup("SetResultHitPosition",2085,G__libLHCfEvent_216_0_63, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - ixy "
"d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetResultNumberOfHits",2133,G__libLHCfEvent_216_0_64, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "Recommended number of hit results (tower)", (void*) NULL, 1);
   G__memfunc_setup("SetResultNumberOfHits",2145,G__libLHCfEvent_216_0_65, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumberOfHits",1494,G__libLHCfEvent_216_0_66, 105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy", "Number of Hits in the tower (tower,layer,xy)", (void*) NULL, 1);
   G__memfunc_setup("SetNumberOfHits",1506,G__libLHCfEvent_216_0_67, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetHitPosition",1434,G__libLHCfEvent_216_0_68, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy", "Hit Position in each layer (tower,layer,xy)", (void*) NULL, 1);
   G__memfunc_setup("SetHitPosition",1446,G__libLHCfEvent_216_0_69, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPeakStrip",1203,G__libLHCfEvent_216_0_70, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy", "Strip number with maximum dE (tower,layer,xy)", (void*) NULL, 1);
   G__memfunc_setup("SetPeakStrip",1215,G__libLHCfEvent_216_0_71, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetdEAtPeak",1023,G__libLHCfEvent_216_0_72, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy", "dE at peak (tower,layer,xy)", (void*) NULL, 1);
   G__memfunc_setup("SetdEAtPeak",1035,G__libLHCfEvent_216_0_73, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSiSatuFlag",1267,G__libLHCfEvent_216_0_74, 105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy", "Saturation flag of silicon middle sample", (void*) NULL, 1);
   G__memfunc_setup("SetSiSatuFlag",1279,G__libLHCfEvent_216_0_75, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMHBkgPar",1004,G__libLHCfEvent_216_0_76, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - layer i - - 0 - xy "
"i - - 0 - ipar", "Results of Background Fitting by a linear function ", (void*) NULL, 1);
   G__memfunc_setup("SetMHBkgPar",1016,G__libLHCfEvent_216_0_77, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - layer i - - 0 - xy "
"i - - 0 - ipar d - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMHNhits",955,G__libLHCfEvent_216_0_78, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - layer i - - 0 - xy", "Number of Hits in the layer (layer, xy)", (void*) NULL, 1);
   G__memfunc_setup("SetMHNhits",967,G__libLHCfEvent_216_0_79, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - layer i - - 0 - xy "
"i - - 0 - nhits", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMHParPos",1034,G__libLHCfEvent_216_0_80, 105, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - layer i - - 0 - xy "
"i - - 0 - ihits i - - 0 - ipar", "Return the position of parameter in the array.        ", (void*) NULL, 1);
   G__memfunc_setup("GetMHPar",728,G__libLHCfEvent_216_0_81, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - layer i - - 0 - xy "
"i - - 0 - ihit i - - 0 - ipar", "Parameter of Multi-hit fitting (layer, xy, ihit, ipar);", (void*) NULL, 1);
   G__memfunc_setup("SetMHPar",740,G__libLHCfEvent_216_0_82, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - layer i - - 0 - xy "
"i - - 0 - ihit i - - 0 - ipar "
"d - - 0 - val", "To modify the parameter value. ", (void*) NULL, 1);
   G__memfunc_setup("GetMHDiscardedFlag",1714,G__libLHCfEvent_216_0_83, 103, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - layer i - - 0 - xy "
"i - - 0 - ihit", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddMHHit",707,G__libLHCfEvent_216_0_84, 105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - layer i - - 0 - xy "
"D - - 0 - par", "Add new the hit parameters  ", (void*) NULL, 1);
   G__memfunc_setup("EraseMHHit",938,G__libLHCfEvent_216_0_85, 105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - layer i - - 0 - xy "
"i - - 0 - ihit", "Erase the hit in the array. ", (void*) NULL, 1);
   G__memfunc_setup("GetMHNumberOfHits",1643,G__libLHCfEvent_216_0_86, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", "Number of hits in the tower (except discarded peaks)", (void*) NULL, 1);
   G__memfunc_setup("SetMHNumberOfHits",1655,G__libLHCfEvent_216_0_87, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - tower i - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMaxBarLayer",1368,G__libLHCfEvent_216_0_88, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMaxBarLayer",1380,G__libLHCfEvent_216_0_89, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMaxBarLayer2",1418,G__libLHCfEvent_216_0_90, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMaxBarLayer2",1430,G__libLHCfEvent_216_0_91, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMHPosition",1290,G__libLHCfEvent_216_0_92, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - imu", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMHPosition",1302,G__libLHCfEvent_216_0_93, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - imu "
"d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMHPeakRaw",1120,G__libLHCfEvent_216_0_94, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - imu", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMHPeakRaw",1132,G__libLHCfEvent_216_0_95, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - imu "
"d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMHPeakEstimated",1750,G__libLHCfEvent_216_0_96, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - imu", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMHPeakEstimated",1762,G__libLHCfEvent_216_0_97, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - imu "
"d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMHIntegral",1259,G__libLHCfEvent_216_0_98, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - imu", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMHIntegral",1271,G__libLHCfEvent_216_0_99, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - imu "
"d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetChiSquare",1189,G__libLHCfEvent_216_0_100, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - imu", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetChiSquare",1201,G__libLHCfEvent_216_0_101, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - imu "
"d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetResultPID",1148,G__libLHCfEvent_216_0_102, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "Recommended PID result (tower)", (void*) NULL, 1);
   G__memfunc_setup("SetResultPID",1160,G__libLHCfEvent_216_0_103, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetL20",462,G__libLHCfEvent_216_0_104, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "L20% (tower)", (void*) NULL, 1);
   G__memfunc_setup("SetL20",474,G__libLHCfEvent_216_0_105, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetL90",469,G__libLHCfEvent_216_0_106, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "L90% (tower) ", (void*) NULL, 1);
   G__memfunc_setup("SetL90",481,G__libLHCfEvent_216_0_107, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetL2D",482,G__libLHCfEvent_216_0_108, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "L2D(tower)", (void*) NULL, 1);
   G__memfunc_setup("SetL2D",494,G__libLHCfEvent_216_0_109, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetL20wocorr",1130,G__libLHCfEvent_216_0_110, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", "Get L20% which was calculated before shower leakin corr.", (void*) NULL, 1);
   G__memfunc_setup("SetL20wocorr",1142,G__libLHCfEvent_216_0_111, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - tower d - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetL90wocorr",1137,G__libLHCfEvent_216_0_112, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", "Get L90% which was calculated before shower leakin corr.", (void*) NULL, 1);
   G__memfunc_setup("SetL90wocorr",1149,G__libLHCfEvent_216_0_113, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - tower d - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTransitionFit",1646,G__libLHCfEvent_216_0_114, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 - ip", "Results of transition fiting (tower, parameter)", (void*) NULL, 1);
   G__memfunc_setup("SetTransitionFit",1658,G__libLHCfEvent_216_0_115, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - ip "
"d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTDC_BPTX",920,G__libLHCfEvent_216_0_116, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ib", "TDC value of BPTX (beam 1 or 2)", (void*) NULL, 1);
   G__memfunc_setup("SetTDC_BPTX",932,G__libLHCfEvent_216_0_117, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - ib d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCounter",1024,G__libLHCfEvent_216_0_118, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", "Counter Value (i-th)", (void*) NULL, 1);
   G__memfunc_setup("SetCounter",1036,G__libLHCfEvent_216_0_119, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__libLHCfEvent_216_0_120, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Rec0::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_216_0_121, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Rec0::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_216_0_122, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Rec0::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_216_0_123, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Rec0::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_216_0_127, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_216_0_128, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Rec0::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_216_0_129, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Rec0::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_216_0_130, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Rec0::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_216_0_131, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Rec0::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Rec0", 330, G__libLHCfEvent_216_0_132, (int) ('i'), G__get_linked_tagnum(&G__libLHCfEventLN_Rec0), -1, 0, 1, 1, 1, 0, "u 'Rec0' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Rec0", 456, G__libLHCfEvent_216_0_133, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfEvent_216_0_134, (int) ('u'), G__get_linked_tagnum(&G__libLHCfEventLN_Rec0), -1, 1, 1, 1, 1, 0, "u 'Rec0' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncA2Cal2M(void) {
   /* A2Cal2M */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2M));
   G__memfunc_setup("A2Cal2M",514,G__libLHCfEvent_223_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2M), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("A2Cal2M",514,G__libLHCfEvent_223_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2M), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,(G__InterfaceMethod) NULL,105, -1, -1, 0, 1, 1, 1, 0, "i - 'A2Cal2::bankio' 0 'ALL' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("copy",443,(G__InterfaceMethod) NULL,105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A2Cal2' - 0 - d i - 'A2Cal2::bankio' 0 'ALL' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("copydata",853,(G__InterfaceMethod) NULL,105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A2Cal2' - 0 - d i - 'A2Cal2::bankio' 0 'ALL' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("copy",443,G__libLHCfEvent_223_0_6, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A2Cal2M' - 0 - d i - 'A2Cal2::bankio' 0 'ALL' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copydata",853,G__libLHCfEvent_223_0_7, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A2Cal2M' - 0 - d i - 'A2Cal2::bankio' 0 'ALL' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clk",314,G__libLHCfEvent_223_0_8, 100, -1, -1, 0, 0, 1, 1, 0, "", "scl0[1]*2^24+scl0[0]", (void*) NULL, 0);
   G__memfunc_setup("bptx1",495,G__libLHCfEvent_223_0_9, 100, -1, -1, 0, 0, 1, 1, 0, "", "scl0[3]*2^24+scl0[2]", (void*) NULL, 0);
   G__memfunc_setup("bptx2",496,G__libLHCfEvent_223_0_10, 100, -1, -1, 0, 0, 1, 1, 0, "", "scl0[5]*2^24+scl0[4]", (void*) NULL, 0);
   G__memfunc_setup("GetTDCofBPTX1",1087,G__libLHCfEvent_223_0_11, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTDCofBPTX2",1088,G__libLHCfEvent_223_0_12, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckBunchCrossing",1814,G__libLHCfEvent_223_0_13, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfEvent_223_0_14, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&A2Cal2M::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_223_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Cal2M::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_223_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&A2Cal2M::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_223_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&A2Cal2M::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_223_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_223_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Cal2M::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_223_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A2Cal2M::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_223_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Cal2M::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_223_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A2Cal2M::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("A2Cal2M", 514, G__libLHCfEvent_223_0_26, (int) ('i'), G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2M), -1, 0, 1, 1, 1, 0, "u 'A2Cal2M' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~A2Cal2M", 640, G__libLHCfEvent_223_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfEvent_223_0_28, (int) ('u'), G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2M), -1, 1, 1, 1, 1, 0, "u 'A2Cal2M' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncA2Info(void) {
   /* A2Info */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Info));
   G__memfunc_setup("A2Info",511,G__libLHCfEvent_225_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A2Info), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("A2Info",511,G__libLHCfEvent_225_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A2Info), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__libLHCfEvent_225_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfEvent_225_0_4, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&A2Info::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_225_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Info::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_225_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&A2Info::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_225_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&A2Info::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_225_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_225_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Info::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_225_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A2Info::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_225_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Info::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_225_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A2Info::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("A2Info", 511, G__libLHCfEvent_225_0_16, (int) ('i'), G__get_linked_tagnum(&G__libLHCfEventLN_A2Info), -1, 0, 1, 1, 1, 0, "u 'A2Info' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~A2Info", 637, G__libLHCfEvent_225_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfEvent_225_0_18, (int) ('u'), G__get_linked_tagnum(&G__libLHCfEventLN_A2Info), -1, 1, 1, 1, 1, 0, "u 'A2Info' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncA2Scl(void) {
   /* A2Scl */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Scl));
   G__memfunc_setup("A2Scl",405,G__libLHCfEvent_226_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A2Scl), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("A2Scl",405,G__libLHCfEvent_226_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A2Scl), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name C - - 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__libLHCfEvent_226_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copy",443,G__libLHCfEvent_226_0_4, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Scl' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copydata",853,G__libLHCfEvent_226_0_5, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Scl' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfEvent_226_0_6, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&A2Scl::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_226_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Scl::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_226_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&A2Scl::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_226_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&A2Scl::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_226_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_226_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Scl::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_226_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A2Scl::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_226_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Scl::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_226_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A2Scl::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("A2Scl", 405, G__libLHCfEvent_226_0_18, (int) ('i'), G__get_linked_tagnum(&G__libLHCfEventLN_A2Scl), -1, 0, 1, 1, 1, 0, "u 'A2Scl' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~A2Scl", 531, G__libLHCfEvent_226_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfEvent_226_0_20, (int) ('u'), G__get_linked_tagnum(&G__libLHCfEventLN_A2Scl), -1, 1, 1, 1, 1, 0, "u 'A2Scl' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRawL1T(void) {
   /* RawL1T */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_RawL1T));
   G__memfunc_setup("RawL1T",507,G__libLHCfEvent_227_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_RawL1T), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RawL1T",507,G__libLHCfEvent_227_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_RawL1T), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__libLHCfEvent_227_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copy",443,G__libLHCfEvent_227_0_4, 105, -1, -1, 0, 1, 1, 1, 0, "U 'RawL1T' - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copydata",853,G__libLHCfEvent_227_0_5, 105, -1, -1, 0, 1, 1, 1, 0, "U 'RawL1T' - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfEvent_227_0_6, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RawL1T::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_227_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RawL1T::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_227_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RawL1T::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_227_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RawL1T::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_227_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_227_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RawL1T::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_227_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RawL1T::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_227_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RawL1T::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_227_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RawL1T::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RawL1T", 507, G__libLHCfEvent_227_0_18, (int) ('i'), G__get_linked_tagnum(&G__libLHCfEventLN_RawL1T), -1, 0, 1, 1, 1, 0, "u 'RawL1T' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RawL1T", 633, G__libLHCfEvent_227_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfEvent_227_0_20, (int) ('u'), G__get_linked_tagnum(&G__libLHCfEventLN_RawL1T), -1, 1, 1, 1, 1, 0, "u 'RawL1T' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSclL1T(void) {
   /* SclL1T */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_SclL1T));
   G__memfunc_setup("SclL1T",499,G__libLHCfEvent_228_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_SclL1T), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SclL1T",499,G__libLHCfEvent_228_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_SclL1T), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__libLHCfEvent_228_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copy",443,G__libLHCfEvent_228_0_4, 105, -1, -1, 0, 1, 1, 1, 0, "U 'SclL1T' - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copydata",853,G__libLHCfEvent_228_0_5, 105, -1, -1, 0, 1, 1, 1, 0, "U 'SclL1T' - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfEvent_228_0_6, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SclL1T::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_228_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SclL1T::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_228_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SclL1T::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_228_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SclL1T::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_228_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_228_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SclL1T::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_228_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SclL1T::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_228_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SclL1T::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_228_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SclL1T::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("SclL1T", 499, G__libLHCfEvent_228_0_18, (int) ('i'), G__get_linked_tagnum(&G__libLHCfEventLN_SclL1T), -1, 0, 1, 1, 1, 0, "u 'SclL1T' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SclL1T", 625, G__libLHCfEvent_228_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfEvent_228_0_20, (int) ('u'), G__get_linked_tagnum(&G__libLHCfEventLN_SclL1T), -1, 1, 1, 1, 1, 0, "u 'SclL1T' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncGParam(void) {
   /* GParam */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_GParam));
   G__memfunc_setup("GParam",568,G__libLHCfEvent_229_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_GParam), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GParam",568,G__libLHCfEvent_229_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_GParam), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__libLHCfEvent_229_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copy",443,G__libLHCfEvent_229_0_4, 105, -1, -1, 0, 1, 1, 1, 0, "U 'GParam' - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copydata",853,G__libLHCfEvent_229_0_5, 105, -1, -1, 0, 1, 1, 1, 0, "U 'GParam' - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetI",373,G__libLHCfEvent_229_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i i - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetI",361,G__libLHCfEvent_229_0_7, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetD",368,G__libLHCfEvent_229_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetD",356,G__libLHCfEvent_229_0_9, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfEvent_229_0_10, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&GParam::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_229_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GParam::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_229_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&GParam::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_229_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&GParam::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_229_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_229_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GParam::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_229_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GParam::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_229_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GParam::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_229_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GParam::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("GParam", 568, G__libLHCfEvent_229_0_22, (int) ('i'), G__get_linked_tagnum(&G__libLHCfEventLN_GParam), -1, 0, 1, 1, 1, 0, "u 'GParam' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~GParam", 694, G__libLHCfEvent_229_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfEvent_229_0_24, (int) ('u'), G__get_linked_tagnum(&G__libLHCfEventLN_GParam), -1, 1, 1, 1, 1, 0, "u 'GParam' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncGParamD64(void) {
   /* GParamD64 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_GParamD64));
   G__memfunc_setup("GParamD64",742,G__libLHCfEvent_230_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_GParamD64), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GParamD64",742,G__libLHCfEvent_230_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_GParamD64), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__libLHCfEvent_230_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copy",443,G__libLHCfEvent_230_0_4, 105, -1, -1, 0, 1, 1, 1, 0, "U 'GParamD64' - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copydata",853,G__libLHCfEvent_230_0_5, 105, -1, -1, 0, 1, 1, 1, 0, "U 'GParamD64' - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetD",368,G__libLHCfEvent_230_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetD",356,G__libLHCfEvent_230_0_7, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set",300,G__libLHCfEvent_230_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get",288,G__libLHCfEvent_230_0_9, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfEvent_230_0_10, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&GParamD64::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_230_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GParamD64::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_230_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&GParamD64::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_230_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&GParamD64::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_230_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_230_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GParamD64::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_230_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GParamD64::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_230_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GParamD64::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_230_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GParamD64::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("GParamD64", 742, G__libLHCfEvent_230_0_22, (int) ('i'), G__get_linked_tagnum(&G__libLHCfEventLN_GParamD64), -1, 0, 1, 1, 1, 0, "u 'GParamD64' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~GParamD64", 868, G__libLHCfEvent_230_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfEvent_230_0_24, (int) ('u'), G__get_linked_tagnum(&G__libLHCfEventLN_GParamD64), -1, 1, 1, 1, 1, 0, "u 'GParamD64' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSPSAdamo(void) {
   /* SPSAdamo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_SPSAdamo));
   G__memfunc_setup("SPSAdamo",728,G__libLHCfEvent_231_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_SPSAdamo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SPSAdamo",728,G__libLHCfEvent_231_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_SPSAdamo), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__libLHCfEvent_231_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copy",443,G__libLHCfEvent_231_0_4, 105, -1, -1, 0, 1, 1, 1, 0, "U 'SPSAdamo' - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copydata",853,G__libLHCfEvent_231_0_5, 105, -1, -1, 0, 1, 1, 1, 0, "U 'SPSAdamo' - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__libLHCfEvent_231_0_6, 105, -1, -1, 0, 1, 1, 1, 0, "U 'SPSAdamo' - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("subtract",872,G__libLHCfEvent_231_0_7, 105, -1, -1, 0, 1, 1, 1, 0, "U 'SPSAdamo' - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("multiply",896,G__libLHCfEvent_231_0_8, 105, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("divide",629,G__libLHCfEvent_231_0_9, 105, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsValid",684,G__libLHCfEvent_231_0_10, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsValidStrip",1214,G__libLHCfEvent_231_0_11, 103, -1, -1, 0, 3, 3, 1, 0, 
"i - - 0 - il i - - 0 - ixy "
"i - - 0 - is", "Valid channel if valid, return true. ", (void*) G__func2void( (bool (*)(int, int, int))(&SPSAdamo::IsValidStrip) ), 0);
   G__memfunc_setup("IsDeadStrip",1084,G__libLHCfEvent_231_0_12, 103, -1, -1, 0, 3, 3, 1, 0, 
"i - - 0 - il i - - 0 - ixy "
"i - - 0 - is", "Dead channel. if dead, return true. ", (void*) G__func2void( (bool (*)(int, int, int))(&SPSAdamo::IsDeadStrip) ), 0);
   G__memfunc_setup("IsBadStrip",981,G__libLHCfEvent_231_0_13, 103, -1, -1, 0, 3, 3, 1, 0, 
"i - - 0 - il i - - 0 - ixy "
"i - - 0 - is", "Noisy channel if bad, return true. ", (void*) G__func2void( (bool (*)(int, int, int))(&SPSAdamo::IsBadStrip) ), 0);
   G__memfunc_setup("IsIwataStrip",1220,G__libLHCfEvent_231_0_14, 103, -1, -1, 0, 3, 3, 1, 0, 
"i - - 0 - il i - - 0 - ixy "
"i - - 0 - is", "Noisy channel if bad, dead channel if dead, return true. ", (void*) G__func2void( (bool (*)(int, int, int))(&SPSAdamo::IsIwataStrip) ), 0);
   G__memfunc_setup("Class",502,G__libLHCfEvent_231_0_15, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SPSAdamo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_231_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SPSAdamo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_231_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SPSAdamo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_231_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SPSAdamo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_231_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_231_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SPSAdamo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_231_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SPSAdamo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_231_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SPSAdamo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_231_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SPSAdamo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("SPSAdamo", 728, G__libLHCfEvent_231_0_27, (int) ('i'), G__get_linked_tagnum(&G__libLHCfEventLN_SPSAdamo), -1, 0, 1, 1, 1, 0, "u 'SPSAdamo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SPSAdamo", 854, G__libLHCfEvent_231_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfEvent_231_0_29, (int) ('u'), G__get_linked_tagnum(&G__libLHCfEventLN_SPSAdamo), -1, 1, 1, 1, 1, 0, "u 'SPSAdamo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRHICfSinglePar(void) {
   /* RHICfSinglePar */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_RHICfSinglePar));
   G__memfunc_setup("RHICfSinglePar",1297,G__libLHCfEvent_275_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_RHICfSinglePar), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RHICfSinglePar",1297,G__libLHCfEvent_275_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_RHICfSinglePar), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTower",861,G__libLHCfEvent_275_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setId",505,G__libLHCfEvent_275_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPosition",1185,G__libLHCfEvent_275_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - x d - - 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEnergy",950,G__libLHCfEvent_275_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - E", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPid",617,G__libLHCfEvent_275_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - pid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBeamCenter",1314,G__libLHCfEvent_275_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - x0 d - - 0 - y0", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tower",561,G__libLHCfEvent_275_0_9, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("id",205,G__libLHCfEvent_275_0_10, 104, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("energy",650,G__libLHCfEvent_275_0_11, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fourmomentum",1326,G__libLHCfEvent_275_0_12, 117, G__get_linked_tagnum(&G__libLHCfEventLN_TLorentzVector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("position",885,G__libLHCfEvent_275_0_13, 117, G__get_linked_tagnum(&G__libLHCfEventLN_TVector2), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pid",317,G__libLHCfEvent_275_0_14, 117, G__get_linked_tagnum(&G__libLHCfEventLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pT",196,G__libLHCfEvent_275_0_15, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eta",314,G__libLHCfEvent_275_0_16, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("phi",321,G__libLHCfEvent_275_0_17, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfEvent_275_0_18, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RHICfSinglePar::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_275_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RHICfSinglePar::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_275_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RHICfSinglePar::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_275_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RHICfSinglePar::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_275_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_275_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RHICfSinglePar::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_275_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RHICfSinglePar::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_275_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RHICfSinglePar::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_275_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RHICfSinglePar::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RHICfSinglePar", 1297, G__libLHCfEvent_275_0_30, (int) ('i'), G__get_linked_tagnum(&G__libLHCfEventLN_RHICfSinglePar), -1, 0, 1, 1, 1, 0, "u 'RHICfSinglePar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RHICfSinglePar", 1423, G__libLHCfEvent_275_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfEvent_275_0_32, (int) ('u'), G__get_linked_tagnum(&G__libLHCfEventLN_RHICfSinglePar), -1, 1, 1, 1, 1, 0, "u 'RHICfSinglePar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRHICfPhotonPair(void) {
   /* RHICfPhotonPair */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_RHICfPhotonPair));
   G__memfunc_setup("RHICfPhotonPair",1424,G__libLHCfEvent_276_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_RHICfPhotonPair), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__libLHCfEvent_276_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPi0Type",983,G__libLHCfEvent_276_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEnergy",950,G__libLHCfEvent_276_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - E", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFourMomentum",1594,G__libLHCfEvent_276_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 0 - mom", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPhotonId",1137,G__libLHCfEvent_276_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - - 0 - id1 h - - 0 - id2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pi0type",715,G__libLHCfEvent_276_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("energy",650,G__libLHCfEvent_276_0_8, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fourmomentum",1326,G__libLHCfEvent_276_0_9, 117, G__get_linked_tagnum(&G__libLHCfEventLN_TLorentzVector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("invarmass",980,G__libLHCfEvent_276_0_10, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pT",196,G__libLHCfEvent_276_0_11, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eta",314,G__libLHCfEvent_276_0_12, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("phi",321,G__libLHCfEvent_276_0_13, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("id1",254,G__libLHCfEvent_276_0_14, 104, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("id2",255,G__libLHCfEvent_276_0_15, 104, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__libLHCfEvent_276_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfEvent_276_0_17, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RHICfPhotonPair::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_276_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RHICfPhotonPair::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_276_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RHICfPhotonPair::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_276_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RHICfPhotonPair::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_276_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_276_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RHICfPhotonPair::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_276_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RHICfPhotonPair::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_276_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RHICfPhotonPair::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_276_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RHICfPhotonPair::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RHICfPhotonPair", 1424, G__libLHCfEvent_276_0_29, (int) ('i'), G__get_linked_tagnum(&G__libLHCfEventLN_RHICfPhotonPair), -1, 0, 1, 1, 1, 0, "u 'RHICfPhotonPair' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RHICfPhotonPair", 1550, G__libLHCfEvent_276_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfEvent_276_0_31, (int) ('u'), G__get_linked_tagnum(&G__libLHCfEventLN_RHICfPhotonPair), -1, 1, 1, 1, 1, 0, "u 'RHICfPhotonPair' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncA1Rec1(void) {
   /* A1Rec1 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Rec1));
   G__memfunc_setup("A1Rec1",445,G__libLHCfEvent_277_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A1Rec1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("A1Rec1",445,G__libLHCfEvent_277_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A1Rec1), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__libLHCfEvent_277_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Show",417,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEventQuality",1547,(G__InterfaceMethod) NULL,105, -1, -1, 0, 0, 1, 1, 0, "", "Event Quality flag ", (void*) NULL, 1);
   G__memfunc_setup("SetEventQuality",1559,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBeamColConf",1337,(G__InterfaceMethod) NULL,105, -1, -1, 0, 0, 1, 1, 0, "", "Beam Colliding flag", (void*) NULL, 1);
   G__memfunc_setup("SetBeamColConf",1349,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBunchNumber",1401,(G__InterfaceMethod) NULL,105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ib", "Bunch Number (beam 1 or 2)", (void*) NULL, 1);
   G__memfunc_setup("SetBunchNumber",1413,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - ib i - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFlags",781,(G__InterfaceMethod) NULL,104, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", "Flag from GPIO's (i-th)", (void*) NULL, 1);
   G__memfunc_setup("SetFlags",793,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i h - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsShowerTrig",1226,(G__InterfaceMethod) NULL,103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsPi0Trig",827,(G__InterfaceMethod) NULL,103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsHighEMTrig",1124,(G__InterfaceMethod) NULL,103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetResultEnergy",1545,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "Recommended reconstructed energy (tower)", (void*) NULL, 1);
   G__memfunc_setup("GetResultEnergy",1545,(G__InterfaceMethod) NULL,100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 - pid", "Recommended reconstructed energy (tower, pid)", (void*) NULL, 1);
   G__memfunc_setup("SetResultEnergy",1557,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - pid "
"d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSumdE",766,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "Sum dE(layer=0-15) (tower)", (void*) NULL, 1);
   G__memfunc_setup("SetSumdE",778,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSumdE2",816,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "Sum dE(layer=1-12) (tower)", (void*) NULL, 1);
   G__memfunc_setup("SetSumdE2",828,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLeakageOut",1282,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "Shower Leakage parameter (tower)", (void*) NULL, 1);
   G__memfunc_setup("SetLeakageOut",1294,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEnergyScaleFactor",2001,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "Correction factor of energy scale (tower)", (void*) NULL, 1);
   G__memfunc_setup("SetEnergyScaleFactor",2013,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetResultHitPosition",2073,(G__InterfaceMethod) NULL,100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 - ixy", "Recommended hit position results (tower, xy)", (void*) NULL, 1);
   G__memfunc_setup("SetResultHitPosition",2085,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - ixy "
"d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetResultNumberOfHits",2133,(G__InterfaceMethod) NULL,105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "Recommended number of hit results (tower)", (void*) NULL, 1);
   G__memfunc_setup("SetResultNumberOfHits",2145,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumberOfHits",1494,(G__InterfaceMethod) NULL,105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy", "Number of Hits in the tower (tower,layer,xy)", (void*) NULL, 1);
   G__memfunc_setup("SetNumberOfHits",1506,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetHitPosition",1434,(G__InterfaceMethod) NULL,100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy", "Hit Position in each layer (tower,layer,xy)", (void*) NULL, 1);
   G__memfunc_setup("SetHitPosition",1446,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPeakPosition",1526,G__libLHCfEvent_277_0_35, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy", "Fiber number with maximum dE (tower,layer,xy)", (void*) NULL, 1);
   G__memfunc_setup("SetPeakPosition",1538,G__libLHCfEvent_277_0_36, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetdEAtPeak",1023,(G__InterfaceMethod) NULL,100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy", "dE at peak (tower,layer,xy)", (void*) NULL, 1);
   G__memfunc_setup("SetdEAtPeak",1035,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMaxBarLayer",1368,(G__InterfaceMethod) NULL,105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMaxBarLayer",1380,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMaxBarLayer2",1418,(G__InterfaceMethod) NULL,105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMaxBarLayer2",1430,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMHPosition",1290,(G__InterfaceMethod) NULL,100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - imu", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMHPosition",1302,(G__InterfaceMethod) NULL,121, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - imu "
"d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMHPeakRaw",1120,(G__InterfaceMethod) NULL,100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - imu", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMHPeakRaw",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - imu "
"d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMHPeakEstimated",1750,(G__InterfaceMethod) NULL,100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - imu", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMHPeakEstimated",1762,(G__InterfaceMethod) NULL,121, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - imu "
"d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMHIntegral",1259,(G__InterfaceMethod) NULL,100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - imu", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMHIntegral",1271,(G__InterfaceMethod) NULL,121, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - imu "
"d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetChiSquare",1189,(G__InterfaceMethod) NULL,100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - imu", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetChiSquare",1201,(G__InterfaceMethod) NULL,121, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - imu "
"d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetResultPID",1148,(G__InterfaceMethod) NULL,105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "Recommended PID result (tower)", (void*) NULL, 1);
   G__memfunc_setup("SetResultPID",1160,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetL20",462,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "L20% (tower)", (void*) NULL, 1);
   G__memfunc_setup("SetL20",474,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetL90",469,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "L90% (tower) ", (void*) NULL, 1);
   G__memfunc_setup("SetL90",481,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMHBkgPar",1004,G__libLHCfEvent_277_0_59, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - tower i - - 0 - layer "
"i - - 0 - xy i - - 0 - ipar", "Results of Background Fitting by a linear function ", (void*) NULL, 1);
   G__memfunc_setup("SetMHBkgPar",1016,G__libLHCfEvent_277_0_60, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - tower i - - 0 - layer "
"i - - 0 - xy i - - 0 - ipar "
"d - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMHNhits",955,G__libLHCfEvent_277_0_61, 105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - tower i - - 0 - layer "
"i - - 0 - xy", "Number of Hits in the layer (layer, xy) includeing discarded peaks", (void*) NULL, 1);
   G__memfunc_setup("SetMHNhits",967,G__libLHCfEvent_277_0_62, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - tower i - - 0 - layer "
"i - - 0 - xy i - - 0 - nhits", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMHParPos",1034,G__libLHCfEvent_277_0_63, 105, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - tower i - - 0 - layer "
"i - - 0 - xy i - - 0 - ihits "
"i - - 0 - ipar", "Return the position of parameter in the array.        ", (void*) NULL, 1);
   G__memfunc_setup("GetMHPar",728,G__libLHCfEvent_277_0_64, 100, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - tower i - - 0 - layer "
"i - - 0 - xy i - - 0 - ihit "
"i - - 0 - ipar", "Parameter of Multi-hit fitting (layer, xy, ihit, ipar);", (void*) NULL, 1);
   G__memfunc_setup("SetMHPar",740,G__libLHCfEvent_277_0_65, 121, -1, -1, 0, 6, 1, 1, 0, 
"i - - 0 - tower i - - 0 - layer "
"i - - 0 - xy i - - 0 - ihit "
"i - - 0 - ipar d - - 0 - val", "To modify the parameter value. ", (void*) NULL, 1);
   G__memfunc_setup("GetMHDiscardedFlag",1714,G__libLHCfEvent_277_0_66, 103, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - tower i - - 0 - layer "
"i - - 0 - xy i - - 0 - ihit", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddMHHit",707,G__libLHCfEvent_277_0_67, 105, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - tower i - - 0 - layer "
"i - - 0 - xy D - - 0 - par", "Add new the hit parameters  ", (void*) NULL, 1);
   G__memfunc_setup("EraseMHHit",938,G__libLHCfEvent_277_0_68, 105, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - tower i - - 0 - layer "
"i - - 0 - xy i - - 0 - ihit", "Erase the hit in the array. ", (void*) NULL, 1);
   G__memfunc_setup("GetMHNumberOfHits",1643,(G__InterfaceMethod) NULL,105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", "Number of hits in the tower (except discarded peaks)", (void*) NULL, 1);
   G__memfunc_setup("SetMHNumberOfHits",1655,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - tower i - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__libLHCfEvent_277_0_71, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&A1Rec1::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_277_0_72, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1Rec1::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_277_0_73, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&A1Rec1::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_277_0_74, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&A1Rec1::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_277_0_78, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_277_0_79, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1Rec1::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_277_0_80, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A1Rec1::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_277_0_81, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1Rec1::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_277_0_82, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A1Rec1::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("A1Rec1", 445, G__libLHCfEvent_277_0_83, (int) ('i'), G__get_linked_tagnum(&G__libLHCfEventLN_A1Rec1), -1, 0, 1, 1, 1, 0, "u 'A1Rec1' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~A1Rec1", 571, G__libLHCfEvent_277_0_84, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfEvent_277_0_85, (int) ('u'), G__get_linked_tagnum(&G__libLHCfEventLN_A1Rec1), -1, 1, 1, 1, 1, 0, "u 'A1Rec1' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRHICfCollection(void) {
   /* RHICfCollection */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_RHICfCollection));
   G__memfunc_setup("RHICfCollection",1432,G__libLHCfEvent_278_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_RHICfCollection), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RHICfCollection",1432,G__libLHCfEvent_278_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_RHICfCollection), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__libLHCfEvent_278_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addSinglePars",1313,G__libLHCfEvent_278_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TClonesArray' - 0 - pars", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addPhotonPairs",1440,G__libLHCfEvent_278_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TClonesArray' - 0 - pairs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addEventInfo",1207,G__libLHCfEvent_278_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'A1Rec1' 'RHICfEventInfo' 0 - info", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBeamCenter",1314,G__libLHCfEvent_278_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - x0 d - - 0 - y0", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setInfo",728,G__libLHCfEvent_278_0_8, 121, -1, -1, 0, 6, 1, 1, 0, 
"i - - 0 - runnumber i - - 0 - evtnumber "
"u 'TString' - 0 - trgtype i - - 0 - bunchid "
"u 'TString' - 0 - runtype u 'TString' - 0 - quality", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("singlepars",1080,G__libLHCfEvent_278_0_9, 117, G__get_linked_tagnum(&G__libLHCfEventLN_TClonesArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("photonpairs",1207,G__libLHCfEvent_278_0_10, 117, G__get_linked_tagnum(&G__libLHCfEventLN_TClonesArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eventinfo",974,G__libLHCfEvent_278_0_11, 85, G__get_linked_tagnum(&G__libLHCfEventLN_A1Rec1), G__defined_typename("RHICfEventInfo"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("npars",548,G__libLHCfEvent_278_0_12, 104, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("npairs",653,G__libLHCfEvent_278_0_13, 104, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("runnumber",990,G__libLHCfEvent_278_0_14, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("evtnumber",984,G__libLHCfEvent_278_0_15, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("trigger",756,G__libLHCfEvent_278_0_16, 117, G__get_linked_tagnum(&G__libLHCfEventLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bunchid",733,G__libLHCfEvent_278_0_17, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("runtype",791,G__libLHCfEvent_278_0_18, 117, G__get_linked_tagnum(&G__libLHCfEventLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("quality",777,G__libLHCfEvent_278_0_19, 117, G__get_linked_tagnum(&G__libLHCfEventLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__libLHCfEvent_278_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfEvent_278_0_21, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RHICfCollection::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_278_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RHICfCollection::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_278_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RHICfCollection::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_278_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RHICfCollection::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_278_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_278_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RHICfCollection::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_278_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RHICfCollection::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_278_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RHICfCollection::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_278_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RHICfCollection::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RHICfCollection", 1558, G__libLHCfEvent_278_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncA1Raw_pp2015(void) {
   /* A1Raw_pp2015 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Raw_pp2015));
   G__memfunc_setup("A1Raw_pp2015",931,G__libLHCfEvent_279_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A1Raw_pp2015), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("A1Raw_pp2015",931,G__libLHCfEvent_279_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A1Raw_pp2015), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__libLHCfEvent_279_0_3, 105, -1, -1, 0, 1, 1, 1, 0, "i - 'A1Raw_pp2015::bankio' 0 'ALL' option", "Clear all data.", (void*) NULL, 0);
   G__memfunc_setup("copy",443,G__libLHCfEvent_279_0_4, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A1Raw_pp2015' - 0 - data i - 'A1Raw_pp2015::bankio' 0 'ALL' option", "Copy all data to this.   ", (void*) NULL, 0);
   G__memfunc_setup("copydata",853,G__libLHCfEvent_279_0_5, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A1Raw_pp2015' - 0 - data i - 'A1Raw_pp2015::bankio' 0 'ALL' option", "Copy data to this except header data.  ", (void*) NULL, 0);
   G__memfunc_setup("add",297,G__libLHCfEvent_279_0_6, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A1Raw_pp2015' - 0 - data i - 'A1Raw_pp2015::bankio' 0 'ALL' option", "Add data to this.", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfEvent_279_0_7, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&A1Raw_pp2015::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_279_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1Raw_pp2015::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_279_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&A1Raw_pp2015::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_279_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&A1Raw_pp2015::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_279_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_279_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1Raw_pp2015::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_279_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A1Raw_pp2015::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_279_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1Raw_pp2015::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_279_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A1Raw_pp2015::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("A1Raw_pp2015", 931, G__libLHCfEvent_279_0_19, (int) ('i'), G__get_linked_tagnum(&G__libLHCfEventLN_A1Raw_pp2015), -1, 0, 1, 1, 1, 0, "u 'A1Raw_pp2015' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~A1Raw_pp2015", 1057, G__libLHCfEvent_279_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfEvent_279_0_21, (int) ('u'), G__get_linked_tagnum(&G__libLHCfEventLN_A1Raw_pp2015), -1, 1, 1, 1, 1, 0, "u 'A1Raw_pp2015' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncA2Raw_pp2015(void) {
   /* A2Raw_pp2015 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pp2015));
   G__memfunc_setup("A2Raw_pp2015",932,G__libLHCfEvent_281_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pp2015), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("A2Raw_pp2015",932,G__libLHCfEvent_281_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pp2015), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__libLHCfEvent_281_0_3, 105, -1, -1, 0, 1, 1, 1, 0, "i - 'A2Raw_pp2015::bankio' 0 'ALL' option", "Clear all data.", (void*) NULL, 0);
   G__memfunc_setup("copy",443,G__libLHCfEvent_281_0_4, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A2Raw_pp2015' - 0 - data i - 'A2Raw_pp2015::bankio' 0 'ALL' option", "Copy all data to this.", (void*) NULL, 0);
   G__memfunc_setup("copydata",853,G__libLHCfEvent_281_0_5, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A2Raw_pp2015' - 0 - data i - 'A2Raw_pp2015::bankio' 0 'ALL' option", "Copy data to this except header data.", (void*) NULL, 0);
   G__memfunc_setup("add",297,G__libLHCfEvent_281_0_6, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A2Raw_pp2015' - 0 - data i - 'A2Raw_pp2015::bankio' 0 'ALL' option", "Add data to this.", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfEvent_281_0_7, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&A2Raw_pp2015::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_281_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Raw_pp2015::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_281_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&A2Raw_pp2015::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_281_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&A2Raw_pp2015::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_281_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_281_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Raw_pp2015::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_281_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A2Raw_pp2015::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_281_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Raw_pp2015::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_281_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A2Raw_pp2015::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("A2Raw_pp2015", 932, G__libLHCfEvent_281_0_19, (int) ('i'), G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pp2015), -1, 0, 1, 1, 1, 0, "u 'A2Raw_pp2015' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~A2Raw_pp2015", 1058, G__libLHCfEvent_281_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfEvent_281_0_21, (int) ('u'), G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pp2015), -1, 1, 1, 1, 1, 0, "u 'A2Raw_pp2015' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncA1Scl_pp2015(void) {
   /* A1Scl_pp2015 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Scl_pp2015));
   G__memfunc_setup("A1Scl_pp2015",923,G__libLHCfEvent_283_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A1Scl_pp2015), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("A1Scl_pp2015",923,G__libLHCfEvent_283_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A1Scl_pp2015), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name C - - 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__libLHCfEvent_283_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copy",443,G__libLHCfEvent_283_0_4, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Scl_pp2015' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copydata",853,G__libLHCfEvent_283_0_5, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Scl_pp2015' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfEvent_283_0_6, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&A1Scl_pp2015::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_283_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1Scl_pp2015::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_283_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&A1Scl_pp2015::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_283_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&A1Scl_pp2015::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_283_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_283_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1Scl_pp2015::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_283_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A1Scl_pp2015::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_283_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1Scl_pp2015::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_283_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A1Scl_pp2015::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("A1Scl_pp2015", 923, G__libLHCfEvent_283_0_18, (int) ('i'), G__get_linked_tagnum(&G__libLHCfEventLN_A1Scl_pp2015), -1, 0, 1, 1, 1, 0, "u 'A1Scl_pp2015' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~A1Scl_pp2015", 1049, G__libLHCfEvent_283_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfEvent_283_0_20, (int) ('u'), G__get_linked_tagnum(&G__libLHCfEventLN_A1Scl_pp2015), -1, 1, 1, 1, 1, 0, "u 'A1Scl_pp2015' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncA2Scl_pp2015(void) {
   /* A2Scl_pp2015 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Scl_pp2015));
   G__memfunc_setup("A2Scl_pp2015",924,G__libLHCfEvent_284_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A2Scl_pp2015), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("A2Scl_pp2015",924,G__libLHCfEvent_284_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A2Scl_pp2015), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name C - - 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__libLHCfEvent_284_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copy",443,G__libLHCfEvent_284_0_4, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Scl_pp2015' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copydata",853,G__libLHCfEvent_284_0_5, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Scl_pp2015' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfEvent_284_0_6, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&A2Scl_pp2015::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_284_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Scl_pp2015::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_284_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&A2Scl_pp2015::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_284_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&A2Scl_pp2015::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_284_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_284_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Scl_pp2015::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_284_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A2Scl_pp2015::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_284_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Scl_pp2015::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_284_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A2Scl_pp2015::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("A2Scl_pp2015", 924, G__libLHCfEvent_284_0_18, (int) ('i'), G__get_linked_tagnum(&G__libLHCfEventLN_A2Scl_pp2015), -1, 0, 1, 1, 1, 0, "u 'A2Scl_pp2015' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~A2Scl_pp2015", 1050, G__libLHCfEvent_284_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfEvent_284_0_20, (int) ('u'), G__get_linked_tagnum(&G__libLHCfEventLN_A2Scl_pp2015), -1, 1, 1, 1, 1, 0, "u 'A2Scl_pp2015' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncA2Raw_pPb2013(void) {
   /* A2Raw_pPb2013 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2013));
   G__memfunc_setup("A2Raw_pPb2013",996,G__libLHCfEvent_285_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2013), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("A2Raw_pPb2013",996,G__libLHCfEvent_285_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2013), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__libLHCfEvent_285_0_3, 105, -1, -1, 0, 1, 1, 1, 0, "i - 'A2Raw_pPb2013::bankio' 0 'ALL' option", "Clear all data.", (void*) NULL, 0);
   G__memfunc_setup("copy",443,G__libLHCfEvent_285_0_4, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A2Raw_pPb2013' - 0 - data i - 'A2Raw_pPb2013::bankio' 0 'ALL' option", "Copy all data to this.", (void*) NULL, 0);
   G__memfunc_setup("copydata",853,G__libLHCfEvent_285_0_5, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A2Raw_pPb2013' - 0 - data i - 'A2Raw_pPb2013::bankio' 0 'ALL' option", "Copy data to this except header data.", (void*) NULL, 0);
   G__memfunc_setup("add",297,G__libLHCfEvent_285_0_6, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A2Raw_pPb2013' - 0 - data i - 'A2Raw_pPb2013::bankio' 0 'ALL' option", "Add data to this.", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfEvent_285_0_7, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&A2Raw_pPb2013::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_285_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Raw_pPb2013::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_285_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&A2Raw_pPb2013::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_285_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&A2Raw_pPb2013::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_285_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_285_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Raw_pPb2013::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_285_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A2Raw_pPb2013::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_285_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Raw_pPb2013::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_285_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A2Raw_pPb2013::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("A2Raw_pPb2013", 996, G__libLHCfEvent_285_0_19, (int) ('i'), G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2013), -1, 0, 1, 1, 1, 0, "u 'A2Raw_pPb2013' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~A2Raw_pPb2013", 1122, G__libLHCfEvent_285_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfEvent_285_0_21, (int) ('u'), G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2013), -1, 1, 1, 1, 1, 0, "u 'A2Raw_pPb2013' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncA2Raw_pPb2016(void) {
   /* A2Raw_pPb2016 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2016));
   G__memfunc_setup("A2Raw_pPb2016",999,G__libLHCfEvent_287_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2016), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("A2Raw_pPb2016",999,G__libLHCfEvent_287_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2016), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__libLHCfEvent_287_0_3, 105, -1, -1, 0, 1, 1, 1, 0, "i - 'A2Raw_pPb2016::bankio' 0 'ALL' option", "Clear all data.", (void*) NULL, 0);
   G__memfunc_setup("copy",443,G__libLHCfEvent_287_0_4, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A2Raw_pPb2016' - 0 - data i - 'A2Raw_pPb2016::bankio' 0 'ALL' option", "Copy all data to this.", (void*) NULL, 0);
   G__memfunc_setup("copydata",853,G__libLHCfEvent_287_0_5, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A2Raw_pPb2016' - 0 - data i - 'A2Raw_pPb2016::bankio' 0 'ALL' option", "Copy data to this except header data.", (void*) NULL, 0);
   G__memfunc_setup("add",297,G__libLHCfEvent_287_0_6, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A2Raw_pPb2016' - 0 - data i - 'A2Raw_pPb2016::bankio' 0 'ALL' option", "Add data to this.", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfEvent_287_0_7, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&A2Raw_pPb2016::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_287_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Raw_pPb2016::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_287_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&A2Raw_pPb2016::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_287_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&A2Raw_pPb2016::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_287_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_287_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Raw_pPb2016::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_287_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A2Raw_pPb2016::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_287_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Raw_pPb2016::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_287_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A2Raw_pPb2016::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("A2Raw_pPb2016", 999, G__libLHCfEvent_287_0_19, (int) ('i'), G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2016), -1, 0, 1, 1, 1, 0, "u 'A2Raw_pPb2016' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~A2Raw_pPb2016", 1125, G__libLHCfEvent_287_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfEvent_287_0_21, (int) ('u'), G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pPb2016), -1, 1, 1, 1, 1, 0, "u 'A2Raw_pPb2016' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRHICfRaw_Op2017(void) {
   /* RHICfRaw_Op2017 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_RHICfRaw_Op2017));
   G__memfunc_setup("RHICfRaw_Op2017",1182,G__libLHCfEvent_289_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_RHICfRaw_Op2017), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RHICfRaw_Op2017",1182,G__libLHCfEvent_289_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_RHICfRaw_Op2017), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__libLHCfEvent_289_0_3, 105, -1, -1, 0, 1, 1, 1, 0, "i - 'RHICfRaw_Op2017::bankio' 0 'ALL' option", "Clear all data.", (void*) NULL, 0);
   G__memfunc_setup("copy",443,G__libLHCfEvent_289_0_4, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'RHICfRaw_Op2017' - 0 - data i - 'RHICfRaw_Op2017::bankio' 0 'ALL' option", "Copy all data to this.   ", (void*) NULL, 0);
   G__memfunc_setup("copydata",853,G__libLHCfEvent_289_0_5, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'RHICfRaw_Op2017' - 0 - data i - 'RHICfRaw_Op2017::bankio' 0 'ALL' option", "Copy data to this except header data.  ", (void*) NULL, 0);
   G__memfunc_setup("add",297,G__libLHCfEvent_289_0_6, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'RHICfRaw_Op2017' - 0 - data i - 'RHICfRaw_Op2017::bankio' 0 'ALL' option", "Add data to this.", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfEvent_289_0_7, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RHICfRaw_Op2017::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_289_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RHICfRaw_Op2017::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_289_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RHICfRaw_Op2017::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_289_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RHICfRaw_Op2017::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_289_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_289_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RHICfRaw_Op2017::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_289_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RHICfRaw_Op2017::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_289_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RHICfRaw_Op2017::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_289_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RHICfRaw_Op2017::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RHICfRaw_Op2017", 1182, G__libLHCfEvent_289_0_19, (int) ('i'), G__get_linked_tagnum(&G__libLHCfEventLN_RHICfRaw_Op2017), -1, 0, 1, 1, 1, 0, "u 'RHICfRaw_Op2017' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RHICfRaw_Op2017", 1308, G__libLHCfEvent_289_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfEvent_289_0_21, (int) ('u'), G__get_linked_tagnum(&G__libLHCfEventLN_RHICfRaw_Op2017), -1, 1, 1, 1, 1, 0, "u 'RHICfRaw_Op2017' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncLHCfEvent(void) {
   /* LHCfEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_LHCfEvent));
   G__memfunc_setup("LHCfEvent",831,G__libLHCfEvent_291_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_LHCfEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LHCfEvent",831,G__libLHCfEvent_291_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_LHCfEvent), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name C - - 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__libLHCfEvent_291_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Delete",595,G__libLHCfEvent_291_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRun",597,G__libLHCfEvent_291_0_5, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGNumber",976,G__libLHCfEvent_291_0_6, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetA1Number",1019,G__libLHCfEvent_291_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetA2Number",1020,G__libLHCfEvent_291_0_8, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetA1Flag",780,G__libLHCfEvent_291_0_9, 72, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetA1Flag",780,G__libLHCfEvent_291_0_10, 104, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetA2Flag",781,G__libLHCfEvent_291_0_11, 72, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetA2Flag",781,G__libLHCfEvent_291_0_12, 104, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIFile",745,G__libLHCfEvent_291_0_13, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTNumber",989,G__libLHCfEvent_291_0_14, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTag",572,G__libLHCfEvent_291_0_15, 104, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTmp",593,G__libLHCfEvent_291_0_16, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetObjAarray",1179,G__libLHCfEvent_291_0_17, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TObjArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTmp",605,G__libLHCfEvent_291_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__libLHCfEvent_291_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindObject",984,G__libLHCfEvent_291_0_20, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TObject), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetObject",887,G__libLHCfEvent_291_0_21, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TObject), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get",288,G__libLHCfEvent_291_0_22, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TObject), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Check",478,G__libLHCfEvent_291_0_23, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetA1Raw",700,G__libLHCfEvent_291_0_24, 85, G__get_linked_tagnum(&G__libLHCfEventLN_A1Raw), -1, 0, 1, 1, 1, 0, "C - - 10 '\"a1raw\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetA1Cal1",723,G__libLHCfEvent_291_0_25, 85, G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1), -1, 0, 1, 1, 1, 0, "C - - 10 '\"a1cal1\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetA1Cal2",724,G__libLHCfEvent_291_0_26, 85, G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2), -1, 0, 1, 1, 1, 0, "C - - 10 '\"a1cal2\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetA1Phys",822,G__libLHCfEvent_291_0_27, 85, G__get_linked_tagnum(&G__libLHCfEventLN_A1Phys), -1, 0, 1, 1, 1, 0, "C - - 10 '\"a1phys\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetA1Info",798,G__libLHCfEvent_291_0_28, 85, G__get_linked_tagnum(&G__libLHCfEventLN_A1Info), -1, 0, 1, 1, 1, 0, "C - - 10 '\"a1info\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetA1Scl",692,G__libLHCfEvent_291_0_29, 85, G__get_linked_tagnum(&G__libLHCfEventLN_A1Scl), -1, 0, 1, 1, 1, 0, "C - - 10 '\"a1scl\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetA2Raw",701,G__libLHCfEvent_291_0_30, 85, G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw), -1, 0, 1, 1, 1, 0, "C - - 10 '\"a2raw\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetA2Cal1",724,G__libLHCfEvent_291_0_31, 85, G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1), -1, 0, 1, 1, 1, 0, "C - - 10 '\"a2cal1\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetA2Cal2",725,G__libLHCfEvent_291_0_32, 85, G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2), -1, 0, 1, 1, 1, 0, "C - - 10 '\"a2cal2\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetA2Phys",823,G__libLHCfEvent_291_0_33, 85, G__get_linked_tagnum(&G__libLHCfEventLN_A2Phys), -1, 0, 1, 1, 1, 0, "C - - 10 '\"a2phys\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetA2Info",799,G__libLHCfEvent_291_0_34, 85, G__get_linked_tagnum(&G__libLHCfEventLN_A2Info), -1, 0, 1, 1, 1, 0, "C - - 10 '\"a2info\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetA2Scl",693,G__libLHCfEvent_291_0_35, 85, G__get_linked_tagnum(&G__libLHCfEventLN_A2Scl), -1, 0, 1, 1, 1, 0, "C - - 10 '\"a2scl\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRHICfCollection",1720,G__libLHCfEvent_291_0_36, 85, G__get_linked_tagnum(&G__libLHCfEventLN_RHICfCollection), -1, 0, 1, 1, 1, 0, "C - - 10 '\"rhicfcol\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetA1Raw_pp2015",1219,G__libLHCfEvent_291_0_37, 85, G__get_linked_tagnum(&G__libLHCfEventLN_A1Raw_pp2015), -1, 0, 1, 1, 1, 0, "C - - 10 '\"a1raw\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetA2Raw_pp2015",1220,G__libLHCfEvent_291_0_38, 85, G__get_linked_tagnum(&G__libLHCfEventLN_A2Raw_pp2015), -1, 0, 1, 1, 1, 0, "C - - 10 '\"a2raw\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetA1Scl_pp2015",1211,G__libLHCfEvent_291_0_39, 85, G__get_linked_tagnum(&G__libLHCfEventLN_A1Scl_pp2015), -1, 0, 1, 1, 1, 0, "C - - 10 '\"a1scl\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetA2Scl_pp2015",1212,G__libLHCfEvent_291_0_40, 85, G__get_linked_tagnum(&G__libLHCfEventLN_A2Scl_pp2015), -1, 0, 1, 1, 1, 0, "C - - 10 '\"a2scl\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__libLHCfEvent_291_0_41, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HeaderClear",1072,G__libLHCfEvent_291_0_42, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ObjClear",770,G__libLHCfEvent_291_0_43, 121, -1, -1, 0, 0, 1, 1, 0, "", "Remove all objects from the objarray.  ", (void*) NULL, 0);
   G__memfunc_setup("ObjDelete",878,G__libLHCfEvent_291_0_44, 121, -1, -1, 0, 0, 1, 1, 0, "", "ObjClear + Delete all objectes", (void*) NULL, 0);
   G__memfunc_setup("HeaderCopy",996,G__libLHCfEvent_291_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "U 'LHCfEvent' - 0 - d", "Copy header informations from d to this.", (void*) NULL, 0);
   G__memfunc_setup("CheckTag",762,G__libLHCfEvent_291_0_46, 105, -1, -1, 0, 1, 1, 1, 0, "h - - 0 '0xFFFFFFFF' mask", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckA1Trg",893,G__libLHCfEvent_291_0_47, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckA1Scl",882,G__libLHCfEvent_291_0_48, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckA2Trg",894,G__libLHCfEvent_291_0_49, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckA2Scl",883,G__libLHCfEvent_291_0_50, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckSC",628,G__libLHCfEvent_291_0_51, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckA1Sim",889,G__libLHCfEvent_291_0_52, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckA2Sim",890,G__libLHCfEvent_291_0_53, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckA1Flag",970,G__libLHCfEvent_291_0_54, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 '0' i h - - 0 '0xFFFF' mask", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckA2Flag",971,G__libLHCfEvent_291_0_55, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 '0' i h - - 0 '0xFFFF' mask", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA1BeamFlag",1053,G__libLHCfEvent_291_0_56, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA1PedeFlag",1062,G__libLHCfEvent_291_0_57, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA1LaserFlag",1183,G__libLHCfEvent_291_0_58, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA1EnableFlag",1263,G__libLHCfEvent_291_0_59, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA1BTPX1Flag",1047,G__libLHCfEvent_291_0_60, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA1BTPX2Flag",1048,G__libLHCfEvent_291_0_61, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA1L2TAFlag",955,G__libLHCfEvent_291_0_62, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA1L2TPFlag",970,G__libLHCfEvent_291_0_63, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA1L2TEXTFlag",1131,G__libLHCfEvent_291_0_64, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA1STRGFlag",1000,G__libLHCfEvent_291_0_65, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA1LTRGFlag",993,G__libLHCfEvent_291_0_66, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA1L2TASPFlag",1118,G__libLHCfEvent_291_0_67, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA1L2TAMBFlag",1098,G__libLHCfEvent_291_0_68, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA2BeamFlag",1054,G__libLHCfEvent_291_0_69, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA2PedeFlag",1063,G__libLHCfEvent_291_0_70, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA2LaserFlag",1184,G__libLHCfEvent_291_0_71, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA2EnableFlag",1264,G__libLHCfEvent_291_0_72, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA2BTPX1Flag",1048,G__libLHCfEvent_291_0_73, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA2BTPX2Flag",1049,G__libLHCfEvent_291_0_74, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA2L2TAFlag",956,G__libLHCfEvent_291_0_75, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA2L2TPFlag",971,G__libLHCfEvent_291_0_76, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA2L2TEXTFlag",1132,G__libLHCfEvent_291_0_77, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA2STRGFlag",1001,G__libLHCfEvent_291_0_78, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA2LTRGFlag",994,G__libLHCfEvent_291_0_79, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA2L2TASPFlag",1119,G__libLHCfEvent_291_0_80, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsA2L2TAMBFlag",1099,G__libLHCfEvent_291_0_81, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EventTime",913,G__libLHCfEvent_291_0_82, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Show",417,G__libLHCfEvent_291_0_83, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__libLHCfEvent_291_0_84, 121, -1, -1, 0, 0, 1, 1, 0, "", "Alias of Show();", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfEvent_291_0_85, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&LHCfEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_291_0_86, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LHCfEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_291_0_87, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&LHCfEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_291_0_88, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&LHCfEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_291_0_92, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_291_0_93, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LHCfEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_291_0_94, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LHCfEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_291_0_95, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LHCfEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_291_0_96, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LHCfEvent::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~LHCfEvent", 957, G__libLHCfEvent_291_0_97, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncLHCfDef(void) {
   /* LHCfDef */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_LHCfDef));
   G__tag_memfunc_reset();
}

static void G__setup_memfuncA1Cal2M(void) {
   /* A1Cal2M */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2M));
   G__memfunc_setup("A1Cal2M",513,G__libLHCfEvent_294_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2M), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("A1Cal2M",513,G__libLHCfEvent_294_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2M), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,(G__InterfaceMethod) NULL,105, -1, -1, 0, 1, 1, 1, 0, "i - 'A1Cal2::bankio' 0 'ALL' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("copy",443,(G__InterfaceMethod) NULL,105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A1Cal2' - 0 - d i - 'A1Cal2::bankio' 0 'ALL' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("copydata",853,(G__InterfaceMethod) NULL,105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A1Cal2' - 0 - d i - 'A1Cal2::bankio' 0 'ALL' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("copy",443,G__libLHCfEvent_294_0_6, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A1Cal2M' - 0 - d i - 'A1Cal2::bankio' 0 'ALL' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copydata",853,G__libLHCfEvent_294_0_7, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'A1Cal2M' - 0 - d i - 'A1Cal2::bankio' 0 'ALL' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clk",314,G__libLHCfEvent_294_0_8, 100, -1, -1, 0, 0, 1, 1, 0, "", "scl0[1]*2^24+scl0[0]", (void*) NULL, 0);
   G__memfunc_setup("bptx1",495,G__libLHCfEvent_294_0_9, 100, -1, -1, 0, 0, 1, 1, 0, "", "scl0[3]*2^24+scl0[2]", (void*) NULL, 0);
   G__memfunc_setup("bptx2",496,G__libLHCfEvent_294_0_10, 100, -1, -1, 0, 0, 1, 1, 0, "", "scl0[5]*2^24+scl0[4]", (void*) NULL, 0);
   G__memfunc_setup("GetTDCofBPTX1",1087,G__libLHCfEvent_294_0_11, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTDCofBPTX2",1088,G__libLHCfEvent_294_0_12, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckBunchCrossing",1814,G__libLHCfEvent_294_0_13, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfEvent_294_0_14, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&A1Cal2M::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_294_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1Cal2M::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_294_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&A1Cal2M::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_294_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&A1Cal2M::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_294_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_294_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1Cal2M::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_294_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A1Cal2M::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_294_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1Cal2M::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_294_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A1Cal2M::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("A1Cal2M", 513, G__libLHCfEvent_294_0_26, (int) ('i'), G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2M), -1, 0, 1, 1, 1, 0, "u 'A1Cal2M' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~A1Cal2M", 639, G__libLHCfEvent_294_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfEvent_294_0_28, (int) ('u'), G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2M), -1, 1, 1, 1, 1, 0, "u 'A1Cal2M' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncA1Rec2(void) {
   /* A1Rec2 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Rec2));
   G__memfunc_setup("A1Rec2",446,G__libLHCfEvent_296_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A1Rec2), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("A1Rec2",446,G__libLHCfEvent_296_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A1Rec2), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__libLHCfEvent_296_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Show",417,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEventQuality",1547,(G__InterfaceMethod) NULL,105, -1, -1, 0, 0, 1, 1, 0, "", "Event Quality flag ", (void*) NULL, 1);
   G__memfunc_setup("SetEventQuality",1559,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBeamColConf",1337,(G__InterfaceMethod) NULL,105, -1, -1, 0, 0, 1, 1, 0, "", "Beam Colliding flag", (void*) NULL, 1);
   G__memfunc_setup("SetBeamColConf",1349,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBunchNumber",1401,(G__InterfaceMethod) NULL,105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ib", "Bunch Number (beam 1 or 2)", (void*) NULL, 1);
   G__memfunc_setup("SetBunchNumber",1413,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - ib i - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFlags",781,(G__InterfaceMethod) NULL,104, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", "Flag from GPIO's (i-th)", (void*) NULL, 1);
   G__memfunc_setup("SetFlags",793,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i h - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAnalysisFlags",1617,(G__InterfaceMethod) NULL,104, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", "Analysis flag (i-th)", (void*) NULL, 1);
   G__memfunc_setup("SetAnalysisFlags",1629,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i h - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetResultEnergy",1545,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "Recommended reconstructed energy (tower)", (void*) NULL, 1);
   G__memfunc_setup("GetResultEnergy",1545,(G__InterfaceMethod) NULL,100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 - pid", "Recommended reconstructed energy (tower, pid)", (void*) NULL, 1);
   G__memfunc_setup("SetResultEnergy",1557,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - pid "
"d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSumdE",766,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "Sum dE(layer=0-15) (tower)", (void*) NULL, 1);
   G__memfunc_setup("SetSumdE",778,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSumdE2",816,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "Sum dE(layer=1-12) (tower)", (void*) NULL, 1);
   G__memfunc_setup("SetSumdE2",828,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLeakageOut",1282,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "Shower Leakage parameter (tower)", (void*) NULL, 1);
   G__memfunc_setup("SetLeakageOut",1294,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEnergyScaleFactor",2001,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "Correction factor of energy scale (tower)", (void*) NULL, 1);
   G__memfunc_setup("SetEnergyScaleFactor",2013,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetResultHitPosition",2073,(G__InterfaceMethod) NULL,100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 - ixy", "Recommended hit position results (tower, xy)", (void*) NULL, 1);
   G__memfunc_setup("SetResultHitPosition",2085,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - ixy "
"d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetResultNumberOfHits",2133,(G__InterfaceMethod) NULL,105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "Recommended number of hit results (tower)", (void*) NULL, 1);
   G__memfunc_setup("SetResultNumberOfHits",2145,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumberOfHits",1494,(G__InterfaceMethod) NULL,105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy", "Number of Hits in the tower (tower,layer,xy)", (void*) NULL, 1);
   G__memfunc_setup("SetNumberOfHits",1506,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetHitPosition",1434,(G__InterfaceMethod) NULL,100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy", "Hit Position in each layer (tower,layer,xy)", (void*) NULL, 1);
   G__memfunc_setup("SetHitPosition",1446,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPeakPosition",1526,G__libLHCfEvent_296_0_34, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy", "Fiber number with maximum dE (tower,layer,xy)", (void*) NULL, 1);
   G__memfunc_setup("SetPeakPosition",1538,G__libLHCfEvent_296_0_35, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetdEAtPeak",1023,(G__InterfaceMethod) NULL,100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy", "dE at peak (tower,layer,xy)", (void*) NULL, 1);
   G__memfunc_setup("SetdEAtPeak",1035,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetResultPID",1148,(G__InterfaceMethod) NULL,105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "Recommended PID result (tower)", (void*) NULL, 1);
   G__memfunc_setup("SetResultPID",1160,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetL20",462,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "L20% (tower)", (void*) NULL, 1);
   G__memfunc_setup("SetL20",474,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetL90",469,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "L90% (tower) ", (void*) NULL, 1);
   G__memfunc_setup("SetL90",481,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetL2D",482,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "L2D(tower)", (void*) NULL, 1);
   G__memfunc_setup("SetL2D",494,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMHBkgPar",1004,G__libLHCfEvent_296_0_46, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - tower i - - 0 - layer "
"i - - 0 - xy i - - 0 - ipar", "Results of Background Fitting by a linear function ", (void*) NULL, 1);
   G__memfunc_setup("SetMHBkgPar",1016,G__libLHCfEvent_296_0_47, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - tower i - - 0 - layer "
"i - - 0 - xy i - - 0 - ipar "
"d - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMHNhits",955,G__libLHCfEvent_296_0_48, 105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - tower i - - 0 - layer "
"i - - 0 - xy", "Number of Hits in the layer (layer, xy) includeing discarded peaks", (void*) NULL, 1);
   G__memfunc_setup("SetMHNhits",967,G__libLHCfEvent_296_0_49, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - tower i - - 0 - layer "
"i - - 0 - xy i - - 0 - nhits", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMHParPos",1034,G__libLHCfEvent_296_0_50, 105, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - tower i - - 0 - layer "
"i - - 0 - xy i - - 0 - ihits "
"i - - 0 - ipar", "Return the position of parameter in the array.        ", (void*) NULL, 1);
   G__memfunc_setup("GetMHPar",728,G__libLHCfEvent_296_0_51, 100, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - tower i - - 0 - layer "
"i - - 0 - xy i - - 0 - ihit "
"i - - 0 - ipar", "Parameter of Multi-hit fitting (layer, xy, ihit, ipar);", (void*) NULL, 1);
   G__memfunc_setup("SetMHPar",740,G__libLHCfEvent_296_0_52, 121, -1, -1, 0, 6, 1, 1, 0, 
"i - - 0 - tower i - - 0 - layer "
"i - - 0 - xy i - - 0 - ihit "
"i - - 0 - ipar d - - 0 - val", "To modify the parameter value. ", (void*) NULL, 1);
   G__memfunc_setup("GetMHDiscardedFlag",1714,G__libLHCfEvent_296_0_53, 103, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - tower i - - 0 - layer "
"i - - 0 - xy i - - 0 - ihit", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddMHHit",707,G__libLHCfEvent_296_0_54, 105, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - tower i - - 0 - layer "
"i - - 0 - xy D - - 0 - par", "Add new the hit parameters  ", (void*) NULL, 1);
   G__memfunc_setup("EraseMHHit",938,G__libLHCfEvent_296_0_55, 105, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - tower i - - 0 - layer "
"i - - 0 - xy i - - 0 - ihit", "Erase the hit in the array. ", (void*) NULL, 1);
   G__memfunc_setup("GetMHNumberOfHits",1643,(G__InterfaceMethod) NULL,105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", "Number of hits in the tower (except discarded peaks)", (void*) NULL, 1);
   G__memfunc_setup("SetMHNumberOfHits",1655,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - tower i - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__libLHCfEvent_296_0_58, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&A1Rec2::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_296_0_59, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1Rec2::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_296_0_60, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&A1Rec2::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_296_0_61, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&A1Rec2::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_296_0_65, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_296_0_66, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1Rec2::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_296_0_67, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A1Rec2::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_296_0_68, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1Rec2::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_296_0_69, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A1Rec2::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("A1Rec2", 446, G__libLHCfEvent_296_0_70, (int) ('i'), G__get_linked_tagnum(&G__libLHCfEventLN_A1Rec2), -1, 0, 1, 1, 1, 0, "u 'A1Rec2' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~A1Rec2", 572, G__libLHCfEvent_296_0_71, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfEvent_296_0_72, (int) ('u'), G__get_linked_tagnum(&G__libLHCfEventLN_A1Rec2), -1, 1, 1, 1, 1, 0, "u 'A1Rec2' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncA2Rec1(void) {
   /* A2Rec1 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Rec1));
   G__memfunc_setup("A2Rec1",446,G__libLHCfEvent_298_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A2Rec1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("A2Rec1",446,G__libLHCfEvent_298_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A2Rec1), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__libLHCfEvent_298_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Show",417,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEventQuality",1547,(G__InterfaceMethod) NULL,105, -1, -1, 0, 0, 1, 1, 0, "", "Event Quality flag ", (void*) NULL, 1);
   G__memfunc_setup("SetEventQuality",1559,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBeamColConf",1337,(G__InterfaceMethod) NULL,105, -1, -1, 0, 0, 1, 1, 0, "", "Beam Colliding flag", (void*) NULL, 1);
   G__memfunc_setup("SetBeamColConf",1349,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBunchNumber",1401,(G__InterfaceMethod) NULL,105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ib", "Bunch Number (beam 1 or 2)", (void*) NULL, 1);
   G__memfunc_setup("SetBunchNumber",1413,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - ib i - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFlags",781,(G__InterfaceMethod) NULL,104, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", "Flag from GPIO's (i-th)", (void*) NULL, 1);
   G__memfunc_setup("SetFlags",793,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i h - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetResultEnergy",1545,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "Recommended reconstructed energy (tower)", (void*) NULL, 1);
   G__memfunc_setup("GetResultEnergy",1545,(G__InterfaceMethod) NULL,100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 - pid", "Recommended reconstructed energy (tower, pid)", (void*) NULL, 1);
   G__memfunc_setup("SetResultEnergy",1557,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - pid "
"d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSumdE",766,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "Sum dE(layer=0-15) (tower)", (void*) NULL, 1);
   G__memfunc_setup("SetSumdE",778,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSumdE2",816,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "Sum dE(layer=1-12) (tower)", (void*) NULL, 1);
   G__memfunc_setup("SetSumdE2",828,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLeakageOut",1282,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "Shower Leakage parameter (tower)", (void*) NULL, 1);
   G__memfunc_setup("SetLeakageOut",1294,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEnergyScaleFactor",2001,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "Correction factor of energy scale (tower)", (void*) NULL, 1);
   G__memfunc_setup("SetEnergyScaleFactor",2013,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetResultHitPosition",2073,(G__InterfaceMethod) NULL,100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 - ixy", "Recommended hit position results (tower, xy)", (void*) NULL, 1);
   G__memfunc_setup("SetResultHitPosition",2085,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - ixy "
"d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetResultNumberOfHits",2133,(G__InterfaceMethod) NULL,105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "Recommended number of hit results (tower)", (void*) NULL, 1);
   G__memfunc_setup("SetResultNumberOfHits",2145,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumberOfHits",1494,(G__InterfaceMethod) NULL,105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy", "Number of Hits in the tower (tower,layer,xy)", (void*) NULL, 1);
   G__memfunc_setup("SetNumberOfHits",1506,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetHitPosition",1434,(G__InterfaceMethod) NULL,100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy", "Hit Position in each layer (tower,layer,xy)", (void*) NULL, 1);
   G__memfunc_setup("SetHitPosition",1446,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPeakStrip",1203,(G__InterfaceMethod) NULL,100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy", "Strip number with maximum dE (tower,layer,xy)", (void*) NULL, 1);
   G__memfunc_setup("SetPeakStrip",1215,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetdEAtPeak",1023,(G__InterfaceMethod) NULL,100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy", "dE at peak (tower,layer,xy)", (void*) NULL, 1);
   G__memfunc_setup("SetdEAtPeak",1035,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSiSatuFlag",1267,(G__InterfaceMethod) NULL,105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy", "Saturation flag of silicon middle sample", (void*) NULL, 1);
   G__memfunc_setup("SetSiSatuFlag",1279,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetResultPID",1148,(G__InterfaceMethod) NULL,105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "Recommended PID result (tower)", (void*) NULL, 1);
   G__memfunc_setup("SetResultPID",1160,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetL20",462,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "L20% (tower)", (void*) NULL, 1);
   G__memfunc_setup("SetL20",474,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetL90",469,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "L90% (tower) ", (void*) NULL, 1);
   G__memfunc_setup("SetL90",481,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__libLHCfEvent_298_0_44, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&A2Rec1::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_298_0_45, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Rec1::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_298_0_46, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&A2Rec1::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_298_0_47, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&A2Rec1::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_298_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_298_0_52, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Rec1::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_298_0_53, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A2Rec1::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_298_0_54, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Rec1::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_298_0_55, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A2Rec1::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("A2Rec1", 446, G__libLHCfEvent_298_0_56, (int) ('i'), G__get_linked_tagnum(&G__libLHCfEventLN_A2Rec1), -1, 0, 1, 1, 1, 0, "u 'A2Rec1' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~A2Rec1", 572, G__libLHCfEvent_298_0_57, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfEvent_298_0_58, (int) ('u'), G__get_linked_tagnum(&G__libLHCfEventLN_A2Rec1), -1, 1, 1, 1, 1, 0, "u 'A2Rec1' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncA2Rec2(void) {
   /* A2Rec2 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Rec2));
   G__memfunc_setup("A2Rec2",447,G__libLHCfEvent_299_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A2Rec2), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("A2Rec2",447,G__libLHCfEvent_299_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A2Rec2), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__libLHCfEvent_299_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Show",417,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMHBkgPar",1004,(G__InterfaceMethod) NULL,100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - layer i - - 0 - xy "
"i - - 0 - ipar", "Results of Background Fitting by a linear function ", (void*) NULL, 1);
   G__memfunc_setup("SetMHBkgPar",1016,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - layer i - - 0 - xy "
"i - - 0 - ipar d - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMHNhits",955,(G__InterfaceMethod) NULL,105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - layer i - - 0 - xy", "Number of Hits in the layer (layer, xy) includeing discarded peaks", (void*) NULL, 1);
   G__memfunc_setup("SetMHNhits",967,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - layer i - - 0 - xy "
"i - - 0 - nhits", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMHParPos",1034,(G__InterfaceMethod) NULL,105, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - layer i - - 0 - xy "
"i - - 0 - ihits i - - 0 - ipar", "Return the position of parameter in the array.        ", (void*) NULL, 1);
   G__memfunc_setup("GetMHPar",728,(G__InterfaceMethod) NULL,100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - layer i - - 0 - xy "
"i - - 0 - ihit i - - 0 - ipar", "Parameter of Multi-hit fitting (layer, xy, ihit, ipar);", (void*) NULL, 1);
   G__memfunc_setup("SetMHPar",740,(G__InterfaceMethod) NULL,121, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - layer i - - 0 - xy "
"i - - 0 - ihit i - - 0 - ipar "
"d - - 0 - val", "To modify the parameter value. ", (void*) NULL, 1);
   G__memfunc_setup("GetMHDiscardedFlag",1714,(G__InterfaceMethod) NULL,103, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - layer i - - 0 - xy "
"i - - 0 - ihit", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddMHHit",707,(G__InterfaceMethod) NULL,105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - layer i - - 0 - xy "
"D - - 0 - par", "Add new the hit parameters  ", (void*) NULL, 1);
   G__memfunc_setup("EraseMHHit",938,(G__InterfaceMethod) NULL,105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - layer i - - 0 - xy "
"i - - 0 - ihit", "Erase the hit in the array. ", (void*) NULL, 1);
   G__memfunc_setup("GetMHNumberOfHits",1643,(G__InterfaceMethod) NULL,105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", "Number of hits in the tower (except discarded peaks)", (void*) NULL, 1);
   G__memfunc_setup("SetMHNumberOfHits",1655,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - tower i - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__libLHCfEvent_299_0_17, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&A2Rec2::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_299_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Rec2::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_299_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&A2Rec2::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_299_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&A2Rec2::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_299_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_299_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Rec2::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_299_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A2Rec2::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_299_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Rec2::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_299_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A2Rec2::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("A2Rec2", 447, G__libLHCfEvent_299_0_29, (int) ('i'), G__get_linked_tagnum(&G__libLHCfEventLN_A2Rec2), -1, 0, 1, 1, 1, 0, "u 'A2Rec2' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~A2Rec2", 573, G__libLHCfEvent_299_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfEvent_299_0_31, (int) ('u'), G__get_linked_tagnum(&G__libLHCfEventLN_A2Rec2), -1, 1, 1, 1, 1, 0, "u 'A2Rec2' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncA2Rec3(void) {
   /* A2Rec3 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Rec3));
   G__memfunc_setup("A2Rec3",448,G__libLHCfEvent_300_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A2Rec3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("A2Rec3",448,G__libLHCfEvent_300_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A2Rec3), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__libLHCfEvent_300_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Show",417,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTFitParam",1160,(G__InterfaceMethod) NULL,100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - tower i - - 0 - ipar", "shape w/o correction tower:0,1 ipar:0-3", (void*) NULL, 1);
   G__memfunc_setup("SetTFitParam",1172,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - tower i - - 0 - ipar "
"d - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTFitParamCorr",1566,(G__InterfaceMethod) NULL,100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - tower i - - 0 - ipar", "shape w/ correction tower:0,1 ipar:0-3", (void*) NULL, 1);
   G__memfunc_setup("SetTFitParamCorr",1578,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - tower i - - 0 - ipar "
"d - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTFitParamLeakin",1756,(G__InterfaceMethod) NULL,100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - tower i - - 0 - ipar", "Estimated shape of leakage-in tower:0,1 ipar:0-3", (void*) NULL, 1);
   G__memfunc_setup("SetTFitParamLeakin",1768,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - tower i - - 0 - ipar "
"d - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTScale",860,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", "Scale of Transition fit", (void*) NULL, 1);
   G__memfunc_setup("GetTScaleCorr",1266,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", "Scale of Transition fit", (void*) NULL, 1);
   G__memfunc_setup("GetTScaleLeakin",1456,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", "Scale of estimated shape of shower leakage-in", (void*) NULL, 1);
   G__memfunc_setup("GetTMax",666,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", "Get depth of Shower Maximum", (void*) NULL, 1);
   G__memfunc_setup("GetTMaxCorr",1072,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", "Get depth of Shower Maximum ", (void*) NULL, 1);
   G__memfunc_setup("GetTMaxLeakin",1262,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", "Get depth of Shower Maximum ", (void*) NULL, 1);
   G__memfunc_setup("GetL20wocorr",1130,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", "Get L20% which was calculated before shower leakin corr.", (void*) NULL, 1);
   G__memfunc_setup("SetL20wocorr",1142,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - tower d - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetL90wocorr",1137,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", "Get L90% which was calculated before shower leakin corr.", (void*) NULL, 1);
   G__memfunc_setup("SetL90wocorr",1149,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - tower d - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__libLHCfEvent_300_0_21, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&A2Rec3::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_300_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Rec3::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_300_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&A2Rec3::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_300_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&A2Rec3::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_300_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_300_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Rec3::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_300_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A2Rec3::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_300_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Rec3::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_300_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A2Rec3::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("A2Rec3", 448, G__libLHCfEvent_300_0_33, (int) ('i'), G__get_linked_tagnum(&G__libLHCfEventLN_A2Rec3), -1, 0, 1, 1, 1, 0, "u 'A2Rec3' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~A2Rec3", 574, G__libLHCfEvent_300_0_34, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfEvent_300_0_35, (int) ('u'), G__get_linked_tagnum(&G__libLHCfEventLN_A2Rec3), -1, 1, 1, 1, 1, 0, "u 'A2Rec3' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRHICfScl_Op2017(void) {
   /* RHICfScl_Op2017 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_RHICfScl_Op2017));
   G__memfunc_setup("RHICfScl_Op2017",1174,G__libLHCfEvent_301_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_RHICfScl_Op2017), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RHICfScl_Op2017",1174,G__libLHCfEvent_301_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_RHICfScl_Op2017), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name C - - 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__libLHCfEvent_301_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copy",443,G__libLHCfEvent_301_0_4, 105, -1, -1, 0, 1, 1, 1, 0, "U 'RHICfScl_Op2017' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copydata",853,G__libLHCfEvent_301_0_5, 105, -1, -1, 0, 1, 1, 1, 0, "U 'RHICfScl_Op2017' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfEvent_301_0_6, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RHICfScl_Op2017::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_301_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RHICfScl_Op2017::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_301_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RHICfScl_Op2017::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_301_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RHICfScl_Op2017::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_301_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_301_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RHICfScl_Op2017::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_301_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RHICfScl_Op2017::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_301_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RHICfScl_Op2017::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_301_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RHICfScl_Op2017::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RHICfScl_Op2017", 1174, G__libLHCfEvent_301_0_18, (int) ('i'), G__get_linked_tagnum(&G__libLHCfEventLN_RHICfScl_Op2017), -1, 0, 1, 1, 1, 0, "u 'RHICfScl_Op2017' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RHICfScl_Op2017", 1300, G__libLHCfEvent_301_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfEvent_301_0_20, (int) ('u'), G__get_linked_tagnum(&G__libLHCfEventLN_RHICfScl_Op2017), -1, 1, 1, 1, 1, 0, "u 'RHICfScl_Op2017' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncA1Cal1AccumHist(void) {
   /* A1Cal1AccumHist */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1AccumHist));
   G__memfunc_setup("A1Cal1AccumHist",1332,G__libLHCfEvent_391_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1AccumHist), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("A1Cal1AccumHist",1332,G__libLHCfEvent_391_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1AccumHist), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeMembers",1757,G__libLHCfEvent_391_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__libLHCfEvent_391_0_4, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeHists",1565,G__libLHCfEvent_391_0_5, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeCanvases",1862,G__libLHCfEvent_391_0_6, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeCanvasCal0",1966,G__libLHCfEvent_391_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeCanvasCal1",1967,G__libLHCfEvent_391_0_8, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeCanvasADCs",1961,G__libLHCfEvent_391_0_9, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeCanvasFlag",2024,G__libLHCfEvent_391_0_10, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeCanvasTDC",1865,G__libLHCfEvent_391_0_11, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeCanvasSciFi",2108,G__libLHCfEvent_391_0_12, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteHists",1118,G__libLHCfEvent_391_0_13, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteHist",1003,G__libLHCfEvent_391_0_14, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteCanvases",1415,G__libLHCfEvent_391_0_15, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill",391,G__libLHCfEvent_391_0_16, 105, -1, -1, 0, 4, 1, 1, 0, 
"U 'A1Cal1' - 0 - d g - - 0 'true' beam "
"g - - 0 'true' pede g - - 0 'true' laser", "if true, the laser event is filled. ", (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__libLHCfEvent_391_0_17, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CopyData",789,G__libLHCfEvent_391_0_18, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Cal1AccumHist' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDataVersion",1420,G__libLHCfEvent_391_0_19, 105, -1, -1, 0, 1, 1, 1, 0, "i 'A1Cal1AccumHist::DATA_VERSION' - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCanvasCal0",1224,G__libLHCfEvent_391_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCanvasCal1",1225,G__libLHCfEvent_391_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCanvasADCs",1219,G__libLHCfEvent_391_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCanvasFlag",1282,G__libLHCfEvent_391_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCanvasTDC",1123,G__libLHCfEvent_391_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCanvasSciFi",1366,G__libLHCfEvent_391_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCanvasCal0",1212,G__libLHCfEvent_391_0_26, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TCanvas), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCanvasCal1",1213,G__libLHCfEvent_391_0_27, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TCanvas), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCanvasADCs",1207,G__libLHCfEvent_391_0_28, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TCanvas), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCanvasFlag",1270,G__libLHCfEvent_391_0_29, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TCanvas), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCanvasTDC",1111,G__libLHCfEvent_391_0_30, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TCanvas), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCanvasSciFi",1354,G__libLHCfEvent_391_0_31, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TCanvas), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHistNbin",1099,G__libLHCfEvent_391_0_32, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - nbin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHistBinMinimum",1721,G__libLHCfEvent_391_0_33, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - binmin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHistBinMaximum",1723,G__libLHCfEvent_391_0_34, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - binmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHSciFiNbin",1225,G__libLHCfEvent_391_0_35, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - nbin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHSciFiBinMinimum",1847,G__libLHCfEvent_391_0_36, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - binmin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHSciFiBinMaximum",1849,G__libLHCfEvent_391_0_37, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - binmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHSciFiChannel",1531,G__libLHCfEvent_391_0_38, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHistNbin",1087,G__libLHCfEvent_391_0_39, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHistBinMinimum",1709,G__libLHCfEvent_391_0_40, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHistBinMaximum",1711,G__libLHCfEvent_391_0_41, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHSciFiNbin",1213,G__libLHCfEvent_391_0_42, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHSciFiBinMinimum",1835,G__libLHCfEvent_391_0_43, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHSciFiBinMaximum",1837,G__libLHCfEvent_391_0_44, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHSciFiChannel",1519,G__libLHCfEvent_391_0_45, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTDCHistogram",1461,G__libLHCfEvent_391_0_46, 105, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - ich i - - 0 - nbin "
"d - - 0 - binmin d - - 0 - binmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTDCHistogram",1461,G__libLHCfEvent_391_0_47, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - ich U 'TH1F' - 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLineColor",1203,G__libLHCfEvent_391_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Color_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFillColor",1202,G__libLHCfEvent_391_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Color_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFillStyle",1220,G__libLHCfEvent_391_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Scale",488,G__libLHCfEvent_391_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Draw",398,G__libLHCfEvent_391_0_52, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 '0' adcrange C - - 10 '\"\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawCal0",718,G__libLHCfEvent_391_0_53, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 '0' adcrange C - - 10 '\"\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawCal1",719,G__libLHCfEvent_391_0_54, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 '0' adcrange C - - 10 '\"\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawADCs",713,G__libLHCfEvent_391_0_55, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawFlag",776,G__libLHCfEvent_391_0_56, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawTDC",617,G__libLHCfEvent_391_0_57, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawSciFi",860,G__libLHCfEvent_391_0_58, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OptimizeYRange",1431,G__libLHCfEvent_391_0_59, 105, -1, -1, 0, 1, 1, 1, 0, "U 'TPad' - 0 - pad", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLogy",711,G__libLHCfEvent_391_0_60, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'TCanvas' - 0 - c i - - 0 '1' op", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLogy",711,G__libLHCfEvent_391_0_61, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '1' op", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLogyCal0",1031,G__libLHCfEvent_391_0_62, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '1' op", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLogyCal1",1032,G__libLHCfEvent_391_0_63, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '1' op", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLogyADCs",1026,G__libLHCfEvent_391_0_64, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '1' op", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLogyFlag",1089,G__libLHCfEvent_391_0_65, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '1' op", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLogyTDC",930,G__libLHCfEvent_391_0_66, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '1' op", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLogySciFi",1173,G__libLHCfEvent_391_0_67, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '1' op", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__libLHCfEvent_391_0_68, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Bor",291,G__libLHCfEvent_391_0_69, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Eor",294,G__libLHCfEvent_391_0_70, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Loop",410,G__libLHCfEvent_391_0_71, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Cal1' - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfEvent_391_0_72, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&A1Cal1AccumHist::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_391_0_73, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1Cal1AccumHist::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_391_0_74, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&A1Cal1AccumHist::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_391_0_75, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&A1Cal1AccumHist::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_391_0_79, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_391_0_80, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1Cal1AccumHist::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_391_0_81, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A1Cal1AccumHist::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_391_0_82, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1Cal1AccumHist::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_391_0_83, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A1Cal1AccumHist::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("A1Cal1AccumHist", 1332, G__libLHCfEvent_391_0_84, (int) ('i'), G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1AccumHist), -1, 0, 1, 1, 1, 0, "u 'A1Cal1AccumHist' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~A1Cal1AccumHist", 1458, G__libLHCfEvent_391_0_85, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfEvent_391_0_86, (int) ('u'), G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal1AccumHist), -1, 1, 1, 1, 1, 0, "u 'A1Cal1AccumHist' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncA2Cal1AccumHist(void) {
   /* A2Cal1AccumHist */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1AccumHist));
   G__memfunc_setup("A2Cal1AccumHist",1333,G__libLHCfEvent_393_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1AccumHist), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("A2Cal1AccumHist",1333,G__libLHCfEvent_393_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1AccumHist), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeMembers",1757,G__libLHCfEvent_393_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__libLHCfEvent_393_0_4, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeHists",1565,G__libLHCfEvent_393_0_5, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeCanvases",1862,G__libLHCfEvent_393_0_6, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeCanvasCal0",1966,G__libLHCfEvent_393_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeCanvasCal1",1967,G__libLHCfEvent_393_0_8, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeCanvasADCs",1961,G__libLHCfEvent_393_0_9, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeCanvasFlag",2024,G__libLHCfEvent_393_0_10, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeCanvasTDC",1865,G__libLHCfEvent_393_0_11, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeCanvasSilicon",2367,G__libLHCfEvent_393_0_12, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteHists",1118,G__libLHCfEvent_393_0_13, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteHist",1003,G__libLHCfEvent_393_0_14, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteCanvases",1415,G__libLHCfEvent_393_0_15, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill",391,G__libLHCfEvent_393_0_16, 105, -1, -1, 0, 4, 1, 1, 0, 
"U 'A2Cal1' - 0 - d g - - 0 'true' beam "
"g - - 0 'true' pede g - - 0 'true' laser", "if true, the laser event is filled. ", (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__libLHCfEvent_393_0_17, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CopyData",789,G__libLHCfEvent_393_0_18, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Cal1AccumHist' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCanvasCal0",1224,G__libLHCfEvent_393_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCanvasCal1",1225,G__libLHCfEvent_393_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCanvasADCs",1219,G__libLHCfEvent_393_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCanvasFlag",1282,G__libLHCfEvent_393_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCanvasTDC",1123,G__libLHCfEvent_393_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCanvasSilicon",1625,G__libLHCfEvent_393_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCanvasCal0",1212,G__libLHCfEvent_393_0_25, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TCanvas), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCanvasCal1",1213,G__libLHCfEvent_393_0_26, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TCanvas), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCanvasADCs",1207,G__libLHCfEvent_393_0_27, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TCanvas), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCanvasFlag",1270,G__libLHCfEvent_393_0_28, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TCanvas), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCanvasTDC",1111,G__libLHCfEvent_393_0_29, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TCanvas), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCanvasSilicon",1613,G__libLHCfEvent_393_0_30, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TCanvas), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHistNbin",1099,G__libLHCfEvent_393_0_31, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - nbin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHistBinMinimum",1721,G__libLHCfEvent_393_0_32, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - binmin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHistBinMaximum",1723,G__libLHCfEvent_393_0_33, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - binmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHSiliconNbin",1484,G__libLHCfEvent_393_0_34, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - nbin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHSiliconBinMinimum",2106,G__libLHCfEvent_393_0_35, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - binmin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHSiliconBinMaximum",2108,G__libLHCfEvent_393_0_36, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - binmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHSiliconChannel",1790,G__libLHCfEvent_393_0_37, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHistNbin",1087,G__libLHCfEvent_393_0_38, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHistBinMinimum",1709,G__libLHCfEvent_393_0_39, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHistBinMaximum",1711,G__libLHCfEvent_393_0_40, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHSiliconNbin",1472,G__libLHCfEvent_393_0_41, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHSiliconBinMinimum",2094,G__libLHCfEvent_393_0_42, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHSiliconBinMaximum",2096,G__libLHCfEvent_393_0_43, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHSiliconChannel",1778,G__libLHCfEvent_393_0_44, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTDCHistogram",1461,G__libLHCfEvent_393_0_45, 105, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - ich i - - 0 - nbin "
"d - - 0 - binmin d - - 0 - binmax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTDCHistogram",1461,G__libLHCfEvent_393_0_46, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - ich U 'TH1F' - 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLineColor",1203,G__libLHCfEvent_393_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Color_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFillColor",1202,G__libLHCfEvent_393_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Color_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFillStyle",1220,G__libLHCfEvent_393_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Scale",488,G__libLHCfEvent_393_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Draw",398,G__libLHCfEvent_393_0_51, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 '0' adcrange C - - 10 '\"\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawCal0",718,G__libLHCfEvent_393_0_52, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 '0' adcrange C - - 10 '\"\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawCal1",719,G__libLHCfEvent_393_0_53, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 '0' adcrange C - - 10 '\"\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawADCs",713,G__libLHCfEvent_393_0_54, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawFlag",776,G__libLHCfEvent_393_0_55, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawTDC",617,G__libLHCfEvent_393_0_56, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawSilicon",1119,G__libLHCfEvent_393_0_57, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OptimizeYRange",1431,G__libLHCfEvent_393_0_58, 105, -1, -1, 0, 1, 1, 1, 0, "U 'TPad' - 0 - pad", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLogy",711,G__libLHCfEvent_393_0_59, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'TCanvas' - 0 - c i - - 0 '1' op", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLogy",711,G__libLHCfEvent_393_0_60, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '1' op", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLogyCal0",1031,G__libLHCfEvent_393_0_61, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '1' op", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLogyCal1",1032,G__libLHCfEvent_393_0_62, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '1' op", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLogyADCs",1026,G__libLHCfEvent_393_0_63, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '1' op", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLogyFlag",1089,G__libLHCfEvent_393_0_64, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '1' op", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLogyTDC",930,G__libLHCfEvent_393_0_65, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '1' op", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLogySilicon",1432,G__libLHCfEvent_393_0_66, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '1' op", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__libLHCfEvent_393_0_67, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Bor",291,G__libLHCfEvent_393_0_68, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Eor",294,G__libLHCfEvent_393_0_69, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Loop",410,G__libLHCfEvent_393_0_70, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Cal1' - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfEvent_393_0_71, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&A2Cal1AccumHist::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_393_0_72, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Cal1AccumHist::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_393_0_73, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&A2Cal1AccumHist::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_393_0_74, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&A2Cal1AccumHist::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_393_0_78, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_393_0_79, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Cal1AccumHist::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_393_0_80, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A2Cal1AccumHist::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_393_0_81, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Cal1AccumHist::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_393_0_82, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A2Cal1AccumHist::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("A2Cal1AccumHist", 1333, G__libLHCfEvent_393_0_83, (int) ('i'), G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1AccumHist), -1, 0, 1, 1, 1, 0, "u 'A2Cal1AccumHist' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~A2Cal1AccumHist", 1459, G__libLHCfEvent_393_0_84, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfEvent_393_0_85, (int) ('u'), G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal1AccumHist), -1, 1, 1, 1, 1, 0, "u 'A2Cal1AccumHist' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncA1Cal2AccumHist(void) {
   /* A1Cal2AccumHist */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2AccumHist));
   G__memfunc_setup("A1Cal2AccumHist",1333,G__libLHCfEvent_394_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2AccumHist), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("A1Cal2AccumHist",1333,G__libLHCfEvent_394_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2AccumHist), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__libLHCfEvent_394_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteHist",1003,G__libLHCfEvent_394_0_4, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteHists",1118,G__libLHCfEvent_394_0_5, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill",391,G__libLHCfEvent_394_0_6, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Cal2' - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__libLHCfEvent_394_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CopyData",789,G__libLHCfEvent_394_0_8, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Cal2AccumHist' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__libLHCfEvent_394_0_9, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Bor",291,G__libLHCfEvent_394_0_10, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Eor",294,G__libLHCfEvent_394_0_11, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Loop",410,G__libLHCfEvent_394_0_12, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Cal2' - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfEvent_394_0_13, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&A1Cal2AccumHist::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_394_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1Cal2AccumHist::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_394_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&A1Cal2AccumHist::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_394_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&A1Cal2AccumHist::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_394_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_394_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1Cal2AccumHist::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_394_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A1Cal2AccumHist::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_394_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1Cal2AccumHist::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_394_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A1Cal2AccumHist::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("A1Cal2AccumHist", 1333, G__libLHCfEvent_394_0_25, (int) ('i'), G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2AccumHist), -1, 0, 1, 1, 1, 0, "u 'A1Cal2AccumHist' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~A1Cal2AccumHist", 1459, G__libLHCfEvent_394_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfEvent_394_0_27, (int) ('u'), G__get_linked_tagnum(&G__libLHCfEventLN_A1Cal2AccumHist), -1, 1, 1, 1, 1, 0, "u 'A1Cal2AccumHist' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncA2Cal2AccumHist(void) {
   /* A2Cal2AccumHist */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2AccumHist));
   G__memfunc_setup("A2Cal2AccumHist",1334,G__libLHCfEvent_395_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2AccumHist), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("A2Cal2AccumHist",1334,G__libLHCfEvent_395_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2AccumHist), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__libLHCfEvent_395_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteHist",1003,G__libLHCfEvent_395_0_4, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteHists",1118,G__libLHCfEvent_395_0_5, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill",391,G__libLHCfEvent_395_0_6, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Cal2' - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__libLHCfEvent_395_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CopyData",789,G__libLHCfEvent_395_0_8, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Cal2AccumHist' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__libLHCfEvent_395_0_9, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Bor",291,G__libLHCfEvent_395_0_10, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Eor",294,G__libLHCfEvent_395_0_11, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Loop",410,G__libLHCfEvent_395_0_12, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Cal2' - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfEvent_395_0_13, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&A2Cal2AccumHist::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_395_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Cal2AccumHist::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_395_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&A2Cal2AccumHist::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_395_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&A2Cal2AccumHist::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_395_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_395_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Cal2AccumHist::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_395_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A2Cal2AccumHist::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_395_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2Cal2AccumHist::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_395_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A2Cal2AccumHist::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("A2Cal2AccumHist", 1334, G__libLHCfEvent_395_0_25, (int) ('i'), G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2AccumHist), -1, 0, 1, 1, 1, 0, "u 'A2Cal2AccumHist' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~A2Cal2AccumHist", 1460, G__libLHCfEvent_395_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfEvent_395_0_27, (int) ('u'), G__get_linked_tagnum(&G__libLHCfEventLN_A2Cal2AccumHist), -1, 1, 1, 1, 1, 0, "u 'A2Cal2AccumHist' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncA1PhysAccumHist(void) {
   /* A1PhysAccumHist */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1PhysAccumHist));
   G__memfunc_setup("A1PhysAccumHist",1431,G__libLHCfEvent_403_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A1PhysAccumHist), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("A1PhysAccumHist",1431,G__libLHCfEvent_403_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A1PhysAccumHist), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__libLHCfEvent_403_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteHist",1003,G__libLHCfEvent_403_0_4, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteHists",1118,G__libLHCfEvent_403_0_5, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill",391,G__libLHCfEvent_403_0_6, 105, -1, -1, 0, 3, 1, 1, 0, 
"U 'A1Phys' - 0 - d i - - 0 '-10' pid0 "
"i - - 0 '-10' pid1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__libLHCfEvent_403_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CopyData",789,G__libLHCfEvent_403_0_8, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1PhysAccumHist' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddData",643,G__libLHCfEvent_403_0_9, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1PhysAccumHist' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__libLHCfEvent_403_0_10, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Bor",291,G__libLHCfEvent_403_0_11, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Eor",294,G__libLHCfEvent_403_0_12, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Loop",410,G__libLHCfEvent_403_0_13, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Phys' - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfEvent_403_0_14, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&A1PhysAccumHist::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_403_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1PhysAccumHist::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_403_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&A1PhysAccumHist::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_403_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&A1PhysAccumHist::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_403_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_403_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1PhysAccumHist::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_403_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A1PhysAccumHist::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_403_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1PhysAccumHist::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_403_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A1PhysAccumHist::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("A1PhysAccumHist", 1431, G__libLHCfEvent_403_0_26, (int) ('i'), G__get_linked_tagnum(&G__libLHCfEventLN_A1PhysAccumHist), -1, 0, 1, 1, 1, 0, "u 'A1PhysAccumHist' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~A1PhysAccumHist", 1557, G__libLHCfEvent_403_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfEvent_403_0_28, (int) ('u'), G__get_linked_tagnum(&G__libLHCfEventLN_A1PhysAccumHist), -1, 1, 1, 1, 1, 0, "u 'A1PhysAccumHist' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncA2PhysAccumHist(void) {
   /* A2PhysAccumHist */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2PhysAccumHist));
   G__memfunc_setup("A2PhysAccumHist",1432,G__libLHCfEvent_404_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A2PhysAccumHist), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("A2PhysAccumHist",1432,G__libLHCfEvent_404_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A2PhysAccumHist), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__libLHCfEvent_404_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteHist",1003,G__libLHCfEvent_404_0_4, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteHists",1118,G__libLHCfEvent_404_0_5, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill",391,G__libLHCfEvent_404_0_6, 105, -1, -1, 0, 3, 1, 1, 0, 
"U 'A2Phys' - 0 - d i - - 0 '-10' pid0 "
"i - - 0 '-10' pid1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__libLHCfEvent_404_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CopyData",789,G__libLHCfEvent_404_0_8, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2PhysAccumHist' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddData",643,G__libLHCfEvent_404_0_9, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2PhysAccumHist' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__libLHCfEvent_404_0_10, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Bor",291,G__libLHCfEvent_404_0_11, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Eor",294,G__libLHCfEvent_404_0_12, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Loop",410,G__libLHCfEvent_404_0_13, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Phys' - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfEvent_404_0_14, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&A2PhysAccumHist::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_404_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2PhysAccumHist::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_404_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&A2PhysAccumHist::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_404_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&A2PhysAccumHist::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_404_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_404_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2PhysAccumHist::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_404_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A2PhysAccumHist::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_404_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2PhysAccumHist::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_404_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A2PhysAccumHist::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("A2PhysAccumHist", 1432, G__libLHCfEvent_404_0_26, (int) ('i'), G__get_linked_tagnum(&G__libLHCfEventLN_A2PhysAccumHist), -1, 0, 1, 1, 1, 0, "u 'A2PhysAccumHist' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~A2PhysAccumHist", 1558, G__libLHCfEvent_404_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfEvent_404_0_28, (int) ('u'), G__get_linked_tagnum(&G__libLHCfEventLN_A2PhysAccumHist), -1, 1, 1, 1, 1, 0, "u 'A2PhysAccumHist' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncA1CountArray(void) {
   /* A1CountArray */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1CountArray));
   G__memfunc_setup("A1CountArray",1146,G__libLHCfEvent_408_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A1CountArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("A1CountArray",1146,G__libLHCfEvent_408_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A1CountArray), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initalize",937,G__libLHCfEvent_408_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__libLHCfEvent_408_0_4, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNdata",776,G__libLHCfEvent_408_0_5, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIdata",771,G__libLHCfEvent_408_0_6, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Next",415,G__libLHCfEvent_408_0_7, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Previous",861,G__libLHCfEvent_408_0_8, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill",391,G__libLHCfEvent_408_0_9, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Cal1' - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill",391,G__libLHCfEvent_408_0_10, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Scl_pp2015' - 0 - d", "For 2015 Operation", (void*) NULL, 0);
   G__memfunc_setup("MakeTGraph",964,G__libLHCfEvent_408_0_11, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TGraph), -1, 0, 3, 1, 1, 0, 
"i - - 0 - ch i - - 0 '0' sel "
"i - - 0 '-1' mode", "sel 0:count 1:rate, mode 0:Scl 1:Cal ", (void*) NULL, 0);
   G__memfunc_setup("FillToTGraph",1168,G__libLHCfEvent_408_0_12, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TGraph), -1, 0, 3, 1, 1, 0, 
"i - - 0 - ch i - - 0 - sel "
"U 'TGraph' - 0 - g", "sel 0:count 1:rate", (void*) NULL, 0);
   G__memfunc_setup("GetCounterTitle",1538,G__libLHCfEvent_408_0_13, 67, -1, -1, 0, 2, 1, 1, 1, 
"i - - 0 - sel i - - 0 - ich", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__libLHCfEvent_408_0_14, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Bor",291,G__libLHCfEvent_408_0_15, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Eor",294,G__libLHCfEvent_408_0_16, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Loop",410,G__libLHCfEvent_408_0_17, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Scl_pp2015' - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Loop",410,G__libLHCfEvent_408_0_18, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Cal1' - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfEvent_408_0_19, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&A1CountArray::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_408_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1CountArray::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_408_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&A1CountArray::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_408_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&A1CountArray::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_408_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_408_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1CountArray::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_408_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A1CountArray::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_408_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1CountArray::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_408_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A1CountArray::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("A1CountArray", 1146, G__libLHCfEvent_408_0_31, (int) ('i'), G__get_linked_tagnum(&G__libLHCfEventLN_A1CountArray), -1, 0, 1, 1, 1, 0, "u 'A1CountArray' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~A1CountArray", 1272, G__libLHCfEvent_408_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfEvent_408_0_33, (int) ('u'), G__get_linked_tagnum(&G__libLHCfEventLN_A1CountArray), -1, 1, 1, 1, 1, 0, "u 'A1CountArray' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncA2CountArray(void) {
   /* A2CountArray */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2CountArray));
   G__memfunc_setup("A2CountArray",1147,G__libLHCfEvent_409_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A2CountArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("A2CountArray",1147,G__libLHCfEvent_409_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A2CountArray), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initalize",937,G__libLHCfEvent_409_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__libLHCfEvent_409_0_4, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNdata",776,G__libLHCfEvent_409_0_5, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIdata",771,G__libLHCfEvent_409_0_6, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Next",415,G__libLHCfEvent_409_0_7, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Previous",861,G__libLHCfEvent_409_0_8, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill",391,G__libLHCfEvent_409_0_9, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Cal1' - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill",391,G__libLHCfEvent_409_0_10, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Scl_pp2015' - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeTGraph",964,G__libLHCfEvent_409_0_11, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TGraph), -1, 0, 3, 1, 1, 0, 
"i - - 0 - ch i - - 0 '0' sel "
"i - - 0 '-1' mode", "sel 0:count 1:rate mode 0:Scl 1:Cal ", (void*) NULL, 0);
   G__memfunc_setup("FillToTGraph",1168,G__libLHCfEvent_409_0_12, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TGraph), -1, 0, 3, 1, 1, 0, 
"i - - 0 - ch i - - 0 - sel "
"U 'TGraph' - 0 - g", "sel 0:count 1:rate", (void*) NULL, 0);
   G__memfunc_setup("GetCounterTitle",1538,G__libLHCfEvent_409_0_13, 67, -1, -1, 0, 2, 1, 1, 1, 
"i - - 0 - sel i - - 0 - ich", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__libLHCfEvent_409_0_14, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Bor",291,G__libLHCfEvent_409_0_15, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Eor",294,G__libLHCfEvent_409_0_16, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Loop",410,G__libLHCfEvent_409_0_17, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Scl_pp2015' - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Loop",410,G__libLHCfEvent_409_0_18, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Cal1' - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfEvent_409_0_19, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&A2CountArray::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_409_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2CountArray::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_409_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&A2CountArray::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_409_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&A2CountArray::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_409_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_409_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2CountArray::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_409_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A2CountArray::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_409_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2CountArray::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_409_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A2CountArray::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("A2CountArray", 1147, G__libLHCfEvent_409_0_31, (int) ('i'), G__get_linked_tagnum(&G__libLHCfEventLN_A2CountArray), -1, 0, 1, 1, 1, 0, "u 'A2CountArray' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~A2CountArray", 1273, G__libLHCfEvent_409_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfEvent_409_0_33, (int) ('u'), G__get_linked_tagnum(&G__libLHCfEventLN_A2CountArray), -1, 1, 1, 1, 1, 0, "u 'A2CountArray' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncA1CalEventHist(void) {
   /* A1CalEventHist */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A1CalEventHist));
   G__memfunc_setup("A1CalEventHist",1308,G__libLHCfEvent_412_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A1CalEventHist), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("A1CalEventHist",1308,G__libLHCfEvent_412_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A1CalEventHist), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__libLHCfEvent_412_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteHist",1003,G__libLHCfEvent_412_0_4, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteHists",1118,G__libLHCfEvent_412_0_5, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__libLHCfEvent_412_0_6, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill",391,G__libLHCfEvent_412_0_7, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Cal1' - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill",391,G__libLHCfEvent_412_0_8, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A1Cal2' - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCanvas1",953,G__libLHCfEvent_412_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawCanvas1",1051,G__libLHCfEvent_412_0_10, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 0 '\"lowhighdelayscifiall\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateCanvas1",1264,G__libLHCfEvent_412_0_11, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearCanvas1",1140,G__libLHCfEvent_412_0_12, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHistConfig",1306,G__libLHCfEvent_412_0_13, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '0' op", "op=0 for A1Cal1, op=1 for A1Cal2", (void*) NULL, 0);
   G__memfunc_setup("SetCanvas2",954,G__libLHCfEvent_412_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawCanvas2",1052,G__libLHCfEvent_412_0_15, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 0 '\"\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateCanvas2",1265,G__libLHCfEvent_412_0_16, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCanvas3",955,G__libLHCfEvent_412_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawCanvas3",1053,G__libLHCfEvent_412_0_18, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 0 '\"\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateCanvas3",1266,G__libLHCfEvent_412_0_19, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCanvas3YRange",1537,G__libLHCfEvent_412_0_20, 105, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - min d - - 0 - max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OptimizeYRange",1431,G__libLHCfEvent_412_0_21, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OptimizeYRange",1431,G__libLHCfEvent_412_0_22, 105, -1, -1, 0, 1, 1, 1, 0, "U 'TPad' - 0 - pad", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ChangeHistTitleOnPad",1970,G__libLHCfEvent_412_0_23, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'TPad' - 0 - pad C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTH1OnPad",959,G__libLHCfEvent_412_0_24, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TH1), -1, 0, 1, 1, 1, 0, "U 'TPad' - 0 - pad", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SelGPIOLogicFormat",1706,G__libLHCfEvent_412_0_25, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A1CalEventHistcLcLGPIOLOGIC), -1, 0, 1, 1, 1, 0, "U 'A1Cal1' - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDisplayFormat",1643,G__libLHCfEvent_412_0_26, 105, -1, -1, 0, 1, 1, 1, 0, "i 'A1CalEventHist::DISPLAY_VERSION' - 0 - version", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDisplayVersion_pp2010",2282,G__libLHCfEvent_412_0_27, 121, -1, -1, 0, 0, 1, 1, 0, "", "Display format for 2010", (void*) NULL, 0);
   G__memfunc_setup("SetDisplayVersion_pp2015",2287,G__libLHCfEvent_412_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", "Display format for 2015", (void*) NULL, 0);
   G__memfunc_setup("SetDisplayVersion_RHICf_Op2017",2747,G__libLHCfEvent_412_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", "Display format for RHICf 2017", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfEvent_412_0_30, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&A1CalEventHist::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_412_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1CalEventHist::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_412_0_32, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&A1CalEventHist::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_412_0_33, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&A1CalEventHist::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_412_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_412_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1CalEventHist::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_412_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A1CalEventHist::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_412_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A1CalEventHist::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_412_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A1CalEventHist::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("A1CalEventHist", 1308, G__libLHCfEvent_412_0_42, (int) ('i'), G__get_linked_tagnum(&G__libLHCfEventLN_A1CalEventHist), -1, 0, 1, 1, 1, 0, "u 'A1CalEventHist' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~A1CalEventHist", 1434, G__libLHCfEvent_412_0_43, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfEvent_412_0_44, (int) ('u'), G__get_linked_tagnum(&G__libLHCfEventLN_A1CalEventHist), -1, 1, 1, 1, 1, 0, "u 'A1CalEventHist' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncA2CalEventHist(void) {
   /* A2CalEventHist */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_A2CalEventHist));
   G__memfunc_setup("A2CalEventHist",1309,G__libLHCfEvent_415_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A2CalEventHist), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("A2CalEventHist",1309,G__libLHCfEvent_415_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A2CalEventHist), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__libLHCfEvent_415_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteHist",1003,G__libLHCfEvent_415_0_4, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteHists",1118,G__libLHCfEvent_415_0_5, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__libLHCfEvent_415_0_6, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill",391,G__libLHCfEvent_415_0_7, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Cal1' - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill",391,G__libLHCfEvent_415_0_8, 105, -1, -1, 0, 1, 1, 1, 0, "U 'A2Cal2' - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCanvas1",953,G__libLHCfEvent_415_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawCanvas1",1051,G__libLHCfEvent_415_0_10, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 0 '\"lowhighdelaysiliconallsilicont0\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateCanvas1",1264,G__libLHCfEvent_415_0_11, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearCanvas1",1140,G__libLHCfEvent_415_0_12, 105, -1, -1, 0, 0, 1, 1, 0, "", "Clear Pads", (void*) NULL, 0);
   G__memfunc_setup("SetHistConfig",1306,G__libLHCfEvent_415_0_13, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '0' op", "op=0 for A1Cal1, op=1 for A1Cal2", (void*) NULL, 0);
   G__memfunc_setup("SetCanvas2",954,G__libLHCfEvent_415_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawCanvas2",1052,G__libLHCfEvent_415_0_15, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 0 '\"\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateCanvas2",1265,G__libLHCfEvent_415_0_16, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCanvas3",955,G__libLHCfEvent_415_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawCanvas3",1053,G__libLHCfEvent_415_0_18, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 0 '\"\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateCanvas3",1266,G__libLHCfEvent_415_0_19, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCanvas3YRange",1537,G__libLHCfEvent_415_0_20, 105, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - min d - - 0 - max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHistColor",1219,G__libLHCfEvent_415_0_21, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '0' op", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OptimizeYRange",1431,G__libLHCfEvent_415_0_22, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OptimizeYRange",1431,G__libLHCfEvent_415_0_23, 105, -1, -1, 0, 1, 1, 1, 0, "U 'TPad' - 0 - pad", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ChangeHistTitleOnPad",1970,G__libLHCfEvent_415_0_24, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'TPad' - 0 - pad C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTH1OnPad",959,G__libLHCfEvent_415_0_25, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TH1), -1, 0, 1, 1, 1, 0, "U 'TPad' - 0 - pad", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SelGPIOLogicFormat",1706,G__libLHCfEvent_415_0_26, 105, G__get_linked_tagnum(&G__libLHCfEventLN_A2CalEventHistcLcLGPIOLOGIC), -1, 0, 1, 1, 1, 0, "U 'A2Cal1' - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDisplayFormat",1643,G__libLHCfEvent_415_0_27, 105, -1, -1, 0, 1, 1, 1, 0, "i 'A2CalEventHist::DISPLAY_VERSION' - 0 - version", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDisplayVersion_pp2010",2282,G__libLHCfEvent_415_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", "Display format for 2010", (void*) NULL, 0);
   G__memfunc_setup("SetDisplayVersion_pPb2013",2351,G__libLHCfEvent_415_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", "Display format for 2013", (void*) NULL, 0);
   G__memfunc_setup("SetDisplayVersion_pp2015",2287,G__libLHCfEvent_415_0_30, 121, -1, -1, 0, 0, 1, 1, 0, "", "Display format for 2015 ", (void*) NULL, 0);
   G__memfunc_setup("SetDisplayVersion_pPb2016",2354,G__libLHCfEvent_415_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", "Display format for 2016", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfEvent_415_0_32, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&A2CalEventHist::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_415_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2CalEventHist::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_415_0_34, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&A2CalEventHist::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_415_0_35, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&A2CalEventHist::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_415_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_415_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2CalEventHist::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_415_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A2CalEventHist::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_415_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&A2CalEventHist::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_415_0_43, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&A2CalEventHist::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("A2CalEventHist", 1309, G__libLHCfEvent_415_0_44, (int) ('i'), G__get_linked_tagnum(&G__libLHCfEventLN_A2CalEventHist), -1, 0, 1, 1, 1, 0, "u 'A2CalEventHist' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~A2CalEventHist", 1435, G__libLHCfEvent_415_0_45, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfEvent_415_0_46, (int) ('u'), G__get_linked_tagnum(&G__libLHCfEventLN_A2CalEventHist), -1, 1, 1, 1, 1, 0, "u 'A2CalEventHist' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSimP(void) {
   /* SimP */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_SimP));
   G__memfunc_setup("SimP",377,G__libLHCfEvent_418_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_SimP), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SimP",377,G__libLHCfEvent_418_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_SimP), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__libLHCfEvent_418_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copy",443,G__libLHCfEvent_418_0_4, 105, -1, -1, 0, 1, 1, 1, 0, "U 'SimP' - 0 - d", "copy name,title and data. ", (void*) NULL, 0);
   G__memfunc_setup("copydata",853,G__libLHCfEvent_418_0_5, 105, -1, -1, 0, 1, 1, 1, 0, "U 'SimP' - 0 - d", "copy only data.", (void*) NULL, 0);
   G__memfunc_setup("Code",379,G__libLHCfEvent_418_0_6, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SubCode",677,G__libLHCfEvent_418_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Charge",586,G__libLHCfEvent_418_0_8, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("User",415,G__libLHCfEvent_418_0_9, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Tag",284,G__libLHCfEvent_418_0_10, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Energy",618,G__libLHCfEvent_418_0_11, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PosX",394,G__libLHCfEvent_418_0_12, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PosY",395,G__libLHCfEvent_418_0_13, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PosZ",396,G__libLHCfEvent_418_0_14, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MomX",385,G__libLHCfEvent_418_0_15, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MomY",386,G__libLHCfEvent_418_0_16, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MomZ",387,G__libLHCfEvent_418_0_17, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KineticEnergy",1329,G__libLHCfEvent_418_0_18, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Momentum",850,G__libLHCfEvent_418_0_19, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Mass",404,G__libLHCfEvent_418_0_20, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsPhoton",820,G__libLHCfEvent_418_0_21, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsGammaray",1003,G__libLHCfEvent_418_0_22, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsElectron",1016,G__libLHCfEvent_418_0_23, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsPositron",1050,G__libLHCfEvent_418_0_24, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsMup",494,G__libLHCfEvent_418_0_25, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsMun",492,G__libLHCfEvent_418_0_26, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsPi0",421,G__libLHCfEvent_418_0_27, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsPip",485,G__libLHCfEvent_418_0_28, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsPin",483,G__libLHCfEvent_418_0_29, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsK0",311,G__libLHCfEvent_418_0_30, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsKp",375,G__libLHCfEvent_418_0_31, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsKn",373,G__libLHCfEvent_418_0_32, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsProton",830,G__libLHCfEvent_418_0_33, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsAntiProton",1226,G__libLHCfEvent_418_0_34, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsNeutron",935,G__libLHCfEvent_418_0_35, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsEta",470,G__libLHCfEvent_418_0_36, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsElemag",775,G__libLHCfEvent_418_0_37, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalPos",578,G__libLHCfEvent_418_0_38, 121, -1, -1, 0, 6, 1, 1, 0, 
"i - - 0 - id i - - 0 - it "
"d - - 1 - x d - - 1 - y "
"d - - 0 'GetOffset(0)' offsetx d - - 0 'GetOffset(1)' offsety", "Incident position in the calorimeter coordinate id=1/2/10(NewArm1)/20(NewArm2)", (void*) NULL, 0);
   G__memfunc_setup("CalPosX",666,G__libLHCfEvent_418_0_39, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - id i - - 0 - it "
"d - - 0 'GetOffset(0)' offsetx d - - 0 'GetOffset(1)' offsety", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalPosY",667,G__libLHCfEvent_418_0_40, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - id i - - 0 - it "
"d - - 0 'GetOffset(0)' offsetx d - - 0 'GetOffset(1)' offsety", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckHit",771,G__libLHCfEvent_418_0_41, 105, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - id i - - 0 - it "
"d - - 0 '0.0' edgecut d - - 0 'GetOffset(0)' offsetx "
"d - - 0 'GetOffset(1)' offsety", "Check the hit in the given acceptance of calorimeter. id=1/2/10(NewArm1)/20(NewArm2)", (void*) NULL, 0);
   G__memfunc_setup("Show",417,G__libLHCfEvent_418_0_42, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 '0' id i - - 0 '0' it "
"d - - 0 'GetOffset(0)' offsetx d - - 0 'GetOffset(1)' offsety", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PositionShift",1363,G__libLHCfEvent_418_0_43, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - xy d - - 0 - offsetx "
"d - - 0 - offsety", "Simple shift x'=x+offsetx, y'=y+offsety", (void*) NULL, 0);
   G__memfunc_setup("GlobalPos_Detector",1820,G__libLHCfEvent_418_0_44, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - xy d - - 0 'GetOffsetDetector(0)' offsetx "
"d - - 0 'GetOffsetDetector(1)' offsety", "Incidnet Position in the global detector coordinate", (void*) NULL, 0);
   G__memfunc_setup("GlobalPos_BC",1127,G__libLHCfEvent_418_0_45, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - xy d - - 0 'GetOffsetBC(0)' offsetx "
"d - - 0 'GetOffsetBC(1)' offsety", "Incident Position in the global beam center coordinate ", (void*) NULL, 0);
   G__memfunc_setup("GlobalPos_BeamPipe",1765,G__libLHCfEvent_418_0_46, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - xy", "Incident Position in the global beam pipe coordinate", (void*) NULL, 0);
   G__memfunc_setup("GPosX_Detector",1386,G__libLHCfEvent_418_0_47, 100, -1, -1, 0, 0, 1, 1, 0, "", "Arias to GlobalPos_Detector(0)", (void*) NULL, 0);
   G__memfunc_setup("GPosY_Detector",1387,G__libLHCfEvent_418_0_48, 100, -1, -1, 0, 0, 1, 1, 0, "", "Arias to GlobalPos_Detector(1)", (void*) NULL, 0);
   G__memfunc_setup("GPosX_BC",693,G__libLHCfEvent_418_0_49, 100, -1, -1, 0, 0, 1, 1, 0, "", "Arias to GlobalPos_BC(0)", (void*) NULL, 0);
   G__memfunc_setup("GPosY_BC",694,G__libLHCfEvent_418_0_50, 100, -1, -1, 0, 0, 1, 1, 0, "", "Arias to GlobalPos_BC(1)", (void*) NULL, 0);
   G__memfunc_setup("GPosX_BeamPipe",1331,G__libLHCfEvent_418_0_51, 100, -1, -1, 0, 0, 1, 1, 0, "", "Arias to GlobalPos_BeamPipe(0)", (void*) NULL, 0);
   G__memfunc_setup("GPosY_BeamPipe",1332,G__libLHCfEvent_418_0_52, 100, -1, -1, 0, 0, 1, 1, 0, "", "Arias to GlobalPos_BeamPipe(1)", (void*) NULL, 0);
   G__memfunc_setup("GetCalorimeterSize",1842,G__libLHCfEvent_418_0_53, 100, -1, -1, 0, 2, 3, 1, 0, 
"i - - 0 - id i - - 0 - it", (char*)NULL, (void*) G__func2void( (double (*)(int, int))(&SimP::GetCalorimeterSize) ), 0);
   G__memfunc_setup("SetPositionBeamCenter",2135,G__libLHCfEvent_418_0_54, 105, -1, -1, 0, 2, 3, 1, 0, 
"d - - 0 - x d - - 0 - y", "Set the Beam Center Position in the Global_Detertor coordinate.", (void*) G__func2void( (int (*)(double, double))(&SimP::SetPositionBeamCenter) ), 0);
   G__memfunc_setup("SetPositionBeamPipeCenter",2533,G__libLHCfEvent_418_0_55, 105, -1, -1, 0, 2, 3, 1, 0, 
"d - - 0 - x d - - 0 - y", "Set the Beam Pipe Center in the Global_Detertor coordinate.", (void*) G__func2void( (int (*)(double, double))(&SimP::SetPositionBeamPipeCenter) ), 0);
   G__memfunc_setup("GetPositionBeamCenter",2123,G__libLHCfEvent_418_0_56, 100, -1, -1, 0, 1, 3, 1, 0, "i - - 0 - xy", (char*)NULL, (void*) G__func2void( (double (*)(int))(&SimP::GetPositionBeamCenter) ), 0);
   G__memfunc_setup("GetPositionBeamPipeCenter",2521,G__libLHCfEvent_418_0_57, 100, -1, -1, 0, 1, 3, 1, 0, "i - - 0 - xy", (char*)NULL, (void*) G__func2void( (double (*)(int))(&SimP::GetPositionBeamPipeCenter) ), 0);
   G__memfunc_setup("GetOffset",903,G__libLHCfEvent_418_0_58, 100, -1, -1, 0, 1, 3, 1, 0, "i - - 0 - xy", "= -1.*sPositionBeamPipe[xy]", (void*) G__func2void( (double (*)(int))(&SimP::GetOffset) ), 0);
   G__memfunc_setup("GetOffsetDetector",1729,G__libLHCfEvent_418_0_59, 100, -1, -1, 0, 1, 3, 1, 0, "i - - 0 - xy", "= sPositionBeamPipe[xy]", (void*) G__func2void( (double (*)(int))(&SimP::GetOffsetDetector) ), 0);
   G__memfunc_setup("GetOffsetBC",1036,G__libLHCfEvent_418_0_60, 100, -1, -1, 0, 1, 3, 1, 0, "i - - 0 - xy", "=sPositionBeamPipe[xy]-sPositionBeamCenter[xy] ", (void*) G__func2void( (double (*)(int))(&SimP::GetOffsetBC) ), 0);
   G__memfunc_setup("Class",502,G__libLHCfEvent_418_0_61, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SimP::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_418_0_62, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SimP::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_418_0_63, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SimP::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_418_0_64, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SimP::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_418_0_68, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_418_0_69, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SimP::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_418_0_70, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SimP::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_418_0_71, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SimP::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_418_0_72, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SimP::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("SimP", 377, G__libLHCfEvent_418_0_73, (int) ('i'), G__get_linked_tagnum(&G__libLHCfEventLN_SimP), -1, 0, 1, 1, 1, 0, "u 'SimP' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SimP", 503, G__libLHCfEvent_418_0_74, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfEvent_418_0_75, (int) ('u'), G__get_linked_tagnum(&G__libLHCfEventLN_SimP), -1, 1, 1, 1, 1, 0, "u 'SimP' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSimIncidents(void) {
   /* SimIncidents */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_SimIncidents));
   G__memfunc_setup("SimIncidents",1226,G__libLHCfEvent_419_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_SimIncidents), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SimIncidents",1226,G__libLHCfEvent_419_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_SimIncidents), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__libLHCfEvent_419_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copy",443,G__libLHCfEvent_419_0_4, 105, -1, -1, 0, 1, 1, 1, 0, "U 'SimIncidents' - 0 - -", "not yet", (void*) NULL, 0);
   G__memfunc_setup("copydata",853,G__libLHCfEvent_419_0_5, 105, -1, -1, 0, 1, 1, 1, 0, "U 'SimIncidents' - 0 - -", "not yet", (void*) NULL, 0);
   G__memfunc_setup("Delete",595,G__libLHCfEvent_419_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetN",366,G__libLHCfEvent_419_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__libLHCfEvent_419_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "U 'SimP' - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get",288,G__libLHCfEvent_419_0_9, 85, G__get_linked_tagnum(&G__libLHCfEventLN_SimP), -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNHit",659,G__libLHCfEvent_419_0_10, 105, -1, -1, 0, 6, 1, 1, 0, 
"i - - 0 - id i - - 0 - it "
"d - - 0 '0.0' ke_threshold d - - 0 '0.0' edgecut "
"d - - 0 'SimP::GetOffset(0)' offsetx d - - 0 'SimP::GetOffset(1)' offsety", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHit",581,G__libLHCfEvent_419_0_11, 85, G__get_linked_tagnum(&G__libLHCfEventLN_SimP), -1, 0, 6, 1, 1, 0, 
"i - - 0 - id i - - 0 - it "
"i - - 0 '0' ik d - - 0 '0.0' edgecut "
"d - - 0 'SimP::GetOffset(0)' offsetx d - - 0 'SimP::GetOffset(0)' offsety", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRefNumber",1190,G__libLHCfEvent_419_0_12, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRef",573,G__libLHCfEvent_419_0_13, 85, G__get_linked_tagnum(&G__libLHCfEventLN_SimP), -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Show",417,G__libLHCfEvent_419_0_14, 121, -1, -1, 0, 6, 1, 1, 0, 
"i - - 0 '0' id i - - 0 '0' it "
"d - - 0 '0.0' ke_threshold d - - 0 '0.0' edgecut "
"d - - 0 'SimP::GetOffset(0)' offsetx d - - 0 'SimP::GetOffset(1)' offsety", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalPi0Mass",909,G__libLHCfEvent_419_0_15, 100, -1, -1, 0, 2, 3, 1, 0, 
"U 'SimP' - 0 - p1 U 'SimP' - 0 - p2", (char*)NULL, (void*) G__func2void( (double (*)(SimP*, SimP*))(&SimIncidents::CalPi0Mass) ), 0);
   G__memfunc_setup("CalPi0Distance",1316,G__libLHCfEvent_419_0_16, 100, -1, -1, 0, 2, 3, 1, 0, 
"U 'SimP' - 0 - p1 U 'SimP' - 0 - p2", (char*)NULL, (void*) G__func2void( (double (*)(SimP*, SimP*))(&SimIncidents::CalPi0Distance) ), 0);
   G__memfunc_setup("CalPi0Energy",1123,G__libLHCfEvent_419_0_17, 100, -1, -1, 0, 2, 3, 1, 0, 
"U 'SimP' - 0 - p1 U 'SimP' - 0 - p2", (char*)NULL, (void*) G__func2void( (double (*)(SimP*, SimP*))(&SimIncidents::CalPi0Energy) ), 0);
   G__memfunc_setup("CalPi0Momentum",1355,G__libLHCfEvent_419_0_18, 100, -1, -1, 0, 5, 3, 1, 0, 
"U 'SimP' - 0 - p1 U 'SimP' - 0 - p2 "
"i - - 0 - dir d - - 0 '0.' offsetx "
"d - - 0 '0.' offsety", (char*)NULL, (void*) G__func2void( (double (*)(SimP*, SimP*, int, double, double))(&SimIncidents::CalPi0Momentum) ), 0);
   G__memfunc_setup("CalPi0Pt",701,G__libLHCfEvent_419_0_19, 100, -1, -1, 0, 4, 3, 1, 0, 
"U 'SimP' - 0 - p1 U 'SimP' - 0 - p2 "
"d - - 0 '0.' offsetx d - - 0 '0.' offsety", (char*)NULL, (void*) G__func2void( (double (*)(SimP*, SimP*, double, double))(&SimIncidents::CalPi0Pt) ), 0);
   G__memfunc_setup("Class",502,G__libLHCfEvent_419_0_20, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SimIncidents::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_419_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SimIncidents::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_419_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SimIncidents::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_419_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SimIncidents::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_419_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_419_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SimIncidents::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_419_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SimIncidents::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_419_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SimIncidents::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_419_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SimIncidents::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~SimIncidents", 1352, G__libLHCfEvent_419_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSPSAdamoRec0(void) {
   /* SPSAdamoRec0 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_SPSAdamoRec0));
   G__memfunc_setup("SPSAdamoRec0",1058,G__libLHCfEvent_420_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_SPSAdamoRec0), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__libLHCfEvent_420_0_2, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copy",443,G__libLHCfEvent_420_0_3, 105, -1, -1, 0, 1, 1, 1, 0, "U 'SPSAdamoRec0' - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copydata",853,G__libLHCfEvent_420_0_4, 105, -1, -1, 0, 1, 1, 1, 0, "U 'SPSAdamoRec0' - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPosition",1141,G__libLHCfEvent_420_0_5, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ixy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetX",376,G__libLHCfEvent_420_0_6, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetY",377,G__libLHCfEvent_420_0_7, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDirection",1217,G__libLHCfEvent_420_0_8, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ixy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDX",444,G__libLHCfEvent_420_0_9, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDY",445,G__libLHCfEvent_420_0_10, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfEvent_420_0_11, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SPSAdamoRec0::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_420_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SPSAdamoRec0::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_420_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SPSAdamoRec0::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_420_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SPSAdamoRec0::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_420_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_420_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SPSAdamoRec0::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_420_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SPSAdamoRec0::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_420_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SPSAdamoRec0::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_420_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SPSAdamoRec0::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("SPSAdamoRec0", 1058, G__libLHCfEvent_420_0_23, (int) ('i'), G__get_linked_tagnum(&G__libLHCfEventLN_SPSAdamoRec0), -1, 0, 1, 1, 1, 0, "u 'SPSAdamoRec0' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SPSAdamoRec0", 1184, G__libLHCfEvent_420_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfEvent_420_0_25, (int) ('u'), G__get_linked_tagnum(&G__libLHCfEventLN_SPSAdamoRec0), -1, 1, 1, 1, 1, 0, "u 'SPSAdamoRec0' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncSPSAdamoHist(void) {
   /* SPSAdamoHist */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libLHCfEventLN_SPSAdamoHist));
   G__memfunc_setup("SPSAdamoHist",1136,G__libLHCfEvent_421_0_1, 105, G__get_linked_tagnum(&G__libLHCfEventLN_SPSAdamoHist), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SPSAdamoHist",1136,G__libLHCfEvent_421_0_2, 105, G__get_linked_tagnum(&G__libLHCfEventLN_SPSAdamoHist), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__libLHCfEvent_421_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteHist",1003,G__libLHCfEvent_421_0_4, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteHists",1118,G__libLHCfEvent_421_0_5, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteCanvas",1199,G__libLHCfEvent_421_0_6, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__libLHCfEvent_421_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill",391,G__libLHCfEvent_421_0_8, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'SPSAdamo' - 0 - d C - - 0 '\"\"' op", "op:\"S\" only the valid channels are filled     ", (void*) NULL, 0);
   G__memfunc_setup("SetCanvas",904,G__libLHCfEvent_421_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - ctmp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawCanvas",1002,G__libLHCfEvent_421_0_10, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("UpdateCanvas",1215,G__libLHCfEvent_421_0_11, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMaximum",1034,G__libLHCfEvent_421_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - max C - - 0 '\"X,Y\"' op", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMinimum",1032,G__libLHCfEvent_421_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - min C - - 0 '\"X,Y\"' op", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libLHCfEvent_421_0_14, 85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SPSAdamoHist::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libLHCfEvent_421_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SPSAdamoHist::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libLHCfEvent_421_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SPSAdamoHist::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libLHCfEvent_421_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SPSAdamoHist::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libLHCfEventLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libLHCfEvent_421_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libLHCfEvent_421_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SPSAdamoHist::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libLHCfEvent_421_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SPSAdamoHist::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libLHCfEvent_421_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SPSAdamoHist::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libLHCfEvent_421_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SPSAdamoHist::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("SPSAdamoHist", 1136, G__libLHCfEvent_421_0_26, (int) ('i'), G__get_linked_tagnum(&G__libLHCfEventLN_SPSAdamoHist), -1, 0, 1, 1, 1, 0, "u 'SPSAdamoHist' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SPSAdamoHist", 1262, G__libLHCfEvent_421_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libLHCfEvent_421_0_28, (int) ('u'), G__get_linked_tagnum(&G__libLHCfEventLN_SPSAdamoHist), -1, 1, 1, 1, 1, 0, "u 'SPSAdamoHist' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfunclibLHCfEvent() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {
}

static void G__cpp_setup_global7() {
}

static void G__cpp_setup_global8() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globallibLHCfEvent() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
  G__cpp_setup_global7();
  G__cpp_setup_global8();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funclibLHCfEvent() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__libLHCfEventLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__libLHCfEventLN_A1Raw = { "A1Raw" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_A1RawcLcLbank = { "A1Raw::bank" , 101 , -1 };
G__linked_taginfo G__libLHCfEventLN_A1Cal1 = { "A1Cal1" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_A1Cal1cLcLbank = { "A1Cal1::bank" , 101 , -1 };
G__linked_taginfo G__libLHCfEventLN_A1Cal1cLcLGPIOFLAG0 = { "A1Cal1::GPIOFLAG0" , 101 , -1 };
G__linked_taginfo G__libLHCfEventLN_A1Cal1cLcLGPIOFLAG2 = { "A1Cal1::GPIOFLAG2" , 101 , -1 };
G__linked_taginfo G__libLHCfEventLN_A1Cal2 = { "A1Cal2" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_A1Cal2cLcLbank = { "A1Cal2::bank" , 101 , -1 };
G__linked_taginfo G__libLHCfEventLN_A1Cal2cLcLGPIOFLAG0 = { "A1Cal2::GPIOFLAG0" , 101 , -1 };
G__linked_taginfo G__libLHCfEventLN_A1Cal2cLcLGPIOFLAG2 = { "A1Cal2::GPIOFLAG2" , 101 , -1 };
G__linked_taginfo G__libLHCfEventLN_A1Phys = { "A1Phys" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_A1Info = { "A1Info" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_A1Scl = { "A1Scl" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_A2Raw = { "A2Raw" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_A2RawcLcLbank = { "A2Raw::bank" , 101 , -1 };
G__linked_taginfo G__libLHCfEventLN_A2Cal2 = { "A2Cal2" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_A2Cal1 = { "A2Cal1" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_A2Cal1cLcLbank = { "A2Cal1::bank" , 101 , -1 };
G__linked_taginfo G__libLHCfEventLN_A2Cal1cLcLGPIOFLAG0 = { "A2Cal1::GPIOFLAG0" , 101 , -1 };
G__linked_taginfo G__libLHCfEventLN_A2Cal1cLcLGPIOFLAG2 = { "A2Cal1::GPIOFLAG2" , 101 , -1 };
G__linked_taginfo G__libLHCfEventLN_A2Cal1cLcLBUNCHCONFFLAG = { "A2Cal1::BUNCHCONFFLAG" , 101 , -1 };
G__linked_taginfo G__libLHCfEventLN_A2Cal2cLcLbank = { "A2Cal2::bank" , 101 , -1 };
G__linked_taginfo G__libLHCfEventLN_A2Cal2cLcLGPIOFLAG0 = { "A2Cal2::GPIOFLAG0" , 101 , -1 };
G__linked_taginfo G__libLHCfEventLN_A2Cal2cLcLGPIOFLAG2 = { "A2Cal2::GPIOFLAG2" , 101 , -1 };
G__linked_taginfo G__libLHCfEventLN_A2Phys = { "A2Phys" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_Rec0 = { "Rec0" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_Rec0cLcLDEF_EVQUALITY = { "Rec0::DEF_EVQUALITY" , 101 , -1 };
G__linked_taginfo G__libLHCfEventLN_Rec0cLcLDEF_BEAMTAG = { "Rec0::DEF_BEAMTAG" , 101 , -1 };
G__linked_taginfo G__libLHCfEventLN_A2Cal2M = { "A2Cal2M" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_A2Cal2McLcLBUNCHCONFFLAG = { "A2Cal2M::BUNCHCONFFLAG" , 101 , -1 };
G__linked_taginfo G__libLHCfEventLN_A2Info = { "A2Info" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_A2Scl = { "A2Scl" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_RawL1T = { "RawL1T" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_SclL1T = { "SclL1T" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_GParam = { "GParam" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_GParamD64 = { "GParamD64" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_SPSAdamo = { "SPSAdamo" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_TVector2 = { "TVector2" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_RHICfSinglePar = { "RHICfSinglePar" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_RHICfPhotonPair = { "RHICfPhotonPair" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_A1Rec1 = { "A1Rec1" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_RHICfCollection = { "RHICfCollection" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_A1Raw_pp2015 = { "A1Raw_pp2015" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_A1Raw_pp2015cLcLbank = { "A1Raw_pp2015::bank" , 101 , -1 };
G__linked_taginfo G__libLHCfEventLN_A2Raw_pp2015 = { "A2Raw_pp2015" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_A2Raw_pp2015cLcLbank = { "A2Raw_pp2015::bank" , 101 , -1 };
G__linked_taginfo G__libLHCfEventLN_A1Scl_pp2015 = { "A1Scl_pp2015" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_A2Scl_pp2015 = { "A2Scl_pp2015" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_A2Raw_pPb2013 = { "A2Raw_pPb2013" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_A2Raw_pPb2013cLcLbank = { "A2Raw_pPb2013::bank" , 101 , -1 };
G__linked_taginfo G__libLHCfEventLN_A2Raw_pPb2016 = { "A2Raw_pPb2016" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_A2Raw_pPb2016cLcLbank = { "A2Raw_pPb2016::bank" , 101 , -1 };
G__linked_taginfo G__libLHCfEventLN_RHICfRaw_Op2017 = { "RHICfRaw_Op2017" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_RHICfRaw_Op2017cLcLbank = { "RHICfRaw_Op2017::bank" , 101 , -1 };
G__linked_taginfo G__libLHCfEventLN_LHCfEvent = { "LHCfEvent" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_LHCfDef = { "LHCfDef" , 110 , -1 };
G__linked_taginfo G__libLHCfEventLN_LHCfDefcLcLDef_TOWER = { "LHCfDef::Def_TOWER" , 101 , -1 };
G__linked_taginfo G__libLHCfEventLN_A1Cal2M = { "A1Cal2M" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_A1Cal2McLcLBUNCHCONFFLAG = { "A1Cal2M::BUNCHCONFFLAG" , 101 , -1 };
G__linked_taginfo G__libLHCfEventLN_A1Rec2 = { "A1Rec2" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_A1Rec2cLcLBITMAP_FLAGANALYSIS = { "A1Rec2::BITMAP_FLAGANALYSIS" , 101 , -1 };
G__linked_taginfo G__libLHCfEventLN_A2Rec1 = { "A2Rec1" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_A2Rec2 = { "A2Rec2" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_A2Rec3 = { "A2Rec3" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_RHICfScl_Op2017 = { "RHICfScl_Op2017" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__libLHCfEventLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_TPad = { "TPad" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_A1Cal1AccumHist = { "A1Cal1AccumHist" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_A1Cal1AccumHistcLcLDATA_VERSION = { "A1Cal1AccumHist::DATA_VERSION" , 101 , -1 };
G__linked_taginfo G__libLHCfEventLN_A2Cal1AccumHist = { "A2Cal1AccumHist" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_A1Cal2AccumHist = { "A1Cal2AccumHist" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_A2Cal2AccumHist = { "A2Cal2AccumHist" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_TH2F = { "TH2F" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_A1PhysAccumHist = { "A1PhysAccumHist" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_A2PhysAccumHist = { "A2PhysAccumHist" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_TGraph = { "TGraph" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_A1CountArray = { "A1CountArray" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_A2CountArray = { "A2CountArray" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_TText = { "TText" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_A1CalEventHist = { "A1CalEventHist" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_A1CalEventHistcLcLGPIOLOGIC = { "A1CalEventHist::GPIOLOGIC" , 101 , -1 };
G__linked_taginfo G__libLHCfEventLN_A1CalEventHistcLcLDISPLAY_VERSION = { "A1CalEventHist::DISPLAY_VERSION" , 101 , -1 };
G__linked_taginfo G__libLHCfEventLN_A2CalEventHist = { "A2CalEventHist" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_A2CalEventHistcLcLGPIOLOGIC = { "A2CalEventHist::GPIOLOGIC" , 101 , -1 };
G__linked_taginfo G__libLHCfEventLN_A2CalEventHistcLcLDISPLAY_VERSION = { "A2CalEventHist::DISPLAY_VERSION" , 101 , -1 };
G__linked_taginfo G__libLHCfEventLN_SimP = { "SimP" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_SimIncidents = { "SimIncidents" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_SPSAdamoRec0 = { "SPSAdamoRec0" , 99 , -1 };
G__linked_taginfo G__libLHCfEventLN_SPSAdamoHist = { "SPSAdamoHist" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablelibLHCfEvent() {
  G__libLHCfEventLN_TClass.tagnum = -1 ;
  G__libLHCfEventLN_TBuffer.tagnum = -1 ;
  G__libLHCfEventLN_TMemberInspector.tagnum = -1 ;
  G__libLHCfEventLN_TObject.tagnum = -1 ;
  G__libLHCfEventLN_TNamed.tagnum = -1 ;
  G__libLHCfEventLN_TString.tagnum = -1 ;
  G__libLHCfEventLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__libLHCfEventLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__libLHCfEventLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__libLHCfEventLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__libLHCfEventLN_TObjArray.tagnum = -1 ;
  G__libLHCfEventLN_TClonesArray.tagnum = -1 ;
  G__libLHCfEventLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__libLHCfEventLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__libLHCfEventLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__libLHCfEventLN_A1Raw.tagnum = -1 ;
  G__libLHCfEventLN_A1RawcLcLbank.tagnum = -1 ;
  G__libLHCfEventLN_A1Cal1.tagnum = -1 ;
  G__libLHCfEventLN_A1Cal1cLcLbank.tagnum = -1 ;
  G__libLHCfEventLN_A1Cal1cLcLGPIOFLAG0.tagnum = -1 ;
  G__libLHCfEventLN_A1Cal1cLcLGPIOFLAG2.tagnum = -1 ;
  G__libLHCfEventLN_A1Cal2.tagnum = -1 ;
  G__libLHCfEventLN_A1Cal2cLcLbank.tagnum = -1 ;
  G__libLHCfEventLN_A1Cal2cLcLGPIOFLAG0.tagnum = -1 ;
  G__libLHCfEventLN_A1Cal2cLcLGPIOFLAG2.tagnum = -1 ;
  G__libLHCfEventLN_A1Phys.tagnum = -1 ;
  G__libLHCfEventLN_A1Info.tagnum = -1 ;
  G__libLHCfEventLN_A1Scl.tagnum = -1 ;
  G__libLHCfEventLN_A2Raw.tagnum = -1 ;
  G__libLHCfEventLN_A2RawcLcLbank.tagnum = -1 ;
  G__libLHCfEventLN_A2Cal2.tagnum = -1 ;
  G__libLHCfEventLN_A2Cal1.tagnum = -1 ;
  G__libLHCfEventLN_A2Cal1cLcLbank.tagnum = -1 ;
  G__libLHCfEventLN_A2Cal1cLcLGPIOFLAG0.tagnum = -1 ;
  G__libLHCfEventLN_A2Cal1cLcLGPIOFLAG2.tagnum = -1 ;
  G__libLHCfEventLN_A2Cal1cLcLBUNCHCONFFLAG.tagnum = -1 ;
  G__libLHCfEventLN_A2Cal2cLcLbank.tagnum = -1 ;
  G__libLHCfEventLN_A2Cal2cLcLGPIOFLAG0.tagnum = -1 ;
  G__libLHCfEventLN_A2Cal2cLcLGPIOFLAG2.tagnum = -1 ;
  G__libLHCfEventLN_A2Phys.tagnum = -1 ;
  G__libLHCfEventLN_Rec0.tagnum = -1 ;
  G__libLHCfEventLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__libLHCfEventLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__libLHCfEventLN_Rec0cLcLDEF_EVQUALITY.tagnum = -1 ;
  G__libLHCfEventLN_Rec0cLcLDEF_BEAMTAG.tagnum = -1 ;
  G__libLHCfEventLN_A2Cal2M.tagnum = -1 ;
  G__libLHCfEventLN_A2Cal2McLcLBUNCHCONFFLAG.tagnum = -1 ;
  G__libLHCfEventLN_A2Info.tagnum = -1 ;
  G__libLHCfEventLN_A2Scl.tagnum = -1 ;
  G__libLHCfEventLN_RawL1T.tagnum = -1 ;
  G__libLHCfEventLN_SclL1T.tagnum = -1 ;
  G__libLHCfEventLN_GParam.tagnum = -1 ;
  G__libLHCfEventLN_GParamD64.tagnum = -1 ;
  G__libLHCfEventLN_SPSAdamo.tagnum = -1 ;
  G__libLHCfEventLN_TVector2.tagnum = -1 ;
  G__libLHCfEventLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__libLHCfEventLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__libLHCfEventLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__libLHCfEventLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__libLHCfEventLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__libLHCfEventLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__libLHCfEventLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__libLHCfEventLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__libLHCfEventLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__libLHCfEventLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__libLHCfEventLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__libLHCfEventLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__libLHCfEventLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__libLHCfEventLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__libLHCfEventLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__libLHCfEventLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__libLHCfEventLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__libLHCfEventLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__libLHCfEventLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__libLHCfEventLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__libLHCfEventLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__libLHCfEventLN_TLorentzVector.tagnum = -1 ;
  G__libLHCfEventLN_RHICfSinglePar.tagnum = -1 ;
  G__libLHCfEventLN_RHICfPhotonPair.tagnum = -1 ;
  G__libLHCfEventLN_A1Rec1.tagnum = -1 ;
  G__libLHCfEventLN_RHICfCollection.tagnum = -1 ;
  G__libLHCfEventLN_A1Raw_pp2015.tagnum = -1 ;
  G__libLHCfEventLN_A1Raw_pp2015cLcLbank.tagnum = -1 ;
  G__libLHCfEventLN_A2Raw_pp2015.tagnum = -1 ;
  G__libLHCfEventLN_A2Raw_pp2015cLcLbank.tagnum = -1 ;
  G__libLHCfEventLN_A1Scl_pp2015.tagnum = -1 ;
  G__libLHCfEventLN_A2Scl_pp2015.tagnum = -1 ;
  G__libLHCfEventLN_A2Raw_pPb2013.tagnum = -1 ;
  G__libLHCfEventLN_A2Raw_pPb2013cLcLbank.tagnum = -1 ;
  G__libLHCfEventLN_A2Raw_pPb2016.tagnum = -1 ;
  G__libLHCfEventLN_A2Raw_pPb2016cLcLbank.tagnum = -1 ;
  G__libLHCfEventLN_RHICfRaw_Op2017.tagnum = -1 ;
  G__libLHCfEventLN_RHICfRaw_Op2017cLcLbank.tagnum = -1 ;
  G__libLHCfEventLN_LHCfEvent.tagnum = -1 ;
  G__libLHCfEventLN_LHCfDef.tagnum = -1 ;
  G__libLHCfEventLN_LHCfDefcLcLDef_TOWER.tagnum = -1 ;
  G__libLHCfEventLN_A1Cal2M.tagnum = -1 ;
  G__libLHCfEventLN_A1Cal2McLcLBUNCHCONFFLAG.tagnum = -1 ;
  G__libLHCfEventLN_A1Rec2.tagnum = -1 ;
  G__libLHCfEventLN_A1Rec2cLcLBITMAP_FLAGANALYSIS.tagnum = -1 ;
  G__libLHCfEventLN_A2Rec1.tagnum = -1 ;
  G__libLHCfEventLN_A2Rec2.tagnum = -1 ;
  G__libLHCfEventLN_A2Rec3.tagnum = -1 ;
  G__libLHCfEventLN_RHICfScl_Op2017.tagnum = -1 ;
  G__libLHCfEventLN_TH1.tagnum = -1 ;
  G__libLHCfEventLN_TH1F.tagnum = -1 ;
  G__libLHCfEventLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__libLHCfEventLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__libLHCfEventLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__libLHCfEventLN_TCanvas.tagnum = -1 ;
  G__libLHCfEventLN_TPad.tagnum = -1 ;
  G__libLHCfEventLN_A1Cal1AccumHist.tagnum = -1 ;
  G__libLHCfEventLN_A1Cal1AccumHistcLcLDATA_VERSION.tagnum = -1 ;
  G__libLHCfEventLN_A2Cal1AccumHist.tagnum = -1 ;
  G__libLHCfEventLN_A1Cal2AccumHist.tagnum = -1 ;
  G__libLHCfEventLN_A2Cal2AccumHist.tagnum = -1 ;
  G__libLHCfEventLN_TH2F.tagnum = -1 ;
  G__libLHCfEventLN_A1PhysAccumHist.tagnum = -1 ;
  G__libLHCfEventLN_A2PhysAccumHist.tagnum = -1 ;
  G__libLHCfEventLN_TGraph.tagnum = -1 ;
  G__libLHCfEventLN_A1CountArray.tagnum = -1 ;
  G__libLHCfEventLN_A2CountArray.tagnum = -1 ;
  G__libLHCfEventLN_TText.tagnum = -1 ;
  G__libLHCfEventLN_A1CalEventHist.tagnum = -1 ;
  G__libLHCfEventLN_A1CalEventHistcLcLGPIOLOGIC.tagnum = -1 ;
  G__libLHCfEventLN_A1CalEventHistcLcLDISPLAY_VERSION.tagnum = -1 ;
  G__libLHCfEventLN_A2CalEventHist.tagnum = -1 ;
  G__libLHCfEventLN_A2CalEventHistcLcLGPIOLOGIC.tagnum = -1 ;
  G__libLHCfEventLN_A2CalEventHistcLcLDISPLAY_VERSION.tagnum = -1 ;
  G__libLHCfEventLN_SimP.tagnum = -1 ;
  G__libLHCfEventLN_SimIncidents.tagnum = -1 ;
  G__libLHCfEventLN_SPSAdamoRec0.tagnum = -1 ;
  G__libLHCfEventLN_SPSAdamoHist.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtablelibLHCfEvent() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_TClass);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_TObject);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_TNamed);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_TString);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A1Raw),sizeof(A1Raw),-1,62720,"Data structure for raw data of Arm1",G__setup_memvarA1Raw,G__setup_memfuncA1Raw);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A1RawcLcLbank);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A1Cal1),sizeof(A1Cal1),-1,62720,"Data structure for Arm1 data",G__setup_memvarA1Cal1,G__setup_memfuncA1Cal1);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A1Cal1cLcLbank);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A1Cal1cLcLGPIOFLAG0);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A1Cal1cLcLGPIOFLAG2);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A1Cal2),sizeof(A1Cal2),-1,62720,"Data structure for Arm1 data",G__setup_memvarA1Cal2,G__setup_memfuncA1Cal2);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A1Cal2cLcLbank);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A1Cal2cLcLGPIOFLAG0);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A1Cal2cLcLGPIOFLAG2);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A1Phys),sizeof(A1Phys),-1,62720,"Data Structure for physics values of Arm1.",G__setup_memvarA1Phys,G__setup_memfuncA1Phys);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A1Info),sizeof(A1Info),-1,62720,(char*)NULL,G__setup_memvarA1Info,G__setup_memfuncA1Info);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A1Scl),sizeof(A1Scl),-1,62720,"Data structure for Arm1 Scaler Event",G__setup_memvarA1Scl,G__setup_memfuncA1Scl);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A2Raw),sizeof(A2Raw),-1,62720,(char*)NULL,G__setup_memvarA2Raw,G__setup_memfuncA2Raw);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A2RawcLcLbank);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A2Cal2),sizeof(A2Cal2),-1,62720,"Data structure for Arm2 data",G__setup_memvarA2Cal2,G__setup_memfuncA2Cal2);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A2Cal1),sizeof(A2Cal1),-1,62720,"Data structure for Arm2 data",G__setup_memvarA2Cal1,G__setup_memfuncA2Cal1);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A2Cal1cLcLbank);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A2Cal1cLcLGPIOFLAG0);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A2Cal1cLcLGPIOFLAG2);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A2Cal1cLcLBUNCHCONFFLAG);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A2Cal2cLcLbank);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A2Cal2cLcLGPIOFLAG0);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A2Cal2cLcLGPIOFLAG2);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A2Phys),sizeof(A2Phys),-1,62720,(char*)NULL,G__setup_memvarA2Phys,G__setup_memfuncA2Phys);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_Rec0),sizeof(Rec0),-1,62720,"Data for Reconstruction ",G__setup_memvarRec0,G__setup_memfuncRec0);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_Rec0cLcLDEF_EVQUALITY);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_Rec0cLcLDEF_BEAMTAG);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A2Cal2M),sizeof(A2Cal2M),-1,62720,"Modified A2Cal2",G__setup_memvarA2Cal2M,G__setup_memfuncA2Cal2M);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A2Cal2McLcLBUNCHCONFFLAG);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A2Info),sizeof(A2Info),-1,62720,(char*)NULL,G__setup_memvarA2Info,G__setup_memfuncA2Info);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A2Scl),sizeof(A2Scl),-1,62720,"Data structure for Arm2 Scaler Event",G__setup_memvarA2Scl,G__setup_memfuncA2Scl);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_RawL1T),sizeof(RawL1T),-1,62720,(char*)NULL,G__setup_memvarRawL1T,G__setup_memfuncRawL1T);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_SclL1T),sizeof(SclL1T),-1,62720,(char*)NULL,G__setup_memvarSclL1T,G__setup_memfuncSclL1T);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_GParam),sizeof(GParam),-1,62720,(char*)NULL,G__setup_memvarGParam,G__setup_memfuncGParam);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_GParamD64),sizeof(GParamD64),-1,62720,(char*)NULL,G__setup_memvarGParamD64,G__setup_memfuncGParamD64);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_SPSAdamo),sizeof(SPSAdamo),-1,62720,"Data structure for ADAMO at beam tests",G__setup_memvarSPSAdamo,G__setup_memfuncSPSAdamo);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_TVector2);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_TLorentzVector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_RHICfSinglePar),sizeof(RHICfSinglePar),-1,62720,(char*)NULL,G__setup_memvarRHICfSinglePar,G__setup_memfuncRHICfSinglePar);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_RHICfPhotonPair),sizeof(RHICfPhotonPair),-1,62720,(char*)NULL,G__setup_memvarRHICfPhotonPair,G__setup_memfuncRHICfPhotonPair);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A1Rec1),sizeof(A1Rec1),-1,62720,"Data for Reconstruction : Arm1 Format 1",G__setup_memvarA1Rec1,G__setup_memfuncA1Rec1);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_RHICfCollection),sizeof(RHICfCollection),-1,62720,(char*)NULL,G__setup_memvarRHICfCollection,G__setup_memfuncRHICfCollection);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A1Raw_pp2015),sizeof(A1Raw_pp2015),-1,62720,"Data structure for raw data of Arm1",G__setup_memvarA1Raw_pp2015,G__setup_memfuncA1Raw_pp2015);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A1Raw_pp2015cLcLbank);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A2Raw_pp2015),sizeof(A2Raw_pp2015),-1,62720,(char*)NULL,G__setup_memvarA2Raw_pp2015,G__setup_memfuncA2Raw_pp2015);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A2Raw_pp2015cLcLbank);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A1Scl_pp2015),sizeof(A1Scl_pp2015),-1,62720,"Data structure for Arm1 Scaler Event in 2015",G__setup_memvarA1Scl_pp2015,G__setup_memfuncA1Scl_pp2015);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A2Scl_pp2015),sizeof(A2Scl_pp2015),-1,62720,"Data structure for Arm2 Scaler Event",G__setup_memvarA2Scl_pp2015,G__setup_memfuncA2Scl_pp2015);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A2Raw_pPb2013),sizeof(A2Raw_pPb2013),-1,62720,(char*)NULL,G__setup_memvarA2Raw_pPb2013,G__setup_memfuncA2Raw_pPb2013);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A2Raw_pPb2013cLcLbank);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A2Raw_pPb2016),sizeof(A2Raw_pPb2016),-1,62720,(char*)NULL,G__setup_memvarA2Raw_pPb2016,G__setup_memfuncA2Raw_pPb2016);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A2Raw_pPb2016cLcLbank);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_RHICfRaw_Op2017),sizeof(RHICfRaw_Op2017),-1,62720,"Data structure for raw data of Arm1",G__setup_memvarRHICfRaw_Op2017,G__setup_memfuncRHICfRaw_Op2017);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_RHICfRaw_Op2017cLcLbank);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_LHCfEvent),sizeof(LHCfEvent),-1,62720,"Data store for LHCf one event",G__setup_memvarLHCfEvent,G__setup_memfuncLHCfEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_LHCfDef),0,-1,0,(char*)NULL,G__setup_memvarLHCfDef,G__setup_memfuncLHCfDef);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_LHCfDefcLcLDef_TOWER),sizeof(int),-1,0,(char*)NULL,NULL,NULL);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A1Cal2M),sizeof(A1Cal2M),-1,62720,"Modified A1Cal2",G__setup_memvarA1Cal2M,G__setup_memfuncA1Cal2M);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A1Cal2McLcLBUNCHCONFFLAG);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A1Rec2),sizeof(A1Rec2),-1,62720,"Data for Reconstruction : Arm1 Format 2 (Hadron analysis)",G__setup_memvarA1Rec2,G__setup_memfuncA1Rec2);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A1Rec2cLcLBITMAP_FLAGANALYSIS);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A2Rec1),sizeof(A2Rec1),-1,62720,"Data for Reconstruction : Arm2 Format 1",G__setup_memvarA2Rec1,G__setup_memfuncA2Rec1);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A2Rec2),sizeof(A2Rec2),-1,62720,"Data for Reconstruction : Arm2 Format 2",G__setup_memvarA2Rec2,G__setup_memfuncA2Rec2);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A2Rec3),sizeof(A2Rec3),-1,62720,"Data for Reconstruction : Arm2 Format 3 (with transition fit results)",G__setup_memvarA2Rec3,G__setup_memfuncA2Rec3);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_RHICfScl_Op2017),sizeof(RHICfScl_Op2017),-1,62720,"Data structure for Scaler Event of RHICf 2017",G__setup_memvarRHICfScl_Op2017,G__setup_memfuncRHICfScl_Op2017);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_TH1);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_TH1F);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_TCanvas);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_TPad);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A1Cal1AccumHist),sizeof(A1Cal1AccumHist),-1,62720,"Histograms for A1Cal1",G__setup_memvarA1Cal1AccumHist,G__setup_memfuncA1Cal1AccumHist);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A1Cal1AccumHistcLcLDATA_VERSION);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A2Cal1AccumHist),sizeof(A2Cal1AccumHist),-1,62720,"Histograms for A2Cal1",G__setup_memvarA2Cal1AccumHist,G__setup_memfuncA2Cal1AccumHist);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A1Cal2AccumHist),sizeof(A1Cal2AccumHist),-1,62720,"Histograms for A1Cal2",G__setup_memvarA1Cal2AccumHist,G__setup_memfuncA1Cal2AccumHist);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A2Cal2AccumHist),sizeof(A2Cal2AccumHist),-1,62720,"Histograms for A2Cal2",G__setup_memvarA2Cal2AccumHist,G__setup_memfuncA2Cal2AccumHist);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_TH2F);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A1PhysAccumHist),sizeof(A1PhysAccumHist),-1,62720,"Histograms for A1Phys",G__setup_memvarA1PhysAccumHist,G__setup_memfuncA1PhysAccumHist);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A2PhysAccumHist),sizeof(A2PhysAccumHist),-1,62720,"Histograms for A2Phys",G__setup_memvarA2PhysAccumHist,G__setup_memfuncA2PhysAccumHist);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_TGraph);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A1CountArray),sizeof(A1CountArray),-1,62720,"Array of Counter Values for Arm1 ",G__setup_memvarA1CountArray,G__setup_memfuncA1CountArray);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A2CountArray),sizeof(A2CountArray),-1,62720,"Array of Counter Values for Arm2",G__setup_memvarA2CountArray,G__setup_memfuncA2CountArray);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_TText);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A1CalEventHist),sizeof(A1CalEventHist),-1,62720,(char*)NULL,G__setup_memvarA1CalEventHist,G__setup_memfuncA1CalEventHist);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A1CalEventHistcLcLGPIOLOGIC);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A1CalEventHistcLcLDISPLAY_VERSION);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A2CalEventHist),sizeof(A2CalEventHist),-1,62720,(char*)NULL,G__setup_memvarA2CalEventHist,G__setup_memfuncA2CalEventHist);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A2CalEventHistcLcLGPIOLOGIC);
   G__get_linked_tagnum_fwd(&G__libLHCfEventLN_A2CalEventHistcLcLDISPLAY_VERSION);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_SimP),sizeof(SimP),-1,62720,"Data class for information of one incident particle in simulation.",G__setup_memvarSimP,G__setup_memfuncSimP);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_SimIncidents),sizeof(SimIncidents),-1,62720,(char*)NULL,G__setup_memvarSimIncidents,G__setup_memfuncSimIncidents);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_SPSAdamoRec0),sizeof(SPSAdamoRec0),-1,62720,"Data structure for ADAMO at beam tests",G__setup_memvarSPSAdamoRec0,G__setup_memfuncSPSAdamoRec0);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libLHCfEventLN_SPSAdamoHist),sizeof(SPSAdamoHist),-1,62720,"Histograms for SPSAdamo",G__setup_memvarSPSAdamoHist,G__setup_memfuncSPSAdamoHist);
}
extern "C" void G__cpp_setuplibLHCfEvent(void) {
  G__check_setup_version(30051515,"G__cpp_setuplibLHCfEvent()");
  G__set_cpp_environmentlibLHCfEvent();
  G__cpp_setup_tagtablelibLHCfEvent();

  G__cpp_setup_inheritancelibLHCfEvent();

  G__cpp_setup_typetablelibLHCfEvent();

  G__cpp_setup_memvarlibLHCfEvent();

  G__cpp_setup_memfunclibLHCfEvent();
  G__cpp_setup_globallibLHCfEvent();
  G__cpp_setup_funclibLHCfEvent();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfunclibLHCfEvent();
  return;
}
class G__cpp_setup_initlibLHCfEvent {
  public:
    G__cpp_setup_initlibLHCfEvent() { G__add_setup_func("libLHCfEvent",(G__incsetup)(&G__cpp_setuplibLHCfEvent)); G__call_setup_funcs(); }
   ~G__cpp_setup_initlibLHCfEvent() { G__remove_setup_func("libLHCfEvent"); }
};
G__cpp_setup_initlibLHCfEvent G__cpp_setup_initializerlibLHCfEvent;

