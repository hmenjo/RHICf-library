//
// File generated by rootcint at Wed Aug 21 14:25:03 2019

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME libRHICf
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "libRHICf.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void RHICfPhys_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RHICfPhys(void *p = 0);
   static void *newArray_RHICfPhys(Long_t size, void *p);
   static void delete_RHICfPhys(void *p);
   static void deleteArray_RHICfPhys(void *p);
   static void destruct_RHICfPhys(void *p);
   static void streamer_RHICfPhys(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RHICfPhys*)
   {
      ::RHICfPhys *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RHICfPhys >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RHICfPhys", ::RHICfPhys::Class_Version(), "./include/RHICfPhys.h", 11,
                  typeid(::RHICfPhys), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RHICfPhys::Dictionary, isa_proxy, 0,
                  sizeof(::RHICfPhys) );
      instance.SetNew(&new_RHICfPhys);
      instance.SetNewArray(&newArray_RHICfPhys);
      instance.SetDelete(&delete_RHICfPhys);
      instance.SetDeleteArray(&deleteArray_RHICfPhys);
      instance.SetDestructor(&destruct_RHICfPhys);
      instance.SetStreamerFunc(&streamer_RHICfPhys);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RHICfPhys*)
   {
      return GenerateInitInstanceLocal((::RHICfPhys*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RHICfPhys*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RHICfRec0_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RHICfRec0(void *p = 0);
   static void *newArray_RHICfRec0(Long_t size, void *p);
   static void delete_RHICfRec0(void *p);
   static void deleteArray_RHICfRec0(void *p);
   static void destruct_RHICfRec0(void *p);
   static void streamer_RHICfRec0(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RHICfRec0*)
   {
      ::RHICfRec0 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RHICfRec0 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RHICfRec0", ::RHICfRec0::Class_Version(), "./include/RHICfRec0.h", 11,
                  typeid(::RHICfRec0), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RHICfRec0::Dictionary, isa_proxy, 0,
                  sizeof(::RHICfRec0) );
      instance.SetNew(&new_RHICfRec0);
      instance.SetNewArray(&newArray_RHICfRec0);
      instance.SetDelete(&delete_RHICfRec0);
      instance.SetDeleteArray(&deleteArray_RHICfRec0);
      instance.SetDestructor(&destruct_RHICfRec0);
      instance.SetStreamerFunc(&streamer_RHICfRec0);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RHICfRec0*)
   {
      return GenerateInitInstanceLocal((::RHICfRec0*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RHICfRec0*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RHICfRec1_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RHICfRec1(void *p = 0);
   static void *newArray_RHICfRec1(Long_t size, void *p);
   static void delete_RHICfRec1(void *p);
   static void deleteArray_RHICfRec1(void *p);
   static void destruct_RHICfRec1(void *p);
   static void streamer_RHICfRec1(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RHICfRec1*)
   {
      ::RHICfRec1 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RHICfRec1 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RHICfRec1", ::RHICfRec1::Class_Version(), "./include/RHICfRec1.h", 6,
                  typeid(::RHICfRec1), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RHICfRec1::Dictionary, isa_proxy, 0,
                  sizeof(::RHICfRec1) );
      instance.SetNew(&new_RHICfRec1);
      instance.SetNewArray(&newArray_RHICfRec1);
      instance.SetDelete(&delete_RHICfRec1);
      instance.SetDeleteArray(&deleteArray_RHICfRec1);
      instance.SetDestructor(&destruct_RHICfRec1);
      instance.SetStreamerFunc(&streamer_RHICfRec1);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RHICfRec1*)
   {
      return GenerateInitInstanceLocal((::RHICfRec1*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RHICfRec1*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RHICfBBC_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RHICfBBC(void *p = 0);
   static void *newArray_RHICfBBC(Long_t size, void *p);
   static void delete_RHICfBBC(void *p);
   static void deleteArray_RHICfBBC(void *p);
   static void destruct_RHICfBBC(void *p);
   static void streamer_RHICfBBC(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RHICfBBC*)
   {
      ::RHICfBBC *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RHICfBBC >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RHICfBBC", ::RHICfBBC::Class_Version(), "./include/RHICfBBC.h", 6,
                  typeid(::RHICfBBC), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RHICfBBC::Dictionary, isa_proxy, 0,
                  sizeof(::RHICfBBC) );
      instance.SetNew(&new_RHICfBBC);
      instance.SetNewArray(&newArray_RHICfBBC);
      instance.SetDelete(&delete_RHICfBBC);
      instance.SetDeleteArray(&deleteArray_RHICfBBC);
      instance.SetDestructor(&destruct_RHICfBBC);
      instance.SetStreamerFunc(&streamer_RHICfBBC);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RHICfBBC*)
   {
      return GenerateInitInstanceLocal((::RHICfBBC*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RHICfBBC*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RHICfZDC_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RHICfZDC(void *p = 0);
   static void *newArray_RHICfZDC(Long_t size, void *p);
   static void delete_RHICfZDC(void *p);
   static void deleteArray_RHICfZDC(void *p);
   static void destruct_RHICfZDC(void *p);
   static void streamer_RHICfZDC(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RHICfZDC*)
   {
      ::RHICfZDC *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RHICfZDC >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RHICfZDC", ::RHICfZDC::Class_Version(), "./include/RHICfZDC.h", 6,
                  typeid(::RHICfZDC), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RHICfZDC::Dictionary, isa_proxy, 0,
                  sizeof(::RHICfZDC) );
      instance.SetNew(&new_RHICfZDC);
      instance.SetNewArray(&newArray_RHICfZDC);
      instance.SetDelete(&delete_RHICfZDC);
      instance.SetDeleteArray(&deleteArray_RHICfZDC);
      instance.SetDestructor(&destruct_RHICfZDC);
      instance.SetStreamerFunc(&streamer_RHICfZDC);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RHICfZDC*)
   {
      return GenerateInitInstanceLocal((::RHICfZDC*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RHICfZDC*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RHICfRoman_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RHICfRoman(void *p = 0);
   static void *newArray_RHICfRoman(Long_t size, void *p);
   static void delete_RHICfRoman(void *p);
   static void deleteArray_RHICfRoman(void *p);
   static void destruct_RHICfRoman(void *p);
   static void streamer_RHICfRoman(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RHICfRoman*)
   {
      ::RHICfRoman *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RHICfRoman >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RHICfRoman", ::RHICfRoman::Class_Version(), "./include/RHICfRoman.h", 6,
                  typeid(::RHICfRoman), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RHICfRoman::Dictionary, isa_proxy, 0,
                  sizeof(::RHICfRoman) );
      instance.SetNew(&new_RHICfRoman);
      instance.SetNewArray(&newArray_RHICfRoman);
      instance.SetDelete(&delete_RHICfRoman);
      instance.SetDeleteArray(&deleteArray_RHICfRoman);
      instance.SetDestructor(&destruct_RHICfRoman);
      instance.SetStreamerFunc(&streamer_RHICfRoman);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RHICfRoman*)
   {
      return GenerateInitInstanceLocal((::RHICfRoman*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RHICfRoman*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RHICfSimP_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RHICfSimP(void *p = 0);
   static void *newArray_RHICfSimP(Long_t size, void *p);
   static void delete_RHICfSimP(void *p);
   static void deleteArray_RHICfSimP(void *p);
   static void destruct_RHICfSimP(void *p);
   static void streamer_RHICfSimP(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RHICfSimP*)
   {
      ::RHICfSimP *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RHICfSimP >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RHICfSimP", ::RHICfSimP::Class_Version(), "./include/RHICfSimP.h", 9,
                  typeid(::RHICfSimP), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RHICfSimP::Dictionary, isa_proxy, 0,
                  sizeof(::RHICfSimP) );
      instance.SetNew(&new_RHICfSimP);
      instance.SetNewArray(&newArray_RHICfSimP);
      instance.SetDelete(&delete_RHICfSimP);
      instance.SetDeleteArray(&deleteArray_RHICfSimP);
      instance.SetDestructor(&destruct_RHICfSimP);
      instance.SetStreamerFunc(&streamer_RHICfSimP);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RHICfSimP*)
   {
      return GenerateInitInstanceLocal((::RHICfSimP*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RHICfSimP*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void RHICfSimIncidents_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RHICfSimIncidents(void *p = 0);
   static void *newArray_RHICfSimIncidents(Long_t size, void *p);
   static void delete_RHICfSimIncidents(void *p);
   static void deleteArray_RHICfSimIncidents(void *p);
   static void destruct_RHICfSimIncidents(void *p);
   static void streamer_RHICfSimIncidents(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::RHICfSimIncidents*)
   {
      ::RHICfSimIncidents *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RHICfSimIncidents >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RHICfSimIncidents", ::RHICfSimIncidents::Class_Version(), "./include/RHICfSimIncidents.h", 8,
                  typeid(::RHICfSimIncidents), ::ROOT::DefineBehavior(ptr, ptr),
                  &::RHICfSimIncidents::Dictionary, isa_proxy, 0,
                  sizeof(::RHICfSimIncidents) );
      instance.SetNew(&new_RHICfSimIncidents);
      instance.SetNewArray(&newArray_RHICfSimIncidents);
      instance.SetDelete(&delete_RHICfSimIncidents);
      instance.SetDeleteArray(&deleteArray_RHICfSimIncidents);
      instance.SetDestructor(&destruct_RHICfSimIncidents);
      instance.SetStreamerFunc(&streamer_RHICfSimIncidents);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::RHICfSimIncidents*)
   {
      return GenerateInitInstanceLocal((::RHICfSimIncidents*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RHICfSimIncidents*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr RHICfPhys::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RHICfPhys::Class_Name()
{
   return "RHICfPhys";
}

//______________________________________________________________________________
const char *RHICfPhys::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfPhys*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RHICfPhys::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfPhys*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RHICfPhys::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfPhys*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RHICfPhys::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfPhys*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr RHICfRec0::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RHICfRec0::Class_Name()
{
   return "RHICfRec0";
}

//______________________________________________________________________________
const char *RHICfRec0::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfRec0*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RHICfRec0::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfRec0*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RHICfRec0::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfRec0*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RHICfRec0::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfRec0*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr RHICfRec1::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RHICfRec1::Class_Name()
{
   return "RHICfRec1";
}

//______________________________________________________________________________
const char *RHICfRec1::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfRec1*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RHICfRec1::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfRec1*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RHICfRec1::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfRec1*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RHICfRec1::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfRec1*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr RHICfBBC::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RHICfBBC::Class_Name()
{
   return "RHICfBBC";
}

//______________________________________________________________________________
const char *RHICfBBC::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfBBC*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RHICfBBC::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfBBC*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RHICfBBC::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfBBC*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RHICfBBC::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfBBC*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr RHICfZDC::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RHICfZDC::Class_Name()
{
   return "RHICfZDC";
}

//______________________________________________________________________________
const char *RHICfZDC::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfZDC*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RHICfZDC::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfZDC*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RHICfZDC::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfZDC*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RHICfZDC::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfZDC*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr RHICfRoman::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RHICfRoman::Class_Name()
{
   return "RHICfRoman";
}

//______________________________________________________________________________
const char *RHICfRoman::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfRoman*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RHICfRoman::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfRoman*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RHICfRoman::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfRoman*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RHICfRoman::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfRoman*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr RHICfSimP::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RHICfSimP::Class_Name()
{
   return "RHICfSimP";
}

//______________________________________________________________________________
const char *RHICfSimP::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfSimP*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RHICfSimP::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfSimP*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RHICfSimP::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfSimP*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RHICfSimP::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfSimP*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr RHICfSimIncidents::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RHICfSimIncidents::Class_Name()
{
   return "RHICfSimIncidents";
}

//______________________________________________________________________________
const char *RHICfSimIncidents::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfSimIncidents*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RHICfSimIncidents::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfSimIncidents*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RHICfSimIncidents::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfSimIncidents*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RHICfSimIncidents::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::RHICfSimIncidents*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void RHICfPhys::Streamer(TBuffer &R__b)
{
   // Stream an object of class RHICfPhys.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> run;
      R__b >> number;
      R__b >> gnumber;
      R__b.ReadStaticArray((double*)time);
      R__b.ReadStaticArray((double*)energy);
      R__b.ReadStaticArray((double*)pos);
      R__b.ReadStaticArray((int*)pid);
      R__b.ReadStaticArray((int*)hits);
      R__b.ReadStaticArray((unsigned int*)flag);
      R__b.CheckByteCount(R__s, R__c, RHICfPhys::IsA());
   } else {
      R__c = R__b.WriteVersion(RHICfPhys::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << run;
      R__b << number;
      R__b << gnumber;
      R__b.WriteArray(time, 2);
      R__b.WriteArray(energy, 2);
      R__b.WriteArray((double*)pos, 4);
      R__b.WriteArray(pid, 2);
      R__b.WriteArray(hits, 2);
      R__b.WriteArray(flag, 3);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RHICfPhys::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RHICfPhys.
      TClass *R__cl = ::RHICfPhys::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "number", &number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gnumber", &gnumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time[2]", time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energy[2]", energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pos[2][2]", pos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pid[2]", pid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hits[2]", hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "flag[3]", flag);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RHICfPhys(void *p) {
      return  p ? new(p) ::RHICfPhys : new ::RHICfPhys;
   }
   static void *newArray_RHICfPhys(Long_t nElements, void *p) {
      return p ? new(p) ::RHICfPhys[nElements] : new ::RHICfPhys[nElements];
   }
   // Wrapper around operator delete
   static void delete_RHICfPhys(void *p) {
      delete ((::RHICfPhys*)p);
   }
   static void deleteArray_RHICfPhys(void *p) {
      delete [] ((::RHICfPhys*)p);
   }
   static void destruct_RHICfPhys(void *p) {
      typedef ::RHICfPhys current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RHICfPhys(TBuffer &buf, void *obj) {
      ((::RHICfPhys*)obj)->::RHICfPhys::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::RHICfPhys

//______________________________________________________________________________
void RHICfRec0::Streamer(TBuffer &R__b)
{
   // Stream an object of class RHICfRec0.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> run;
      R__b >> number;
      R__b >> gnumber;
      R__b.ReadStaticArray((double*)time);
      R__b >> format;
      {
         vector<int> &R__stl =  evinfo;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<unsigned int> &R__stl =  flags;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            unsigned int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<double> &R__stl =  rec;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<double> &R__stl =  cal;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<double> &R__stl =  pos;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<double> &R__stl =  pid;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<double> &R__stl =  tdc;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<double> &R__stl =  counter;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      R__b.CheckByteCount(R__s, R__c, RHICfRec0::IsA());
   } else {
      R__c = R__b.WriteVersion(RHICfRec0::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << run;
      R__b << number;
      R__b << gnumber;
      R__b.WriteArray(time, 2);
      R__b << format;
      {
         vector<int> &R__stl =  evinfo;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<int>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<unsigned int> &R__stl =  flags;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<unsigned int>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<double> &R__stl =  rec;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<double>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<double> &R__stl =  cal;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<double>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<double> &R__stl =  pos;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<double>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<double> &R__stl =  pid;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<double>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<double> &R__stl =  tdc;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<double>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<double> &R__stl =  counter;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<double>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RHICfRec0::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RHICfRec0.
      TClass *R__cl = ::RHICfRec0::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "number", &number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gnumber", &gnumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time[2]", time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "format", &format);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "evinfo", (void*)&evinfo);
      R__insp.InspectMember("vector<int>", (void*)&evinfo, "evinfo.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "flags", (void*)&flags);
      R__insp.InspectMember("vector<unsigned int>", (void*)&flags, "flags.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rec", (void*)&rec);
      R__insp.InspectMember("vector<double>", (void*)&rec, "rec.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cal", (void*)&cal);
      R__insp.InspectMember("vector<double>", (void*)&cal, "cal.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pos", (void*)&pos);
      R__insp.InspectMember("vector<double>", (void*)&pos, "pos.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pid", (void*)&pid);
      R__insp.InspectMember("vector<double>", (void*)&pid, "pid.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tdc", (void*)&tdc);
      R__insp.InspectMember("vector<double>", (void*)&tdc, "tdc.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "counter", (void*)&counter);
      R__insp.InspectMember("vector<double>", (void*)&counter, "counter.", false);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RHICfRec0(void *p) {
      return  p ? new(p) ::RHICfRec0 : new ::RHICfRec0;
   }
   static void *newArray_RHICfRec0(Long_t nElements, void *p) {
      return p ? new(p) ::RHICfRec0[nElements] : new ::RHICfRec0[nElements];
   }
   // Wrapper around operator delete
   static void delete_RHICfRec0(void *p) {
      delete ((::RHICfRec0*)p);
   }
   static void deleteArray_RHICfRec0(void *p) {
      delete [] ((::RHICfRec0*)p);
   }
   static void destruct_RHICfRec0(void *p) {
      typedef ::RHICfRec0 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RHICfRec0(TBuffer &buf, void *obj) {
      ((::RHICfRec0*)obj)->::RHICfRec0::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::RHICfRec0

//______________________________________________________________________________
void RHICfRec1::Streamer(TBuffer &R__b)
{
   // Stream an object of class RHICfRec1.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      RHICfRec0::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, RHICfRec1::IsA());
   } else {
      R__c = R__b.WriteVersion(RHICfRec1::IsA(), kTRUE);
      RHICfRec0::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RHICfRec1::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RHICfRec1.
      TClass *R__cl = ::RHICfRec1::IsA();
      if (R__cl || R__insp.IsA()) { }
      RHICfRec0::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RHICfRec1(void *p) {
      return  p ? new(p) ::RHICfRec1 : new ::RHICfRec1;
   }
   static void *newArray_RHICfRec1(Long_t nElements, void *p) {
      return p ? new(p) ::RHICfRec1[nElements] : new ::RHICfRec1[nElements];
   }
   // Wrapper around operator delete
   static void delete_RHICfRec1(void *p) {
      delete ((::RHICfRec1*)p);
   }
   static void deleteArray_RHICfRec1(void *p) {
      delete [] ((::RHICfRec1*)p);
   }
   static void destruct_RHICfRec1(void *p) {
      typedef ::RHICfRec1 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RHICfRec1(TBuffer &buf, void *obj) {
      ((::RHICfRec1*)obj)->::RHICfRec1::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::RHICfRec1

//______________________________________________________________________________
void RHICfZDC::Streamer(TBuffer &R__b)
{
   // Stream an object of class RHICfZDC.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> run;
      R__b >> number;
      R__b.ReadStaticArray((int*)ZDCNOP);
      R__b.ReadStaticArray((int*)SMDHNOP);
      R__b.ReadStaticArray((int*)SMDVNOP);
      R__b.ReadStaticArray((double*)ZDCdE);
      R__b.ReadStaticArray((double*)SMDHdE);
      R__b.ReadStaticArray((double*)SMDVdE);
      R__b.CheckByteCount(R__s, R__c, RHICfZDC::IsA());
   } else {
      R__c = R__b.WriteVersion(RHICfZDC::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << run;
      R__b << number;
      R__b.WriteArray(ZDCNOP, 3);
      R__b.WriteArray(SMDHNOP, 7);
      R__b.WriteArray(SMDVNOP, 8);
      R__b.WriteArray(ZDCdE, 3);
      R__b.WriteArray(SMDHdE, 7);
      R__b.WriteArray(SMDVdE, 8);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RHICfZDC::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RHICfZDC.
      TClass *R__cl = ::RHICfZDC::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "number", &number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ZDCNOP[3]", ZDCNOP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SMDHNOP[7]", SMDHNOP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SMDVNOP[8]", SMDVNOP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ZDCdE[3]", ZDCdE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SMDHdE[7]", SMDHdE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SMDVdE[8]", SMDVdE);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RHICfZDC(void *p) {
      return  p ? new(p) ::RHICfZDC : new ::RHICfZDC;
   }
   static void *newArray_RHICfZDC(Long_t nElements, void *p) {
      return p ? new(p) ::RHICfZDC[nElements] : new ::RHICfZDC[nElements];
   }
   // Wrapper around operator delete
   static void delete_RHICfZDC(void *p) {
      delete ((::RHICfZDC*)p);
   }
   static void deleteArray_RHICfZDC(void *p) {
      delete [] ((::RHICfZDC*)p);
   }
   static void destruct_RHICfZDC(void *p) {
      typedef ::RHICfZDC current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RHICfZDC(TBuffer &buf, void *obj) {
      ((::RHICfZDC*)obj)->::RHICfZDC::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::RHICfZDC

//______________________________________________________________________________
void RHICfBBC::Streamer(TBuffer &R__b)
{
   // Stream an object of class RHICfBBC.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> run;
      R__b >> number;
      R__b.ReadStaticArray((double*)dE);
      R__b.ReadStaticArray((int*)NOP);
      R__b.CheckByteCount(R__s, R__c, RHICfBBC::IsA());
   } else {
      R__c = R__b.WriteVersion(RHICfBBC::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << run;
      R__b << number;
      R__b.WriteArray((double*)dE, 72);
      R__b.WriteArray((int*)NOP, 72);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RHICfBBC::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RHICfBBC.
      TClass *R__cl = ::RHICfBBC::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "number", &number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dE[2][36]", dE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NOP[2][36]", NOP);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RHICfBBC(void *p) {
      return  p ? new(p) ::RHICfBBC : new ::RHICfBBC;
   }
   static void *newArray_RHICfBBC(Long_t nElements, void *p) {
      return p ? new(p) ::RHICfBBC[nElements] : new ::RHICfBBC[nElements];
   }
   // Wrapper around operator delete
   static void delete_RHICfBBC(void *p) {
      delete ((::RHICfBBC*)p);
   }
   static void deleteArray_RHICfBBC(void *p) {
      delete [] ((::RHICfBBC*)p);
   }
   static void destruct_RHICfBBC(void *p) {
      typedef ::RHICfBBC current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RHICfBBC(TBuffer &buf, void *obj) {
      ((::RHICfBBC*)obj)->::RHICfBBC::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::RHICfBBC

//______________________________________________________________________________
void RHICfRoman::Streamer(TBuffer &R__b)
{
   // Stream an object of class RHICfRoman.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> run;
      R__b >> number;
      R__b.ReadStaticArray((double*)dE);
      R__b.CheckByteCount(R__s, R__c, RHICfRoman::IsA());
   } else {
      R__c = R__b.WriteVersion(RHICfRoman::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << run;
      R__b << number;
      R__b.WriteArray(dE, 36);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RHICfRoman::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RHICfRoman.
      TClass *R__cl = ::RHICfRoman::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "number", &number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dE[36]", dE);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RHICfRoman(void *p) {
      return  p ? new(p) ::RHICfRoman : new ::RHICfRoman;
   }
   static void *newArray_RHICfRoman(Long_t nElements, void *p) {
      return p ? new(p) ::RHICfRoman[nElements] : new ::RHICfRoman[nElements];
   }
   // Wrapper around operator delete
   static void delete_RHICfRoman(void *p) {
      delete ((::RHICfRoman*)p);
   }
   static void deleteArray_RHICfRoman(void *p) {
      delete [] ((::RHICfRoman*)p);
   }
   static void destruct_RHICfRoman(void *p) {
      typedef ::RHICfRoman current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RHICfRoman(TBuffer &buf, void *obj) {
      ((::RHICfRoman*)obj)->::RHICfRoman::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::RHICfRoman

//______________________________________________________________________________
void RHICfSimP::Streamer(TBuffer &R__b)
{
   // Stream an object of class RHICfSimP.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> pdgcode;
      name.Streamer(R__b);
      R__b >> user;
      R__b.ReadStaticArray((double*)pos);
      R__b >> energy;
      R__b.ReadStaticArray((double*)mom);
      Name.Streamer(R__b);
      FMomentum.Streamer(R__b);
      Position.Streamer(R__b);
      OriginalPName.Streamer(R__b);
      OriginalP4Momentum.Streamer(R__b);
      OriginalPPosition.Streamer(R__b);
      R__b >> TrackID;
      R__b >> Tower;
      R__b.CheckByteCount(R__s, R__c, RHICfSimP::IsA());
   } else {
      R__c = R__b.WriteVersion(RHICfSimP::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << pdgcode;
      name.Streamer(R__b);
      R__b << user;
      R__b.WriteArray(pos, 3);
      R__b << energy;
      R__b.WriteArray(mom, 3);
      Name.Streamer(R__b);
      FMomentum.Streamer(R__b);
      Position.Streamer(R__b);
      OriginalPName.Streamer(R__b);
      OriginalP4Momentum.Streamer(R__b);
      OriginalPPosition.Streamer(R__b);
      R__b << TrackID;
      R__b << Tower;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RHICfSimP::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RHICfSimP.
      TClass *R__cl = ::RHICfSimP::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdgcode", &pdgcode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "name", &name);
      R__insp.InspectMember(name, "name.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "user", &user);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pos[3]", pos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energy", &energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mom[3]", mom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Name", &Name);
      R__insp.InspectMember(Name, "Name.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FMomentum", &FMomentum);
      R__insp.InspectMember(FMomentum, "FMomentum.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Position", &Position);
      R__insp.InspectMember(Position, "Position.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OriginalPName", &OriginalPName);
      R__insp.InspectMember(OriginalPName, "OriginalPName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OriginalP4Momentum", &OriginalP4Momentum);
      R__insp.InspectMember(OriginalP4Momentum, "OriginalP4Momentum.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "OriginalPPosition", &OriginalPPosition);
      R__insp.InspectMember(OriginalPPosition, "OriginalPPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TrackID", &TrackID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Tower", &Tower);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RHICfSimP(void *p) {
      return  p ? new(p) ::RHICfSimP : new ::RHICfSimP;
   }
   static void *newArray_RHICfSimP(Long_t nElements, void *p) {
      return p ? new(p) ::RHICfSimP[nElements] : new ::RHICfSimP[nElements];
   }
   // Wrapper around operator delete
   static void delete_RHICfSimP(void *p) {
      delete ((::RHICfSimP*)p);
   }
   static void deleteArray_RHICfSimP(void *p) {
      delete [] ((::RHICfSimP*)p);
   }
   static void destruct_RHICfSimP(void *p) {
      typedef ::RHICfSimP current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RHICfSimP(TBuffer &buf, void *obj) {
      ((::RHICfSimP*)obj)->::RHICfSimP::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::RHICfSimP

//______________________________________________________________________________
void RHICfSimIncidents::Streamer(TBuffer &R__b)
{
   // Stream an object of class RHICfSimIncidents.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> run;
      R__b >> number;
      R__b >> gnumber;
      R__b >> np;
      particles.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, RHICfSimIncidents::IsA());
   } else {
      R__c = R__b.WriteVersion(RHICfSimIncidents::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << run;
      R__b << number;
      R__b << gnumber;
      R__b << np;
      particles.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void RHICfSimIncidents::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RHICfSimIncidents.
      TClass *R__cl = ::RHICfSimIncidents::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "number", &number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gnumber", &gnumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "np", &np);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "particles", &particles);
      R__insp.InspectMember(particles, "particles.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ref[10]", ref);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_RHICfSimIncidents(void *p) {
      return  p ? new(p) ::RHICfSimIncidents : new ::RHICfSimIncidents;
   }
   static void *newArray_RHICfSimIncidents(Long_t nElements, void *p) {
      return p ? new(p) ::RHICfSimIncidents[nElements] : new ::RHICfSimIncidents[nElements];
   }
   // Wrapper around operator delete
   static void delete_RHICfSimIncidents(void *p) {
      delete ((::RHICfSimIncidents*)p);
   }
   static void deleteArray_RHICfSimIncidents(void *p) {
      delete [] ((::RHICfSimIncidents*)p);
   }
   static void destruct_RHICfSimIncidents(void *p) {
      typedef ::RHICfSimIncidents current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_RHICfSimIncidents(TBuffer &buf, void *obj) {
      ((::RHICfSimIncidents*)obj)->::RHICfSimIncidents::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::RHICfSimIncidents

namespace ROOTDict {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "prec_stl/vector", 49,
                  typeid(vector<double>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<double>

namespace ROOTDict {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "prec_stl/vector", 49,
                  typeid(vector<int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<int>

namespace ROOTDict {
   void vectorlEunsignedsPintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEunsignedsPintgR_Dictionary();
   static void *new_vectorlEunsignedsPintgR(void *p = 0);
   static void *newArray_vectorlEunsignedsPintgR(Long_t size, void *p);
   static void delete_vectorlEunsignedsPintgR(void *p);
   static void deleteArray_vectorlEunsignedsPintgR(void *p);
   static void destruct_vectorlEunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<unsigned int>*)
   {
      vector<unsigned int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<unsigned int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<unsigned int>", -2, "prec_stl/vector", 49,
                  typeid(vector<unsigned int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEunsignedsPintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<unsigned int>) );
      instance.SetNew(&new_vectorlEunsignedsPintgR);
      instance.SetNewArray(&newArray_vectorlEunsignedsPintgR);
      instance.SetDelete(&delete_vectorlEunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEunsignedsPintgR);
      instance.SetDestructor(&destruct_vectorlEunsignedsPintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<unsigned int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<unsigned int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEunsignedsPintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<unsigned int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEunsignedsPintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned int> : new vector<unsigned int>;
   }
   static void *newArray_vectorlEunsignedsPintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned int>[nElements] : new vector<unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEunsignedsPintgR(void *p) {
      delete ((vector<unsigned int>*)p);
   }
   static void deleteArray_vectorlEunsignedsPintgR(void *p) {
      delete [] ((vector<unsigned int>*)p);
   }
   static void destruct_vectorlEunsignedsPintgR(void *p) {
      typedef vector<unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<unsigned int>

/********************************************************
* libRHICf.cpp
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtablelibRHICf();

extern "C" void G__set_cpp_environmentlibRHICf() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("RHICfPhys.h");
  G__add_compiledheader("RHICfRec0.h");
  G__add_compiledheader("RHICfRec1.h");
  G__add_compiledheader("RHICfBBC.h");
  G__add_compiledheader("RHICfZDC.h");
  G__add_compiledheader("RHICfRoman.h");
  G__add_compiledheader("RHICfSimP.h");
  G__add_compiledheader("RHICfSimIncidents.h");
  G__cpp_reset_tagtablelibRHICf();
}
#include <new>
extern "C" int G__cpp_dllrevlibRHICf() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* RHICfPhys */
static int G__libRHICf_127_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RHICfPhys* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RHICfPhys[n];
     } else {
       p = new((void*) gvp) RHICfPhys[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RHICfPhys;
     } else {
       p = new((void*) gvp) RHICfPhys;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libRHICfLN_RHICfPhys));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RHICfPhys* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RHICfPhys((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) RHICfPhys((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libRHICfLN_RHICfPhys));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfPhys*) G__getstructoffset())->clear());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfPhys*) G__getstructoffset())->copy((RHICfPhys*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfPhys*) G__getstructoffset())->copydata((RHICfPhys*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->Energy((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->Pos((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->X((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->Y((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfPhys*) G__getstructoffset())->Hits((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfPhys*) G__getstructoffset())->PID((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((RHICfPhys*) G__getstructoffset())->IsElemag((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((RHICfPhys*) G__getstructoffset())->IsHadron((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((RHICfPhys*) G__getstructoffset())->InFiducial((int) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((RHICfPhys*) G__getstructoffset())->InFiducial((int) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GlobalPos((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GlobalPos((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GlobalPos((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GPos((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GPos((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GPos((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GPosX((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GPosX((int) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GPosX((int) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GPosY((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GPosY((int) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GPosY((int) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GetPi0Distance((bool) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GetPi0Distance());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GetPi0Mass((bool) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GetPi0Mass());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GetPi0Energy((bool) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GetPi0Energy());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->Momentum((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->Momentum((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->Momentum((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GetPi0Momentum((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GetPi0Momentum((int) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GetPi0Momentum((int) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GetPi0MomentumX((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GetPi0MomentumX((double) G__double(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GetPi0MomentumX());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GetPi0MomentumY((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GetPi0MomentumY((double) G__double(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GetPi0MomentumY());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GetPi0Pt((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GetPi0Pt((double) G__double(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GetPi0Pt());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GetPi0Pl((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GetPi0Pl((double) G__double(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GetPi0Pl());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GetPi0Rapidity((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GetPi0Rapidity((double) G__double(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GetPi0Rapidity());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GlobalPos_Detector((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GlobalPos_BC((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GlobalPos_BC((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GlobalPos_BC((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GlobalPos_BeamPipe((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GlobalPos_BeamPipe((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GlobalPos_BeamPipe((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GPosX_Detector((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GPosY_Detector((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GPosX_BC((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GPosY_BC((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GPosX_BeamPipe((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfPhys*) G__getstructoffset())->GPosY_BeamPipe((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfPhys*) G__getstructoffset())->Show();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) RHICfPhys::CalorimeterSize((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RHICfPhys::SetPositionBeamCenter((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RHICfPhys::SetPositionBeamPipeCenter((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) RHICfPhys::GetOffsetBC((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) RHICfPhys::GetOffsetBeamPipe((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RHICfPhys::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RHICfPhys::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RHICfPhys::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RHICfPhys::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfPhys*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RHICfPhys::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RHICfPhys::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RHICfPhys::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_127_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RHICfPhys::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libRHICf_127_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RHICfPhys* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RHICfPhys(*(RHICfPhys*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libRHICfLN_RHICfPhys));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RHICfPhys G__TRHICfPhys;
static int G__libRHICf_127_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RHICfPhys*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RHICfPhys*) (soff+(sizeof(RHICfPhys)*i)))->~G__TRHICfPhys();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RHICfPhys*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RHICfPhys*) (soff))->~G__TRHICfPhys();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libRHICf_127_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RHICfPhys* dest = (RHICfPhys*) G__getstructoffset();
   *dest = *(RHICfPhys*) libp->para[0].ref;
   const RHICfPhys& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RHICfRec0 */
static int G__libRHICf_128_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RHICfRec0* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RHICfRec0[n];
     } else {
       p = new((void*) gvp) RHICfRec0[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RHICfRec0;
     } else {
       p = new((void*) gvp) RHICfRec0;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libRHICfLN_RHICfRec0));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RHICfRec0* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RHICfRec0((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) RHICfRec0((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libRHICfLN_RHICfRec0));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfRec0*) G__getstructoffset())->resize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfRec0*) G__getstructoffset())->clear());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfRec0*) G__getstructoffset())->copy((RHICfRec0*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfRec0*) G__getstructoffset())->copydata((RHICfRec0*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfRec0*) G__getstructoffset())->GetFormatNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfRec0*) G__getstructoffset())->FillToPhys((RHICfPhys*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec0*) G__getstructoffset())->Show();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfRec0*) G__getstructoffset())->GetEventQuality());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec0*) G__getstructoffset())->SetEventQuality((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfRec0*) G__getstructoffset())->GetBeamColConf());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec0*) G__getstructoffset())->SetBeamColConf((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfRec0*) G__getstructoffset())->GetBunchNumber((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec0*) G__getstructoffset())->SetBunchNumber((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((RHICfRec0*) G__getstructoffset())->GetFlags((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec0*) G__getstructoffset())->SetFlags((int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((RHICfRec0*) G__getstructoffset())->GetAnalysisFlags((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec0*) G__getstructoffset())->SetAnalysisFlags((int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((RHICfRec0*) G__getstructoffset())->IsShowerTrig());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((RHICfRec0*) G__getstructoffset())->IsPi0Trig());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((RHICfRec0*) G__getstructoffset())->IsHighEMTrig());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfRec0*) G__getstructoffset())->GetCal((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec0*) G__getstructoffset())->SetCal((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfRec0*) G__getstructoffset())->GetFC((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec0*) G__getstructoffset())->SetFC((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfRec0*) G__getstructoffset())->GetTFitParam((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec0*) G__getstructoffset())->SetTFitParam((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfRec0*) G__getstructoffset())->GetTFitParamCorr((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec0*) G__getstructoffset())->SetTFitParamCorr((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfRec0*) G__getstructoffset())->GetTFitParamLeakin((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec0*) G__getstructoffset())->SetTFitParamLeakin((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfRec0*) G__getstructoffset())->GetTScale((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfRec0*) G__getstructoffset())->GetTScaleCorr((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfRec0*) G__getstructoffset())->GetTScaleLeakin((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfRec0*) G__getstructoffset())->GetTMax((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfRec0*) G__getstructoffset())->GetTMaxCorr((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfRec0*) G__getstructoffset())->GetTMaxLeakin((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfRec0*) G__getstructoffset())->GetResultEnergy((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfRec0*) G__getstructoffset())->GetResultEnergy((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec0*) G__getstructoffset())->SetResultEnergy((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfRec0*) G__getstructoffset())->GetSumdE((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec0*) G__getstructoffset())->SetSumdE((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfRec0*) G__getstructoffset())->GetSumdE2((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec0*) G__getstructoffset())->SetSumdE2((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfRec0*) G__getstructoffset())->GetLeakageOut((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec0*) G__getstructoffset())->SetLeakageOut((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfRec0*) G__getstructoffset())->GetLightYield((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec0*) G__getstructoffset())->SetLightYield((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfRec0*) G__getstructoffset())->GetEnergyScaleFactor((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec0*) G__getstructoffset())->SetEnergyScaleFactor((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfRec0*) G__getstructoffset())->GetType2Energy((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec0*) G__getstructoffset())->SetType2Energy((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfRec0*) G__getstructoffset())->GetTyep2Position((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec0*) G__getstructoffset())->SetTyep2Position((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfRec0*) G__getstructoffset())->GetResultHitPosition((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec0*) G__getstructoffset())->SetResultHitPosition((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfRec0*) G__getstructoffset())->GetResultNumberOfHits((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec0*) G__getstructoffset())->SetResultNumberOfHits((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfRec0*) G__getstructoffset())->GetNumberOfHits((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec0*) G__getstructoffset())->SetNumberOfHits((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfRec0*) G__getstructoffset())->GetHitPosition((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec0*) G__getstructoffset())->SetHitPosition((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfRec0*) G__getstructoffset())->GetPeakStrip((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec0*) G__getstructoffset())->SetPeakStrip((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfRec0*) G__getstructoffset())->GetdEAtPeak((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec0*) G__getstructoffset())->SetdEAtPeak((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfRec0*) G__getstructoffset())->GetSiSatuFlag((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec0*) G__getstructoffset())->SetSiSatuFlag((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfRec0*) G__getstructoffset())->GetMHBkgPar((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec0*) G__getstructoffset())->SetMHBkgPar((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfRec0*) G__getstructoffset())->GetMHNhits((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec0*) G__getstructoffset())->SetMHNhits((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfRec0*) G__getstructoffset())->GetMHParPos((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfRec0*) G__getstructoffset())->GetMHPar((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec0*) G__getstructoffset())->SetMHPar((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (double) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((RHICfRec0*) G__getstructoffset())->GetMHDiscardedFlag((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfRec0*) G__getstructoffset())->AddMHHit((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfRec0*) G__getstructoffset())->EraseMHHit((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfRec0*) G__getstructoffset())->GetMHNumberOfHits((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec0*) G__getstructoffset())->SetMHNumberOfHits((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfRec0*) G__getstructoffset())->GetMaxBarLayer((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec0*) G__getstructoffset())->SetMaxBarLayer((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfRec0*) G__getstructoffset())->GetMaxBarLayer2((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec0*) G__getstructoffset())->SetMaxBarLayer2((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfRec0*) G__getstructoffset())->GetMHPosition((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec0*) G__getstructoffset())->SetMHPosition((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (double) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfRec0*) G__getstructoffset())->GetMHPeakRaw((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec0*) G__getstructoffset())->SetMHPeakRaw((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (double) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfRec0*) G__getstructoffset())->GetMHPeakEstimated((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec0*) G__getstructoffset())->SetMHPeakEstimated((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (double) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfRec0*) G__getstructoffset())->GetMHIntegral((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec0*) G__getstructoffset())->SetMHIntegral((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (double) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfRec0*) G__getstructoffset())->GetResultPID((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec0*) G__getstructoffset())->SetResultPID((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_105(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfRec0*) G__getstructoffset())->GetL20((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_106(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec0*) G__getstructoffset())->SetL20((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_107(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfRec0*) G__getstructoffset())->GetL90((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_108(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec0*) G__getstructoffset())->SetL90((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_109(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfRec0*) G__getstructoffset())->GetL2D((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_110(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec0*) G__getstructoffset())->SetL2D((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_111(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfRec0*) G__getstructoffset())->GetL20wocorr((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_112(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec0*) G__getstructoffset())->SetL20wocorr((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_113(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfRec0*) G__getstructoffset())->GetL90wocorr((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_114(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec0*) G__getstructoffset())->SetL90wocorr((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_115(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfRec0*) G__getstructoffset())->GetTransitionFit((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_116(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec0*) G__getstructoffset())->SetTransitionFit((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_117(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfRec0*) G__getstructoffset())->GetTDC_BPTX((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_118(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec0*) G__getstructoffset())->SetTDC_BPTX((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_119(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfRec0*) G__getstructoffset())->GetCounter((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_120(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec0*) G__getstructoffset())->SetCounter((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_121(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RHICfRec0::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_122(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RHICfRec0::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_123(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RHICfRec0::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_124(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RHICfRec0::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_128(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec0*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_129(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RHICfRec0::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_130(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RHICfRec0::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_131(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RHICfRec0::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_128_0_132(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RHICfRec0::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libRHICf_128_0_133(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RHICfRec0* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RHICfRec0(*(RHICfRec0*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libRHICfLN_RHICfRec0));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RHICfRec0 G__TRHICfRec0;
static int G__libRHICf_128_0_134(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RHICfRec0*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RHICfRec0*) (soff+(sizeof(RHICfRec0)*i)))->~G__TRHICfRec0();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RHICfRec0*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RHICfRec0*) (soff))->~G__TRHICfRec0();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libRHICf_128_0_135(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RHICfRec0* dest = (RHICfRec0*) G__getstructoffset();
   *dest = *(RHICfRec0*) libp->para[0].ref;
   const RHICfRec0& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RHICfRec1 */
static int G__libRHICf_143_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RHICfRec1* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RHICfRec1[n];
     } else {
       p = new((void*) gvp) RHICfRec1[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RHICfRec1;
     } else {
       p = new((void*) gvp) RHICfRec1;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libRHICfLN_RHICfRec1));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_143_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RHICfRec1* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RHICfRec1((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) RHICfRec1((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libRHICfLN_RHICfRec1));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_143_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfRec1*) G__getstructoffset())->resize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_143_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((RHICfRec1*) G__getstructoffset())->GetAnalysisFlags());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_143_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec1*) G__getstructoffset())->SetAnalysisFlags((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_143_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfRec1*) G__getstructoffset())->GetPeakPosition((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_143_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec1*) G__getstructoffset())->SetPeakPosition((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_143_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfRec1*) G__getstructoffset())->GetMHBkgPar((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_143_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec1*) G__getstructoffset())->SetMHBkgPar((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (double) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_143_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfRec1*) G__getstructoffset())->GetMHNhits((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_143_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec1*) G__getstructoffset())->SetMHNhits((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_143_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfRec1*) G__getstructoffset())->GetMHParPos((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_143_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfRec1*) G__getstructoffset())->GetMHPar((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_143_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec1*) G__getstructoffset())->SetMHPar((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double) G__double(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_143_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((RHICfRec1*) G__getstructoffset())->GetMHDiscardedFlag((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_143_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfRec1*) G__getstructoffset())->AddMHHit((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double*) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_143_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfRec1*) G__getstructoffset())->EraseMHHit((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_143_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RHICfRec1::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_143_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RHICfRec1::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_143_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RHICfRec1::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_143_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RHICfRec1::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_143_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRec1*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_143_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RHICfRec1::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_143_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RHICfRec1::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_143_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RHICfRec1::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_143_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RHICfRec1::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libRHICf_143_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RHICfRec1* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RHICfRec1(*(RHICfRec1*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libRHICfLN_RHICfRec1));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RHICfRec1 G__TRHICfRec1;
static int G__libRHICf_143_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RHICfRec1*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RHICfRec1*) (soff+(sizeof(RHICfRec1)*i)))->~G__TRHICfRec1();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RHICfRec1*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RHICfRec1*) (soff))->~G__TRHICfRec1();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libRHICf_143_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RHICfRec1* dest = (RHICfRec1*) G__getstructoffset();
   *dest = *(RHICfRec1*) libp->para[0].ref;
   const RHICfRec1& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RHICfBBC */
static int G__libRHICf_144_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RHICfBBC* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RHICfBBC[n];
     } else {
       p = new((void*) gvp) RHICfBBC[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RHICfBBC;
     } else {
       p = new((void*) gvp) RHICfBBC;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libRHICfLN_RHICfBBC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_144_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RHICfBBC* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RHICfBBC((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) RHICfBBC((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libRHICfLN_RHICfBBC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_144_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RHICfBBC* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RHICfBBC(*(RHICfBBC*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) RHICfBBC(*(RHICfBBC*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libRHICfLN_RHICfBBC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_144_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const RHICfBBC& obj = ((RHICfBBC*) G__getstructoffset())->operator=(*(RHICfBBC*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_144_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfBBC*) G__getstructoffset())->clear());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_144_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfBBC*) G__getstructoffset())->copy((RHICfBBC*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_144_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RHICfBBC::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_144_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RHICfBBC::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_144_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RHICfBBC::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_144_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RHICfBBC::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_144_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfBBC*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_144_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RHICfBBC::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_144_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RHICfBBC::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_144_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RHICfBBC::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_144_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RHICfBBC::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RHICfBBC G__TRHICfBBC;
static int G__libRHICf_144_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RHICfBBC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RHICfBBC*) (soff+(sizeof(RHICfBBC)*i)))->~G__TRHICfBBC();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RHICfBBC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RHICfBBC*) (soff))->~G__TRHICfBBC();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RHICfZDC */
static int G__libRHICf_145_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RHICfZDC* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RHICfZDC[n];
     } else {
       p = new((void*) gvp) RHICfZDC[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RHICfZDC;
     } else {
       p = new((void*) gvp) RHICfZDC;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libRHICfLN_RHICfZDC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_145_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RHICfZDC* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RHICfZDC((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) RHICfZDC((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libRHICfLN_RHICfZDC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_145_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RHICfZDC* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RHICfZDC(*(RHICfZDC*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) RHICfZDC(*(RHICfZDC*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libRHICfLN_RHICfZDC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_145_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const RHICfZDC& obj = ((RHICfZDC*) G__getstructoffset())->operator=(*(RHICfZDC*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_145_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfZDC*) G__getstructoffset())->clear());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_145_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfZDC*) G__getstructoffset())->copy((RHICfZDC*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_145_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfZDC*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_145_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RHICfZDC::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_145_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RHICfZDC::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_145_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RHICfZDC::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_145_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RHICfZDC::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_145_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfZDC*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_145_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RHICfZDC::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_145_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RHICfZDC::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_145_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RHICfZDC::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_145_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RHICfZDC::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RHICfZDC G__TRHICfZDC;
static int G__libRHICf_145_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RHICfZDC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RHICfZDC*) (soff+(sizeof(RHICfZDC)*i)))->~G__TRHICfZDC();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RHICfZDC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RHICfZDC*) (soff))->~G__TRHICfZDC();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RHICfRoman */
static int G__libRHICf_146_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RHICfRoman* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RHICfRoman[n];
     } else {
       p = new((void*) gvp) RHICfRoman[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RHICfRoman;
     } else {
       p = new((void*) gvp) RHICfRoman;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libRHICfLN_RHICfRoman));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_146_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RHICfRoman* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RHICfRoman((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) RHICfRoman((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libRHICfLN_RHICfRoman));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_146_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfRoman*) G__getstructoffset())->clear());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_146_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfRoman*) G__getstructoffset())->copy((RHICfRoman*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_146_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RHICfRoman::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_146_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RHICfRoman::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_146_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RHICfRoman::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_146_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RHICfRoman::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_146_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfRoman*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_146_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RHICfRoman::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_146_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RHICfRoman::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_146_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RHICfRoman::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_146_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RHICfRoman::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libRHICf_146_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RHICfRoman* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RHICfRoman(*(RHICfRoman*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libRHICfLN_RHICfRoman));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RHICfRoman G__TRHICfRoman;
static int G__libRHICf_146_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RHICfRoman*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RHICfRoman*) (soff+(sizeof(RHICfRoman)*i)))->~G__TRHICfRoman();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RHICfRoman*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RHICfRoman*) (soff))->~G__TRHICfRoman();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libRHICf_146_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RHICfRoman* dest = (RHICfRoman*) G__getstructoffset();
   *dest = *(RHICfRoman*) libp->para[0].ref;
   const RHICfRoman& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RHICfSimP */
static int G__libRHICf_202_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RHICfSimP* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RHICfSimP[n];
     } else {
       p = new((void*) gvp) RHICfSimP[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RHICfSimP;
     } else {
       p = new((void*) gvp) RHICfSimP;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libRHICfLN_RHICfSimP));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RHICfSimP* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RHICfSimP((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) RHICfSimP((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libRHICfLN_RHICfSimP));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfSimP*) G__getstructoffset())->clear());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfSimP*) G__getstructoffset())->copy((RHICfSimP*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfSimP*) G__getstructoffset())->copydata((RHICfSimP*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfSimP*) G__getstructoffset())->PDGcode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfSimP*) G__getstructoffset())->User());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfSimP*) G__getstructoffset())->Tag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfSimP*) G__getstructoffset())->Energy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfSimP*) G__getstructoffset())->PosX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfSimP*) G__getstructoffset())->PosY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfSimP*) G__getstructoffset())->PosZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfSimP*) G__getstructoffset())->MomX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfSimP*) G__getstructoffset())->MomY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfSimP*) G__getstructoffset())->MomZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfSimP*) G__getstructoffset())->KineticEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfSimP*) G__getstructoffset())->Momentum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfSimP*) G__getstructoffset())->Mass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((RHICfSimP*) G__getstructoffset())->IsPhoton());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((RHICfSimP*) G__getstructoffset())->IsGammaray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((RHICfSimP*) G__getstructoffset())->IsElectron());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((RHICfSimP*) G__getstructoffset())->IsPositron());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((RHICfSimP*) G__getstructoffset())->IsMup());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((RHICfSimP*) G__getstructoffset())->IsMun());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((RHICfSimP*) G__getstructoffset())->IsPi0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((RHICfSimP*) G__getstructoffset())->IsPip());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((RHICfSimP*) G__getstructoffset())->IsPin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((RHICfSimP*) G__getstructoffset())->IsK0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((RHICfSimP*) G__getstructoffset())->IsKp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((RHICfSimP*) G__getstructoffset())->IsKn());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((RHICfSimP*) G__getstructoffset())->IsProton());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((RHICfSimP*) G__getstructoffset())->IsAntiProton());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((RHICfSimP*) G__getstructoffset())->IsNeutron());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((RHICfSimP*) G__getstructoffset())->IsAntiNeutron());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((RHICfSimP*) G__getstructoffset())->IsEta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((RHICfSimP*) G__getstructoffset())->IsElemag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((RHICfSimP*) G__getstructoffset())->CalPos((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((RHICfSimP*) G__getstructoffset())->CalPos((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3])
, (double) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((RHICfSimP*) G__getstructoffset())->CalPos((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) ((RHICfSimP*) G__getstructoffset())->CalPosX((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((RHICfSimP*) G__getstructoffset())->CalPosX((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((RHICfSimP*) G__getstructoffset())->CalPosX((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) ((RHICfSimP*) G__getstructoffset())->CalPosY((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((RHICfSimP*) G__getstructoffset())->CalPosY((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((RHICfSimP*) G__getstructoffset())->CalPosY((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letint(result7, 105, (long) ((RHICfSimP*) G__getstructoffset())->CheckHit((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 105, (long) ((RHICfSimP*) G__getstructoffset())->CheckHit((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 105, (long) ((RHICfSimP*) G__getstructoffset())->CheckHit((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((RHICfSimP*) G__getstructoffset())->CheckHit((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((RHICfSimP*) G__getstructoffset())->Show((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((RHICfSimP*) G__getstructoffset())->Show((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((RHICfSimP*) G__getstructoffset())->Show((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((RHICfSimP*) G__getstructoffset())->Show((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((RHICfSimP*) G__getstructoffset())->Show();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfSimP*) G__getstructoffset())->PositionShift((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((RHICfSimP*) G__getstructoffset())->GlobalPos_Detector((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((RHICfSimP*) G__getstructoffset())->GlobalPos_Detector((int) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((RHICfSimP*) G__getstructoffset())->GlobalPos_Detector((int) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((RHICfSimP*) G__getstructoffset())->GlobalPos_BC((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((RHICfSimP*) G__getstructoffset())->GlobalPos_BC((int) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((RHICfSimP*) G__getstructoffset())->GlobalPos_BC((int) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfSimP*) G__getstructoffset())->GlobalPos_BeamPipe((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfSimP*) G__getstructoffset())->GPosX_Detector());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfSimP*) G__getstructoffset())->GPosY_Detector());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfSimP*) G__getstructoffset())->GPosX_BC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfSimP*) G__getstructoffset())->GPosY_BC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfSimP*) G__getstructoffset())->GPosX_BeamPipe());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((RHICfSimP*) G__getstructoffset())->GPosY_BeamPipe());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) RHICfSimP::GetCalorimeterSize((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RHICfSimP::SetPositionBeamCenter((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RHICfSimP::SetPositionBeamPipeCenter((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) RHICfSimP::GetPositionBeamCenter((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) RHICfSimP::GetPositionBeamPipeCenter((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) RHICfSimP::GetOffset((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) RHICfSimP::GetOffsetDetector((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) RHICfSimP::GetOffsetBC((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RHICfSimP* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RHICfSimP(*(RHICfSimP*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) RHICfSimP(*(RHICfSimP*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libRHICfLN_RHICfSimP));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const RHICfSimP& obj = ((RHICfSimP*) G__getstructoffset())->operator=(*(RHICfSimP*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfSimP*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfSimP*) G__getstructoffset())->SetName(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((RHICfSimP*) G__getstructoffset())->GetName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfSimP*) G__getstructoffset())->Set4Momentum(*((TLorentzVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((RHICfSimP*) G__getstructoffset())->Get4Momentum();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfSimP*) G__getstructoffset())->SetPosition(*((TVector3*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((RHICfSimP*) G__getstructoffset())->GetPosition();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfSimP*) G__getstructoffset())->SetOriginalPName(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((RHICfSimP*) G__getstructoffset())->GetOriginalPName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfSimP*) G__getstructoffset())->SetOriginalP4Momentum(*((TLorentzVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TLorentzVector* pobj;
         TLorentzVector xobj = ((RHICfSimP*) G__getstructoffset())->GetOriginalP4Momentum();
         pobj = new TLorentzVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfSimP*) G__getstructoffset())->SetOriginalPPosition(*((TVector3*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((RHICfSimP*) G__getstructoffset())->GetOriginalPPosition();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((RHICfSimP*) G__getstructoffset())->GetFramePosition(*(Double_t*) G__Doubleref(&libp->para[0]));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfSimP*) G__getstructoffset())->SetTrackID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfSimP*) G__getstructoffset())->GetTrackID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfSimP*) G__getstructoffset())->SetTower((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfSimP*) G__getstructoffset())->GetTower());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RHICfSimP::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RHICfSimP::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RHICfSimP::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RHICfSimP::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfSimP*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RHICfSimP::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RHICfSimP::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RHICfSimP::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_202_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RHICfSimP::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RHICfSimP G__TRHICfSimP;
static int G__libRHICf_202_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RHICfSimP*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RHICfSimP*) (soff+(sizeof(RHICfSimP)*i)))->~G__TRHICfSimP();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RHICfSimP*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RHICfSimP*) (soff))->~G__TRHICfSimP();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RHICfSimIncidents */
static int G__libRHICf_203_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RHICfSimIncidents* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RHICfSimIncidents[n];
     } else {
       p = new((void*) gvp) RHICfSimIncidents[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RHICfSimIncidents;
     } else {
       p = new((void*) gvp) RHICfSimIncidents;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libRHICfLN_RHICfSimIncidents));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_203_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RHICfSimIncidents* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RHICfSimIncidents((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) RHICfSimIncidents((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libRHICfLN_RHICfSimIncidents));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_203_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfSimIncidents*) G__getstructoffset())->clear());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_203_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfSimIncidents*) G__getstructoffset())->copy((RHICfSimIncidents*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_203_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfSimIncidents*) G__getstructoffset())->copydata((RHICfSimIncidents*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_203_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfSimIncidents*) G__getstructoffset())->Delete();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_203_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfSimIncidents*) G__getstructoffset())->GetN());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_203_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfSimIncidents*) G__getstructoffset())->Add((RHICfSimP*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_203_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RHICfSimIncidents*) G__getstructoffset())->Get((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_203_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      G__letint(result7, 105, (long) ((RHICfSimIncidents*) G__getstructoffset())->GetNHit((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 105, (long) ((RHICfSimIncidents*) G__getstructoffset())->GetNHit((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 105, (long) ((RHICfSimIncidents*) G__getstructoffset())->GetNHit((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 105, (long) ((RHICfSimIncidents*) G__getstructoffset())->GetNHit((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((RHICfSimIncidents*) G__getstructoffset())->GetNHit((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_203_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      G__letint(result7, 85, (long) ((RHICfSimIncidents*) G__getstructoffset())->GetHit((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) ((RHICfSimIncidents*) G__getstructoffset())->GetHit((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) ((RHICfSimIncidents*) G__getstructoffset())->GetHit((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ((RHICfSimIncidents*) G__getstructoffset())->GetHit((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((RHICfSimIncidents*) G__getstructoffset())->GetHit((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_203_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RHICfSimIncidents*) G__getstructoffset())->GetRefNumber((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_203_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((RHICfSimIncidents*) G__getstructoffset())->GetRef((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_203_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      ((RHICfSimIncidents*) G__getstructoffset())->Show((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((RHICfSimIncidents*) G__getstructoffset())->Show((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((RHICfSimIncidents*) G__getstructoffset())->Show((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((RHICfSimIncidents*) G__getstructoffset())->Show((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((RHICfSimIncidents*) G__getstructoffset())->Show((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((RHICfSimIncidents*) G__getstructoffset())->Show((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((RHICfSimIncidents*) G__getstructoffset())->Show();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_203_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) RHICfSimIncidents::CalPi0Mass((RHICfSimP*) G__int(libp->para[0]), (RHICfSimP*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_203_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) RHICfSimIncidents::CalPi0Distance((RHICfSimP*) G__int(libp->para[0]), (RHICfSimP*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_203_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) RHICfSimIncidents::CalPi0Energy((RHICfSimP*) G__int(libp->para[0]), (RHICfSimP*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_203_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letdouble(result7, 100, (double) RHICfSimIncidents::CalPi0Momentum((RHICfSimP*) G__int(libp->para[0]), (RHICfSimP*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4])));
      break;
   case 4:
      G__letdouble(result7, 100, (double) RHICfSimIncidents::CalPi0Momentum((RHICfSimP*) G__int(libp->para[0]), (RHICfSimP*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) RHICfSimIncidents::CalPi0Momentum((RHICfSimP*) G__int(libp->para[0]), (RHICfSimP*) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_203_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) RHICfSimIncidents::CalPi0Pt((RHICfSimP*) G__int(libp->para[0]), (RHICfSimP*) G__int(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) RHICfSimIncidents::CalPi0Pt((RHICfSimP*) G__int(libp->para[0]), (RHICfSimP*) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) RHICfSimIncidents::CalPi0Pt((RHICfSimP*) G__int(libp->para[0]), (RHICfSimP*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_203_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RHICfSimIncidents::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_203_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RHICfSimIncidents::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_203_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RHICfSimIncidents::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_203_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RHICfSimIncidents::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_203_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RHICfSimIncidents*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_203_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RHICfSimIncidents::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_203_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RHICfSimIncidents::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_203_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RHICfSimIncidents::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libRHICf_203_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RHICfSimIncidents::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RHICfSimIncidents G__TRHICfSimIncidents;
static int G__libRHICf_203_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RHICfSimIncidents*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RHICfSimIncidents*) (soff+(sizeof(RHICfSimIncidents)*i)))->~G__TRHICfSimIncidents();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RHICfSimIncidents*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RHICfSimIncidents*) (soff))->~G__TRHICfSimIncidents();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* RHICfPhys */

/* RHICfRec0 */

/* RHICfRec1 */

/* RHICfBBC */

/* RHICfZDC */

/* RHICfRoman */

/* RHICfSimP */

/* RHICfSimIncidents */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfunclibRHICf {
 public:
  G__Sizep2memfunclibRHICf(): p(&G__Sizep2memfunclibRHICf::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfunclibRHICf::*p)();
};

size_t G__get_sizep2memfunclibRHICf()
{
  G__Sizep2memfunclibRHICf a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancelibRHICf() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libRHICfLN_RHICfPhys))) {
     RHICfPhys *G__Lderived;
     G__Lderived=(RHICfPhys*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libRHICfLN_RHICfPhys),G__get_linked_tagnum(&G__libRHICfLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libRHICfLN_RHICfPhys),G__get_linked_tagnum(&G__libRHICfLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libRHICfLN_RHICfRec0))) {
     RHICfRec0 *G__Lderived;
     G__Lderived=(RHICfRec0*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libRHICfLN_RHICfRec0),G__get_linked_tagnum(&G__libRHICfLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libRHICfLN_RHICfRec0),G__get_linked_tagnum(&G__libRHICfLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libRHICfLN_RHICfRec1))) {
     RHICfRec1 *G__Lderived;
     G__Lderived=(RHICfRec1*)0x1000;
     {
       RHICfRec0 *G__Lpbase=(RHICfRec0*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libRHICfLN_RHICfRec1),G__get_linked_tagnum(&G__libRHICfLN_RHICfRec0),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libRHICfLN_RHICfRec1),G__get_linked_tagnum(&G__libRHICfLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libRHICfLN_RHICfRec1),G__get_linked_tagnum(&G__libRHICfLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libRHICfLN_RHICfBBC))) {
     RHICfBBC *G__Lderived;
     G__Lderived=(RHICfBBC*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libRHICfLN_RHICfBBC),G__get_linked_tagnum(&G__libRHICfLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libRHICfLN_RHICfBBC),G__get_linked_tagnum(&G__libRHICfLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libRHICfLN_RHICfZDC))) {
     RHICfZDC *G__Lderived;
     G__Lderived=(RHICfZDC*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libRHICfLN_RHICfZDC),G__get_linked_tagnum(&G__libRHICfLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libRHICfLN_RHICfZDC),G__get_linked_tagnum(&G__libRHICfLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libRHICfLN_RHICfRoman))) {
     RHICfRoman *G__Lderived;
     G__Lderived=(RHICfRoman*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libRHICfLN_RHICfRoman),G__get_linked_tagnum(&G__libRHICfLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libRHICfLN_RHICfRoman),G__get_linked_tagnum(&G__libRHICfLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libRHICfLN_RHICfSimP))) {
     RHICfSimP *G__Lderived;
     G__Lderived=(RHICfSimP*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libRHICfLN_RHICfSimP),G__get_linked_tagnum(&G__libRHICfLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libRHICfLN_RHICfSimP),G__get_linked_tagnum(&G__libRHICfLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libRHICfLN_RHICfSimIncidents))) {
     RHICfSimIncidents *G__Lderived;
     G__Lderived=(RHICfSimIncidents*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libRHICfLN_RHICfSimIncidents),G__get_linked_tagnum(&G__libRHICfLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libRHICfLN_RHICfSimIncidents),G__get_linked_tagnum(&G__libRHICfLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablelibRHICf() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__libRHICfLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__libRHICfLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libRHICfLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__libRHICfLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libRHICfLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__libRHICfLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__libRHICfLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libRHICfLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__libRHICfLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libRHICfLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__libRHICfLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__libRHICfLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libRHICfLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__libRHICfLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libRHICfLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<unsigned int>",117,G__get_linked_tagnum(&G__libRHICfLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__libRHICfLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libRHICfLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__libRHICfLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libRHICfLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<double>",117,G__get_linked_tagnum(&G__libRHICfLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__libRHICfLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libRHICfLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__libRHICfLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libRHICfLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__libRHICfLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__libRHICfLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__libRHICfLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__libRHICfLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__libRHICfLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__libRHICfLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__libRHICfLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__libRHICfLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__libRHICfLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__libRHICfLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__libRHICfLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__libRHICfLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__libRHICfLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__libRHICfLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__libRHICfLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__libRHICfLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__libRHICfLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__libRHICfLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__libRHICfLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__libRHICfLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__libRHICfLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__libRHICfLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__libRHICfLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__libRHICfLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__libRHICfLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__libRHICfLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* RHICfPhys */
static void G__setup_memvarRHICfPhys(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libRHICfLN_RHICfPhys));
   { RHICfPhys *p; p=(RHICfPhys*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,"Run number");
   G__memvar_setup((void*)((long)(&p->number)-(long)(p)),105,0,0,-1,-1,-1,1,"number=",0,"Arm#1  event number");
   G__memvar_setup((void*)((long)(&p->gnumber)-(long)(p)),105,0,0,-1,-1,-1,1,"gnumber=",0,"Grobal event number");
   G__memvar_setup((void*)((long)(&p->time)-(long)(p)),100,0,0,-1,-1,-1,1,"time[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->energy)-(long)(p)),100,0,0,-1,-1,-1,1,"energy[2]=",0,"Energy[GeV] of each calorimter. [tower] 0:20mm,1:40mm ");
   G__memvar_setup((void*)((long)(&p->pos)-(long)(p)),100,0,0,-1,-1,-1,1,"pos[2][2]=",0,"Hit position[mm] on the calorimteter system.[tower][xy] ");
   G__memvar_setup((void*)((long)(&p->pid)-(long)(p)),105,0,0,-1,-1,-1,1,"pid[2]=",0,"Particle ID 0=elemag 1=hadronic. [tower]");
   G__memvar_setup((void*)((long)(&p->hits)-(long)(p)),105,0,0,-1,-1,-1,1,"hits[2]=",0,"Number of hits. [tower]");
   G__memvar_setup((void*)((long)(&p->flag)-(long)(p)),104,0,0,-1,-1,-1,1,"flag[3]=",0,"GPIO0:2ch  + GPIO:1ch");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-2,2,"sPositionBeamCenter[2]=",0,"! offset parameters: beam position in the global_detector coodinate ");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-2,2,"sPositionBeamPipe[2]=",0,"! offset parameters: beam pipe position in the global detector coodinate. ");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("ALLPARTICLE=%lldLL",(long long)RHICfPhys::ALLPARTICLE).data(),0,"!");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("ELEMAG=%lldLL",(long long)RHICfPhys::ELEMAG).data(),0,"! ");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("HADRON=%lldLL",(long long)RHICfPhys::HADRON).data(),0,"!");
   G__memvar_setup((void*)(&RHICfPhys::cDistance),100,0,1,-1,-1,-2,1,"cDistance=",0,"! Distance between I.P. and the front of calorimeter. [mm]");
   G__memvar_setup((void*)(&RHICfPhys::cPi0mass),100,0,1,-1,-1,-2,1,"cPi0mass=",0,"! Pi0 invariant mass [MeV]");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libRHICfLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RHICfRec0 */
static void G__setup_memvarRHICfRec0(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libRHICfLN_RHICfRec0));
   { RHICfRec0 *p; p=(RHICfRec0*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,"Run Number");
   G__memvar_setup((void*)((long)(&p->number)-(long)(p)),105,0,0,-1,-1,-1,1,"number=",0,"Arm#2 Event Number");
   G__memvar_setup((void*)((long)(&p->gnumber)-(long)(p)),105,0,0,-1,-1,-1,1,"gnumber=",0,"Grobal Event Number");
   G__memvar_setup((void*)((long)(&p->time)-(long)(p)),100,0,0,-1,-1,-1,1,"time[2]=",0,"[0]:sec,[1]:usec");
   G__memvar_setup((void*)((long)(&p->format)-(long)(p)),105,0,0,-1,-1,-1,1,"format=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->evinfo)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__libRHICfLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"evinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->flags)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__libRHICfLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("vector<unsigned int>"),-1,1,"flags=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->rec)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__libRHICfLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"rec=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cal)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__libRHICfLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"cal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pos)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__libRHICfLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"pos=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pid)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__libRHICfLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"pid=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tdc)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__libRHICfLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"tdc=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->counter)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__libRHICfLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"counter=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libRHICfLN_RHICfRec0cLcLDEF_EVQUALITY),-1,-2,1,G__FastAllocString(2048).Format("GOOD=%lldLL",(long long)RHICfRec0::GOOD).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libRHICfLN_RHICfRec0cLcLDEF_EVQUALITY),-1,-2,1,G__FastAllocString(2048).Format("BAD=%lldLL",(long long)RHICfRec0::BAD).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libRHICfLN_RHICfRec0cLcLDEF_BEAMTAG),-1,-2,1,G__FastAllocString(2048).Format("CROSSING=%lldLL",(long long)RHICfRec0::CROSSING).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libRHICfLN_RHICfRec0cLcLDEF_BEAMTAG),-1,-2,1,G__FastAllocString(2048).Format("DISPLACED=%lldLL",(long long)RHICfRec0::DISPLACED).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libRHICfLN_RHICfRec0cLcLDEF_BEAMTAG),-1,-2,1,G__FastAllocString(2048).Format("NONCROSSING=%lldLL",(long long)RHICfRec0::NONCROSSING).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libRHICfLN_RHICfRec0cLcLDEF_BEAMTAG),-1,-2,1,G__FastAllocString(2048).Format("NONCROSSING2=%lldLL",(long long)RHICfRec0::NONCROSSING2).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__libRHICfLN_RHICfRec0cLcLDEF_BEAMTAG),-1,-2,1,G__FastAllocString(2048).Format("UNKNOWN=%lldLL",(long long)RHICfRec0::UNKNOWN).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libRHICfLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RHICfRec1 */
static void G__setup_memvarRHICfRec1(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libRHICfLN_RHICfRec1));
   { RHICfRec1 *p; p=(RHICfRec1*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libRHICfLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RHICfBBC */
static void G__setup_memvarRHICfBBC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libRHICfLN_RHICfBBC));
   { RHICfBBC *p; p=(RHICfBBC*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(2048).Format("N_CHANNEL=%lldLL",(long long)RHICfBBC::N_CHANNEL).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(2048).Format("N_EASTWEST=%lldLL",(long long)RHICfBBC::N_EASTWEST).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"run=",0,"Run Number");
   G__memvar_setup((void*)((long)(&p->number)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"number=",0,"Event Number");
   G__memvar_setup((void*)((long)(&p->dE)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"dE[2][36]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NOP)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"NOP[2][36]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libRHICfLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RHICfZDC */
static void G__setup_memvarRHICfZDC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libRHICfLN_RHICfZDC));
   { RHICfZDC *p; p=(RHICfZDC*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(2048).Format("N_ZDCCHANNEL=%lldLL",(long long)RHICfZDC::N_ZDCCHANNEL).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(2048).Format("N_SMDHCHANNEL=%lldLL",(long long)RHICfZDC::N_SMDHCHANNEL).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(2048).Format("N_SMDVCHANNEL=%lldLL",(long long)RHICfZDC::N_SMDVCHANNEL).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"run=",0,"Run Number");
   G__memvar_setup((void*)((long)(&p->number)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"number=",0,"Event Number");
   G__memvar_setup((void*)((long)(&p->ZDCNOP)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ZDCNOP[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SMDHNOP)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"SMDHNOP[7]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SMDVNOP)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"SMDVNOP[8]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ZDCdE)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ZDCdE[3]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SMDHdE)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"SMDHdE[7]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SMDVdE)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"SMDVdE[8]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libRHICfLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RHICfRoman */
static void G__setup_memvarRHICfRoman(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libRHICfLN_RHICfRoman));
   { RHICfRoman *p; p=(RHICfRoman*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,1,G__FastAllocString(2048).Format("N_CHANNEL=%lldLL",(long long)RHICfRoman::N_CHANNEL).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"run=",0,"Run Number");
   G__memvar_setup((void*)((long)(&p->number)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"number=",0,"Event Number");
   G__memvar_setup((void*)((long)(&p->dE)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"dE[36]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libRHICfLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RHICfSimP */
static void G__setup_memvarRHICfSimP(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libRHICfLN_RHICfSimP));
   { RHICfSimP *p; p=(RHICfSimP*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->pdgcode)-(long)(p)),105,0,0,-1,-1,-1,1,"pdgcode=",0,"PDG code");
   G__memvar_setup((void*)((long)(&p->name)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__libRHICfLN_TString),-1,-1,1,"name=",0,"particle name");
   G__memvar_setup((void*)((long)(&p->user)-(long)(p)),105,0,0,-1,-1,-1,1,"user=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pos)-(long)(p)),100,0,0,-1,-1,-1,1,"pos[3]=",0,"Incident Position [mm]");
   G__memvar_setup((void*)((long)(&p->energy)-(long)(p)),100,0,0,-1,-1,-1,1,"energy=",0,"Total Energy [GeV]");
   G__memvar_setup((void*)((long)(&p->mom)-(long)(p)),100,0,0,-1,-1,-1,1,"mom[3]=",0,"Momentum [GeV/c]");
   G__memvar_setup((void*)(&RHICfSimP::sPositionBeamCenter),100,0,0,-1,-1,-2,1,"sPositionBeamCenter[2]=",0,"! offset parameters: beam position in the global_detector coodinate ");
   G__memvar_setup((void*)(&RHICfSimP::sPositionBeamPipe),100,0,0,-1,-1,-2,1,"sPositionBeamPipe[2]=",0,"! offset parameters: beam pipe position in the global detector coodinate. ");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libRHICfLN_TString),-1,-1,4,"Name=",0,"Particle name");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libRHICfLN_TLorentzVector),-1,-1,4,"FMomentum=",0,"Particle momentum");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libRHICfLN_TVector3),-1,-1,4,"Position=",0,"Particle postion");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libRHICfLN_TString),-1,-1,4,"OriginalPName=",0,"Original particle name");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libRHICfLN_TLorentzVector),-1,-1,4,"OriginalP4Momentum=",0,"Original particle momentum");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libRHICfLN_TVector3),-1,-1,4,"OriginalPPosition=",0,"Original particle postion");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"TrackID=",0,"TrackID");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"Tower=",0,"SmallOrLarge");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libRHICfLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* RHICfSimIncidents */
static void G__setup_memvarRHICfSimIncidents(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libRHICfLN_RHICfSimIncidents));
   { RHICfSimIncidents *p; p=(RHICfSimIncidents*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),105,0,0,-1,-1,-1,1,"run=",0,"Run Number");
   G__memvar_setup((void*)((long)(&p->number)-(long)(p)),105,0,0,-1,-1,-1,1,"number=",0,"Event number");
   G__memvar_setup((void*)((long)(&p->gnumber)-(long)(p)),105,0,0,-1,-1,-1,1,"gnumber=",0,"Grobal event number");
   G__memvar_setup((void*)((long)(&p->np)-(long)(p)),105,0,0,-1,-1,-1,1,"np=",0,"Number of Incident Particle");
   G__memvar_setup((void*)((long)(&p->particles)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__libRHICfLN_TObjArray),-1,-1,1,"particles=",0,"Array of RHICfSimP                ");
   G__memvar_setup((void*)((long)(&p->ref)-(long)(p)),105,0,0,-1,-1,-1,1,"ref[10]=",0,"! temporal reference to RHICfSimP");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libRHICfLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarlibRHICf() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncRHICfPhys(void) {
   /* RHICfPhys */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libRHICfLN_RHICfPhys));
   G__memfunc_setup("RHICfPhys",816,G__libRHICf_127_0_1, 105, G__get_linked_tagnum(&G__libRHICfLN_RHICfPhys), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RHICfPhys",816,G__libRHICf_127_0_2, 105, G__get_linked_tagnum(&G__libRHICfLN_RHICfPhys), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__libRHICf_127_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copy",443,G__libRHICf_127_0_4, 105, -1, -1, 0, 1, 1, 1, 0, "U 'RHICfPhys' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copydata",853,G__libRHICf_127_0_5, 105, -1, -1, 0, 1, 1, 1, 0, "U 'RHICfPhys' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Energy",618,G__libRHICf_127_0_6, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pos",306,G__libRHICf_127_0_7, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 - ixy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("X",88,G__libRHICf_127_0_8, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Y",89,G__libRHICf_127_0_9, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Hits",408,G__libRHICf_127_0_10, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PID",221,G__libRHICf_127_0_11, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsElemag",775,G__libRHICf_127_0_12, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsHadron",792,G__libRHICf_127_0_13, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InFiducial",984,G__libRHICf_127_0_14, 103, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it d - - 0 '2.0' edgecut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GlobalPos",899,G__libRHICf_127_0_15, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - ixy "
"d - - 0 '0.' offsetx d - - 0 '0.' offsety", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GPos",377,G__libRHICf_127_0_16, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - ixy "
"d - - 0 '0.' offsetx d - - 0 '0.' offsety", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GPosX",465,G__libRHICf_127_0_17, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it d - - 0 '0.' offsetx "
"d - - 0 '0.' offsety", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GPosY",466,G__libRHICf_127_0_18, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it d - - 0 '0.' offsetx "
"d - - 0 '0.' offsety", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPi0Distance",1332,G__libRHICf_127_0_19, 100, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'false' check", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPi0Mass",925,G__libRHICf_127_0_20, 100, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'false' check", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPi0Energy",1139,G__libRHICf_127_0_21, 100, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'false' check", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Momentum",850,G__libRHICf_127_0_22, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - dir "
"d - - 0 'GetOffsetBC(0)' offsetx d - - 0 'GetOffsetBC(1)' offsety", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPi0Momentum",1371,G__libRHICf_127_0_23, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - dir d - - 0 'GetOffsetBC(0)' beamcenter_x "
"d - - 0 'GetOffsetBC(1)' beamcenter_y", "Return Pi0 Momentum [GeV/c]. ( Momentum(0,dir) + Momentum(1,dir))", (void*) NULL, 0);
   G__memfunc_setup("GetPi0MomentumX",1459,G__libRHICf_127_0_24, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 'GetOffsetBC(0)' beamcenter_x d - - 0 'GetOffsetBC(1)' beamcenter_y", "Pi0 Momentum_X [GeV/c] (=GetPi0Momentum(0,beamcenter_x,beamcenter_y))", (void*) NULL, 0);
   G__memfunc_setup("GetPi0MomentumY",1460,G__libRHICf_127_0_25, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 'GetOffsetBC(0)' beamcenter_x d - - 0 'GetOffsetBC(1)' beamcenter_y", "Pi0 Momentum_Y [GeV/c] (=GetPi0Momentum(1,beamcenter_x,beamcenter_y))   ", (void*) NULL, 0);
   G__memfunc_setup("GetPi0Pt",717,G__libRHICf_127_0_26, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 'GetOffsetBC(0)' beamcenter_x d - - 0 'GetOffsetBC(1)' beamcenter_y", "Return Pi0 transverse momentum [GeV/c]   ", (void*) NULL, 0);
   G__memfunc_setup("GetPi0Pl",709,G__libRHICf_127_0_27, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 'GetOffsetBC(0)' beamcenter_x d - - 0 'GetOffsetBC(1)' beamcenter_y", "Pi0 longitudinal momentum [GeV/c] (=GetPi0Momentum(2))", (void*) NULL, 0);
   G__memfunc_setup("GetPi0Rapidity",1359,G__libRHICf_127_0_28, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 'GetOffsetBC(0)' beamcenter_x d - - 0 'GetOffsetBC(1)' beamcenter_y", "Pi0 Rapidity", (void*) NULL, 0);
   G__memfunc_setup("GlobalPos_Detector",1820,G__libRHICf_127_0_29, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - tower i - - 0 - ixy", "Hit Position in the global detector coordinate", (void*) NULL, 0);
   G__memfunc_setup("GlobalPos_BC",1127,G__libRHICf_127_0_30, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - tower i - - 0 - ixy "
"d - - 0 'GetOffsetBC(0)' offsetx d - - 0 'GetOffsetBC(1)' offsety", "Hit Position in the global beam center coordinate ", (void*) NULL, 0);
   G__memfunc_setup("GlobalPos_BeamPipe",1765,G__libRHICf_127_0_31, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - tower i - - 0 - ixy "
"d - - 0 'GetOffsetBeamPipe(0)' offsetx d - - 0 'GetOffsetBeamPipe(1)' offsety", "Hit Position in the global beam pipe coordinate", (void*) NULL, 0);
   G__memfunc_setup("GPosX_Detector",1386,G__libRHICf_127_0_32, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", "Arias to GlobalPos_Detector(tower,0)", (void*) NULL, 0);
   G__memfunc_setup("GPosY_Detector",1387,G__libRHICf_127_0_33, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", "Arias to GlobalPos_Detector(tower,1)", (void*) NULL, 0);
   G__memfunc_setup("GPosX_BC",693,G__libRHICf_127_0_34, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", "Arias to GlobalPos_BC(tower,0)", (void*) NULL, 0);
   G__memfunc_setup("GPosY_BC",694,G__libRHICf_127_0_35, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", "Arias to GlobalPos_BC(tower,1)", (void*) NULL, 0);
   G__memfunc_setup("GPosX_BeamPipe",1331,G__libRHICf_127_0_36, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", "Arias to GlobalPos_BeamPipe(tower,0)", (void*) NULL, 0);
   G__memfunc_setup("GPosY_BeamPipe",1332,G__libRHICf_127_0_37, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", "Arias to GlobalPos_BeamPipe(tower,1)", (void*) NULL, 0);
   G__memfunc_setup("Show",417,G__libRHICf_127_0_38, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalorimeterSize",1554,G__libRHICf_127_0_39, 100, -1, -1, 0, 1, 3, 1, 0, "i - - 0 - it", (char*)NULL, (void*) G__func2void( (double (*)(int))(&RHICfPhys::CalorimeterSize) ), 0);
   G__memfunc_setup("SetPositionBeamCenter",2135,G__libRHICf_127_0_40, 105, -1, -1, 0, 2, 3, 1, 0, 
"d - - 0 - x d - - 0 - y", "Set the Beam Center Position in the Global_Detertor coordinate.[mm]", (void*) G__func2void( (int (*)(double, double))(&RHICfPhys::SetPositionBeamCenter) ), 0);
   G__memfunc_setup("SetPositionBeamPipeCenter",2533,G__libRHICf_127_0_41, 105, -1, -1, 0, 2, 3, 1, 0, 
"d - - 0 - x d - - 0 - y", "Set the Beam Pipe Center in the Global_Detertor coordinate.[mm]", (void*) G__func2void( (int (*)(double, double))(&RHICfPhys::SetPositionBeamPipeCenter) ), 0);
   G__memfunc_setup("GetOffsetBC",1036,G__libRHICf_127_0_42, 100, -1, -1, 0, 1, 3, 1, 0, "i - - 0 - xy", "= sPositionBeamCenter[xy]  ", (void*) G__func2void( (double (*)(int))(&RHICfPhys::GetOffsetBC) ), 0);
   G__memfunc_setup("GetOffsetBeamPipe",1674,G__libRHICf_127_0_43, 100, -1, -1, 0, 1, 3, 1, 0, "i - - 0 - xy", "= sPositionBeamPipe[xy]  ", (void*) G__func2void( (double (*)(int))(&RHICfPhys::GetOffsetBeamPipe) ), 0);
   G__memfunc_setup("Class",502,G__libRHICf_127_0_44, 85, G__get_linked_tagnum(&G__libRHICfLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RHICfPhys::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libRHICf_127_0_45, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RHICfPhys::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libRHICf_127_0_46, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RHICfPhys::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libRHICf_127_0_47, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RHICfPhys::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libRHICfLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libRHICf_127_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libRHICf_127_0_52, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RHICfPhys::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libRHICf_127_0_53, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RHICfPhys::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libRHICf_127_0_54, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RHICfPhys::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libRHICf_127_0_55, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RHICfPhys::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RHICfPhys", 816, G__libRHICf_127_0_56, (int) ('i'), G__get_linked_tagnum(&G__libRHICfLN_RHICfPhys), -1, 0, 1, 1, 1, 0, "u 'RHICfPhys' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RHICfPhys", 942, G__libRHICf_127_0_57, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libRHICf_127_0_58, (int) ('u'), G__get_linked_tagnum(&G__libRHICfLN_RHICfPhys), -1, 1, 1, 1, 1, 0, "u 'RHICfPhys' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRHICfRec0(void) {
   /* RHICfRec0 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libRHICfLN_RHICfRec0));
   G__memfunc_setup("RHICfRec0",726,G__libRHICf_128_0_1, 105, G__get_linked_tagnum(&G__libRHICfLN_RHICfRec0), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RHICfRec0",726,G__libRHICf_128_0_2, 105, G__get_linked_tagnum(&G__libRHICfLN_RHICfRec0), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__libRHICf_128_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__libRHICf_128_0_4, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copy",443,G__libRHICf_128_0_5, 105, -1, -1, 0, 1, 1, 1, 0, "U 'RHICfRec0' - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copydata",853,G__libRHICf_128_0_6, 105, -1, -1, 0, 1, 1, 1, 0, "U 'RHICfRec0' - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFormatNumber",1522,G__libRHICf_128_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillToPhys",1006,G__libRHICf_128_0_8, 105, -1, -1, 0, 1, 1, 1, 0, "U 'RHICfPhys' - 0 - phys", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Show",417,G__libRHICf_128_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("resize",658,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"u 'vector<int,allocator<int> >' 'vector<int>' 1 - v i - - 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >' 'vector<unsigned int>' 1 - v i - - 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"u 'vector<double,allocator<double> >' 'vector<double>' 1 - v i - - 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"u 'vector<int,allocator<int> >' 'vector<int>' 1 - v i - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >' 'vector<unsigned int>' 1 - v h - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"u 'vector<double,allocator<double> >' 'vector<double>' 1 - v d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copy",443,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"u 'vector<int,allocator<int> >' 'vector<int>' 1 - v u 'vector<int,allocator<int> >' 'vector<int>' 1 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copy",443,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >' 'vector<unsigned int>' 1 - v u 'vector<unsigned int,allocator<unsigned int> >' 'vector<unsigned int>' 1 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copy",443,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"u 'vector<double,allocator<double> >' 'vector<double>' 1 - v u 'vector<double,allocator<double> >' 'vector<double>' 1 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventQuality",1547,G__libRHICf_128_0_19, 105, -1, -1, 0, 0, 1, 1, 0, "", "Event Quality flag", (void*) NULL, 1);
   G__memfunc_setup("SetEventQuality",1559,G__libRHICf_128_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBeamColConf",1337,G__libRHICf_128_0_21, 105, -1, -1, 0, 0, 1, 1, 0, "", "Beam Colliding flag", (void*) NULL, 1);
   G__memfunc_setup("SetBeamColConf",1349,G__libRHICf_128_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBunchNumber",1401,G__libRHICf_128_0_23, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ib", "Bunch Number (beam 1 or 2)", (void*) NULL, 1);
   G__memfunc_setup("SetBunchNumber",1413,G__libRHICf_128_0_24, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - ib i - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFlags",781,G__libRHICf_128_0_25, 104, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", "Flag from GPIO's (i-th)", (void*) NULL, 1);
   G__memfunc_setup("SetFlags",793,G__libRHICf_128_0_26, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i h - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAnalysisFlags",1617,G__libRHICf_128_0_27, 104, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", "Analysis flag (i-th)", (void*) NULL, 1);
   G__memfunc_setup("SetAnalysisFlags",1629,G__libRHICf_128_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i h - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsShowerTrig",1226,G__libRHICf_128_0_29, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsPi0Trig",827,G__libRHICf_128_0_30, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsHighEMTrig",1124,G__libRHICf_128_0_31, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCal",560,G__libRHICf_128_0_32, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 - il", "Calorimeter dE (tower, layer)", (void*) NULL, 1);
   G__memfunc_setup("SetCal",572,G__libRHICf_128_0_33, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFC",425,G__libRHICf_128_0_34, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - iarm i - - 0 - ich", "FC dE (arm, channel)", (void*) NULL, 1);
   G__memfunc_setup("SetFC",437,G__libRHICf_128_0_35, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - iarm i - - 0 - ich "
"d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTFitParam",1160,G__libRHICf_128_0_36, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - tower i - - 0 - ipar", "shape w/o correction tower:0,1 ipar:0-3", (void*) NULL, 1);
   G__memfunc_setup("SetTFitParam",1172,G__libRHICf_128_0_37, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - tower i - - 0 - ipar "
"d - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTFitParamCorr",1566,G__libRHICf_128_0_38, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - tower i - - 0 - ipar", "shape w/ correction tower:0,1 ipar:0-3", (void*) NULL, 1);
   G__memfunc_setup("SetTFitParamCorr",1578,G__libRHICf_128_0_39, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - tower i - - 0 - ipar "
"d - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTFitParamLeakin",1756,G__libRHICf_128_0_40, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - tower i - - 0 - ipar", "Estimated shape of leakage-in tower:0,1 ipar:0-3", (void*) NULL, 1);
   G__memfunc_setup("SetTFitParamLeakin",1768,G__libRHICf_128_0_41, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - tower i - - 0 - ipar "
"d - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTScale",860,G__libRHICf_128_0_42, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", "Scale of Transition fit", (void*) NULL, 1);
   G__memfunc_setup("GetTScaleCorr",1266,G__libRHICf_128_0_43, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", "Scale of Transition fit", (void*) NULL, 1);
   G__memfunc_setup("GetTScaleLeakin",1456,G__libRHICf_128_0_44, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", "Scale of estimated shape of shower leakage-in", (void*) NULL, 1);
   G__memfunc_setup("GetTMax",666,G__libRHICf_128_0_45, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", "Get depth of Shower Maximum", (void*) NULL, 1);
   G__memfunc_setup("GetTMaxCorr",1072,G__libRHICf_128_0_46, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", "Get depth of Shower Maximum ", (void*) NULL, 1);
   G__memfunc_setup("GetTMaxLeakin",1262,G__libRHICf_128_0_47, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", "Get depth of Shower Maximum ", (void*) NULL, 1);
   G__memfunc_setup("GetResultEnergy",1545,G__libRHICf_128_0_48, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "Recommended reconstructed energy (tower)", (void*) NULL, 1);
   G__memfunc_setup("GetResultEnergy",1545,G__libRHICf_128_0_49, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 - pid", "Recommended reconstructed energy (tower, pid)", (void*) NULL, 1);
   G__memfunc_setup("SetResultEnergy",1557,G__libRHICf_128_0_50, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - pid "
"d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSumdE",766,G__libRHICf_128_0_51, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "Sum dE(layer=0-15) (tower)", (void*) NULL, 1);
   G__memfunc_setup("SetSumdE",778,G__libRHICf_128_0_52, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSumdE2",816,G__libRHICf_128_0_53, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "Sum dE(layer=1-12) (tower)", (void*) NULL, 1);
   G__memfunc_setup("SetSumdE2",828,G__libRHICf_128_0_54, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLeakageOut",1282,G__libRHICf_128_0_55, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "Shower Leakage parameter (tower)", (void*) NULL, 1);
   G__memfunc_setup("SetLeakageOut",1294,G__libRHICf_128_0_56, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLightYield",1295,G__libRHICf_128_0_57, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 - il", "Correction factor of light yield (tower, layer)", (void*) NULL, 1);
   G__memfunc_setup("SetLightYield",1307,G__libRHICf_128_0_58, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEnergyScaleFactor",2001,G__libRHICf_128_0_59, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "Correction factor of energy scale (tower)", (void*) NULL, 1);
   G__memfunc_setup("SetEnergyScaleFactor",2013,G__libRHICf_128_0_60, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetType2Energy",1374,G__libRHICf_128_0_61, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 - hit", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetType2Energy",1386,G__libRHICf_128_0_62, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - hit "
"d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTyep2Position",1609,G__libRHICf_128_0_63, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - ixy "
"i - - 0 - hit", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTyep2Position",1621,G__libRHICf_128_0_64, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - ixy "
"i - - 0 - hit d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetResultHitPosition",2073,G__libRHICf_128_0_65, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 - ixy", "Recommended hit position results (tower, xy)", (void*) NULL, 1);
   G__memfunc_setup("SetResultHitPosition",2085,G__libRHICf_128_0_66, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - ixy "
"d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetResultNumberOfHits",2133,G__libRHICf_128_0_67, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "Recommended number of hit results (tower)", (void*) NULL, 1);
   G__memfunc_setup("SetResultNumberOfHits",2145,G__libRHICf_128_0_68, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumberOfHits",1494,G__libRHICf_128_0_69, 105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy", "Number of Hits in the tower (tower,layer,xy)", (void*) NULL, 1);
   G__memfunc_setup("SetNumberOfHits",1506,G__libRHICf_128_0_70, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetHitPosition",1434,G__libRHICf_128_0_71, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy", "Hit Position in each layer (tower,layer,xy)", (void*) NULL, 1);
   G__memfunc_setup("SetHitPosition",1446,G__libRHICf_128_0_72, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPeakStrip",1203,G__libRHICf_128_0_73, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy", "Strip number with maximum dE (tower,layer,xy)", (void*) NULL, 1);
   G__memfunc_setup("SetPeakStrip",1215,G__libRHICf_128_0_74, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetdEAtPeak",1023,G__libRHICf_128_0_75, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy", "dE at peak (tower,layer,xy)", (void*) NULL, 1);
   G__memfunc_setup("SetdEAtPeak",1035,G__libRHICf_128_0_76, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSiSatuFlag",1267,G__libRHICf_128_0_77, 105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy", "Saturation flag of silicon middle sample", (void*) NULL, 1);
   G__memfunc_setup("SetSiSatuFlag",1279,G__libRHICf_128_0_78, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMHBkgPar",1004,G__libRHICf_128_0_79, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - layer i - - 0 - xy "
"i - - 0 - ipar", "Results of Background Fitting by a linear function ", (void*) NULL, 1);
   G__memfunc_setup("SetMHBkgPar",1016,G__libRHICf_128_0_80, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - layer i - - 0 - xy "
"i - - 0 - ipar d - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMHNhits",955,G__libRHICf_128_0_81, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - layer i - - 0 - xy", "Number of Hits in the layer (layer, xy)", (void*) NULL, 1);
   G__memfunc_setup("SetMHNhits",967,G__libRHICf_128_0_82, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - layer i - - 0 - xy "
"i - - 0 - nhits", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMHParPos",1034,G__libRHICf_128_0_83, 105, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - layer i - - 0 - xy "
"i - - 0 - ihits i - - 0 - ipar", "Return the position of parameter in the array.", (void*) NULL, 1);
   G__memfunc_setup("GetMHPar",728,G__libRHICf_128_0_84, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - layer i - - 0 - xy "
"i - - 0 - ihit i - - 0 - ipar", "Parameter of Multi-hit fitting (layer, xy, ihit, ipar);", (void*) NULL, 1);
   G__memfunc_setup("SetMHPar",740,G__libRHICf_128_0_85, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - layer i - - 0 - xy "
"i - - 0 - ihit i - - 0 - ipar "
"d - - 0 - val", "To modify the parameter value.", (void*) NULL, 1);
   G__memfunc_setup("GetMHDiscardedFlag",1714,G__libRHICf_128_0_86, 103, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - layer i - - 0 - xy "
"i - - 0 - ihit", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddMHHit",707,G__libRHICf_128_0_87, 105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - layer i - - 0 - xy "
"D - - 0 - par", "Add new the hit parameters", (void*) NULL, 1);
   G__memfunc_setup("EraseMHHit",938,G__libRHICf_128_0_88, 105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - layer i - - 0 - xy "
"i - - 0 - ihit", "Erase the hit in the array.", (void*) NULL, 1);
   G__memfunc_setup("GetMHNumberOfHits",1643,G__libRHICf_128_0_89, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", "Number of hits in the tower (except discarded peaks)", (void*) NULL, 1);
   G__memfunc_setup("SetMHNumberOfHits",1655,G__libRHICf_128_0_90, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - tower i - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMaxBarLayer",1368,G__libRHICf_128_0_91, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMaxBarLayer",1380,G__libRHICf_128_0_92, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMaxBarLayer2",1418,G__libRHICf_128_0_93, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMaxBarLayer2",1430,G__libRHICf_128_0_94, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMHPosition",1290,G__libRHICf_128_0_95, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - imu", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMHPosition",1302,G__libRHICf_128_0_96, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - imu "
"d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMHPeakRaw",1120,G__libRHICf_128_0_97, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - imu", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMHPeakRaw",1132,G__libRHICf_128_0_98, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - imu "
"d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMHPeakEstimated",1750,G__libRHICf_128_0_99, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - imu", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMHPeakEstimated",1762,G__libRHICf_128_0_100, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - imu "
"d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMHIntegral",1259,G__libRHICf_128_0_101, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - imu", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMHIntegral",1271,G__libRHICf_128_0_102, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - imu "
"d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetResultPID",1148,G__libRHICf_128_0_103, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "Recommended PID result (tower)", (void*) NULL, 1);
   G__memfunc_setup("SetResultPID",1160,G__libRHICf_128_0_104, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetL20",462,G__libRHICf_128_0_105, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "L20% (tower)", (void*) NULL, 1);
   G__memfunc_setup("SetL20",474,G__libRHICf_128_0_106, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetL90",469,G__libRHICf_128_0_107, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "L90% (tower) ", (void*) NULL, 1);
   G__memfunc_setup("SetL90",481,G__libRHICf_128_0_108, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetL2D",482,G__libRHICf_128_0_109, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "L2D(tower)", (void*) NULL, 1);
   G__memfunc_setup("SetL2D",494,G__libRHICf_128_0_110, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetL20wocorr",1130,G__libRHICf_128_0_111, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", "Get L20% which was calculated before shower leakin corr.", (void*) NULL, 1);
   G__memfunc_setup("SetL20wocorr",1142,G__libRHICf_128_0_112, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - tower d - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetL90wocorr",1137,G__libRHICf_128_0_113, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", "Get L90% which was calculated before shower leakin corr.", (void*) NULL, 1);
   G__memfunc_setup("SetL90wocorr",1149,G__libRHICf_128_0_114, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - tower d - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTransitionFit",1646,G__libRHICf_128_0_115, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 - ip", "Results of transition fiting (tower, parameter)", (void*) NULL, 1);
   G__memfunc_setup("SetTransitionFit",1658,G__libRHICf_128_0_116, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - ip "
"d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTDC_BPTX",920,G__libRHICf_128_0_117, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ib", "TDC value of BPTX (beam 1 or 2)", (void*) NULL, 1);
   G__memfunc_setup("SetTDC_BPTX",932,G__libRHICf_128_0_118, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - ib d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCounter",1024,G__libRHICf_128_0_119, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", "Counter Value (i-th)", (void*) NULL, 1);
   G__memfunc_setup("SetCounter",1036,G__libRHICf_128_0_120, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__libRHICf_128_0_121, 85, G__get_linked_tagnum(&G__libRHICfLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RHICfRec0::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libRHICf_128_0_122, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RHICfRec0::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libRHICf_128_0_123, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RHICfRec0::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libRHICf_128_0_124, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RHICfRec0::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libRHICfLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libRHICf_128_0_128, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libRHICf_128_0_129, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RHICfRec0::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libRHICf_128_0_130, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RHICfRec0::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libRHICf_128_0_131, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RHICfRec0::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libRHICf_128_0_132, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RHICfRec0::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RHICfRec0", 726, G__libRHICf_128_0_133, (int) ('i'), G__get_linked_tagnum(&G__libRHICfLN_RHICfRec0), -1, 0, 1, 1, 1, 0, "u 'RHICfRec0' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RHICfRec0", 852, G__libRHICf_128_0_134, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libRHICf_128_0_135, (int) ('u'), G__get_linked_tagnum(&G__libRHICfLN_RHICfRec0), -1, 1, 1, 1, 1, 0, "u 'RHICfRec0' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRHICfRec1(void) {
   /* RHICfRec1 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libRHICfLN_RHICfRec1));
   G__memfunc_setup("RHICfRec1",727,G__libRHICf_143_0_1, 105, G__get_linked_tagnum(&G__libRHICfLN_RHICfRec1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RHICfRec1",727,G__libRHICf_143_0_2, 105, G__get_linked_tagnum(&G__libRHICfLN_RHICfRec1), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__libRHICf_143_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Show",417,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEventQuality",1547,(G__InterfaceMethod) NULL,105, -1, -1, 0, 0, 1, 1, 0, "", "Event Quality flag", (void*) NULL, 1);
   G__memfunc_setup("SetEventQuality",1559,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBeamColConf",1337,(G__InterfaceMethod) NULL,105, -1, -1, 0, 0, 1, 1, 0, "", "Beam Colliding flag", (void*) NULL, 1);
   G__memfunc_setup("SetBeamColConf",1349,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBunchNumber",1401,(G__InterfaceMethod) NULL,105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ib", "Bunch Number (beam 1 or 2)", (void*) NULL, 1);
   G__memfunc_setup("SetBunchNumber",1413,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - ib i - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFlags",781,(G__InterfaceMethod) NULL,104, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", "Flag from GPIO's (i-th)", (void*) NULL, 1);
   G__memfunc_setup("SetFlags",793,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i h - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetAnalysisFlags",1617,G__libRHICf_143_0_13, 104, -1, -1, 0, 0, 1, 1, 0, "", "Flag from GPIO's (i-th)", (void*) NULL, 1);
   G__memfunc_setup("SetAnalysisFlags",1629,G__libRHICf_143_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsShowerTrig",1226,(G__InterfaceMethod) NULL,103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsPi0Trig",827,(G__InterfaceMethod) NULL,103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsHighEMTrig",1124,(G__InterfaceMethod) NULL,103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetResultEnergy",1545,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "Recommended reconstructed energy (tower)", (void*) NULL, 1);
   G__memfunc_setup("GetResultEnergy",1545,(G__InterfaceMethod) NULL,100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 - pid", "Recommended reconstructed energy (tower, pid)", (void*) NULL, 1);
   G__memfunc_setup("SetResultEnergy",1557,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - pid "
"d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSumdE",766,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "Sum dE(layer=0-15) (tower)", (void*) NULL, 1);
   G__memfunc_setup("SetSumdE",778,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSumdE2",816,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "Sum dE(layer=1-12) (tower)", (void*) NULL, 1);
   G__memfunc_setup("SetSumdE2",828,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLeakageOut",1282,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "Shower Leakage parameter (tower)", (void*) NULL, 1);
   G__memfunc_setup("SetLeakageOut",1294,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEnergyScaleFactor",2001,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "Correction factor of energy scale (tower)", (void*) NULL, 1);
   G__memfunc_setup("SetEnergyScaleFactor",2013,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetType2Energy",1374,(G__InterfaceMethod) NULL,100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 - hit", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetType2Energy",1386,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - hit "
"d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTyep2Position",1609,(G__InterfaceMethod) NULL,100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - ixy "
"i - - 0 - hit", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTyep2Position",1621,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - ixy "
"i - - 0 - hit d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetResultHitPosition",2073,(G__InterfaceMethod) NULL,100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 - ixy", "Recommended hit position results (tower, xy)", (void*) NULL, 1);
   G__memfunc_setup("SetResultHitPosition",2085,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - ixy "
"d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetResultNumberOfHits",2133,(G__InterfaceMethod) NULL,105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "Recommended number of hit results (tower)", (void*) NULL, 1);
   G__memfunc_setup("SetResultNumberOfHits",2145,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNumberOfHits",1494,(G__InterfaceMethod) NULL,105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy", "Number of Hits in the tower (tower,layer,xy)", (void*) NULL, 1);
   G__memfunc_setup("SetNumberOfHits",1506,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetHitPosition",1434,(G__InterfaceMethod) NULL,100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy", "Hit Position in each layer (tower,layer,xy)", (void*) NULL, 1);
   G__memfunc_setup("SetHitPosition",1446,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPeakPosition",1526,G__libRHICf_143_0_41, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy", "Fiber number with maximum dE (tower,layer,xy)", (void*) NULL, 1);
   G__memfunc_setup("SetPeakPosition",1538,G__libRHICf_143_0_42, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetdEAtPeak",1023,(G__InterfaceMethod) NULL,100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy", "dE at peak (tower,layer,xy)", (void*) NULL, 1);
   G__memfunc_setup("SetdEAtPeak",1035,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMaxBarLayer",1368,(G__InterfaceMethod) NULL,105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMaxBarLayer",1380,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMaxBarLayer2",1418,(G__InterfaceMethod) NULL,105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMaxBarLayer2",1430,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMHPosition",1290,(G__InterfaceMethod) NULL,100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - imu", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMHPosition",1302,(G__InterfaceMethod) NULL,121, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - imu "
"d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMHPeakRaw",1120,(G__InterfaceMethod) NULL,100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - imu", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMHPeakRaw",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - imu "
"d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMHPeakEstimated",1750,(G__InterfaceMethod) NULL,100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - imu", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMHPeakEstimated",1762,(G__InterfaceMethod) NULL,121, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - imu "
"d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMHIntegral",1259,(G__InterfaceMethod) NULL,100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - imu", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMHIntegral",1271,(G__InterfaceMethod) NULL,121, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - it i - - 0 - il "
"i - - 0 - ixy i - - 0 - imu "
"d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetResultPID",1148,(G__InterfaceMethod) NULL,105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "Recommended PID result (tower)", (void*) NULL, 1);
   G__memfunc_setup("SetResultPID",1160,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it i - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetL20",462,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "L20% (tower)", (void*) NULL, 1);
   G__memfunc_setup("SetL20",474,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetL90",469,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - it", "L90% (tower) ", (void*) NULL, 1);
   G__memfunc_setup("SetL90",481,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - it d - - 0 - d", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMHBkgPar",1004,G__libRHICf_143_0_63, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - tower i - - 0 - layer "
"i - - 0 - xy i - - 0 - ipar", "Results of Background Fitting by a linear function", (void*) NULL, 1);
   G__memfunc_setup("SetMHBkgPar",1016,G__libRHICf_143_0_64, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - tower i - - 0 - layer "
"i - - 0 - xy i - - 0 - ipar "
"d - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMHNhits",955,G__libRHICf_143_0_65, 105, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - tower i - - 0 - layer "
"i - - 0 - xy", "Number of Hits in the layer (layer, xy) includeing discarded peaks", (void*) NULL, 1);
   G__memfunc_setup("SetMHNhits",967,G__libRHICf_143_0_66, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - tower i - - 0 - layer "
"i - - 0 - xy i - - 0 - nhits", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMHParPos",1034,G__libRHICf_143_0_67, 105, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - tower i - - 0 - layer "
"i - - 0 - xy i - - 0 - ihits "
"i - - 0 - ipar", "Return the position of parameter in the array.", (void*) NULL, 1);
   G__memfunc_setup("GetMHPar",728,G__libRHICf_143_0_68, 100, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - tower i - - 0 - layer "
"i - - 0 - xy i - - 0 - ihit "
"i - - 0 - ipar", "Parameter of Multi-hit fitting (layer, xy, ihit, ipar);", (void*) NULL, 1);
   G__memfunc_setup("SetMHPar",740,G__libRHICf_143_0_69, 121, -1, -1, 0, 6, 1, 1, 0, 
"i - - 0 - tower i - - 0 - layer "
"i - - 0 - xy i - - 0 - ihit "
"i - - 0 - ipar d - - 0 - val", "To modify the parameter value.", (void*) NULL, 1);
   G__memfunc_setup("GetMHDiscardedFlag",1714,G__libRHICf_143_0_70, 103, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - tower i - - 0 - layer "
"i - - 0 - xy i - - 0 - ihit", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddMHHit",707,G__libRHICf_143_0_71, 105, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - tower i - - 0 - layer "
"i - - 0 - xy D - - 0 - par", "Add new the hit parameters", (void*) NULL, 1);
   G__memfunc_setup("EraseMHHit",938,G__libRHICf_143_0_72, 105, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - tower i - - 0 - layer "
"i - - 0 - xy i - - 0 - ihit", "Erase the hit in the array.", (void*) NULL, 1);
   G__memfunc_setup("GetMHNumberOfHits",1643,(G__InterfaceMethod) NULL,105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - tower", "Number of hits in the tower (except discarded peaks)", (void*) NULL, 1);
   G__memfunc_setup("SetMHNumberOfHits",1655,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - tower i - - 0 - val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__libRHICf_143_0_75, 85, G__get_linked_tagnum(&G__libRHICfLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RHICfRec1::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libRHICf_143_0_76, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RHICfRec1::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libRHICf_143_0_77, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RHICfRec1::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libRHICf_143_0_78, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RHICfRec1::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libRHICfLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libRHICf_143_0_82, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libRHICf_143_0_83, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RHICfRec1::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libRHICf_143_0_84, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RHICfRec1::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libRHICf_143_0_85, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RHICfRec1::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libRHICf_143_0_86, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RHICfRec1::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RHICfRec1", 727, G__libRHICf_143_0_87, (int) ('i'), G__get_linked_tagnum(&G__libRHICfLN_RHICfRec1), -1, 0, 1, 1, 1, 0, "u 'RHICfRec1' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RHICfRec1", 853, G__libRHICf_143_0_88, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libRHICf_143_0_89, (int) ('u'), G__get_linked_tagnum(&G__libRHICfLN_RHICfRec1), -1, 1, 1, 1, 1, 0, "u 'RHICfRec1' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRHICfBBC(void) {
   /* RHICfBBC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libRHICfLN_RHICfBBC));
   G__memfunc_setup("RHICfBBC",595,G__libRHICf_144_0_1, 105, G__get_linked_tagnum(&G__libRHICfLN_RHICfBBC), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RHICfBBC",595,G__libRHICf_144_0_2, 105, G__get_linked_tagnum(&G__libRHICfLN_RHICfBBC), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name C - - 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RHICfBBC",595,G__libRHICf_144_0_3, 105, G__get_linked_tagnum(&G__libRHICfLN_RHICfBBC), -1, 0, 1, 1, 1, 0, "u 'RHICfBBC' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__libRHICf_144_0_4, 117, G__get_linked_tagnum(&G__libRHICfLN_RHICfBBC), -1, 1, 1, 1, 1, 0, "u 'RHICfBBC' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__libRHICf_144_0_5, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copy",443,G__libRHICf_144_0_6, 105, -1, -1, 0, 1, 1, 1, 0, "U 'RHICfBBC' - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libRHICf_144_0_7, 85, G__get_linked_tagnum(&G__libRHICfLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RHICfBBC::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libRHICf_144_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RHICfBBC::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libRHICf_144_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RHICfBBC::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libRHICf_144_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RHICfBBC::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libRHICfLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libRHICf_144_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libRHICf_144_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RHICfBBC::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libRHICf_144_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RHICfBBC::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libRHICf_144_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RHICfBBC::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libRHICf_144_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RHICfBBC::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RHICfBBC", 721, G__libRHICf_144_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRHICfZDC(void) {
   /* RHICfZDC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libRHICfLN_RHICfZDC));
   G__memfunc_setup("RHICfZDC",621,G__libRHICf_145_0_1, 105, G__get_linked_tagnum(&G__libRHICfLN_RHICfZDC), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RHICfZDC",621,G__libRHICf_145_0_2, 105, G__get_linked_tagnum(&G__libRHICfLN_RHICfZDC), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name C - - 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RHICfZDC",621,G__libRHICf_145_0_3, 105, G__get_linked_tagnum(&G__libRHICfLN_RHICfZDC), -1, 0, 1, 1, 1, 0, "u 'RHICfZDC' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__libRHICf_145_0_4, 117, G__get_linked_tagnum(&G__libRHICfLN_RHICfZDC), -1, 1, 1, 1, 1, 0, "u 'RHICfZDC' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__libRHICf_145_0_5, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copy",443,G__libRHICf_145_0_6, 105, -1, -1, 0, 1, 1, 1, 0, "U 'RHICfZDC' - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__libRHICf_145_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libRHICf_145_0_8, 85, G__get_linked_tagnum(&G__libRHICfLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RHICfZDC::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libRHICf_145_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RHICfZDC::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libRHICf_145_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RHICfZDC::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libRHICf_145_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RHICfZDC::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libRHICfLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libRHICf_145_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libRHICf_145_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RHICfZDC::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libRHICf_145_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RHICfZDC::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libRHICf_145_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RHICfZDC::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libRHICf_145_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RHICfZDC::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RHICfZDC", 747, G__libRHICf_145_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRHICfRoman(void) {
   /* RHICfRoman */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libRHICfLN_RHICfRoman));
   G__memfunc_setup("RHICfRoman",905,G__libRHICf_146_0_1, 105, G__get_linked_tagnum(&G__libRHICfLN_RHICfRoman), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RHICfRoman",905,G__libRHICf_146_0_2, 105, G__get_linked_tagnum(&G__libRHICfLN_RHICfRoman), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name C - - 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__libRHICf_146_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copy",443,G__libRHICf_146_0_4, 105, -1, -1, 0, 1, 1, 1, 0, "U 'RHICfRoman' - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libRHICf_146_0_5, 85, G__get_linked_tagnum(&G__libRHICfLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RHICfRoman::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libRHICf_146_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RHICfRoman::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libRHICf_146_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RHICfRoman::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libRHICf_146_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RHICfRoman::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libRHICfLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libRHICf_146_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libRHICf_146_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RHICfRoman::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libRHICf_146_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RHICfRoman::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libRHICf_146_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RHICfRoman::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libRHICf_146_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RHICfRoman::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RHICfRoman", 905, G__libRHICf_146_0_17, (int) ('i'), G__get_linked_tagnum(&G__libRHICfLN_RHICfRoman), -1, 0, 1, 1, 1, 0, "u 'RHICfRoman' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RHICfRoman", 1031, G__libRHICf_146_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libRHICf_146_0_19, (int) ('u'), G__get_linked_tagnum(&G__libRHICfLN_RHICfRoman), -1, 1, 1, 1, 1, 0, "u 'RHICfRoman' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRHICfSimP(void) {
   /* RHICfSimP */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libRHICfLN_RHICfSimP));
   G__memfunc_setup("RHICfSimP",773,G__libRHICf_202_0_1, 105, G__get_linked_tagnum(&G__libRHICfLN_RHICfSimP), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RHICfSimP",773,G__libRHICf_202_0_2, 105, G__get_linked_tagnum(&G__libRHICfLN_RHICfSimP), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__libRHICf_202_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copy",443,G__libRHICf_202_0_4, 105, -1, -1, 0, 1, 1, 1, 0, "U 'RHICfSimP' - 0 - d", "copy name,title and data. ", (void*) NULL, 0);
   G__memfunc_setup("copydata",853,G__libRHICf_202_0_5, 105, -1, -1, 0, 1, 1, 1, 0, "U 'RHICfSimP' - 0 - d", "copy only data.", (void*) NULL, 0);
   G__memfunc_setup("PDGcode",630,G__libRHICf_202_0_6, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("User",415,G__libRHICf_202_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Tag",284,G__libRHICf_202_0_8, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Energy",618,G__libRHICf_202_0_9, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PosX",394,G__libRHICf_202_0_10, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PosY",395,G__libRHICf_202_0_11, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PosZ",396,G__libRHICf_202_0_12, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MomX",385,G__libRHICf_202_0_13, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MomY",386,G__libRHICf_202_0_14, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MomZ",387,G__libRHICf_202_0_15, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("KineticEnergy",1329,G__libRHICf_202_0_16, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Momentum",850,G__libRHICf_202_0_17, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Mass",404,G__libRHICf_202_0_18, 100, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsPhoton",820,G__libRHICf_202_0_19, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsGammaray",1003,G__libRHICf_202_0_20, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsElectron",1016,G__libRHICf_202_0_21, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsPositron",1050,G__libRHICf_202_0_22, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsMup",494,G__libRHICf_202_0_23, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsMun",492,G__libRHICf_202_0_24, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsPi0",421,G__libRHICf_202_0_25, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsPip",485,G__libRHICf_202_0_26, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsPin",483,G__libRHICf_202_0_27, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsK0",311,G__libRHICf_202_0_28, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsKp",375,G__libRHICf_202_0_29, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsKn",373,G__libRHICf_202_0_30, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsProton",830,G__libRHICf_202_0_31, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsAntiProton",1226,G__libRHICf_202_0_32, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsNeutron",935,G__libRHICf_202_0_33, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsAntiNeutron",1331,G__libRHICf_202_0_34, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsEta",470,G__libRHICf_202_0_35, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsElemag",775,G__libRHICf_202_0_36, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalPos",578,G__libRHICf_202_0_37, 121, -1, -1, 0, 6, 1, 1, 0, 
"i - - 0 - id i - - 0 - it "
"d - - 1 - x d - - 1 - y "
"d - - 0 'GetOffset(0)' offsetx d - - 0 'GetOffset(1)' offsety", "Incident position in the calorimeter coordinate id=1/2/10(NewArm1)/20(NewArm2)", (void*) NULL, 0);
   G__memfunc_setup("CalPosX",666,G__libRHICf_202_0_38, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - id i - - 0 - it "
"d - - 0 'GetOffset(0)' offsetx d - - 0 'GetOffset(1)' offsety", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalPosY",667,G__libRHICf_202_0_39, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - id i - - 0 - it "
"d - - 0 'GetOffset(0)' offsetx d - - 0 'GetOffset(1)' offsety", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckHit",771,G__libRHICf_202_0_40, 105, -1, -1, 0, 5, 1, 1, 0, 
"i - - 0 - id i - - 0 - it "
"d - - 0 '0.0' edgecut d - - 0 'GetOffset(0)' offsetx "
"d - - 0 'GetOffset(1)' offsety", "Check the hit in the given acceptance of calorimeter. id=1/2/10(NewArm1)/20(NewArm2)", (void*) NULL, 0);
   G__memfunc_setup("Show",417,G__libRHICf_202_0_41, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 '0' id i - - 0 '0' it "
"d - - 0 'GetOffset(0)' offsetx d - - 0 'GetOffset(1)' offsety", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PositionShift",1363,G__libRHICf_202_0_42, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - xy d - - 0 - offsetx "
"d - - 0 - offsety", "Simple shift x'=x+offsetx, y'=y+offsety", (void*) NULL, 0);
   G__memfunc_setup("GlobalPos_Detector",1820,G__libRHICf_202_0_43, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - xy d - - 0 'GetOffsetDetector(0)' offsetx "
"d - - 0 'GetOffsetDetector(1)' offsety", "Incidnet Position in the global detector coordinate", (void*) NULL, 0);
   G__memfunc_setup("GlobalPos_BC",1127,G__libRHICf_202_0_44, 100, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - xy d - - 0 'GetOffsetBC(0)' offsetx "
"d - - 0 'GetOffsetBC(1)' offsety", "Incident Position in the global beam center coordinate ", (void*) NULL, 0);
   G__memfunc_setup("GlobalPos_BeamPipe",1765,G__libRHICf_202_0_45, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - xy", "Incident Position in the global beam pipe coordinate", (void*) NULL, 0);
   G__memfunc_setup("GPosX_Detector",1386,G__libRHICf_202_0_46, 100, -1, -1, 0, 0, 1, 1, 0, "", "Arias to GlobalPos_Detector(0)", (void*) NULL, 0);
   G__memfunc_setup("GPosY_Detector",1387,G__libRHICf_202_0_47, 100, -1, -1, 0, 0, 1, 1, 0, "", "Arias to GlobalPos_Detector(1)", (void*) NULL, 0);
   G__memfunc_setup("GPosX_BC",693,G__libRHICf_202_0_48, 100, -1, -1, 0, 0, 1, 1, 0, "", "Arias to GlobalPos_BC(0)", (void*) NULL, 0);
   G__memfunc_setup("GPosY_BC",694,G__libRHICf_202_0_49, 100, -1, -1, 0, 0, 1, 1, 0, "", "Arias to GlobalPos_BC(1)", (void*) NULL, 0);
   G__memfunc_setup("GPosX_BeamPipe",1331,G__libRHICf_202_0_50, 100, -1, -1, 0, 0, 1, 1, 0, "", "Arias to GlobalPos_BeamPipe(0)", (void*) NULL, 0);
   G__memfunc_setup("GPosY_BeamPipe",1332,G__libRHICf_202_0_51, 100, -1, -1, 0, 0, 1, 1, 0, "", "Arias to GlobalPos_BeamPipe(1)", (void*) NULL, 0);
   G__memfunc_setup("GetCalorimeterSize",1842,G__libRHICf_202_0_52, 100, -1, -1, 0, 2, 3, 1, 0, 
"i - - 0 - id i - - 0 - it", (char*)NULL, (void*) G__func2void( (double (*)(int, int))(&RHICfSimP::GetCalorimeterSize) ), 0);
   G__memfunc_setup("SetPositionBeamCenter",2135,G__libRHICf_202_0_53, 105, -1, -1, 0, 2, 3, 1, 0, 
"d - - 0 - x d - - 0 - y", "Set the Beam Center Position in the Global_Detertor coordinate.", (void*) G__func2void( (int (*)(double, double))(&RHICfSimP::SetPositionBeamCenter) ), 0);
   G__memfunc_setup("SetPositionBeamPipeCenter",2533,G__libRHICf_202_0_54, 105, -1, -1, 0, 2, 3, 1, 0, 
"d - - 0 - x d - - 0 - y", "Set the Beam Pipe Center in the Global_Detertor coordinate.", (void*) G__func2void( (int (*)(double, double))(&RHICfSimP::SetPositionBeamPipeCenter) ), 0);
   G__memfunc_setup("GetPositionBeamCenter",2123,G__libRHICf_202_0_55, 100, -1, -1, 0, 1, 3, 1, 0, "i - - 0 - xy", (char*)NULL, (void*) G__func2void( (double (*)(int))(&RHICfSimP::GetPositionBeamCenter) ), 0);
   G__memfunc_setup("GetPositionBeamPipeCenter",2521,G__libRHICf_202_0_56, 100, -1, -1, 0, 1, 3, 1, 0, "i - - 0 - xy", (char*)NULL, (void*) G__func2void( (double (*)(int))(&RHICfSimP::GetPositionBeamPipeCenter) ), 0);
   G__memfunc_setup("GetOffset",903,G__libRHICf_202_0_57, 100, -1, -1, 0, 1, 3, 1, 0, "i - - 0 - xy", "= -1.*sPositionBeamPipe[xy]", (void*) G__func2void( (double (*)(int))(&RHICfSimP::GetOffset) ), 0);
   G__memfunc_setup("GetOffsetDetector",1729,G__libRHICf_202_0_58, 100, -1, -1, 0, 1, 3, 1, 0, "i - - 0 - xy", "= sPositionBeamPipe[xy]", (void*) G__func2void( (double (*)(int))(&RHICfSimP::GetOffsetDetector) ), 0);
   G__memfunc_setup("GetOffsetBC",1036,G__libRHICf_202_0_59, 100, -1, -1, 0, 1, 3, 1, 0, "i - - 0 - xy", "=sPositionBeamPipe[xy]-sPositionBeamCenter[xy] ", (void*) G__func2void( (double (*)(int))(&RHICfSimP::GetOffsetBC) ), 0);
   G__memfunc_setup("RHICfSimP",773,G__libRHICf_202_0_60, 105, G__get_linked_tagnum(&G__libRHICfLN_RHICfSimP), -1, 0, 1, 1, 1, 0, "u 'RHICfSimP' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__libRHICf_202_0_61, 117, G__get_linked_tagnum(&G__libRHICfLN_RHICfSimP), -1, 1, 1, 1, 1, 0, "u 'RHICfSimP' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__libRHICf_202_0_62, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetName",685,G__libRHICf_202_0_63, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetName",673,G__libRHICf_202_0_64, 117, G__get_linked_tagnum(&G__libRHICfLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set4Momentum",1202,G__libRHICf_202_0_65, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get4Momentum",1190,G__libRHICf_202_0_66, 117, G__get_linked_tagnum(&G__libRHICfLN_TLorentzVector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPosition",1153,G__libRHICf_202_0_67, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPosition",1141,G__libRHICf_202_0_68, 117, G__get_linked_tagnum(&G__libRHICfLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOriginalPName",1586,G__libRHICf_202_0_69, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOriginalPName",1574,G__libRHICf_202_0_70, 117, G__get_linked_tagnum(&G__libRHICfLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOriginalP4Momentum",2103,G__libRHICf_202_0_71, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOriginalP4Momentum",2091,G__libRHICf_202_0_72, 117, G__get_linked_tagnum(&G__libRHICfLN_TLorentzVector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOriginalPPosition",2054,G__libRHICf_202_0_73, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOriginalPPosition",2042,G__libRHICf_202_0_74, 117, G__get_linked_tagnum(&G__libRHICfLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFramePosition",1632,G__libRHICf_202_0_75, 117, G__get_linked_tagnum(&G__libRHICfLN_TVector3), -1, 0, 1, 1, 1, 0, "d - 'Double_t' 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrackID",942,G__libRHICf_202_0_76, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrackID",930,G__libRHICf_202_0_77, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTower",829,G__libRHICf_202_0_78, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTower",817,G__libRHICf_202_0_79, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libRHICf_202_0_80, 85, G__get_linked_tagnum(&G__libRHICfLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RHICfSimP::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libRHICf_202_0_81, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RHICfSimP::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libRHICf_202_0_82, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RHICfSimP::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libRHICf_202_0_83, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RHICfSimP::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libRHICfLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libRHICf_202_0_87, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libRHICf_202_0_88, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RHICfSimP::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libRHICf_202_0_89, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RHICfSimP::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libRHICf_202_0_90, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RHICfSimP::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libRHICf_202_0_91, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RHICfSimP::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RHICfSimP", 899, G__libRHICf_202_0_92, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRHICfSimIncidents(void) {
   /* RHICfSimIncidents */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libRHICfLN_RHICfSimIncidents));
   G__memfunc_setup("RHICfSimIncidents",1622,G__libRHICf_203_0_1, 105, G__get_linked_tagnum(&G__libRHICfLN_RHICfSimIncidents), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RHICfSimIncidents",1622,G__libRHICf_203_0_2, 105, G__get_linked_tagnum(&G__libRHICfLN_RHICfSimIncidents), -1, 0, 2, 1, 1, 0, 
"C - - 0 - name C - - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__libRHICf_203_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copy",443,G__libRHICf_203_0_4, 105, -1, -1, 0, 1, 1, 1, 0, "U 'RHICfSimIncidents' - 0 - -", "not yet", (void*) NULL, 0);
   G__memfunc_setup("copydata",853,G__libRHICf_203_0_5, 105, -1, -1, 0, 1, 1, 1, 0, "U 'RHICfSimIncidents' - 0 - -", "not yet", (void*) NULL, 0);
   G__memfunc_setup("Delete",595,G__libRHICf_203_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetN",366,G__libRHICf_203_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__libRHICf_203_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "U 'RHICfSimP' - 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get",288,G__libRHICf_203_0_9, 85, G__get_linked_tagnum(&G__libRHICfLN_RHICfSimP), -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNHit",659,G__libRHICf_203_0_10, 105, -1, -1, 0, 6, 1, 1, 0, 
"i - - 0 - id i - - 0 - it "
"d - - 0 '0.0' ke_threshold d - - 0 '0.0' edgecut "
"d - - 0 'RHICfSimP::GetOffset(0)' offsetx d - - 0 'RHICfSimP::GetOffset(1)' offsety", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHit",581,G__libRHICf_203_0_11, 85, G__get_linked_tagnum(&G__libRHICfLN_RHICfSimP), -1, 0, 6, 1, 1, 0, 
"i - - 0 - id i - - 0 - it "
"i - - 0 '0' ik d - - 0 '0.0' edgecut "
"d - - 0 'RHICfSimP::GetOffset(0)' offsetx d - - 0 'RHICfSimP::GetOffset(0)' offsety", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRefNumber",1190,G__libRHICf_203_0_12, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRef",573,G__libRHICf_203_0_13, 85, G__get_linked_tagnum(&G__libRHICfLN_RHICfSimP), -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Show",417,G__libRHICf_203_0_14, 121, -1, -1, 0, 6, 1, 1, 0, 
"i - - 0 '0' id i - - 0 '0' it "
"d - - 0 '0.0' ke_threshold d - - 0 '0.0' edgecut "
"d - - 0 'RHICfSimP::GetOffset(0)' offsetx d - - 0 'RHICfSimP::GetOffset(1)' offsety", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalPi0Mass",909,G__libRHICf_203_0_15, 100, -1, -1, 0, 2, 3, 1, 0, 
"U 'RHICfSimP' - 0 - p1 U 'RHICfSimP' - 0 - p2", (char*)NULL, (void*) G__func2void( (double (*)(RHICfSimP*, RHICfSimP*))(&RHICfSimIncidents::CalPi0Mass) ), 0);
   G__memfunc_setup("CalPi0Distance",1316,G__libRHICf_203_0_16, 100, -1, -1, 0, 2, 3, 1, 0, 
"U 'RHICfSimP' - 0 - p1 U 'RHICfSimP' - 0 - p2", (char*)NULL, (void*) G__func2void( (double (*)(RHICfSimP*, RHICfSimP*))(&RHICfSimIncidents::CalPi0Distance) ), 0);
   G__memfunc_setup("CalPi0Energy",1123,G__libRHICf_203_0_17, 100, -1, -1, 0, 2, 3, 1, 0, 
"U 'RHICfSimP' - 0 - p1 U 'RHICfSimP' - 0 - p2", (char*)NULL, (void*) G__func2void( (double (*)(RHICfSimP*, RHICfSimP*))(&RHICfSimIncidents::CalPi0Energy) ), 0);
   G__memfunc_setup("CalPi0Momentum",1355,G__libRHICf_203_0_18, 100, -1, -1, 0, 5, 3, 1, 0, 
"U 'RHICfSimP' - 0 - p1 U 'RHICfSimP' - 0 - p2 "
"i - - 0 - dir d - - 0 '0.' offsetx "
"d - - 0 '0.' offsety", (char*)NULL, (void*) G__func2void( (double (*)(RHICfSimP*, RHICfSimP*, int, double, double))(&RHICfSimIncidents::CalPi0Momentum) ), 0);
   G__memfunc_setup("CalPi0Pt",701,G__libRHICf_203_0_19, 100, -1, -1, 0, 4, 3, 1, 0, 
"U 'RHICfSimP' - 0 - p1 U 'RHICfSimP' - 0 - p2 "
"d - - 0 '0.' offsetx d - - 0 '0.' offsety", (char*)NULL, (void*) G__func2void( (double (*)(RHICfSimP*, RHICfSimP*, double, double))(&RHICfSimIncidents::CalPi0Pt) ), 0);
   G__memfunc_setup("Class",502,G__libRHICf_203_0_20, 85, G__get_linked_tagnum(&G__libRHICfLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RHICfSimIncidents::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libRHICf_203_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RHICfSimIncidents::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libRHICf_203_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RHICfSimIncidents::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libRHICf_203_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RHICfSimIncidents::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libRHICfLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libRHICf_203_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libRHICf_203_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RHICfSimIncidents::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libRHICf_203_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RHICfSimIncidents::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libRHICf_203_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RHICfSimIncidents::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libRHICf_203_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RHICfSimIncidents::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RHICfSimIncidents", 1748, G__libRHICf_203_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfunclibRHICf() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globallibRHICf() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funclibRHICf() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__libRHICfLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__libRHICfLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__libRHICfLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__libRHICfLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__libRHICfLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__libRHICfLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__libRHICfLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__libRHICfLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__libRHICfLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__libRHICfLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__libRHICfLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__libRHICfLN_RHICfPhys = { "RHICfPhys" , 99 , -1 };
G__linked_taginfo G__libRHICfLN_RHICfRec0 = { "RHICfRec0" , 99 , -1 };
G__linked_taginfo G__libRHICfLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__libRHICfLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__libRHICfLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__libRHICfLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<unsigned int,allocator<unsigned int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__libRHICfLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__libRHICfLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<double,allocator<double> >::iterator>" , 99 , -1 };
G__linked_taginfo G__libRHICfLN_RHICfRec0cLcLDEF_EVQUALITY = { "RHICfRec0::DEF_EVQUALITY" , 101 , -1 };
G__linked_taginfo G__libRHICfLN_RHICfRec0cLcLDEF_BEAMTAG = { "RHICfRec0::DEF_BEAMTAG" , 101 , -1 };
G__linked_taginfo G__libRHICfLN_RHICfRec1 = { "RHICfRec1" , 99 , -1 };
G__linked_taginfo G__libRHICfLN_RHICfBBC = { "RHICfBBC" , 99 , -1 };
G__linked_taginfo G__libRHICfLN_RHICfZDC = { "RHICfZDC" , 99 , -1 };
G__linked_taginfo G__libRHICfLN_RHICfRoman = { "RHICfRoman" , 99 , -1 };
G__linked_taginfo G__libRHICfLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__libRHICfLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__libRHICfLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__libRHICfLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__libRHICfLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__libRHICfLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__libRHICfLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__libRHICfLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__libRHICfLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__libRHICfLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__libRHICfLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__libRHICfLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__libRHICfLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__libRHICfLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__libRHICfLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__libRHICfLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__libRHICfLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__libRHICfLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__libRHICfLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__libRHICfLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__libRHICfLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__libRHICfLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__libRHICfLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__libRHICfLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__libRHICfLN_RHICfSimP = { "RHICfSimP" , 99 , -1 };
G__linked_taginfo G__libRHICfLN_RHICfSimIncidents = { "RHICfSimIncidents" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablelibRHICf() {
  G__libRHICfLN_TClass.tagnum = -1 ;
  G__libRHICfLN_TBuffer.tagnum = -1 ;
  G__libRHICfLN_TMemberInspector.tagnum = -1 ;
  G__libRHICfLN_TObject.tagnum = -1 ;
  G__libRHICfLN_TNamed.tagnum = -1 ;
  G__libRHICfLN_TString.tagnum = -1 ;
  G__libRHICfLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__libRHICfLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__libRHICfLN_TObjArray.tagnum = -1 ;
  G__libRHICfLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__libRHICfLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__libRHICfLN_RHICfPhys.tagnum = -1 ;
  G__libRHICfLN_RHICfRec0.tagnum = -1 ;
  G__libRHICfLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__libRHICfLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__libRHICfLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__libRHICfLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__libRHICfLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__libRHICfLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__libRHICfLN_RHICfRec0cLcLDEF_EVQUALITY.tagnum = -1 ;
  G__libRHICfLN_RHICfRec0cLcLDEF_BEAMTAG.tagnum = -1 ;
  G__libRHICfLN_RHICfRec1.tagnum = -1 ;
  G__libRHICfLN_RHICfBBC.tagnum = -1 ;
  G__libRHICfLN_RHICfZDC.tagnum = -1 ;
  G__libRHICfLN_RHICfRoman.tagnum = -1 ;
  G__libRHICfLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__libRHICfLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__libRHICfLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__libRHICfLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__libRHICfLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__libRHICfLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__libRHICfLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__libRHICfLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__libRHICfLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__libRHICfLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__libRHICfLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__libRHICfLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__libRHICfLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__libRHICfLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__libRHICfLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__libRHICfLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__libRHICfLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__libRHICfLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__libRHICfLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__libRHICfLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__libRHICfLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__libRHICfLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__libRHICfLN_TVector3.tagnum = -1 ;
  G__libRHICfLN_TLorentzVector.tagnum = -1 ;
  G__libRHICfLN_RHICfSimP.tagnum = -1 ;
  G__libRHICfLN_RHICfSimIncidents.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtablelibRHICf() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__libRHICfLN_TClass);
   G__get_linked_tagnum_fwd(&G__libRHICfLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__libRHICfLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__libRHICfLN_TObject);
   G__get_linked_tagnum_fwd(&G__libRHICfLN_TNamed);
   G__get_linked_tagnum_fwd(&G__libRHICfLN_TString);
   G__get_linked_tagnum_fwd(&G__libRHICfLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__libRHICfLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__libRHICfLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__libRHICfLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__libRHICfLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libRHICfLN_RHICfPhys),sizeof(RHICfPhys),-1,62720,"Data Structure for physics values of Arm1.",G__setup_memvarRHICfPhys,G__setup_memfuncRHICfPhys);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libRHICfLN_RHICfRec0),sizeof(RHICfRec0),-1,62720,"Data for Reconstruction",G__setup_memvarRHICfRec0,G__setup_memfuncRHICfRec0);
   G__get_linked_tagnum_fwd(&G__libRHICfLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__libRHICfLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__libRHICfLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__libRHICfLN_reverse_iteratorlEvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__libRHICfLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__libRHICfLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__libRHICfLN_RHICfRec0cLcLDEF_EVQUALITY);
   G__get_linked_tagnum_fwd(&G__libRHICfLN_RHICfRec0cLcLDEF_BEAMTAG);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libRHICfLN_RHICfRec1),sizeof(RHICfRec1),-1,62720,"Data for Reconstruction : Arm1 Format 1",G__setup_memvarRHICfRec1,G__setup_memfuncRHICfRec1);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libRHICfLN_RHICfBBC),sizeof(RHICfBBC),-1,65280,"RHICf BBC data ",G__setup_memvarRHICfBBC,G__setup_memfuncRHICfBBC);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libRHICfLN_RHICfZDC),sizeof(RHICfZDC),-1,65280,"RHICf ZDC data ",G__setup_memvarRHICfZDC,G__setup_memfuncRHICfZDC);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libRHICfLN_RHICfRoman),sizeof(RHICfRoman),-1,62720,"RHICf Roman data ",G__setup_memvarRHICfRoman,G__setup_memfuncRHICfRoman);
   G__get_linked_tagnum_fwd(&G__libRHICfLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__libRHICfLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__libRHICfLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__libRHICfLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libRHICfLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__libRHICfLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libRHICfLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libRHICfLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libRHICfLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libRHICfLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libRHICfLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libRHICfLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libRHICfLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libRHICfLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libRHICfLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libRHICfLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libRHICfLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libRHICfLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__libRHICfLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libRHICfLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__libRHICfLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libRHICfLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__libRHICfLN_TVector3);
   G__get_linked_tagnum_fwd(&G__libRHICfLN_TLorentzVector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libRHICfLN_RHICfSimP),sizeof(RHICfSimP),-1,65280,"Data class for information of one incident particle in simulation.",G__setup_memvarRHICfSimP,G__setup_memfuncRHICfSimP);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libRHICfLN_RHICfSimIncidents),sizeof(RHICfSimIncidents),-1,62720,(char*)NULL,G__setup_memvarRHICfSimIncidents,G__setup_memfuncRHICfSimIncidents);
}
extern "C" void G__cpp_setuplibRHICf(void) {
  G__check_setup_version(30051515,"G__cpp_setuplibRHICf()");
  G__set_cpp_environmentlibRHICf();
  G__cpp_setup_tagtablelibRHICf();

  G__cpp_setup_inheritancelibRHICf();

  G__cpp_setup_typetablelibRHICf();

  G__cpp_setup_memvarlibRHICf();

  G__cpp_setup_memfunclibRHICf();
  G__cpp_setup_globallibRHICf();
  G__cpp_setup_funclibRHICf();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfunclibRHICf();
  return;
}
class G__cpp_setup_initlibRHICf {
  public:
    G__cpp_setup_initlibRHICf() { G__add_setup_func("libRHICf",(G__incsetup)(&G__cpp_setuplibRHICf)); G__call_setup_funcs(); }
   ~G__cpp_setup_initlibRHICf() { G__remove_setup_func("libRHICf"); }
};
G__cpp_setup_initlibRHICf G__cpp_setup_initializerlibRHICf;

